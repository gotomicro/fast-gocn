[
  {
    "id": 1,
    "title": "Gopher China 2019 录像 [更新完毕]",
    "created_at": "2020-02-09 22:49:29",
    "updated_at": "2020-02-09 23:13:09",
    "replied_at": "2020-02-09 23:02:39",
    "replies_count": 1,
    "node_name": "GopherChina",
    "node_id": 27,
    "last_reply_user_id": 2,
    "last_reply_user_login": "xiemengjun",
    "grade": "excellent",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2,
    "user": "{\"id\": 2, \"name\": \"xiemengjun\", \"login\": \"xiemengjun\", \"avatar\": \"https://static.gocn.vip/user/avatar/2/9fa872.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 1,
    "body": "播放列表：\r\n\r\n  - 墙内：https://www.bilibili.com/video/av56099952/\r\n  - 墙外：https://www.youtube.com/watch?v=z0OidKUpmWY&list=PLx_Mc4dJcQbmEPRlGYIc8jJ9Hpoytamy0\r\n\r\n幻灯片汇总：\r\n\r\n - https://github.com/gopherchina/conference/tree/master/2019",
    "body_html": "<p>播放列表：</p>\n\n<ul>\n<li>墙内：<a href=\"https://www.bilibili.com/video/av56099952/\" rel=\"nofollow\" target=\"_blank\">https://www.bilibili.com/video/av56099952/</a>\n</li>\n<li>墙外：<a href=\"https://www.youtube.com/watch?v=z0OidKUpmWY&amp;list=PLx_Mc4dJcQbmEPRlGYIc8jJ9Hpoytamy0\" rel=\"nofollow\" target=\"_blank\">https://www.youtube.com/watch?v=z0OidKUpmWY&amp;list=PLx_Mc4dJcQbmEPRlGYIc8jJ9Hpoytamy0</a>\n</li>\n</ul>\n\n<p>幻灯片汇总：</p>\n\n<ul>\n<li><a href=\"https://github.com/gopherchina/conference/tree/master/2019\" rel=\"nofollow\" target=\"_blank\">https://github.com/gopherchina/conference/tree/master/2019</a></li>\n</ul>",
    "hits": 1242,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 3,
    "title": "golang适合做web开发吗？",
    "created_at": "2016-10-09 20:29:12",
    "updated_at": "2016-10-12 11:28:33",
    "replied_at": "2016-10-11 11:00:01",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 64,
    "last_reply_user_login": "zituocn",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "本人菜鸟一只，只是看到“为什么c/c++不适合做web开发”这个问题时有一个回答中写到：如果稍有变动，就要重新编译。\n由此看，golang适合做web开发吗？(手机竟然不能搞到问题的链接，中午回去补上)",
    "body_html": "<p>本人菜鸟一只，只是看到 “为什么 c/c++ 不适合做 web 开发” 这个问题时有一个回答中写到：如果稍有变动，就要重新编译。\n由此看，golang 适合做 web 开发吗？(手机竟然不能搞到问题的链接，中午回去补上)</p>",
    "hits": 615,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 4,
    "title": "怎么学习 golang？",
    "created_at": "2016-10-09 20:35:28",
    "updated_at": "2020-02-11 01:42:21",
    "replied_at": "2016-10-12 15:35:20",
    "replies_count": 8,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 361,
    "last_reply_user_login": "Cloudinsight",
    "grade": "excellent",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 1,
    "body": "我是毕业以后才学的php，不是计算机专业。因此，我想学门静态语言。目前，自己学习golang也有一段时间了。但是感觉golang总是如不了门! \n和php.比。感觉go较灵活。它的标准库的很多函数 参数、返回值什么的 不再像php一样单纯的就是那几个基本数据类型，而是接口，甚至结构什么的，而我总是被这些东西整得晕头转向！\n\n看文档不知道怎么下手！求知乎的大神指点迷津！怎么学习golang，或静态语言？\n----------------------一年以后--------------------\n\nps：感谢各位大大热心的回答",
    "body_html": "<p>我是毕业以后才学的 php，不是计算机专业。因此，我想学门静态语言。目前，自己学习 golang 也有一段时间了。但是感觉 golang 总是如不了门!&nbsp;\n和 php.比。感觉 go 较灵活。它的标准库的很多函数 参数、返回值什么的 不再像 php 一样单纯的就是那几个基本数据类型，而是接口，甚至结构什么的，而我总是被这些东西整得晕头转向！</p>\n\n<p>看文档不知道怎么下手！求知乎的大神指点迷津！怎么学习 golang，或静态语言？\n----------------------一年以后--------------------</p>\n\n<p>ps：感谢各位大大热心的回答</p>",
    "hits": 911,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 5,
    "title": "谁知道有用go写的开源项目，用来扫描IP和端口的？",
    "created_at": "2016-10-10 09:29:49",
    "updated_at": "2016-10-14 10:44:17",
    "replied_at": "2016-10-10 09:30:07",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题",
    "body_html": "<p>如题</p>",
    "hits": 489,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 7,
    "title": "如果用go重构ceph分布式文件系统，会有前景吗？",
    "created_at": "2016-10-10 12:39:01",
    "updated_at": "2016-10-18 10:08:26",
    "replied_at": "2016-10-18 10:08:26",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 94,
    "last_reply_user_login": "SunisDown",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2,
    "user": "{\"id\": 2, \"name\": \"xiemengjun\", \"login\": \"xiemengjun\", \"avatar\": \"https://static.gocn.vip/user/avatar/2/9fa872.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题。谢谢。",
    "body_html": "<p>如题。谢谢。</p>",
    "hits": 729,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 8,
    "title": "如果用go重构samba为分布式的软件，会有前景吗？",
    "created_at": "2016-10-10 12:43:20",
    "updated_at": "2016-10-12 09:52:45",
    "replied_at": "2016-10-12 09:52:45",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 247,
    "last_reply_user_login": "leoliu",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2,
    "user": "{\"id\": 2, \"name\": \"xiemengjun\", \"login\": \"xiemengjun\", \"avatar\": \"https://static.gocn.vip/user/avatar/2/9fa872.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 448,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 9,
    "title": "大家推荐哪种 golang 包管理方式？",
    "created_at": "2016-10-10 16:52:58",
    "updated_at": "2020-02-11 14:32:30",
    "replied_at": "2018-03-05 18:50:29",
    "replies_count": 28,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1581,
    "last_reply_user_login": "asdfsx",
    "grade": "excellent",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2,
    "user": "{\"id\": 2, \"name\": \"xiemengjun\", \"login\": \"xiemengjun\", \"avatar\": \"https://static.gocn.vip/user/avatar/2/9fa872.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 1,
    "body": "vendor特性肯定要用，否则远端的git库升级可能会导致接口不兼容。\n\n谢谢。",
    "body_html": "<p>vendor 特性肯定要用，否则远端的 git 库升级可能会导致接口不兼容。</p>\n\n<p>谢谢。</p>",
    "hits": 811,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 10,
    "title": "map在循环中被删除或者修改会怎么样",
    "created_at": "2016-10-10 22:14:01",
    "updated_at": "2016-10-12 18:21:16",
    "replied_at": "2016-10-12 18:21:16",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 291,
    "last_reply_user_login": "opsnull",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如下这个代码：\n\n```\nm:=map[int]int{1:1,2:2,3:3,4:4,5:5}\nfor k,v:=range m{\n\tm[k+1] = 5\n\tdelete(m, k+1)\n\tfmt.Println(k)\n\tfmt.Println(v)\n}\n```\n那么k，v的输出是可预期的吗？",
    "body_html": "<p>如下这个代码：</p>\n <pre class=\"highlight plaintext\"><code>m:=map[int]int{1:1,2:2,3:3,4:4,5:5}\nfor k,v:=range m{\n    m[k+1] = 5\n    delete(m, k+1)\n    fmt.Println(k)\n    fmt.Println(v)\n}\n</code></pre> \n<p>那么 k，v 的输出是可预期的吗？</p>",
    "hits": 605,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 11,
    "title": "go原生的RPC的文档资料，在哪里看啊",
    "created_at": "2016-10-10 23:15:04",
    "updated_at": "2017-01-21 08:26:24",
    "replied_at": "2017-01-21 08:26:24",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 962,
    "last_reply_user_login": "codinghxl",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在使用原生的RPC，目前只看了源代码中的server_test和client_test，但是这些例子看着太费劲了，有没有官方的文档，或者其他资料可以学习啊",
    "body_html": "<p>在使用原生的 RPC，目前只看了源代码中的 server_test 和 client_test，但是这些例子看着太费劲了，有没有官方的文档，或者其他资料可以学习啊</p>",
    "hits": 588,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 12,
    "title": "请教各位大神 golang 有根据设备mac 等信息 生产唯一标示的库吗",
    "created_at": "2016-10-10 23:20:02",
    "updated_at": "2016-10-10 23:20:10",
    "replied_at": "2016-10-10 23:20:10",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题",
    "body_html": "<p>如题</p>",
    "hits": 508,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 13,
    "title": "beego orm 时间相差八小时",
    "created_at": "2016-10-11 10:49:13",
    "updated_at": "2016-10-25 14:13:49",
    "replied_at": "2016-10-25 14:13:49",
    "replies_count": 8,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 124,
    "last_reply_user_login": "mnhkahn",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "今天使用beego的orm时遇到一个问题：mysql数据库为datetime格式的字段插入之后，数据库看到的时间会比正常时间靠前8个小时。\n\n这个结果可以猜测到是跟时区设置有关的问题，但是找了半天都没找到问题。。",
    "body_html": "<p>今天使用 beego 的 orm 时遇到一个问题：mysql 数据库为 datetime 格式的字段插入之后，数据库看到的时间会比正常时间靠前 8 个小时。</p>\n\n<p>这个结果可以猜测到是跟时区设置有关的问题，但是找了半天都没找到问题。。</p>",
    "hits": 751,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 14,
    "title": "beego中的重定向",
    "created_at": "2016-10-11 11:11:41",
    "updated_at": "2016-10-11 11:19:36",
    "replied_at": "2016-10-11 11:15:47",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 21,
    "last_reply_user_login": "angelina",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 60,
    "user": "{\"id\": 60, \"name\": \"鬼脚七\", \"login\": \"htMonarch\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "不能跳转到登录页面\npackage controllers\n\nimport(\n    &quot;github.com/astaxie/beego&quot;\n)\ntype LoginController struct{\n    beego.Controller\n}\n\nfunc (this *LoginController) Get()  {\n\tthis.Redirect(&quot;login.html&quot;,302)\n    return\n}",
    "body_html": "<p>不能跳转到登录页面\npackage controllers</p>\n\n<p>import(\n    \"github.com/astaxie/beego\"\n)\ntype LoginController struct{\n    beego.Controller\n}</p>\n\n<p>func (this *LoginController) Get()  {\n    this.Redirect(\"login.html\",302)\n    return\n}</p>",
    "hits": 639,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 15,
    "title": "各地/互联网公司招聘Go",
    "created_at": "2016-10-11 12:23:39",
    "updated_at": "2019-11-01 22:59:25",
    "replied_at": "2019-11-01 22:59:25",
    "replies_count": 20,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 82,
    "last_reply_user_login": "mikerr",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 82,
    "user": "{\"id\": 82, \"name\": \"mikerr\", \"login\": \"mikerr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "各位好啊，自我介绍下，我叫MIKE，是一位猎头朋友，之前做了6年技术岗位招聘，14年底关注Go的招聘，期间也参加了一些Go meet up，见过一些圈内知名大牛，眼见Go的招聘越来越火，内心也是欣喜万分，希望日后有更多更好的机会给到大家\n\n现在手头有一个Go个研发岗位，在上海浦西，公司是做互联网广告的，成立2年多，已盈利，A轮结束后融了1个多亿，我是在公司成立半年的时候就跟他们有合作，之前推荐到公司的技术人员依然服役至今。\n\n技术部门平时工作非常宽松，弹性工作，很少加班，内部崇尚技术分享。\n假期1年有近20天，可以想下下，1年12个月里，有近1整个月是不在上班的，这是非常妙的。。\n\nGo工程师\n1. 负责应用于高并发环境下的服务器端应用程序开发。\n2. 服务运维及接口开发(Go语言为主)\n岗位要求：\n1. 扎实的golang 语言基础。\n2. 具备良好的代码编写习惯、良好的代码结构组织能力，同时可以维护开发文档。\n3. 熟悉TDD 模式、DevOps 模式。\n4. 熟悉MySQL、MongoDB 、Redis 等存储方案。\n5. 熟悉Linux 环境。\n6. 能够自我驱动，热爱技术，有强烈的上进心，善于探索和钻研\n\n加分项：\n1. 可熟练使用Mac\n2. 使用Git 作为版本控制工具。\n3. 精通C/C\\+\\+或Python语言，熟悉常用的设计模式者优先\n4. 有云计算、云存储，Paas平台或者其他分布式项目经验者优先\n5. 有广告平台，游戏服务端开发经验者优先\n\n薪资在市场水平，从JD可知，这个岗位也不会低到哪里去的，有兴趣的可以直接邮件我\n\n1735832445#qq.com\nwechat:lietoumai\n&amp;nbsp;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;PS:这个广告我不想改啊，想留着做纪念\n其实手头北京上海深圳都有go的机会，基本上go的机会一直有关注&lt;/div&gt;&lt;p&gt;另外分享个自己的业务网站 guwenmai.sxl.cn 有兴趣咨询的也可以来找我（目前有简历咨询和择业咨询）啊&lt;/p&gt;",
    "body_html": "<p>各位好啊，自我介绍下，我叫 MIKE，是一位猎头朋友，之前做了 6 年技术岗位招聘，14 年底关注 Go 的招聘，期间也参加了一些 Go meet up，见过一些圈内知名大牛，眼见 Go 的招聘越来越火，内心也是欣喜万分，希望日后有更多更好的机会给到大家</p>\n\n<p>现在手头有一个 Go 个研发岗位，在上海浦西，公司是做互联网广告的，成立 2 年多，已盈利，A 轮结束后融了 1 个多亿，我是在公司成立半年的时候就跟他们有合作，之前推荐到公司的技术人员依然服役至今。</p>\n\n<p>技术部门平时工作非常宽松，弹性工作，很少加班，内部崇尚技术分享。\n假期 1 年有近 20 天，可以想下下，1 年 12 个月里，有近 1 整个月是不在上班的，这是非常妙的。。</p>\n\n<p>Go 工程师</p>\n\n<ol>\n<li>负责应用于高并发环境下的服务器端应用程序开发。</li>\n<li>服务运维及接口开发 (Go 语言为主)\n岗位要求：</li>\n<li>扎实的 golang 语言基础。</li>\n<li>具备良好的代码编写习惯、良好的代码结构组织能力，同时可以维护开发文档。</li>\n<li>熟悉 TDD 模式、DevOps 模式。</li>\n<li>熟悉 MySQL、MongoDB 、Redis 等存储方案。</li>\n<li>熟悉 Linux 环境。</li>\n<li>能够自我驱动，热爱技术，有强烈的上进心，善于探索和钻研</li>\n</ol>\n\n<p>加分项：</p>\n\n<ol>\n<li>可熟练使用 Mac</li>\n<li>使用 Git 作为版本控制工具。</li>\n<li>精通 C/C++ 或 Python 语言，熟悉常用的设计模式者优先</li>\n<li>有云计算、云存储，Paas 平台或者其他分布式项目经验者优先</li>\n<li>有广告平台，游戏服务端开发经验者优先</li>\n</ol>\n\n<p>薪资在市场水平，从 JD 可知，这个岗位也不会低到哪里去的，有兴趣的可以直接邮件我</p>\n\n<p>1735832445#qq.com\nwechat:lietoumai\n&amp;nbsp;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;PS:这个广告我不想改啊，想留着做纪念\n其实手头北京上海深圳都有 go 的机会，基本上 go 的机会一直有关注&lt;/div&gt;&lt;p&gt;另外分享个自己的业务网站 guwenmai.sxl.cn 有兴趣咨询的也可以来找我（目前有简历咨询和择业咨询）啊&lt;/p&gt;</p>",
    "hits": 1036,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 16,
    "title": "网站实现一个全局的方法，实现导航栏显示登陆注册按钮或者登录用户的信息",
    "created_at": "2016-10-11 13:59:09",
    "updated_at": "2016-12-06 14:27:26",
    "replied_at": "2016-12-06 14:27:26",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1347,
    "last_reply_user_login": "lotus",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 87,
    "user": "{\"id\": 87, \"name\": \"lychee\", \"login\": \"lychee\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "网站要实现用户的登陆和注册，登陆之后导航栏不再显示登陆注册按钮，而显示用户的信息（比如用户名称），现在已经实现用户登陆后把用户信息放在session里面，怎么实现一个全局的方法（用来的header页面判断用户是否登录，显示相应的信息）？如果描述的不够清晰，还请见谅。",
    "body_html": "<p>网站要实现用户的登陆和注册，登陆之后导航栏不再显示登陆注册按钮，而显示用户的信息（比如用户名称），现在已经实现用户登陆后把用户信息放在 session 里面，怎么实现一个全局的方法（用来的 header 页面判断用户是否登录，显示相应的信息）？如果描述的不够清晰，还请见谅。</p>",
    "hits": 618,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 17,
    "title": "北京创业团队现招golang技术研发和实习生",
    "created_at": "2016-10-11 14:18:22",
    "updated_at": "2016-11-06 22:49:00",
    "replied_at": "2016-11-06 22:49:00",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 193,
    "last_reply_user_login": "philosophia14",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 90,
    "user": "{\"id\": 90, \"name\": \"wwuwei123456\", \"login\": \"wwuwei123456\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "北京创业团队现招golang技术研发和实习生\n 技术研发\n招收golang、js开发了，\n要求工作3年以上，良好基础知识,\n精通golang或js开发，\n熟练掌握各种常用加密算法，常用数据结构；\n开源贡献者优先， github 源码者优先，技术博客者优先；\n掌握golang的同时还掌握其他一门或多门语言（如python、c++、java）的加分。\n对分布式相关理论和系统有研究者优先具有技术钻研精神，追求完美，并具有较强自驱学习能力 \n薪酬：15k-25k每月。\n另招收在校实习生，计算机专业，懂golang优先，有开源项目经验优先\n如有兴趣：请email您的简历到：aaron-wu@qkldx.net",
    "body_html": "<p>北京创业团队现招 golang 技术研发和实习生\n 技术研发\n招收 golang、js 开发了，\n要求工作 3 年以上，良好基础知识,\n精通 golang 或 js 开发，\n熟练掌握各种常用加密算法，常用数据结构；\n开源贡献者优先， github 源码者优先，技术博客者优先；\n掌握 golang 的同时还掌握其他一门或多门语言（如 python、c++、java）的加分。\n对分布式相关理论和系统有研究者优先具有技术钻研精神，追求完美，并具有较强自驱学习能力 \n薪酬：15k-25k 每月。\n另招收在校实习生，计算机专业，懂 golang 优先，有开源项目经验优先\n如有兴趣：请 email 您的简历到：aaron-wu@qkldx.net</p>",
    "hits": 445,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 18,
    "title": "[校招][实习] PingCAP 招后端开发工程师",
    "created_at": "2016-10-11 14:27:55",
    "updated_at": "2020-02-11 01:37:23",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 73,
    "user": "{\"id\": 73, \"name\": \"qiuyesuifeng\", \"login\": \"qiuyesuifeng\", \"avatar\": \"https://gocn.vip/system/letter_avatars/q.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如果你：\r\n内心不安，喜欢挑战和创新；\r\n熟悉分布式系统或者数据库领域；\r\n想和简单有爱的 PingCAP 的工程师们一起做世界级的开源项目。\r\n\r\n那么你就是我们要找的人。\r\n\r\n在分布式数据库领域有很多迷人的问题需要去解决，如果你对任何一个问题感到无比的好奇，想要深挖究竟，都可以来和我们聊聊。 \r\n如何设计实现一个分布式的 SQL 优化器，让一个复杂的 SQL 查询变的无比轻快智能\r\n如何在上千台数据库规模的情况下，实现无阻塞的表结构变更操作，而不影响任何在线的业务\r\n如何实现一个高效的分布式事务管理器，让 ACID 事务在分布式存场景下依然可以 work well\r\n如何基于一致性的 Raft 协议实现快速稳定的 replication 和 auto-failover，将集群规模在线扩展到成百上千台\r\n如何在一个 commit 提交之后，快速验证千万级别的 tests 是否全部通过，性能有没有显著提升\r\n…...\r\n\r\n联系方式：\r\nhire@pingcap.com\r\n\r\n地址：\r\n北京市海淀区西小口路66号东升科技园D-3号楼413\r\n\r\n待遇:\r\n15K-20K + 期权, 13 薪 + 奖金\r\n",
    "body_html": "<p>如果你：\n内心不安，喜欢挑战和创新；\n熟悉分布式系统或者数据库领域；\n想和简单有爱的 PingCAP 的工程师们一起做世界级的开源项目。</p>\n\n<p>那么你就是我们要找的人。</p>\n\n<p>在分布式数据库领域有很多迷人的问题需要去解决，如果你对任何一个问题感到无比的好奇，想要深挖究竟，都可以来和我们聊聊。 \n如何设计实现一个分布式的 SQL 优化器，让一个复杂的 SQL 查询变的无比轻快智能\n如何在上千台数据库规模的情况下，实现无阻塞的表结构变更操作，而不影响任何在线的业务\n如何实现一个高效的分布式事务管理器，让 ACID 事务在分布式存场景下依然可以 work well\n如何基于一致性的 Raft 协议实现快速稳定的 replication 和 auto-failover，将集群规模在线扩展到成百上千台\n如何在一个 commit 提交之后，快速验证千万级别的 tests 是否全部通过，性能有没有显著提升\n…...</p>\n\n<p>联系方式：\nhire@pingcap.com</p>\n\n<p>地址：\n北京市海淀区西小口路 66 号东升科技园 D-3 号楼 413</p>\n\n<p>待遇:\n15K-20K + 期权, 13 薪 + 奖金</p>",
    "hits": 458,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 19,
    "title": "[校招][实习] PingCAP 招前端开发工程师",
    "created_at": "2016-10-11 14:30:15",
    "updated_at": "2016-10-11 14:30:15",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 73,
    "user": "{\"id\": 73, \"name\": \"qiuyesuifeng\", \"login\": \"qiuyesuifeng\", \"avatar\": \"https://gocn.vip/system/letter_avatars/q.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "这是一个对我们这种做「后端」的公司非常重要的岗位，直接关系到我们能够提供一个什么「样子」的解决方案给我们的客户。\n我们需要把技术上复杂的算法和逻辑隐藏起来，让开发者没有心智负担的使用，而不是终日面对冰冷的命令行接口狂敲。一个现代的商用基础软件，流畅优雅的 UI/UE 必不可少，我们对设计和交互的偏执等同于分布式算法和测试的偏执，不可分割。我们在后边的一切工作和炫酷的技术，都需要同样炫酷的前端来落地。\n\n我们在 enjoy 这个「造物」的过程，希望邀你一起。 \n\n哦，对了，我们的技术栈： \nBootstrap\nVue.js\nAngularJS\nHighChart\nGrunt\nLess\n\n我们对于前端工程师没有其他别的要求，就是对于「美」有所追求，充满好奇心：）\n\n联系方式：\nhire@pingcap.com\n\n地址：\n北京市海淀区西小口路66号东升科技园D-3号楼413\n\n待遇:\n15K-20K + 期权, 13 薪 + 奖金",
    "body_html": "<p>这是一个对我们这种做「后端」的公司非常重要的岗位，直接关系到我们能够提供一个什么「样子」的解决方案给我们的客户。\n我们需要把技术上复杂的算法和逻辑隐藏起来，让开发者没有心智负担的使用，而不是终日面对冰冷的命令行接口狂敲。一个现代的商用基础软件，流畅优雅的 UI/UE 必不可少，我们对设计和交互的偏执等同于分布式算法和测试的偏执，不可分割。我们在后边的一切工作和炫酷的技术，都需要同样炫酷的前端来落地。</p>\n\n<p>我们在 enjoy 这个「造物」的过程，希望邀你一起。 </p>\n\n<p>哦，对了，我们的技术栈： \nBootstrap\nVue.js\nAngularJS\nHighChart\nGrunt\nLess</p>\n\n<p>我们对于前端工程师没有其他别的要求，就是对于「美」有所追求，充满好奇心：）</p>\n\n<p>联系方式：\nhire@pingcap.com</p>\n\n<p>地址：\n北京市海淀区西小口路 66 号东升科技园 D-3 号楼 413</p>\n\n<p>待遇:\n15K-20K + 期权, 13 薪 + 奖金</p>",
    "hits": 437,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 20,
    "title": "GO 调用C++ dll,报 is not a valid Win32 application.",
    "created_at": "2016-10-11 14:54:38",
    "updated_at": "2017-12-21 15:21:46",
    "replied_at": "2017-12-21 15:21:46",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2012,
    "last_reply_user_login": "plain",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 92,
    "user": "{\"id\": 92, \"name\": \"Richard\", \"login\": \"Richard\", \"avatar\": \"https://gocn.vip/system/letter_avatars/r.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "issueQRCode 有两个参数，carddata,cdata cdata需要回调\n上代码\n```go\npackage main\n\nimport (\n    &quot;fmt&quot;  \n    &quot;syscall&quot;\n    &quot;unsafe&quot;\n)\n \n\nfunc IntPtr(n int) uintptr {\n    return uintptr(n)\n}\n\nfunc StrPtr(s string) uintptr {\n    return uintptr(unsafe.Pointer(syscall.StringBytePtr(s)))\n}\n\nvar (\n    qrcio=syscall.MustLoadDLL(&quot;qrcio.dll&quot;)\n    issueQRCode=qrcio.MustFindProc(&quot;issueQRCode&quot;)\n)\n\nfunc IssueQRCode(cdata,carddata string) (result uintptr) {\n   ret,_,_:=issueQRCode.Call(StrPtr(carddata),StrPtr(cdata))\n\n   return ret\n\n}\n\nfunc main() { \n\n    var cdata,carddata string\n    carddata=&quot;C0|Y0|S140101000000|I160910121212|O181231235959|J181231235959|B1|F1|R1|X0|V2|D9999888877776666&quot;\n \n   var result= IssueQRCode(carddata,cdata)\n    fmt.Println(result) \n}\n```\n",
    "body_html": "<p>issueQRCode 有两个参数，carddata,cdata cdata 需要回调\n上代码</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>  \n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">syscall</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">unsafe</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"k\">func</span> <span class=\"n\">IntPtr</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"kt\">uintptr</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"kt\">uintptr</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">StrPtr</span><span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"kt\">uintptr</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"kt\">uintptr</span><span class=\"p\">(</span><span class=\"n\">unsafe</span><span class=\"o\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(</span><span class=\"n\">syscall</span><span class=\"o\">.</span><span class=\"n\">StringBytePtr</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)))</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">var</span> <span class=\"p\">(</span>\n    <span class=\"n\">qrcio</span><span class=\"o\">=</span><span class=\"n\">syscall</span><span class=\"o\">.</span><span class=\"n\">MustLoadDLL</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">qrcio</span><span class=\"o\">.</span><span class=\"n\">dll</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">issueQRCode</span><span class=\"o\">=</span><span class=\"n\">qrcio</span><span class=\"o\">.</span><span class=\"n\">MustFindProc</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">issueQRCode</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">IssueQRCode</span><span class=\"p\">(</span><span class=\"n\">cdata</span><span class=\"p\">,</span><span class=\"n\">carddata</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"n\">result</span> <span class=\"kt\">uintptr</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n   <span class=\"n\">ret</span><span class=\"p\">,</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"n\">_</span><span class=\"o\">:=</span><span class=\"n\">issueQRCode</span><span class=\"o\">.</span><span class=\"n\">Call</span><span class=\"p\">(</span><span class=\"n\">StrPtr</span><span class=\"p\">(</span><span class=\"n\">carddata</span><span class=\"p\">),</span><span class=\"n\">StrPtr</span><span class=\"p\">(</span><span class=\"n\">cdata</span><span class=\"p\">))</span>\n\n   <span class=\"k\">return</span> <span class=\"n\">ret</span>\n\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span> \n\n    <span class=\"k\">var</span> <span class=\"n\">cdata</span><span class=\"p\">,</span><span class=\"n\">carddata</span> <span class=\"kt\">string</span>\n    <span class=\"n\">carddata</span><span class=\"o\">=&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">C0</span><span class=\"o\">|</span><span class=\"n\">Y0</span><span class=\"o\">|</span><span class=\"n\">S140101000000</span><span class=\"o\">|</span><span class=\"n\">I160910121212</span><span class=\"o\">|</span><span class=\"n\">O181231235959</span><span class=\"o\">|</span><span class=\"n\">J181231235959</span><span class=\"o\">|</span><span class=\"n\">B1</span><span class=\"o\">|</span><span class=\"n\">F1</span><span class=\"o\">|</span><span class=\"n\">R1</span><span class=\"o\">|</span><span class=\"n\">X0</span><span class=\"o\">|</span><span class=\"n\">V2</span><span class=\"o\">|</span><span class=\"n\">D9999888877776666</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n   <span class=\"k\">var</span> <span class=\"n\">result</span><span class=\"o\">=</span> <span class=\"n\">IssueQRCode</span><span class=\"p\">(</span><span class=\"n\">carddata</span><span class=\"p\">,</span><span class=\"n\">cdata</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span> \n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 856,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 21,
    "title": "请问有没有GO语言写的探测局域网QQ的工具啊",
    "created_at": "2016-10-11 17:25:34",
    "updated_at": "2016-11-02 13:10:06",
    "replied_at": "2016-11-02 13:10:06",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1248,
    "last_reply_user_login": "atom",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 145,
    "user": "{\"id\": 145, \"name\": \"virnos\", \"login\": \"virnos\", \"avatar\": \"https://gocn.vip/system/letter_avatars/v.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "请问有没有GO语言写的探测局域网QQ的工具啊， 或者写这样工具的思路， 类似QQ第六感这样的工具",
    "body_html": "<p>请问有没有 GO 语言写的探测局域网 QQ 的工具啊， 或者写这样工具的思路， 类似 QQ 第六感这样的工具</p>",
    "hits": 385,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 22,
    "title": "for j:=0;j&lt;4 ;j++  {  } 与for _,v :=range persons {} 区别",
    "created_at": "2016-10-11 19:14:04",
    "updated_at": "2019-03-01 14:56:43",
    "replied_at": "2019-03-01 14:56:43",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 6865,
    "last_reply_user_login": "qiyin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 88,
    "user": "{\"id\": 88, \"name\": \"qi19901212\", \"login\": \"qi19901212\", \"avatar\": \"https://static.gocn.vip/user/avatar/88/4a10d7.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "请大神详细讲解一下这二者的区别（比较深入点比较好）\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;strconv&quot;\n)\nfunc main() {\n\tperson:=new(Person)\n\tpersons:=make([]Person,4)\n\tfor i:=0;i&lt;4;i++{\n\t\tperson.Id= strconv.Itoa(i)\n\t\tperson.Name =  &quot;sun&quot;\n\t\tperson.AvatarUrl=&quot;AAAAA&quot;\n\t\tpersons[i]=*person\n\t}\n\tfmt.Println(&quot;----原始数组-----&quot;)\n\tfmt.Println(persons)\n\tfor _,v :=range persons {\n\t\tv.Name=&quot;SSS&quot;\n\t}\n\tfmt.Println(&quot;----range-----&quot;)\n\tfmt.Println(persons)\n\n\tfor j:=0;j&lt;4 ;j++  {\n\t\tpersons[j].Name=&quot;JJJ&quot;\n\t}\n\tfmt.Println(&quot;----iiiii-----&quot;)\n\tfmt.Println(persons)\n}\n\ntype Person struct {\n\tId string\n\tName string\n\tAvatarUrl string\n}\n```\n\n输出结果为：\n```go\n----原始数组-----\n[{0 sun AAAAA} {1 sun AAAAA} {2 sun AAAAA} {3 sun AAAAA}]\n----range-----\n[{0 sun AAAAA} {1 sun AAAAA} {2 sun AAAAA} {3 sun AAAAA}]\n----iiiii-----\n[{0 JJJ AAAAA} {1 JJJ AAAAA} {2 JJJ AAAAA} {3 JJJ AAAAA}]\n```",
    "body_html": "<p>请大神详细讲解一下这二者的区别（比较深入点比较好）</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">strconv</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">person</span><span class=\"o\">:=</span><span class=\"nb\">new</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">)</span>\n    <span class=\"n\">persons</span><span class=\"o\">:=</span><span class=\"nb\">make</span><span class=\"p\">([]</span><span class=\"n\">Person</span><span class=\"p\">,</span><span class=\"m\">4</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"o\">:=</span><span class=\"m\">0</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"m\">4</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">{</span>\n        <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">Id</span><span class=\"o\">=</span> <span class=\"n\">strconv</span><span class=\"o\">.</span><span class=\"n\">Itoa</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">Name</span> <span class=\"o\">=</span>  <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">sun</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n        <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">AvatarUrl</span><span class=\"o\">=&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">AAAAA</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n        <span class=\"n\">persons</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">=*</span><span class=\"n\">person</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">----</span><span class=\"n\">原始数组</span><span class=\"o\">-----&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">persons</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span><span class=\"n\">v</span> <span class=\"o\">:=</span><span class=\"k\">range</span> <span class=\"n\">persons</span> <span class=\"p\">{</span>\n        <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"o\">=&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">SSS</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">----</span><span class=\"k\">range</span><span class=\"o\">-----&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">persons</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">j</span><span class=\"o\">:=</span><span class=\"m\">0</span><span class=\"p\">;</span><span class=\"n\">j</span><span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"m\">4</span> <span class=\"p\">;</span><span class=\"n\">j</span><span class=\"o\">++</span>  <span class=\"p\">{</span>\n        <span class=\"n\">persons</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"o\">=&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">JJJ</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">----</span><span class=\"n\">iiiii</span><span class=\"o\">-----&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">persons</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">type</span> <span class=\"n\">Person</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span> <span class=\"kt\">string</span>\n    <span class=\"n\">Name</span> <span class=\"kt\">string</span>\n    <span class=\"n\">AvatarUrl</span> <span class=\"kt\">string</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>输出结果为：</p>\n <pre class=\"highlight go\"><code><span class=\"o\">----</span><span class=\"n\">原始数组</span><span class=\"o\">-----</span>\n<span class=\"p\">[{</span><span class=\"m\">0</span> <span class=\"n\">sun</span> <span class=\"n\">AAAAA</span><span class=\"p\">}</span> <span class=\"p\">{</span><span class=\"m\">1</span> <span class=\"n\">sun</span> <span class=\"n\">AAAAA</span><span class=\"p\">}</span> <span class=\"p\">{</span><span class=\"m\">2</span> <span class=\"n\">sun</span> <span class=\"n\">AAAAA</span><span class=\"p\">}</span> <span class=\"p\">{</span><span class=\"m\">3</span> <span class=\"n\">sun</span> <span class=\"n\">AAAAA</span><span class=\"p\">}]</span>\n<span class=\"o\">----</span><span class=\"k\">range</span><span class=\"o\">-----</span>\n<span class=\"p\">[{</span><span class=\"m\">0</span> <span class=\"n\">sun</span> <span class=\"n\">AAAAA</span><span class=\"p\">}</span> <span class=\"p\">{</span><span class=\"m\">1</span> <span class=\"n\">sun</span> <span class=\"n\">AAAAA</span><span class=\"p\">}</span> <span class=\"p\">{</span><span class=\"m\">2</span> <span class=\"n\">sun</span> <span class=\"n\">AAAAA</span><span class=\"p\">}</span> <span class=\"p\">{</span><span class=\"m\">3</span> <span class=\"n\">sun</span> <span class=\"n\">AAAAA</span><span class=\"p\">}]</span>\n<span class=\"o\">----</span><span class=\"n\">iiiii</span><span class=\"o\">-----</span>\n<span class=\"p\">[{</span><span class=\"m\">0</span> <span class=\"n\">JJJ</span> <span class=\"n\">AAAAA</span><span class=\"p\">}</span> <span class=\"p\">{</span><span class=\"m\">1</span> <span class=\"n\">JJJ</span> <span class=\"n\">AAAAA</span><span class=\"p\">}</span> <span class=\"p\">{</span><span class=\"m\">2</span> <span class=\"n\">JJJ</span> <span class=\"n\">AAAAA</span><span class=\"p\">}</span> <span class=\"p\">{</span><span class=\"m\">3</span> <span class=\"n\">JJJ</span> <span class=\"n\">AAAAA</span><span class=\"p\">}]</span>\n</code></pre> ",
    "hits": 558,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 23,
    "title": "go怎么基于http显示上传和下载进度?",
    "created_at": "2016-10-11 20:42:31",
    "updated_at": "2016-10-11 22:34:59",
    "replied_at": "2016-10-11 22:34:59",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 193,
    "last_reply_user_login": "philosophia14",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "一般php可能会用session或者组件来完成,提供服务器的信息.\n但是,自己写的服务器,状态信息怎么回到前端.\n前端,又是怎么接收.\n\n链接在链接中,发生了什么,是否要认为操纵,怎么操纵?\n\n网上资源都比较少.\n\n大致,就是和请求的range有关.\n我是要连续发送请求还是什么,服务端怎么接收,如果,还没有上传完毕,又怎么回馈给前端\n\n信息真的是太少太少",
    "body_html": "<p>一般 php 可能会用 session 或者组件来完成,提供服务器的信息.\n但是,自己写的服务器,状态信息怎么回到前端.\n前端,又是怎么接收.</p>\n\n<p>链接在链接中,发生了什么,是否要认为操纵,怎么操纵?</p>\n\n<p>网上资源都比较少.</p>\n\n<p>大致,就是和请求的 range 有关.\n我是要连续发送请求还是什么,服务端怎么接收,如果,还没有上传完毕,又怎么回馈给前端</p>\n\n<p>信息真的是太少太少</p>",
    "hits": 457,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 25,
    "title": "求 Go语言 在 Ubuntu上的通用开发环境（IDE or Vim++）搭建。",
    "created_at": "2016-10-11 20:56:11",
    "updated_at": "2016-12-01 14:13:22",
    "replied_at": "2016-12-01 14:13:22",
    "replies_count": 15,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 544,
    "last_reply_user_login": "yougg",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 199,
    "user": "{\"id\": 199, \"name\": \"aaron666\", \"login\": \"aaron666\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "是时候认真的讨论一下这个问题了。",
    "body_html": "<p>是时候认真的讨论一下这个问题了。</p>",
    "hits": 737,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 26,
    "title": "golang 的channel是否适合做消息队列？",
    "created_at": "2016-10-11 21:08:13",
    "updated_at": "2017-02-15 11:42:20",
    "replied_at": "2017-02-15 11:42:20",
    "replies_count": 9,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 817,
    "last_reply_user_login": "pathbox",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 96,
    "user": "{\"id\": 96, \"name\": \"sheepbao\", \"login\": \"sheepbao\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "做视频直播服务器的时候遇到一个问题，我用带缓冲的channel做消息队列，开启一个go程，专门接受消息队列，并发送消息，我记得在别人的文文章上有说过**channel不适合做消息队列**，但没说为什么，我的程序目前没任何问题，但是因为对channel的机制并不是理解的很透彻，所以特来问一下，如果channel不是做队列，请告诉我为何不适合？我觉得channel就是天生的队列啊！而且还线程安全",
    "body_html": "<p>做视频直播服务器的时候遇到一个问题，我用带缓冲的 channel 做消息队列，开启一个 go 程，专门接受消息队列，并发送消息，我记得在别人的文文章上有说过<strong>channel 不适合做消息队列</strong>，但没说为什么，我的程序目前没任何问题，但是因为对 channel 的机制并不是理解的很透彻，所以特来问一下，如果 channel 不是做队列，请告诉我为何不适合？我觉得 channel 就是天生的队列啊！而且还线程安全</p>",
    "hits": 2160,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 27,
    "title": "Go 语言跨平台 GUI 自动化系统 (模拟鼠标键盘和控制 bitmap 窗口以及屏幕以及全局事件监听)",
    "created_at": "2016-10-11 21:16:11",
    "updated_at": "2017-04-06 16:07:23",
    "replied_at": "2017-04-06 16:07:23",
    "replies_count": 15,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 183,
    "last_reply_user_login": "veni",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 183,
    "user": "{\"id\": 183, \"name\": \"veni\", \"login\": \"veni\", \"avatar\": \"https://gocn.vip/system/letter_avatars/v.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "项目地址: https://github.com/go-vgo/robotgo\n\nGo 语言跨平台 GUI 自动化系统，控制键盘鼠标 bitmap 和读取屏幕, 操作窗口句柄以及全局事件监听;\n\n支持 Mac、Windows、Linux 等主流系统;\n\n用于自动化测试工具和远程控制以及自动化游戏等工具的编写;\n\n简洁高效的跨平台工具自动化库\n\n例子:\n\n```go\npackage main\n\nimport (\n    &quot;fmt&quot;\n    &quot;github.com/go-vgo/robotgo&quot;\n)\nfunc main() {\n  robotgo.ScrollMouse(10, &quot;up&quot;)\n  robotgo.MouseClick(&quot;left&quot;,true)\n  \n  x, y := robotgo.GetMousePos()\n  fmt.Println(&quot;pos:&quot;, x, y)\n  robotgo.KeyTap(&quot;i&quot;, &quot;alt&quot;, &quot;command&quot;)\n  //按下&quot;i&quot;, &quot;alt&quot;, &quot;command&quot;组合键\n  arr := []string{&quot;alt&quot;, &quot;command&quot;}\n  robotgo.KeyTap(&quot;i&quot;, arr)\n}\n```",
    "body_html": "<p>项目地址: <a href=\"https://github.com/go-vgo/robotgo\" rel=\"nofollow\" target=\"_blank\">https://github.com/go-vgo/robotgo</a></p>\n\n<p>Go 语言跨平台 GUI 自动化系统，控制键盘鼠标 bitmap 和读取屏幕, 操作窗口句柄以及全局事件监听;</p>\n\n<p>支持 Mac、Windows、Linux 等主流系统;</p>\n\n<p>用于自动化测试工具和远程控制以及自动化游戏等工具的编写;</p>\n\n<p>简洁高效的跨平台工具自动化库</p>\n\n<p>例子:</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">-</span><span class=\"n\">vgo</span><span class=\"o\">/</span><span class=\"n\">robotgo</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"n\">robotgo</span><span class=\"o\">.</span><span class=\"n\">ScrollMouse</span><span class=\"p\">(</span><span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">up</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n  <span class=\"n\">robotgo</span><span class=\"o\">.</span><span class=\"n\">MouseClick</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">left</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span><span class=\"no\">true</span><span class=\"p\">)</span>\n\n  <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"n\">robotgo</span><span class=\"o\">.</span><span class=\"n\">GetMousePos</span><span class=\"p\">()</span>\n  <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">pos</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n  <span class=\"n\">robotgo</span><span class=\"o\">.</span><span class=\"n\">KeyTap</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">alt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">command</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n  <span class=\"c\">//按下&amp;quot;i&amp;quot;, &amp;quot;alt&amp;quot;, &amp;quot;command&amp;quot;组合键</span>\n  <span class=\"n\">arr</span> <span class=\"o\">:=</span> <span class=\"p\">[]</span><span class=\"kt\">string</span><span class=\"p\">{</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">alt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">command</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}</span>\n  <span class=\"n\">robotgo</span><span class=\"o\">.</span><span class=\"n\">KeyTap</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">arr</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 953,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 28,
    "title": "为什么Go里面大多数的接口返回的是int类型",
    "created_at": "2016-10-11 22:11:16",
    "updated_at": "2019-08-19 13:00:57",
    "replied_at": "2019-08-19 13:00:57",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 8008,
    "last_reply_user_login": "ducklife",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "go 的 len(), mgo 的 Count()，redis 库的相关 API 等，明明返回值只可能是 0 和正整数，但都用 int",
    "body_html": "<p>go 的 len(), mgo 的 Count()，redis 库的相关 API 等，明明返回值只可能是 0 和正整数，但都用 int</p>",
    "hits": 424,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 29,
    "title": "杭州/物联网门锁公司招聘Golang工程师",
    "created_at": "2016-10-11 23:02:04",
    "updated_at": "2016-10-11 23:59:58",
    "replied_at": "2016-10-11 23:59:58",
    "replies_count": 1,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 238,
    "user": "{\"id\": 238, \"name\": \"Kevin\", \"login\": \"kevin\", \"avatar\": \"https://static.gocn.vip/user/avatar/238/32f2aa.jpg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "公司简介：\n杭州云柚科技是一家快速发展的新锐硬件公司,目前主打产品为无线联网型门锁系统，我们的目标是让开门变的简单！\n\n公司福利：\n五险一金 + 双休 + 免费水果零食饮料 + …\n\n岗位职责：\n负责服务端通信系统的架构设计，重构、优化现有的技术架构\n\n根据业务规划制定相应技术规划，推动系统演进\n\n解决项目中的关键架构问题和技术难题，负责项目中关键技术难点的攻关和预研\n\n能力要求：\n3 年以上实际开发经验，具有架构思维\n\n有深入的 Golang 基础理论知识和实际开发能力，对相关技术领域的开源通信产品有深入的理解\n\n精通数据结构，精通 Golang并发编程， Socket 通信编程，熟悉 TCP/IP 、 HTTP 、Protobuf等各种常用通讯协议，熟悉GRPC等技术更佳。\n\n熟悉缓存技术、异步框架、集群与负载均衡、消息队列等\n\nMongoDB 的数据结构设计和规划等能力\n\n有大型分布式、高并发、高负载、高可用系统设计、开发和调优经验\n\n工作地点： 杭州\n\n薪资： 15k-30k ，面议\n\n简历发送至 kevin[at]yeeuu[dot]com",
    "body_html": "<p>公司简介：\n杭州云柚科技是一家快速发展的新锐硬件公司,目前主打产品为无线联网型门锁系统，我们的目标是让开门变的简单！</p>\n\n<p>公司福利：\n五险一金 + 双休 + 免费水果零食饮料 + …</p>\n\n<p>岗位职责：\n负责服务端通信系统的架构设计，重构、优化现有的技术架构</p>\n\n<p>根据业务规划制定相应技术规划，推动系统演进</p>\n\n<p>解决项目中的关键架构问题和技术难题，负责项目中关键技术难点的攻关和预研</p>\n\n<p>能力要求：\n3 年以上实际开发经验，具有架构思维</p>\n\n<p>有深入的 Golang 基础理论知识和实际开发能力，对相关技术领域的开源通信产品有深入的理解</p>\n\n<p>精通数据结构，精通 Golang 并发编程， Socket 通信编程，熟悉 TCP/IP 、 HTTP 、Protobuf 等各种常用通讯协议，熟悉 GRPC 等技术更佳。</p>\n\n<p>熟悉缓存技术、异步框架、集群与负载均衡、消息队列等</p>\n\n<p>MongoDB 的数据结构设计和规划等能力</p>\n\n<p>有大型分布式、高并发、高负载、高可用系统设计、开发和调优经验</p>\n\n<p>工作地点： 杭州</p>\n\n<p>薪资： 15k-30k ，面议</p>\n\n<p>简历发送至 kevin[at] yeeuu[dot] com</p>",
    "hits": 543,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 30,
    "title": "bee run时可以配置排除某些目录吗",
    "created_at": "2016-10-11 23:16:46",
    "updated_at": "2016-10-11 23:37:30",
    "replied_at": "2016-10-11 23:37:30",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 237,
    "user": "{\"id\": 237, \"name\": \"stone\", \"login\": \"stone\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "现在前端都是自动化构建了，node_modules目录文件太多，现在bee run速度非常慢，有改进的方法吗？\n\n另外bee run时，修改go文件，每次不会编译成功，提示该文件无法找到。可文件是存在的，不知道啥原因？\n\n版本：\nbee: 1.4.1\nbeego: 1.7.0\ngo: 1.7",
    "body_html": "<p>现在前端都是自动化构建了，node_modules 目录文件太多，现在 bee run 速度非常慢，有改进的方法吗？</p>\n\n<p>另外 bee run 时，修改 go 文件，每次不会编译成功，提示该文件无法找到。可文件是存在的，不知道啥原因？</p>\n\n<p>版本：\nbee: 1.4.1\nbeego: 1.7.0\ngo: 1.7</p>",
    "hits": 478,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 31,
    "title": "golang有没有好的开源游戏框架",
    "created_at": "2016-10-12 00:15:02",
    "updated_at": "2019-08-19 12:59:04",
    "replied_at": "2019-08-19 12:59:04",
    "replies_count": 14,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 8008,
    "last_reply_user_login": "ducklife",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 257,
    "user": "{\"id\": 257, \"name\": \"小平\", \"login\": \"lcp8888\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "web服务端发展速度快，从业者多,开源框架demo很多. \n游戏服务端正相反，比较封闭,开源的demo比较少. \n目前找到的几款服务端框架\nleaf,gonet,starx \n",
    "body_html": "<p>web 服务端发展速度快，从业者多,开源框架 demo 很多. \n游戏服务端正相反，比较封闭,开源的 demo 比较少. \n目前找到的几款服务端框架\nleaf,gonet,starx </p>",
    "hits": 919,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 32,
    "title": "一起来总结一下 golang 的一些最佳实践",
    "created_at": "2016-10-12 00:37:30",
    "updated_at": "2017-05-18 09:23:47",
    "replied_at": "2017-05-18 09:23:47",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1807,
    "last_reply_user_login": "chenhui7373",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 261,
    "user": "{\"id\": 261, \"name\": \"hacpai\", \"login\": \"hacpai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我先来总结一个， golang函数参数为 struct 时什么时候传址什么时候传值？\n\n1. receiver 通常用指针( ref:https://github.com/golang/go/wiki/CodeReviewComments#receiver-type)\n2. Slices, maps, channels, strings, function values, and interface values 实现机制类似指针，所以可以直接传递\n3. 大的结构体和将要修改的结构体用指针。因为指针拷贝代价小，并且可以直接操作对象",
    "body_html": "<p>我先来总结一个， golang 函数参数为 struct 时什么时候传址什么时候传值？</p>\n\n<ol>\n<li>receiver 通常用指针 ( ref:<a href=\"https://github.com/golang/go/wiki/CodeReviewComments#receiver-type\" rel=\"nofollow\" target=\"_blank\">https://github.com/golang/go/wiki/CodeReviewComments#receiver-type</a>)</li>\n<li>Slices, maps, channels, strings, function values, and interface values 实现机制类似指针，所以可以直接传递</li>\n<li>大的结构体和将要修改的结构体用指针。因为指针拷贝代价小，并且可以直接操作对象</li>\n</ol>",
    "hits": 548,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 33,
    "title": "beego框架 个人博客系统",
    "created_at": "2016-10-12 09:35:58",
    "updated_at": "2016-10-12 09:56:28",
    "replied_at": "2016-10-12 09:56:28",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 65,
    "last_reply_user_login": "朋也",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 38,
    "user": "{\"id\": 38, \"name\": \"TianGenglan\", \"login\": \"TianGenglan\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "哪有大神有用Beego写的个人博客呢？分享一下吧？",
    "body_html": "<p>哪有大神有用 Beego 写的个人博客呢？分享一下吧？</p>",
    "hits": 568,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 34,
    "title": "请问go的windows gui库walk中提及的syso文件是否哪位兄弟有过比较深入的研究？",
    "created_at": "2016-10-12 09:36:21",
    "updated_at": "2016-10-12 09:45:23",
    "replied_at": "2016-10-12 09:45:23",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 111,
    "user": "{\"id\": 111, \"name\": \"niugou\", \"login\": \"niugou\", \"avatar\": \"https://gocn.vip/system/letter_avatars/n.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "### 背景知识  \n[GO windows GUI库：Walk](https://github.com/lxn/walk)  \n\n",
    "body_html": "<h3 id=\"背景知识\">背景知识</h3>\n<p><a href=\"https://github.com/lxn/walk\" rel=\"nofollow\" target=\"_blank\" title=\"\">GO windows GUI 库：Walk</a>  </p>",
    "hits": 570,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 35,
    "title": "大家推荐哪个 golang 的日志框架，说说理由？",
    "created_at": "2016-10-12 09:59:48",
    "updated_at": "2016-10-17 16:59:18",
    "replied_at": "2016-10-17 16:59:18",
    "replies_count": 10,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 234,
    "last_reply_user_login": "sryan",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 74,
    "user": "{\"id\": 74, \"name\": \"xieyanke\", \"login\": \"xieyanke\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 790,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 36,
    "title": "上海/ Teambition 30k-40k 寻觅 Go 大牛",
    "created_at": "2016-10-12 10:01:03",
    "updated_at": "2016-10-24 12:12:16",
    "replied_at": "2016-10-24 12:12:16",
    "replies_count": 13,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 94,
    "last_reply_user_login": "SunisDown",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 244,
    "user": "{\"id\": 244, \"name\": \"zensh\", \"login\": \"zensh\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "## 1. 关于「Teambition 」\n\n「Teambition 」是国内团队协作工具的创导者，通过帮助团队轻松共享和讨论工作中的任务、文件、分享、日程等内容，让团队协作焕发无限可能。目前，已经有超过一百万用户通过 Teambition 进行团队协作。Teambition 公司已获得来自戈壁投资、IDG、盘古及北极光的多轮融资，并在2016年获得来自腾讯的战略投资。（发展历程在最下方）\n\n## 2. 寻找 Go 大牛\n\n我们已经启动 Teambition 底层重构计划，基于 Kubernetes 和 golang 生态，目前有 Go 新手（Node.js 高手）两名，非常期望能有 Go 大牛挪挪坑，来给我们带队。欢迎朋友们内推或自荐，成功就送 iPhone 7 plus。\n\n### 2.1 岗位职责：\n\n1. 研发基于 SOA 架构的核心业务服务；\n2. 研发基于 Docker&amp;Kubernetes 的基础服务。\n\n### 2.2 岗位要求：\n\n1. 精通 Go 语言；\n2. 掌握主流 Go Web 框架设计和实现原理；\n3. 具有很强的学习能力、分析问题和解决问题能力、对技术有钻研精神和兴趣；\n4. 在 Github 上参与贡献了优秀 Go 开源项目；\n5. 有大型分布式、高并发、高负载、高可用系统设计、开发和调优经验者加分。\n\n### 2.3 职级薪资\n\n架构师级，月薪 30k ~ 40k，年终奖，期权。\n\nHR： meiling在teambition.com\n我： qing在teambition.com\n\n## 3. 我们崇尚开源项目，追求品质代码，欢迎围观：\n\n1. https://github.com/teambition/gear 又一款 Go Web 框架\n2. https://github.com/teambition/ratelimiter-go 最快的基于 redis 的限速模块\n\n\n",
    "body_html": "<h2 id=\"1. 关于「Teambition 」\">1. 关于「Teambition 」</h2>\n<p>「Teambition 」是国内团队协作工具的创导者，通过帮助团队轻松共享和讨论工作中的任务、文件、分享、日程等内容，让团队协作焕发无限可能。目前，已经有超过一百万用户通过 Teambition 进行团队协作。Teambition 公司已获得来自戈壁投资、IDG、盘古及北极光的多轮融资，并在 2016 年获得来自腾讯的战略投资。（发展历程在最下方）</p>\n<h2 id=\"2. 寻找 Go 大牛\">2. 寻找 Go 大牛</h2>\n<p>我们已经启动 Teambition 底层重构计划，基于 Kubernetes 和 golang 生态，目前有 Go 新手（Node.js 高手）两名，非常期望能有 Go 大牛挪挪坑，来给我们带队。欢迎朋友们内推或自荐，成功就送 iPhone 7 plus。</p>\n<h3 id=\"2.1 岗位职责：\">2.1 岗位职责：</h3>\n<ol>\n<li>研发基于 SOA 架构的核心业务服务；</li>\n<li>研发基于 Docker&amp;Kubernetes 的基础服务。</li>\n</ol>\n<h3 id=\"2.2 岗位要求：\">2.2 岗位要求：</h3>\n<ol>\n<li>精通 Go 语言；</li>\n<li>掌握主流 Go Web 框架设计和实现原理；</li>\n<li>具有很强的学习能力、分析问题和解决问题能力、对技术有钻研精神和兴趣；</li>\n<li>在 Github 上参与贡献了优秀 Go 开源项目；</li>\n<li>有大型分布式、高并发、高负载、高可用系统设计、开发和调优经验者加分。</li>\n</ol>\n<h3 id=\"2.3 职级薪资\">2.3 职级薪资</h3>\n<p>架构师级，月薪 30k ~ 40k，年终奖，期权。</p>\n\n<p>HR： meiling 在 teambition.com\n我： qing 在 teambition.com</p>\n<h2 id=\"3. 我们崇尚开源项目，追求品质代码，欢迎围观：\">3. 我们崇尚开源项目，追求品质代码，欢迎围观：</h2>\n<ol>\n<li>\n<a href=\"https://github.com/teambition/gear\" rel=\"nofollow\" target=\"_blank\">https://github.com/teambition/gear</a> 又一款 Go Web 框架</li>\n<li>\n<a href=\"https://github.com/teambition/ratelimiter-go\" rel=\"nofollow\" target=\"_blank\">https://github.com/teambition/ratelimiter-go</a> 最快的基于 redis 的限速模块</li>\n</ol>",
    "hits": 644,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 37,
    "title": "Beego能否在静态文件的header上动态增加no cache?",
    "created_at": "2016-10-12 10:12:02",
    "updated_at": "2016-10-12 10:20:56",
    "replied_at": "2016-10-12 10:20:56",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 283,
    "user": "{\"id\": 283, \"name\": \"chendx79\", \"login\": \"chendx79\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我现在是用beego来同时作为api服务器和静态文件服务器，现在我发现用户浏览器会自动缓存上次的html页面，而不是每次去取最新版本，我是否能在beego这一层动态加上以下两行呢？\nheader(&quot;Cache-Control:no-stroe,no-cache,must-revalidate,post-check=0,pre-check=0&quot;);\nheader(&quot;Pragma:no-cache&quot;); //反向代理可以不缓存网页\n\n谢谢",
    "body_html": "<p>我现在是用 beego 来同时作为 api 服务器和静态文件服务器，现在我发现用户浏览器会自动缓存上次的 html 页面，而不是每次去取最新版本，我是否能在 beego 这一层动态加上以下两行呢？\nheader(\"Cache-Control:no-stroe,no-cache,must-revalidate,post-check=0,pre-check=0\");\nheader(\"Pragma:no-cache\"); //反向代理可以不缓存网页</p>\n\n<p>谢谢</p>",
    "hits": 564,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 38,
    "title": "学习golang的迷茫",
    "created_at": "2016-10-12 11:27:42",
    "updated_at": "2016-10-12 13:44:04",
    "replied_at": "2016-10-12 13:44:04",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 247,
    "last_reply_user_login": "leoliu",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 222,
    "user": "{\"id\": 222, \"name\": \"themoonstone\", \"login\": \"themoonstone\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "唔  我是从C++开发转过来的、做goalng差不多5个月了、应该说基本的东西都会、但总是觉得自己的golang还有很多东西没有掌握、另外、由于是做运维开发、所以应用到go的时间不是特别的多、但自己非常希望能学到很深入、由其针对golang并发、网络、结果现在有迷茫的说！请教谢大、这种情况、我应该怎么改善一下、另外、我想找一些golang开源项目、自己试着做一下、求推荐",
    "body_html": "<p>唔  我是从 C++ 开发转过来的、做 goalng 差不多 5 个月了、应该说基本的东西都会、但总是觉得自己的 golang 还有很多东西没有掌握、另外、由于是做运维开发、所以应用到 go 的时间不是特别的多、但自己非常希望能学到很深入、由其针对 golang 并发、网络、结果现在有迷茫的说！请教谢大、这种情况、我应该怎么改善一下、另外、我想找一些 golang 开源项目、自己试着做一下、求推荐</p>",
    "hits": 648,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 39,
    "title": "经常有人打不开beego.me，这是什么问题呢？",
    "created_at": "2016-10-12 11:27:55",
    "updated_at": "2016-10-12 12:19:42",
    "replied_at": "2016-10-12 12:19:42",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 74,
    "last_reply_user_login": "xieyanke",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 58,
    "user": "{\"id\": 58, \"name\": \"为你上线\", \"login\": \"751891786\", \"avatar\": \"https://gocn.vip/system/letter_avatars/7.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "求解。",
    "body_html": "<p>求解。</p>",
    "hits": 517,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 40,
    "title": "如何构建一个高效的 golang web 开发环境",
    "created_at": "2016-10-12 13:38:07",
    "updated_at": "2016-10-12 17:27:43",
    "replied_at": "2016-10-12 17:26:28",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 227,
    "last_reply_user_login": "davidcai1993",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在项目目录下\n\n`go run main.go`\n\n打开浏览器看到 web 界面\n当修改 项目文件后 文件后,需要 ctrl + c 退出 在输入 go run main.go\n\n这样感觉好麻烦呀，\n\n大家的 go 语言开发环境是什么流程呀",
    "body_html": "<p>在项目目录下</p>\n\n<p><code>go run main.go</code></p>\n\n<p>打开浏览器看到 web 界面\n当修改 项目文件后 文件后,需要 ctrl + c 退出 在输入 go run main.go</p>\n\n<p>这样感觉好麻烦呀，</p>\n\n<p>大家的 go 语言开发环境是什么流程呀</p>",
    "hits": 612,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 41,
    "title": "求一些golang的教程，书籍也可以",
    "created_at": "2016-10-12 13:42:05",
    "updated_at": "2019-08-13 19:06:03",
    "replied_at": "2019-08-13 19:06:03",
    "replies_count": 40,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 7988,
    "last_reply_user_login": "lesliehuang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "想学一下golang，求一些教程，书籍也可以",
    "body_html": "<p>想学一下 golang，求一些教程，书籍也可以</p>",
    "hits": 803,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 42,
    "title": "golang url解析问题",
    "created_at": "2016-10-12 13:43:50",
    "updated_at": "2016-10-12 14:24:07",
    "replied_at": "2016-10-12 14:24:07",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 354,
    "last_reply_user_login": "myml",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "用golang开启httpserver，如果参数里面有（;）这个符号的话会作为字段值结束，然后分拆出来多一个参数。这个是怎么解决？\n\n即如果我传的是params=111;222\n\n然后golang就解析成两个参数[params=111,222=]",
    "body_html": "<p>用 golang 开启 httpserver，如果参数里面有（;）这个符号的话会作为字段值结束，然后分拆出来多一个参数。这个是怎么解决？</p>\n\n<p>即如果我传的是 params=111;222</p>\n\n<p>然后 golang 就解析成两个参数 [params=111,222=]</p>",
    "hits": 519,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 43,
    "title": "Go 中，除了使用缓存池，如何减少 slice 的动态分配？",
    "created_at": "2016-10-12 13:48:53",
    "updated_at": "2016-10-15 11:41:53",
    "replied_at": "2016-10-15 11:41:53",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 713,
    "last_reply_user_login": "tonyluj",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "比如，有这样一个函数：\n\n```go\nfunc foo(n int) []byte {\n    bar := make([]byte, n)\n    ...do some thing with b\n    return bar\n}\n```\n`bar := make([]byte, n)`是一处动态内存分配，函数的其他部分不会再对bar的大小进行修改了。这种情况下有没有方法消除`bar := make([]byte, n)`这处动态内存分配？",
    "body_html": "<p>比如，有这样一个函数：</p>\n<pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span> <span class=\"p\">{</span>\n    <span class=\"n\">bar</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">([]</span><span class=\"kt\">byte</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">)</span>\n    <span class=\"o\">...</span><span class=\"n\">do</span> <span class=\"n\">some</span> <span class=\"n\">thing</span> <span class=\"n\">with</span> <span class=\"n\">b</span>\n    <span class=\"k\">return</span> <span class=\"n\">bar</span>\n<span class=\"p\">}</span>\n</code></pre>\n<p><code>bar := make([]byte, n)</code>是一处动态内存分配，函数的其他部分不会再对 bar 的大小进行修改了。这种情况下有没有方法消除<code>bar := make([]byte, n)</code>这处动态内存分配？</p>",
    "hits": 524,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 44,
    "title": "golang 模板中怎么进行位运算？",
    "created_at": "2016-10-12 13:51:37",
    "updated_at": "2016-10-16 22:56:58",
    "replied_at": "2016-10-16 22:56:58",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 876,
    "last_reply_user_login": "mocos",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "golang 模板中怎么进行位运算？",
    "body_html": "<p>golang 模板中怎么进行位运算？</p>",
    "hits": 383,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 45,
    "title": "beego orm 如何使用反射获取匿名字段的功能？",
    "created_at": "2016-10-12 13:56:08",
    "updated_at": "2016-10-14 09:22:27",
    "replied_at": "2016-10-14 09:20:41",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 542,
    "last_reply_user_login": "郑闯",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "问题：beedb 中有这样的一种功能\n\n```go\ntype SQLModel struct {\n    Id       int       `beedb:&quot;PK&quot; sql:&quot;id&quot;`\n    Created  time.Time `sql:&quot;created&quot;`\n    Modified time.Time `sql:&quot;modified&quot;`\n}\ntype User struct {\n    SQLModel `sql:&quot;,inline&quot;`\n    Name     string `sql:&quot;name&quot; tname:&quot;fn_group&quot;`\n    Auth     int    `sql:&quot;auth&quot;`\n}\n// the SQL table “User” has the columns: id, name, auth, created, modified\n// They are marshalled and unmarshalled automatically because of the inline keyword\n```\n我想请问一下，beego orm里面需要怎样实现这种功能尝试了rel可是不行\n",
    "body_html": "<p>问题：beedb 中有这样的一种功能</p>\n <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">SQLModel</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span>       <span class=\"kt\">int</span>       <span class=\"s\">`beedb:&amp;quot;PK&amp;quot; sql:&amp;quot;id&amp;quot;`</span>\n    <span class=\"n\">Created</span>  <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Time</span> <span class=\"s\">`sql:&amp;quot;created&amp;quot;`</span>\n    <span class=\"n\">Modified</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Time</span> <span class=\"s\">`sql:&amp;quot;modified&amp;quot;`</span>\n<span class=\"p\">}</span>\n<span class=\"k\">type</span> <span class=\"n\">User</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">SQLModel</span> <span class=\"s\">`sql:&amp;quot;,inline&amp;quot;`</span>\n    <span class=\"n\">Name</span>     <span class=\"kt\">string</span> <span class=\"s\">`sql:&amp;quot;name&amp;quot; tname:&amp;quot;fn_group&amp;quot;`</span>\n    <span class=\"n\">Auth</span>     <span class=\"kt\">int</span>    <span class=\"s\">`sql:&amp;quot;auth&amp;quot;`</span>\n<span class=\"p\">}</span>\n<span class=\"c\">// the SQL table “User” has the columns: id, name, auth, created, modified</span>\n<span class=\"c\">// They are marshalled and unmarshalled automatically because of the inline keyword</span>\n</code></pre> \n<p>我想请问一下，beego orm 里面需要怎样实现这种功能尝试了 rel 可是不行</p>",
    "hits": 488,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 46,
    "title": "golang变量作用域",
    "created_at": "2016-10-12 15:55:38",
    "updated_at": "2017-10-26 14:59:50",
    "replied_at": "2017-10-26 14:59:50",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2970,
    "last_reply_user_login": "sunnynewlife",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 222,
    "user": "{\"id\": 222, \"name\": \"themoonstone\", \"login\": \"themoonstone\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "一直都觉得golang的变量作用域很容易出问题、今天在测试waitGroup的时候、出现了一个我无法理解的错\n\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;net/http&quot;\n\t&quot;sync&quot;\n\t&quot;time&quot;\n)\n\nvar resp *http.Response\n\nfunc main() {\n\tvar wg sync.WaitGroup\n\tvar urls = []string{\n\t\t&quot;http://www.golang.org/&quot;,\n\t\t&quot;http://www.google.com/&quot;,\n\t\t&quot;http://www.somestupidname.com/&quot;,\n\t}\n\n\tfor _, url := range urls {\n\t\twg.Add(1)\n\t\tgo func(url string) {\n\t\t\tdefer wg.Done()\n\t\t\tresp, err = http.Get(url)  //出错\n\t\t\tresp, err := http.Get(url) //出错、在这么用的时候、没有声明全局变量\n\t\t\tfmt.Println(url)\n\t\t\ttime.Sleep(3e9)\n\t\t}(url)\n\t}\n\twg.Wait()\n}\n```\n代码如上、我也知道golang有变量覆盖这一说、但关键在resp不管我在哪声明、都会出问题、但如果不要http.Get(url)这一行、就没问题了\n希望大神们帮忙看一下",
    "body_html": "<p>一直都觉得 golang 的变量作用域很容易出问题、今天在测试 waitGroup 的时候、出现了一个我无法理解的错</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">sync</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">var</span> <span class=\"n\">resp</span> <span class=\"o\">*</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Response</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">var</span> <span class=\"n\">wg</span> <span class=\"n\">sync</span><span class=\"o\">.</span><span class=\"n\">WaitGroup</span>\n    <span class=\"k\">var</span> <span class=\"n\">urls</span> <span class=\"o\">=</span> <span class=\"p\">[]</span><span class=\"kt\">string</span><span class=\"p\">{</span>\n        <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">http</span><span class=\"o\">:</span><span class=\"c\">//www.golang.org/&amp;quot;,</span>\n        <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">http</span><span class=\"o\">:</span><span class=\"c\">//www.google.com/&amp;quot;,</span>\n        <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">http</span><span class=\"o\">:</span><span class=\"c\">//www.somestupidname.com/&amp;quot;,</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">url</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">urls</span> <span class=\"p\">{</span>\n        <span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"n\">url</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">defer</span> <span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Done</span><span class=\"p\">()</span>\n            <span class=\"n\">resp</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>  <span class=\"c\">//出错</span>\n            <span class=\"n\">resp</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span> <span class=\"c\">//出错、在这么用的时候、没有声明全局变量</span>\n            <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n            <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"m\">3e9</span><span class=\"p\">)</span>\n        <span class=\"p\">}(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>代码如上、我也知道 golang 有变量覆盖这一说、但关键在 resp 不管我在哪声明、都会出问题、但如果不要 http.Get(url) 这一行、就没问题了\n希望大神们帮忙看一下</p>",
    "hits": 496,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 47,
    "title": "Linux进程的exit 返回码有哪些？",
    "created_at": "2016-10-12 16:05:44",
    "updated_at": "2016-10-13 08:10:42",
    "replied_at": "2016-10-13 08:10:42",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2,
    "user": "{\"id\": 2, \"name\": \"xiemengjun\", \"login\": \"xiemengjun\", \"avatar\": \"https://static.gocn.vip/user/avatar/2/9fa872.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "除了0之外，还有哪些呢？\n\n我看到有的代码获取到exit_code后，右移8位。\n\n这是咋回事呢？求大神。",
    "body_html": "<p>除了 0 之外，还有哪些呢？</p>\n\n<p>我看到有的代码获取到 exit_code 后，右移 8 位。</p>\n\n<p>这是咋回事呢？求大神。</p>",
    "hits": 485,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 48,
    "title": "cgo有没有好的方法可以断点调试c代码",
    "created_at": "2016-10-12 21:58:52",
    "updated_at": "2016-10-13 07:09:04",
    "replied_at": "2016-10-13 07:09:04",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 183,
    "user": "{\"id\": 183, \"name\": \"veni\", \"login\": \"veni\", \"avatar\": \"https://gocn.vip/system/letter_avatars/v.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "cgo有没有好的方法可以断点调试c代码,一直靠打印效率不高,试了一下dlv并不能在c代码里面停下来,gdb?",
    "body_html": "<p>cgo 有没有好的方法可以断点调试 c 代码,一直靠打印效率不高,试了一下 dlv 并不能在 c 代码里面停下来,gdb?</p>",
    "hits": 507,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 49,
    "title": "大家说说看都用啥写Go",
    "created_at": "2016-10-13 00:57:21",
    "updated_at": "2017-11-30 16:33:59",
    "replied_at": "2017-11-30 16:33:59",
    "replies_count": 84,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 3119,
    "last_reply_user_login": "MarkYang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 220,
    "user": "{\"id\": 220, \"name\": \"Thomas\", \"login\": \"Thomas\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 925,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 50,
    "title": "go编译后，如何直接在其他没有go环境的机器上执行，像linux rpm包一样直接执行。",
    "created_at": "2016-10-13 05:46:06",
    "updated_at": "2018-04-23 22:58:42",
    "replied_at": "2018-04-23 22:58:42",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 255,
    "last_reply_user_login": "haoc7",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 407,
    "user": "{\"id\": 407, \"name\": \"lucyne\", \"login\": \"lucyne\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "go编译后，如何直接在其他没有go环境的机器上执行，像linux rpm包一样直接执行。",
    "body_html": "<p>go 编译后，如何直接在其他没有 go 环境的机器上执行，像 linux rpm 包一样直接执行。</p>",
    "hits": 778,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 51,
    "title": "小白困惑呀",
    "created_at": "2016-10-13 09:28:32",
    "updated_at": "2017-11-14 09:54:09",
    "replied_at": "2017-11-14 09:54:09",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 3076,
    "last_reply_user_login": "singlethread",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 414,
    "user": "{\"id\": 414, \"name\": \"ilmari\", \"login\": \"ilmari\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "本人是大四的，想从事go开发的工作，不过目前才看了go的基础语法，看了看招聘，招聘go的本来就不多，要求也得都有工作项目经验，感觉好方，不知道该怎么选择，有老前辈指导吗？",
    "body_html": "<p>本人是大四的，想从事 go 开发的工作，不过目前才看了 go 的基础语法，看了看招聘，招聘 go 的本来就不多，要求也得都有工作项目经验，感觉好方，不知道该怎么选择，有老前辈指导吗？</p>",
    "hits": 585,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 52,
    "title": "golang函数返回slice和返回 slice的指针有什么区别？",
    "created_at": "2016-10-13 09:29:08",
    "updated_at": "2016-10-13 16:19:26",
    "replied_at": "2016-10-13 16:19:26",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 441,
    "last_reply_user_login": "andot",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如下所示函数，\n\n```go\nfunc testArrayInt() (slice []int, p  *[]int) {\n    slice = make([]int, 100)\n    p = &amp;slice\n    return slice, p\n}\n```\n在main函数中有这么一段代码，\n\n```go\nsss, ppp := testArrayInt()\nfmt.Println(&amp;sss)\nfmt.Println(ppp)\nsss[0] = 111;\nsss[1] = 222;\nfmt.Println(sss[0])\nfmt.Println(sss[1])\nfmt.Println((*ppp)[0])\nfmt.Println((*ppp)[1])\n```\n打印\n\n```go\n&amp;[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n&amp;[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n111\n222\n111\n222\n```\n返回 slice 的指针和返回 slice 有什么区别呢 ？\n\n还有一种情况：\n\n如下函数，\n\n```go\nfunc testInterface() (slice interface{}, p interface{}) {\n    slice = make([]int, 100)\n    p = &amp;slice\n    return slice, p\n}\n```\n在main函数中，\n\n\n```go\nss, pp := testInterface()\nfmt.Println(&amp;ss)\nfmt.Println(pp)\n```\n打印结果，\n\n```go\n0xc82000a910\n0xc82000a920\n```\n这两个值不应该相同吗 ？或者说他们底层是什么原理导致打印的两个值不同？\n\n还请大神们指教！",
    "body_html": "<p>如下所示函数，</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">testArrayInt</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"n\">slice</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">,</span> <span class=\"n\">p</span>  <span class=\"o\">*</span><span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">slice</span> <span class=\"o\">=</span> <span class=\"nb\">make</span><span class=\"p\">([]</span><span class=\"kt\">int</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">)</span>\n    <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">slice</span>\n    <span class=\"k\">return</span> <span class=\"n\">slice</span><span class=\"p\">,</span> <span class=\"n\">p</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>在 main 函数中有这么一段代码，</p>\n <pre class=\"highlight go\"><code><span class=\"n\">sss</span><span class=\"p\">,</span> <span class=\"n\">ppp</span> <span class=\"o\">:=</span> <span class=\"n\">testArrayInt</span><span class=\"p\">()</span>\n<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">sss</span><span class=\"p\">)</span>\n<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">ppp</span><span class=\"p\">)</span>\n<span class=\"n\">sss</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">111</span><span class=\"p\">;</span>\n<span class=\"n\">sss</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">222</span><span class=\"p\">;</span>\n<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">sss</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">])</span>\n<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">sss</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">])</span>\n<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">((</span><span class=\"o\">*</span><span class=\"n\">ppp</span><span class=\"p\">)[</span><span class=\"m\">0</span><span class=\"p\">])</span>\n<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">((</span><span class=\"o\">*</span><span class=\"n\">ppp</span><span class=\"p\">)[</span><span class=\"m\">1</span><span class=\"p\">])</span>\n</code></pre> \n<p>打印</p>\n <pre class=\"highlight go\"><code><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;[</span><span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span><span class=\"p\">]</span>\n<span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;[</span><span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span><span class=\"p\">]</span>\n<span class=\"m\">111</span>\n<span class=\"m\">222</span>\n<span class=\"m\">111</span>\n<span class=\"m\">222</span>\n</code></pre> \n<p>返回 slice 的指针和返回 slice 有什么区别呢 ？</p>\n\n<p>还有一种情况：</p>\n\n<p>如下函数，</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">testInterface</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"n\">slice</span> <span class=\"k\">interface</span><span class=\"p\">{},</span> <span class=\"n\">p</span> <span class=\"k\">interface</span><span class=\"p\">{})</span> <span class=\"p\">{</span>\n    <span class=\"n\">slice</span> <span class=\"o\">=</span> <span class=\"nb\">make</span><span class=\"p\">([]</span><span class=\"kt\">int</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">)</span>\n    <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">slice</span>\n    <span class=\"k\">return</span> <span class=\"n\">slice</span><span class=\"p\">,</span> <span class=\"n\">p</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>在 main 函数中，</p>\n <pre class=\"highlight go\"><code><span class=\"n\">ss</span><span class=\"p\">,</span> <span class=\"n\">pp</span> <span class=\"o\">:=</span> <span class=\"n\">testInterface</span><span class=\"p\">()</span>\n<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">ss</span><span class=\"p\">)</span>\n<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">pp</span><span class=\"p\">)</span>\n</code></pre> \n<p>打印结果，</p>\n <pre class=\"highlight go\"><code><span class=\"m\">0xc82000a910</span>\n<span class=\"m\">0xc82000a920</span>\n</code></pre> \n<p>这两个值不应该相同吗 ？或者说他们底层是什么原理导致打印的两个值不同？</p>\n\n<p>还请大神们指教！</p>",
    "hits": 989,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 53,
    "title": "golang struct 有点小疑问？",
    "created_at": "2016-10-13 09:42:39",
    "updated_at": "2016-10-13 16:36:09",
    "replied_at": "2016-10-13 16:35:20",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 441,
    "last_reply_user_login": "andot",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\ntype msgItem staruct {\n\tTest string `json:&quot;tessts&quot;`\n}\n```\n\n\n不知道 这个结构后面的 `json:&quot;tessts&quot;` 这里是什么意思？ 不知道是不是初始值 ？ \n\nPS: 这些问题都是我网罗过来的，都是其他论坛看到就顺手转过来，让大家熟悉熟悉",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">msgItem</span> <span class=\"n\">staruct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Test</span> <span class=\"kt\">string</span> <span class=\"s\">`json:&amp;quot;tessts&amp;quot;`</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>不知道 这个结构后面的 <code>json:&amp;quot;tessts&amp;quot;</code> 这里是什么意思？ 不知道是不是初始值 ？ </p>\n\n<p>PS: 这些问题都是我网罗过来的，都是其他论坛看到就顺手转过来，让大家熟悉熟悉</p>",
    "hits": 576,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 54,
    "title": "golang 如何动态创建struct",
    "created_at": "2016-10-13 09:46:52",
    "updated_at": "2017-08-25 10:35:32",
    "replied_at": "2017-08-25 10:35:32",
    "replies_count": 9,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 473,
    "last_reply_user_login": "Lampo",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题： 如果我有一个struct  \n\n```go\ntype test struct{\n    Name string\n    Sex int\n}\n\nfunc main(){\n    str := &quot;tset&quot; // 这里的test 可以是我在form 表单里面传递过来的一个数据\n    obj := new(str) // 请问一下，有没有什么办法可以实现我这样的？？？\n}\n```",
    "body_html": "<p>如题： 如果我有一个 struct  </p>\n <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">test</span> <span class=\"k\">struct</span><span class=\"p\">{</span>\n    <span class=\"n\">Name</span> <span class=\"kt\">string</span>\n    <span class=\"n\">Sex</span> <span class=\"kt\">int</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">(){</span>\n    <span class=\"n\">str</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">tset</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"c\">// 这里的test 可以是我在form 表单里面传递过来的一个数据</span>\n    <span class=\"n\">obj</span> <span class=\"o\">:=</span> <span class=\"nb\">new</span><span class=\"p\">(</span><span class=\"n\">str</span><span class=\"p\">)</span> <span class=\"c\">// 请问一下，有没有什么办法可以实现我这样的？？？</span>\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 2217,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 55,
    "title": "Visual Studio - Now with Go support，你会用 Visual Studio来写go吗？",
    "created_at": "2016-10-13 10:31:01",
    "updated_at": "2016-10-13 13:34:42",
    "replied_at": "2016-10-13 13:34:42",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 74,
    "user": "{\"id\": 74, \"name\": \"xieyanke\", \"login\": \"xieyanke\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 501,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 56,
    "title": "关于beego orm 建表问题",
    "created_at": "2016-10-13 11:27:41",
    "updated_at": "2016-10-13 13:33:30",
    "replied_at": "2016-10-13 13:33:30",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 77,
    "user": "{\"id\": 77, \"name\": \"lisea\", \"login\": \"lisea\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "## 关于beego orm 建表问题\n### 请问一下, 有这样两张表, 分别是用户user表和群组表\n### 其中群主表有字段owner(群主)和member(组员)要关联user表\n### 请问用beego orm 如何建立关系表\n",
    "body_html": "<h2 id=\"关于beego orm 建表问题\">关于 beego orm 建表问题</h2><h3 id=\"请问一下, 有这样两张表, 分别是用户user表和群组表\">请问一下, 有这样两张表, 分别是用户 user 表和群组表</h3><h3 id=\"其中群主表有字段owner(群主)和member(组员)要关联user表\">其中群主表有字段 owner(群主) 和 member(组员) 要关联 user 表</h3><h3 id=\"请问用beego orm 如何建立关系表\">请问用 beego orm 如何建立关系表</h3>",
    "hits": 545,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 57,
    "title": "请问如何知道某个git tag是基于哪个分支做的？",
    "created_at": "2016-10-13 12:37:53",
    "updated_at": "2016-10-13 13:22:23",
    "replied_at": "2016-10-13 13:22:23",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2,
    "user": "{\"id\": 2, \"name\": \"xiemengjun\", \"login\": \"xiemengjun\", \"avatar\": \"https://static.gocn.vip/user/avatar/2/9fa872.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 437,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 58,
    "title": "beego orm 自动建表，默认是字符集怎么设置为 utf-8?",
    "created_at": "2016-10-13 13:20:50",
    "updated_at": "2016-10-13 13:30:15",
    "replied_at": "2016-10-13 13:30:15",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 261,
    "user": "{\"id\": 261, \"name\": \"hacpai\", \"login\": \"hacpai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 447,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 59,
    "title": "如何在程序运行时动态修改它的参数(状态)？",
    "created_at": "2016-10-13 14:47:03",
    "updated_at": "2017-05-08 16:19:34",
    "replied_at": "2017-05-08 16:18:43",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1494,
    "last_reply_user_login": "stirlingx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 291,
    "user": "{\"id\": 291, \"name\": \"opsnull\", \"login\": \"opsnull\", \"avatar\": \"https://gocn.vip/system/letter_avatars/o.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题，有一个后台运行的Daemon程序，想动态调整它的参数如日志级别、限速大小等，大家都是怎么做的？",
    "body_html": "<p>如题，有一个后台运行的 Daemon 程序，想动态调整它的参数如日志级别、限速大小等，大家都是怎么做的？</p>",
    "hits": 596,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 60,
    "title": "beego commentsRouter生成问题",
    "created_at": "2016-10-13 14:57:59",
    "updated_at": "2016-10-13 17:20:31",
    "replied_at": "2016-10-13 17:20:31",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 458,
    "user": "{\"id\": 458, \"name\": \"luischan\", \"login\": \"luischan\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "beego框架中，我们修改routers/router.go文件后会自动生成一个commentsRouter_{包名_项目名}_controllers.go文件。\n但是最近我修改router.go后，自动重启后日志报 [ERRO] Fail to open file[open D:/../router.go: The system cannot find the file specified.]\n打开看生成的文件也没有体现到修改。根据提示说是是找不到文件，但是复制路径在地址栏打开确实可以打开文件。考虑是不是文件被其他程序占用了，但是也没有找到。不知大家是否遇过？",
    "body_html": "<p>beego 框架中，我们修改 routers/router.go 文件后会自动生成一个 commentsRouter_{包名_项目名}_controllers.go 文件。\n但是最近我修改 router.go 后，自动重启后日志报 [ERRO] Fail to open file[open D:/../router.go: The system cannot find the file specified.]\n打开看生成的文件也没有体现到修改。根据提示说是是找不到文件，但是复制路径在地址栏打开确实可以打开文件。考虑是不是文件被其他程序占用了，但是也没有找到。不知大家是否遇过？</p>",
    "hits": 1016,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 61,
    "title": "myLG, 命令行网络诊断工具",
    "created_at": "2016-10-13 15:23:49",
    "updated_at": "2016-10-14 09:21:23",
    "replied_at": "2016-10-14 09:21:23",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 162,
    "last_reply_user_login": "ityike",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "\nmyLG是一个开源的网络工具集，它包含了很多不同类型的网络诊断工具\n\n## 特征\n\n- Popular looking glasses (ping/trace/bgp): Telia, Level3\n- More than 200 countries DNS Lookup information\n- Local ping and real-time trace route\n- Packet analyzer - TCP/IP and other packets\n- Quick NMS (network management system)\n- Local HTTP/HTTPS ping (GET, POST, HEAD)\n- RIPE information (ASN, IP/CIDR)\n- PeeringDB information\n- Port scanning\n- Network LAN Discovery\n- Web dashboard\n- Configurable options\n- Direct access to commands from shell\n- Support vi and emacs mode, almost all basic features\n- CLI auto complete and history features\n\n\n![](https://camo.githubusercontent.com/639c749855273eb69abc7f72798898272528d803/687474703a2f2f6d796c672e696f2f696d672f7061636b65745f616e616c797a65722e706e67)\n\n![](https://camo.githubusercontent.com/442ee102011c9dc8552ed77e1019c07ce0583df7/687474703a2f2f6d796c672e696f2f696d672f6d796c675f7472616365726f7574655f7265616c74696d655f30312e706e67)\n\n\nhttps://github.com/mehrdadrad/mylg\n\n## 使用指南\n\n```shell\n=================================================   \n                          _    ___ \n                _ __ _  _| |  / __|\n               | '  \\ || | |_| (_ |\n               |_|_|_\\_, |____\\___|\n                      |__/          \n\n                 My Looking Glass\n           Free Network Diagnostic Tool\n             www.facebook.com/mylg.io\n                  http://mylg.io\n================== myLG v0.2.5 ==================\n\nlocal&gt; hping https://www.google.com -trace -c 4\nHPING www.google.com (216.58.194.196), Method: HEAD, DNSLookup: 17.2923 ms\nHTTP Response seq=0, proto=HTTP/1.1, status=200, time=183.097 ms, connection=34.789 ms, first byte read=148.167 ms\nHTTP Response seq=1, proto=HTTP/1.1, status=200, time=164.960 ms, connection=27.764 ms, first byte read=137.096 ms\nHTTP Response seq=2, proto=HTTP/1.1, status=200, time=153.559 ms, connection=27.881 ms, first byte read=125.526 ms\nHTTP Response seq=3, proto=HTTP/1.1, status=200, time=164.309 ms, connection=28.904 ms, first byte read=135.296 ms\n\n--- www.google.com HTTP ping statistics --- \n4 requests transmitted, 4 replies received, 0% requests failed\nHTTP Round-trip min/avg/max = 153.56/164.05/183.10 ms\nHTTP Code [200] responses : [████████████████████] 100.00% \n\nlocal&gt; whois 577\nBACOM - Bell Canada, CA\n+--------------------+-----------+\n|      LOCATION      | COVERED % |\n+--------------------+-----------+\n| Canada - ON        |   61.3703 |\n| Canada             |   36.2616 |\n| Canada - QC        |    1.3461 |\n| United States - MA |    0.7160 |\n| Canada - BC        |    0.1766 |\n| Canada - AB        |    0.0811 |\n| United States      |    0.0195 |\n| United States - NJ |    0.0143 |\n| Belgium            |    0.0048 |\n| United States - NC |    0.0048 |\n| United States - TX |    0.0048 |\n| Canada - NB        |    0.0000 |\n| Canada - NS        |    0.0000 |\n+--------------------+-----------+\n\nlocal&gt; scan www.google.com -p 1-500\n+----------+------+--------+-------------+\n| PROTOCOL | PORT | STATUS | DESCRIPTION |\n+----------+------+--------+-------------+\n| TCP      |   80 | Open   |             |\n| TCP      |  443 | Open   |             |\n+----------+------+--------+-------------+\nScan done: 2 opened port(s) found in 5.605 seconds\n\nlg/telia/los angeles&gt; bgp 8.8.8.0/24\nTelia Carrier Looking Glass - show route protocol bgp 8.8.8.0/24 table inet.0\n\nRouter: Los Angeles\n\nCommand: show route protocol bgp 8.8.8.0/24 table inet.0\n\ninet.0: 661498 destinations, 5564401 routes (657234 active, 509 holddown, 194799 hidden)\n+ = Active Route, - = Last Active, * = Both\n\n8.8.8.0/24         *[BGP/170] 33w0d 01:36:06, MED 0, localpref 200\n                      AS path: 15169 I, validation-state: unverified\n                    &gt; to 62.115.36.170 via ae4.0\n                    [BGP/170] 8w3d 11:19:40, MED 0, localpref 200, from 80.91.255.95\n                      AS path: 15169 I, validation-state: unverified\n                      to 62.115.119.84 via xe-1/1/0.0\n                      to 62.115.119.88 via xe-1/2/0.0\n                      to 62.115.119.90 via xe-11/0/3.0\n                      to 62.115.119.102 via xe-9/0/0.0\n                      to 62.115.119.92 via xe-9/0/2.0\n                    &gt; to 62.115.119.86 via xe-9/1/2.0\n                      to 62.115.119.98 via xe-9/2/2.0\n                      to 62.115.119.100 via xe-9/2/3.0\n                      to 62.115.119.94 via xe-9/3/1.0\n                      to 62.115.119.96 via xe-9/3/3.0\n\nns/united states/redwood city&gt; dig yahoo.com\nTrying to query server: 204.152.184.76 united states redwood city\n;; opcode: QUERY, status: NOERROR, id: 19850\n;; flags: qr rd ra;\nyahoo.com.  728 IN  MX  1 mta6.am0.yahoodns.net.\nyahoo.com.  728 IN  MX  1 mta5.am0.yahoodns.net.\nyahoo.com.  728 IN  MX  1 mta7.am0.yahoodns.net.\nyahoo.com.  143013  IN  NS  ns4.yahoo.com.\nyahoo.com.  143013  IN  NS  ns6.yahoo.com.\nyahoo.com.  143013  IN  NS  ns2.yahoo.com.\nyahoo.com.  143013  IN  NS  ns5.yahoo.com.\nyahoo.com.  143013  IN  NS  ns1.yahoo.com.\nyahoo.com.  143013  IN  NS  ns3.yahoo.com.\n\n;; ADDITIONAL SECTION:\nns1.yahoo.com.  561456  IN  A   68.180.131.16\nns2.yahoo.com.  27934   IN  A   68.142.255.16\nns3.yahoo.com.  532599  IN  A   203.84.221.53\nns4.yahoo.com.  532599  IN  A   98.138.11.157\nns5.yahoo.com.  532599  IN  A   119.160.247.124\nns6.yahoo.com.  143291  IN  A   121.101.144.139\nns1.yahoo.com.  51624   IN  AAAA    2001:4998:130::1001\nns2.yahoo.com.  51624   IN  AAAA    2001:4998:140::1002\nns3.yahoo.com.  51624   IN  AAAA    2406:8600:b8:fe03::1003\nns6.yahoo.com.  143291  IN  AAAA    2406:2000:108:4::1006\n;; Query time: 1204 ms\n\n;; CHAOS CLASS BIND\nversion.bind.   0   CH  TXT &quot;9.10.4-P1&quot;\nhostname.bind.  0   CH  TXT &quot;fred.isc.org&quot;\n\nlocal&gt; peering 6327\nThe data provided from www.peeringdb.com\n+-------------------+---------------+---------------+--------------------+------+\n|       NAME        |    TRAFFIC    |     TYPE      |      WEB SITE      | NOTE |\n+-------------------+---------------+---------------+--------------------+------+\n| Shaw Cablesystems | 500-1000 Gbps | Cable/DSL/ISP | http://www.shaw.ca |      |\n+-------------------+---------------+---------------+--------------------+------+\n+------------------+--------+--------+-----------------+-------------------------+\n|       NAME       | STATUS | SPEED  |    IPV4 ADDR    |        IPV6 ADDR        |\n+------------------+--------+--------+-----------------+-------------------------+\n| Equinix Ashburn  | ok     |  20000 | 206.126.236.20  | 2001:504:0:2::6327:1    |\n| Equinix Ashburn  | ok     |  20000 | 206.223.115.20  |                         |\n| Equinix Chicago  | ok     |  30000 | 206.223.119.20  | 2001:504:0:4::6327:1    |\n| Equinix San Jose | ok     |  30000 | 206.223.116.20  | 2001:504:0:1::6327:1    |\n| Equinix Seattle  | ok     |  20000 | 198.32.134.4    | 2001:504:12::4          |\n| Equinix New York | ok     |  10000 | 198.32.118.16   | 2001:504:f::10          |\n| SIX Seattle      | ok     | 100000 | 206.81.80.54    | 2001:504:16::18b7       |\n| NYIIX            | ok     |  20000 | 198.32.160.86   | 2001:504:1::a500:6327:1 |\n| TorIX            | ok     |  10000 | 206.108.34.12   |                         |\n| PIX Vancouver    | ok     |  10000 | 206.223.127.2   |                         |\n| PIX Toronto      | ok     |   1000 | 206.223.127.132 |                         |\n| Equinix Toronto  | ok     |  10000 | 198.32.181.50   | 2001:504:d:80::6327:1   |\n+------------------+--------+--------+-----------------+-------------------------+\n\nlocal&gt; disc\nNetwork LAN Discovery\n+--------------+-------------------+------+-----------+-------------------+\n|      IP      |        MAC        | HOST | INTERFACE | ORGANIZATION NAME |\n+--------------+-------------------+------+-----------+-------------------+\n| 172.16.0.0   | ff:ff:ff:ff:ff:ff | NA   | en0       | NA                |\n| 172.16.1.1   | e4:8d:8c:7a:66:26 | NA   | en0       | Routerboard.com   |\n| 172.16.1.10  | ac:bc:32:b4:33:23 | NA   | en0       | Apple, Inc.       |\n| 172.16.1.205 | 74:e5:b:97:11:28  | NA   | en0       | NA                |\n| 172.16.1.254 | 54:4a:0:33:b4:2f  | NA   | en0       | NA                |\n| 172.16.2.12  | d4:f4:6f:7b:8f:cf | NA   | en0       | Apple, Inc.       |\n| 172.16.2.13  | 5c:ad:cf:23:7:f9  | NA   | en0       | Apple, Inc.       |\n| 172.16.2.111 | d0:a6:37:72:cf:2d | NA   | en0       | Apple, Inc.       |\n| 192.168.33.0 | ff:ff:ff:ff:ff:ff | NA   | vboxnet0  | NA                |\n| 192.168.33.1 | a:0:27:0:0:0      | NA   | vboxnet0  | NA                |\n| 224.0.0.251  | 1:0:5e:0:0:fb     | NA   | en0       | NA                |\n+--------------+-------------------+------+-----------+-------------------+\n11 host(s) has been found\n\nlocal&gt; whois 8.8.8.8\n+------------+-------+--------------------------+\n|   PREFIX   |  ASN  |          HOLDER          |\n+------------+-------+--------------------------+\n| 8.8.8.0/24 | 15169 | GOOGLE - Google Inc., US |\n+------------+-------+--------------------------+\n\nlocal&gt; dump -d\n+----------+-------------------+--------+-------+--------------------------------+-----------+-----------+--------------+----------+\n|   NAME   |        MAC        | STATUS |  MTU  |          IP ADDRESSES          | MULTICAST | BROADCAST | POINTTOPOINT | LOOPBACK |\n+----------+-------------------+--------+-------+--------------------------------+-----------+-----------+--------------+----------+\n| lo0      |                   | UP     | 16384 | 127.0.0.1/8 ::1/128 fe80::1/64 | ✓         |           |              | ✓        |\n| gif0     |                   | DOWN   |  1280 |                                | ✓         |           | ✓            |          |\n| stf0     |                   | DOWN   |  1280 |                                |           |           |              |          |\n| en0      | ac:bc:32:b4:33:23 | UP     |  1500 | fe80::181b:3d55:e9a2:e3df/64   | ✓         | ✓         |              |          |\n|          |                   |        |       | 192.168.0.103/24               |           |           |              |          |\n| p2p0     | 0e:bc:32:b4:33:23 | UP     |  2304 |                                | ✓         | ✓         |              |          |\n| awdl0    | ee:3a:98:da:44:5c | UP     |  1484 | fe80::ec3a:98ff:feda:445c/64   | ✓         | ✓         |              |          |\n| en1      | 4a:00:03:9c:8d:60 | UP     |  1500 |                                |           | ✓         |              |          |\n| en2      | 4a:00:03:9c:8d:61 | UP     |  1500 |                                |           | ✓         |              |          |\n| bridge0  | 4a:00:03:9c:8d:60 | UP     |  1500 |                                | ✓         | ✓         |              |          |\n| utun0    |                   | UP     |  2000 | fe80::ec23:f621:ae74:5271/64   | ✓         |           | ✓            |          |\n| utun1    |                   | UP     |  1380 | fe80::d187:7734:49d9:9d84/64   | ✓         |           | ✓            |          |\n| vboxnet0 | 0a:00:27:00:00:00 | DOWN   |  1500 |                                | ✓         | ✓         |              |          |\n+----------+-------------------+--------+-------+--------------------------------+-----------+-----------+--------------+----------+\n\nlocal&gt; dump \n20:29:36.415 IPv4/TCP  ec2-52-73-80-145.compute-1.amazonaws.com.:443(https) &gt; 192.168.0.104:61479 [P.], win 166, len: 33\n20:29:36.416 IPv4/TCP  192.168.0.104:61479 &gt; ec2-52-73-80-145.compute-1.amazonaws.com.:443(https) [.], win 4094, len: 0\n20:29:36.417 IPv4/TCP  192.168.0.104:61479 &gt; ec2-52-73-80-145.compute-1.amazonaws.com.:443(https) [P.], win 4096, len: 37\n20:29:36.977 IPv4/UDP  192.168.0.104:62733 &gt; 192.168.0.1:53(domain) , len: 0\n20:29:37.537 IPv4/TCP  ec2-54-86-120-119.compute-1.amazonaws.com.:443(https) &gt; 192.168.0.104:61302 [.], win 124, len: 0\n20:29:38.125 IPv4/TCP  192.168.0.104:61304 &gt; ec2-52-23-213-161.compute-1.amazonaws.com.:443(https) [P.], win 4096, len: 85\n20:29:38.126 IPv4/TCP  ec2-52-23-213-161.compute-1.amazonaws.com.:443(https) &gt; 192.168.0.104:61304 [.], win 1048, len: 0\n20:29:38.760 IPv4/TCP  ec2-54-165-12-100.compute-1.amazonaws.com.:443(https) &gt; 192.168.0.104:61296 [.], win 2085, len: 0\n20:29:39.263 IPv4/ICMP 192.168.0.104 &gt; ir1.fp.vip.ne1.yahoo.com.: EchoRequest id 20859, seq 27196, len: 56\n20:29:39.265 IPv4/UDP  192.168.0.1:53(domain) &gt; 192.168.0.104:62733 , len: 0\n\nlocal&gt; dump tcp and port 443 -c 10\n23:26:56.026 IPv4/TCP  192.168.0.104:64686 &gt; 192.0.80.242:443(https) [F.], win 8192, len: 0\n23:26:56.045 IPv4/TCP  192.168.0.104:64695 &gt; i2.wp.com.:443(https) [F.], win 8192, len: 0\n23:26:56.048 IPv4/TCP  i2.wp.com.:443(https) &gt; 192.168.0.104:64695 [F.], win 62, len: 0\n23:26:56.081 IPv4/TCP  192.168.0.104:63692 &gt; ec2-54-88-144-213.compute-1.amazonaws.com.:443(https) [P.], win 4096, len: 37\n23:26:56.082 IPv4/TCP  192.168.0.104:64695 &gt; i2.wp.com.:443(https) [.], win 8192, len: 0\n23:26:56.083 IPv4/TCP  192.0.80.242:443(https) &gt; 192.168.0.104:64686 [.], win 64, len: 0\n23:26:56.150 IPv4/TCP  ec2-54-88-144-213.compute-1.amazonaws.com.:443(https) &gt; 192.168.0.104:63692 [.], win 166, len: 0\n23:26:56.259 IPv4/TCP  ec2-54-172-56-148.compute-1.amazonaws.com.:443(https) &gt; 192.168.0.104:63623 [P.], win 1316, len: 85\n23:26:56.260 IPv4/TCP  192.168.0.104:63623 &gt; ec2-54-172-56-148.compute-1.amazonaws.com.:443(https) [.], win 4093, len: 0\n23:26:56.820 IPv4/TCP  192.168.0.104:64691 &gt; 192.30.253.116:443(https) [.], win 4096, len: 0\n\nlocal&gt; dump -s http -x\n22:10:15.770 IPv4/TCP  151.101.44.143:443(https) &gt; 10.0.9.9:50771 [P.], win 59, len: 156\n00000000  16 03 03 00 64 02 00 00  60 03 03 a2 32 19 4b 78  |....d...`...2.Kx|\n00000010  77 ed 40 75 f6 4c 55 74  43 1d b7 6c f2 59 f8 d8  |w.@u.LUtC..l.Y..|\n00000020  09 8a 3e 03 62 56 38 45  d2 bc 02 20 bd 52 8a 42  |..&gt;.bV8E... .R.B|\n00000030  5b 01 33 7d 2b 0b 41 da  eb 38 87 79 f1 37 62 5c  |[.3}+.A..8.y.7b\\|\n00000040  f3 ed 5a 7c 07 6c e9 28  9b fe fa 76 c0 2f 00 00  |..Z|.l.(...v./..|\n00000050  18 ff 01 00 01 00 00 05  00 00 00 10 00 0b 00 09  |................|\n00000060  08 68 74 74 70 2f 31 2e  31 14 03 03 00 01 01 16  |.http/1.1.......|\n00000070  03 03 00 28 fc 20 2d 6f  1a 94 78 53 55 0f 8c 05  |...(. -o..xSU...|\n00000080  3e ae 12 34 79 af d2 a9  bd 22 e5 3f b1 2b f5 36  |&gt;..4y....&quot;.?.+.6|\n00000090  ba 51 31 37 f5 0b e6 d2  40 fb 88 a5              |.Q17....@...    |\n\nlocal&gt; dump !udp -w /home/user1/mypcap -c 100000\n\nlocal&gt; ping google.com -6\nPING google.com (2607:f8b0:400b:80a::200e): 56 data bytes\n64 bytes from 2607:f8b0:400b:80a::200e icmp_seq=0 time=23.193988 ms\n64 bytes from 2607:f8b0:400b:80a::200e icmp_seq=1 time=21.265492 ms\n64 bytes from 2607:f8b0:400b:80a::200e icmp_seq=2 time=24.521306 ms\n64 bytes from 2607:f8b0:400b:80a::200e icmp_seq=3 time=25.313072 ms\n\nlocal&gt; trace google.com\ntrace route to google.com (172.217.4.142), 30 hops max\n1  192.168.0.1 4.705 ms 1.236 ms 0.941 ms \n2  142.254.236.25 [ASN 20001/ROADRUNNER-WEST] 13.941 ms 13.504 ms 12.303 ms \n3  agg59.snmncaby01h.socal.rr.com. (76.167.31.241) [ASN 20001/ROADRUNNER-WEST] 14.834 ms 11.625 ms 13.050 ms \n4  agg20.lamrcadq01r.socal.rr.com. (72.129.10.128) [ASN 20001/ROADRUNNER-WEST] 17.617 ms 18.064 ms 15.612 ms \n5  agg28.lsancarc01r.socal.rr.com. (72.129.9.0) [ASN 20001/ROADRUNNER-WEST] 16.291 ms 24.079 ms 20.456 ms \n6  bu-ether26.lsancarc0yw-bcr00.tbone.rr.com. (66.109.3.230) [ASN 7843/TWCABLE-BACKBONE] 18.339 ms 23.278 ms 23.434 ms \n7  216.0.6.25 [ASN 2828/XO-AS15] 19.842 ms 21.025 ms 35.105 ms \n8  216.0.6.42 [ASN 2828/XO-AS15] 16.666 ms 18.252 ms 18.872 ms \n9  209.85.245.199 [ASN 15169/GOOGLE] 14.358 ms 17.478 ms \n   209.85.246.125 [ASN 15169/GOOGLE] 18.593 ms \n10 72.14.239.121 [ASN 15169/GOOGLE] 21.635 ms \n   72.14.238.213 [ASN 15169/GOOGLE] 16.133 ms \n   72.14.239.121 [ASN 15169/GOOGLE] 21.541 ms \n11 lax17s14-in-f14.1e100.net. (172.217.4.142) [ASN 15169/GOOGLE] 18.127 ms 17.151 ms 18.892 ms \n\nlocal&gt; show config \nset ping     timeout    2s\nset ping     interval   1s\nset ping     count      4\nset hping    timeout    2s\nset hping    method     HEAD\nset hping    data       mylg\nset hping    count      5\nset web      port       8080\nset web      address    127.0.0.1\nset scan     port       1-500\n\nlocal&gt; set hping count 10\n\nsh-3.2# mylg peering 577\nThe data provided from www.peeringdb.com\n+----------------------+---------+------+--------------------+------+\n|         NAME         | TRAFFIC | TYPE |      WEB SITE      | NOTE |\n+----------------------+---------+------+--------------------+------+\n| Bell Canada Backbone |         | NSP  | http://www.bell.ca |      |\n+----------------------+---------+------+--------------------+------+\n+-------------------+--------+-------+-----------------+------------------------+\n|       NAME        | STATUS | SPEED |    IPV4 ADDR    |       IPV6 ADDR        |\n+-------------------+--------+-------+-----------------+------------------------+\n| Equinix Ashburn   | ok     | 20000 | 206.126.236.203 | 2001:504:0:2::577:1    |\n| Equinix Chicago   | ok     | 20000 | 206.223.119.66  | 2001:504:0:4::577:1    |\n| Equinix Palo Alto | ok     | 10000 | 198.32.176.94   | 2001:504:d::5e         |\n| Equinix New York  | ok     | 10000 | 198.32.118.113  | 2001:504:f::577:1      |\n| SIX Seattle       | ok     | 10000 | 206.81.80.217   | 2001:504:16::241       |\n| NYIIX             | ok     | 10000 | 198.32.160.36   | 2001:504:1::a500:577:1 |\n+-------------------+--------+-------+-----------------+------------------------+\n\nlocal&gt; nms\nnms&gt; connect core1-sjc\nConnected: Juniper Networks, Inc. qfx10008 Ethernet Switch, kernel JUNOS 15.1X53 ...\nnms/core1-sjc&gt; show interface xe-.*\n15 interfaces has been found\n+--------------+---------+---------------------------------+------------+-------------+------------+-------------+------------+-------------+----------+-----------+\n|  INTERFACE   | STATUS  |           DESCRIPTION           | TRAFFIC IN | TRAFFIC OUT | PACKETS IN | PACKETS OUT | DISCARD IN | DISCARD OUT | ERROR IN | ERROR OUT |\n+--------------+---------+---------------------------------+------------+-------------+------------+-------------+------------+-------------+----------+-----------+\n| xe-7/0/0:1   | Up      | RSW011-01-SJC-002               | 192.58 K   | 75.72 K     | 64.60      | 56.60       | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-7/0/0:2   | Down    |                                 | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-7/0/0:3   | Down    |                                 | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-7/0/0:0   | Up      | RSW012-01-SJC-001               | 61.40 K    | 10.04 K     | 8.60       | 5.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/0:0   | Down    | CORE1-SAN-XE-2/2/0-AGGIPER40GLR | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/0:1   | Down    |                                 | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/0:2   | Down    |                                 | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/0:3   | Down    |                                 | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/1:0   | Up      | CORE1-SAN-XE-10/3/1-10GTEK      | 11.79 M    | 1.39 M      | 1.82 K     | 1.02 K      | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/1:1   | Down    |                                 | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/1:2   | Down    |                                 | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/1:3   | Down    |                                 | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/2:0   | Up      | CORE2-SJC-XE-1/2/0-AGG59        | 5.25 K     | 409.60      | 0.20       | 0.01        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/2:1   | Up      | CORE3-SJC-XE-1/3/0-AGG31        | 5.44 K     | 0.00        | 0.31       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/3:0   | Down    | CORE3-SJC-XE-1/0/0-40GTEK       | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n+--------------+---------+---------------------------------+------------+-------------+------------+-------------+------------+-------------+----------+-----------+\n* units per seconds\n```",
    "body_html": "<p>myLG 是一个开源的网络工具集，它包含了很多不同类型的网络诊断工具</p>\n<h2 id=\"特征\">特征</h2>\n<ul>\n<li>Popular looking glasses (ping/trace/bgp): Telia, Level3</li>\n<li>More than 200 countries DNS Lookup information</li>\n<li>Local ping and real-time trace route</li>\n<li>Packet analyzer - TCP/IP and other packets</li>\n<li>Quick NMS (network management system)</li>\n<li>Local HTTP/HTTPS ping (GET, POST, HEAD)</li>\n<li>RIPE information (ASN, IP/CIDR)</li>\n<li>PeeringDB information</li>\n<li>Port scanning</li>\n<li>Network LAN Discovery</li>\n<li>Web dashboard</li>\n<li>Configurable options</li>\n<li>Direct access to commands from shell</li>\n<li>Support vi and emacs mode, almost all basic features</li>\n<li>CLI auto complete and history features</li>\n</ul>\n\n<p><img src=\"https://camo.githubusercontent.com/639c749855273eb69abc7f72798898272528d803/687474703a2f2f6d796c672e696f2f696d672f7061636b65745f616e616c797a65722e706e67\" title=\"\" alt=\"\"></p>\n\n<p><img src=\"https://camo.githubusercontent.com/442ee102011c9dc8552ed77e1019c07ce0583df7/687474703a2f2f6d796c672e696f2f696d672f6d796c675f7472616365726f7574655f7265616c74696d655f30312e706e67\" title=\"\" alt=\"\"></p>\n\n<p><a href=\"https://github.com/mehrdadrad/mylg\" rel=\"nofollow\" target=\"_blank\">https://github.com/mehrdadrad/mylg</a></p>\n<h2 id=\"使用指南\">使用指南</h2> <pre class=\"highlight shell\"><code><span class=\"o\">=================================================</span>   \n                          _    ___ \n                _ __ _  _| |  / __|\n               | <span class=\"s1\">'  \\ || | |_| (_ |\n               |_|_|_\\_, |____\\___|\n                      |__/          \n\n                 My Looking Glass\n           Free Network Diagnostic Tool\n             www.facebook.com/mylg.io\n                  http://mylg.io\n================== myLG v0.2.5 ==================\n\nlocal&amp;gt; hping https://www.google.com -trace -c 4\nHPING www.google.com (216.58.194.196), Method: HEAD, DNSLookup: 17.2923 ms\nHTTP Response seq=0, proto=HTTP/1.1, status=200, time=183.097 ms, connection=34.789 ms, first byte read=148.167 ms\nHTTP Response seq=1, proto=HTTP/1.1, status=200, time=164.960 ms, connection=27.764 ms, first byte read=137.096 ms\nHTTP Response seq=2, proto=HTTP/1.1, status=200, time=153.559 ms, connection=27.881 ms, first byte read=125.526 ms\nHTTP Response seq=3, proto=HTTP/1.1, status=200, time=164.309 ms, connection=28.904 ms, first byte read=135.296 ms\n\n--- www.google.com HTTP ping statistics --- \n4 requests transmitted, 4 replies received, 0% requests failed\nHTTP Round-trip min/avg/max = 153.56/164.05/183.10 ms\nHTTP Code [200] responses : [████████████████████] 100.00% \n\nlocal&amp;gt; whois 577\nBACOM - Bell Canada, CA\n+--------------------+-----------+\n|      LOCATION      | COVERED % |\n+--------------------+-----------+\n| Canada - ON        |   61.3703 |\n| Canada             |   36.2616 |\n| Canada - QC        |    1.3461 |\n| United States - MA |    0.7160 |\n| Canada - BC        |    0.1766 |\n| Canada - AB        |    0.0811 |\n| United States      |    0.0195 |\n| United States - NJ |    0.0143 |\n| Belgium            |    0.0048 |\n| United States - NC |    0.0048 |\n| United States - TX |    0.0048 |\n| Canada - NB        |    0.0000 |\n| Canada - NS        |    0.0000 |\n+--------------------+-----------+\n\nlocal&amp;gt; scan www.google.com -p 1-500\n+----------+------+--------+-------------+\n| PROTOCOL | PORT | STATUS | DESCRIPTION |\n+----------+------+--------+-------------+\n| TCP      |   80 | Open   |             |\n| TCP      |  443 | Open   |             |\n+----------+------+--------+-------------+\nScan done: 2 opened port(s) found in 5.605 seconds\n\nlg/telia/los angeles&amp;gt; bgp 8.8.8.0/24\nTelia Carrier Looking Glass - show route protocol bgp 8.8.8.0/24 table inet.0\n\nRouter: Los Angeles\n\nCommand: show route protocol bgp 8.8.8.0/24 table inet.0\n\ninet.0: 661498 destinations, 5564401 routes (657234 active, 509 holddown, 194799 hidden)\n+ = Active Route, - = Last Active, * = Both\n\n8.8.8.0/24         *[BGP/170] 33w0d 01:36:06, MED 0, localpref 200\n                      AS path: 15169 I, validation-state: unverified\n                    &amp;gt; to 62.115.36.170 via ae4.0\n                    [BGP/170] 8w3d 11:19:40, MED 0, localpref 200, from 80.91.255.95\n                      AS path: 15169 I, validation-state: unverified\n                      to 62.115.119.84 via xe-1/1/0.0\n                      to 62.115.119.88 via xe-1/2/0.0\n                      to 62.115.119.90 via xe-11/0/3.0\n                      to 62.115.119.102 via xe-9/0/0.0\n                      to 62.115.119.92 via xe-9/0/2.0\n                    &amp;gt; to 62.115.119.86 via xe-9/1/2.0\n                      to 62.115.119.98 via xe-9/2/2.0\n                      to 62.115.119.100 via xe-9/2/3.0\n                      to 62.115.119.94 via xe-9/3/1.0\n                      to 62.115.119.96 via xe-9/3/3.0\n\nns/united states/redwood city&amp;gt; dig yahoo.com\nTrying to query server: 204.152.184.76 united states redwood city\n;; opcode: QUERY, status: NOERROR, id: 19850\n;; flags: qr rd ra;\nyahoo.com.  728 IN  MX  1 mta6.am0.yahoodns.net.\nyahoo.com.  728 IN  MX  1 mta5.am0.yahoodns.net.\nyahoo.com.  728 IN  MX  1 mta7.am0.yahoodns.net.\nyahoo.com.  143013  IN  NS  ns4.yahoo.com.\nyahoo.com.  143013  IN  NS  ns6.yahoo.com.\nyahoo.com.  143013  IN  NS  ns2.yahoo.com.\nyahoo.com.  143013  IN  NS  ns5.yahoo.com.\nyahoo.com.  143013  IN  NS  ns1.yahoo.com.\nyahoo.com.  143013  IN  NS  ns3.yahoo.com.\n\n;; ADDITIONAL SECTION:\nns1.yahoo.com.  561456  IN  A   68.180.131.16\nns2.yahoo.com.  27934   IN  A   68.142.255.16\nns3.yahoo.com.  532599  IN  A   203.84.221.53\nns4.yahoo.com.  532599  IN  A   98.138.11.157\nns5.yahoo.com.  532599  IN  A   119.160.247.124\nns6.yahoo.com.  143291  IN  A   121.101.144.139\nns1.yahoo.com.  51624   IN  AAAA    2001:4998:130::1001\nns2.yahoo.com.  51624   IN  AAAA    2001:4998:140::1002\nns3.yahoo.com.  51624   IN  AAAA    2406:8600:b8:fe03::1003\nns6.yahoo.com.  143291  IN  AAAA    2406:2000:108:4::1006\n;; Query time: 1204 ms\n\n;; CHAOS CLASS BIND\nversion.bind.   0   CH  TXT &amp;quot;9.10.4-P1&amp;quot;\nhostname.bind.  0   CH  TXT &amp;quot;fred.isc.org&amp;quot;\n\nlocal&amp;gt; peering 6327\nThe data provided from www.peeringdb.com\n+-------------------+---------------+---------------+--------------------+------+\n|       NAME        |    TRAFFIC    |     TYPE      |      WEB SITE      | NOTE |\n+-------------------+---------------+---------------+--------------------+------+\n| Shaw Cablesystems | 500-1000 Gbps | Cable/DSL/ISP | http://www.shaw.ca |      |\n+-------------------+---------------+---------------+--------------------+------+\n+------------------+--------+--------+-----------------+-------------------------+\n|       NAME       | STATUS | SPEED  |    IPV4 ADDR    |        IPV6 ADDR        |\n+------------------+--------+--------+-----------------+-------------------------+\n| Equinix Ashburn  | ok     |  20000 | 206.126.236.20  | 2001:504:0:2::6327:1    |\n| Equinix Ashburn  | ok     |  20000 | 206.223.115.20  |                         |\n| Equinix Chicago  | ok     |  30000 | 206.223.119.20  | 2001:504:0:4::6327:1    |\n| Equinix San Jose | ok     |  30000 | 206.223.116.20  | 2001:504:0:1::6327:1    |\n| Equinix Seattle  | ok     |  20000 | 198.32.134.4    | 2001:504:12::4          |\n| Equinix New York | ok     |  10000 | 198.32.118.16   | 2001:504:f::10          |\n| SIX Seattle      | ok     | 100000 | 206.81.80.54    | 2001:504:16::18b7       |\n| NYIIX            | ok     |  20000 | 198.32.160.86   | 2001:504:1::a500:6327:1 |\n| TorIX            | ok     |  10000 | 206.108.34.12   |                         |\n| PIX Vancouver    | ok     |  10000 | 206.223.127.2   |                         |\n| PIX Toronto      | ok     |   1000 | 206.223.127.132 |                         |\n| Equinix Toronto  | ok     |  10000 | 198.32.181.50   | 2001:504:d:80::6327:1   |\n+------------------+--------+--------+-----------------+-------------------------+\n\nlocal&amp;gt; disc\nNetwork LAN Discovery\n+--------------+-------------------+------+-----------+-------------------+\n|      IP      |        MAC        | HOST | INTERFACE | ORGANIZATION NAME |\n+--------------+-------------------+------+-----------+-------------------+\n| 172.16.0.0   | ff:ff:ff:ff:ff:ff | NA   | en0       | NA                |\n| 172.16.1.1   | e4:8d:8c:7a:66:26 | NA   | en0       | Routerboard.com   |\n| 172.16.1.10  | ac:bc:32:b4:33:23 | NA   | en0       | Apple, Inc.       |\n| 172.16.1.205 | 74:e5:b:97:11:28  | NA   | en0       | NA                |\n| 172.16.1.254 | 54:4a:0:33:b4:2f  | NA   | en0       | NA                |\n| 172.16.2.12  | d4:f4:6f:7b:8f:cf | NA   | en0       | Apple, Inc.       |\n| 172.16.2.13  | 5c:ad:cf:23:7:f9  | NA   | en0       | Apple, Inc.       |\n| 172.16.2.111 | d0:a6:37:72:cf:2d | NA   | en0       | Apple, Inc.       |\n| 192.168.33.0 | ff:ff:ff:ff:ff:ff | NA   | vboxnet0  | NA                |\n| 192.168.33.1 | a:0:27:0:0:0      | NA   | vboxnet0  | NA                |\n| 224.0.0.251  | 1:0:5e:0:0:fb     | NA   | en0       | NA                |\n+--------------+-------------------+------+-----------+-------------------+\n11 host(s) has been found\n\nlocal&amp;gt; whois 8.8.8.8\n+------------+-------+--------------------------+\n|   PREFIX   |  ASN  |          HOLDER          |\n+------------+-------+--------------------------+\n| 8.8.8.0/24 | 15169 | GOOGLE - Google Inc., US |\n+------------+-------+--------------------------+\n\nlocal&amp;gt; dump -d\n+----------+-------------------+--------+-------+--------------------------------+-----------+-----------+--------------+----------+\n|   NAME   |        MAC        | STATUS |  MTU  |          IP ADDRESSES          | MULTICAST | BROADCAST | POINTTOPOINT | LOOPBACK |\n+----------+-------------------+--------+-------+--------------------------------+-----------+-----------+--------------+----------+\n| lo0      |                   | UP     | 16384 | 127.0.0.1/8 ::1/128 fe80::1/64 | ✓         |           |              | ✓        |\n| gif0     |                   | DOWN   |  1280 |                                | ✓         |           | ✓            |          |\n| stf0     |                   | DOWN   |  1280 |                                |           |           |              |          |\n| en0      | ac:bc:32:b4:33:23 | UP     |  1500 | fe80::181b:3d55:e9a2:e3df/64   | ✓         | ✓         |              |          |\n|          |                   |        |       | 192.168.0.103/24               |           |           |              |          |\n| p2p0     | 0e:bc:32:b4:33:23 | UP     |  2304 |                                | ✓         | ✓         |              |          |\n| awdl0    | ee:3a:98:da:44:5c | UP     |  1484 | fe80::ec3a:98ff:feda:445c/64   | ✓         | ✓         |              |          |\n| en1      | 4a:00:03:9c:8d:60 | UP     |  1500 |                                |           | ✓         |              |          |\n| en2      | 4a:00:03:9c:8d:61 | UP     |  1500 |                                |           | ✓         |              |          |\n| bridge0  | 4a:00:03:9c:8d:60 | UP     |  1500 |                                | ✓         | ✓         |              |          |\n| utun0    |                   | UP     |  2000 | fe80::ec23:f621:ae74:5271/64   | ✓         |           | ✓            |          |\n| utun1    |                   | UP     |  1380 | fe80::d187:7734:49d9:9d84/64   | ✓         |           | ✓            |          |\n| vboxnet0 | 0a:00:27:00:00:00 | DOWN   |  1500 |                                | ✓         | ✓         |              |          |\n+----------+-------------------+--------+-------+--------------------------------+-----------+-----------+--------------+----------+\n\nlocal&amp;gt; dump \n20:29:36.415 IPv4/TCP  ec2-52-73-80-145.compute-1.amazonaws.com.:443(https) &amp;gt; 192.168.0.104:61479 [P.], win 166, len: 33\n20:29:36.416 IPv4/TCP  192.168.0.104:61479 &amp;gt; ec2-52-73-80-145.compute-1.amazonaws.com.:443(https) [.], win 4094, len: 0\n20:29:36.417 IPv4/TCP  192.168.0.104:61479 &amp;gt; ec2-52-73-80-145.compute-1.amazonaws.com.:443(https) [P.], win 4096, len: 37\n20:29:36.977 IPv4/UDP  192.168.0.104:62733 &amp;gt; 192.168.0.1:53(domain) , len: 0\n20:29:37.537 IPv4/TCP  ec2-54-86-120-119.compute-1.amazonaws.com.:443(https) &amp;gt; 192.168.0.104:61302 [.], win 124, len: 0\n20:29:38.125 IPv4/TCP  192.168.0.104:61304 &amp;gt; ec2-52-23-213-161.compute-1.amazonaws.com.:443(https) [P.], win 4096, len: 85\n20:29:38.126 IPv4/TCP  ec2-52-23-213-161.compute-1.amazonaws.com.:443(https) &amp;gt; 192.168.0.104:61304 [.], win 1048, len: 0\n20:29:38.760 IPv4/TCP  ec2-54-165-12-100.compute-1.amazonaws.com.:443(https) &amp;gt; 192.168.0.104:61296 [.], win 2085, len: 0\n20:29:39.263 IPv4/ICMP 192.168.0.104 &amp;gt; ir1.fp.vip.ne1.yahoo.com.: EchoRequest id 20859, seq 27196, len: 56\n20:29:39.265 IPv4/UDP  192.168.0.1:53(domain) &amp;gt; 192.168.0.104:62733 , len: 0\n\nlocal&amp;gt; dump tcp and port 443 -c 10\n23:26:56.026 IPv4/TCP  192.168.0.104:64686 &amp;gt; 192.0.80.242:443(https) [F.], win 8192, len: 0\n23:26:56.045 IPv4/TCP  192.168.0.104:64695 &amp;gt; i2.wp.com.:443(https) [F.], win 8192, len: 0\n23:26:56.048 IPv4/TCP  i2.wp.com.:443(https) &amp;gt; 192.168.0.104:64695 [F.], win 62, len: 0\n23:26:56.081 IPv4/TCP  192.168.0.104:63692 &amp;gt; ec2-54-88-144-213.compute-1.amazonaws.com.:443(https) [P.], win 4096, len: 37\n23:26:56.082 IPv4/TCP  192.168.0.104:64695 &amp;gt; i2.wp.com.:443(https) [.], win 8192, len: 0\n23:26:56.083 IPv4/TCP  192.0.80.242:443(https) &amp;gt; 192.168.0.104:64686 [.], win 64, len: 0\n23:26:56.150 IPv4/TCP  ec2-54-88-144-213.compute-1.amazonaws.com.:443(https) &amp;gt; 192.168.0.104:63692 [.], win 166, len: 0\n23:26:56.259 IPv4/TCP  ec2-54-172-56-148.compute-1.amazonaws.com.:443(https) &amp;gt; 192.168.0.104:63623 [P.], win 1316, len: 85\n23:26:56.260 IPv4/TCP  192.168.0.104:63623 &amp;gt; ec2-54-172-56-148.compute-1.amazonaws.com.:443(https) [.], win 4093, len: 0\n23:26:56.820 IPv4/TCP  192.168.0.104:64691 &amp;gt; 192.30.253.116:443(https) [.], win 4096, len: 0\n\nlocal&amp;gt; dump -s http -x\n22:10:15.770 IPv4/TCP  151.101.44.143:443(https) &amp;gt; 10.0.9.9:50771 [P.], win 59, len: 156\n00000000  16 03 03 00 64 02 00 00  60 03 03 a2 32 19 4b 78  |....d...`...2.Kx|\n00000010  77 ed 40 75 f6 4c 55 74  43 1d b7 6c f2 59 f8 d8  |w.@u.LUtC..l.Y..|\n00000020  09 8a 3e 03 62 56 38 45  d2 bc 02 20 bd 52 8a 42  |..&amp;gt;.bV8E... .R.B|\n00000030  5b 01 33 7d 2b 0b 41 da  eb 38 87 79 f1 37 62 5c  |[.3}+.A..8.y.7b\\|\n00000040  f3 ed 5a 7c 07 6c e9 28  9b fe fa 76 c0 2f 00 00  |..Z|.l.(...v./..|\n00000050  18 ff 01 00 01 00 00 05  00 00 00 10 00 0b 00 09  |................|\n00000060  08 68 74 74 70 2f 31 2e  31 14 03 03 00 01 01 16  |.http/1.1.......|\n00000070  03 03 00 28 fc 20 2d 6f  1a 94 78 53 55 0f 8c 05  |...(. -o..xSU...|\n00000080  3e ae 12 34 79 af d2 a9  bd 22 e5 3f b1 2b f5 36  |&amp;gt;..4y....&amp;quot;.?.+.6|\n00000090  ba 51 31 37 f5 0b e6 d2  40 fb 88 a5              |.Q17....@...    |\n\nlocal&amp;gt; dump !udp -w /home/user1/mypcap -c 100000\n\nlocal&amp;gt; ping google.com -6\nPING google.com (2607:f8b0:400b:80a::200e): 56 data bytes\n64 bytes from 2607:f8b0:400b:80a::200e icmp_seq=0 time=23.193988 ms\n64 bytes from 2607:f8b0:400b:80a::200e icmp_seq=1 time=21.265492 ms\n64 bytes from 2607:f8b0:400b:80a::200e icmp_seq=2 time=24.521306 ms\n64 bytes from 2607:f8b0:400b:80a::200e icmp_seq=3 time=25.313072 ms\n\nlocal&amp;gt; trace google.com\ntrace route to google.com (172.217.4.142), 30 hops max\n1  192.168.0.1 4.705 ms 1.236 ms 0.941 ms \n2  142.254.236.25 [ASN 20001/ROADRUNNER-WEST] 13.941 ms 13.504 ms 12.303 ms \n3  agg59.snmncaby01h.socal.rr.com. (76.167.31.241) [ASN 20001/ROADRUNNER-WEST] 14.834 ms 11.625 ms 13.050 ms \n4  agg20.lamrcadq01r.socal.rr.com. (72.129.10.128) [ASN 20001/ROADRUNNER-WEST] 17.617 ms 18.064 ms 15.612 ms \n5  agg28.lsancarc01r.socal.rr.com. (72.129.9.0) [ASN 20001/ROADRUNNER-WEST] 16.291 ms 24.079 ms 20.456 ms \n6  bu-ether26.lsancarc0yw-bcr00.tbone.rr.com. (66.109.3.230) [ASN 7843/TWCABLE-BACKBONE] 18.339 ms 23.278 ms 23.434 ms \n7  216.0.6.25 [ASN 2828/XO-AS15] 19.842 ms 21.025 ms 35.105 ms \n8  216.0.6.42 [ASN 2828/XO-AS15] 16.666 ms 18.252 ms 18.872 ms \n9  209.85.245.199 [ASN 15169/GOOGLE] 14.358 ms 17.478 ms \n   209.85.246.125 [ASN 15169/GOOGLE] 18.593 ms \n10 72.14.239.121 [ASN 15169/GOOGLE] 21.635 ms \n   72.14.238.213 [ASN 15169/GOOGLE] 16.133 ms \n   72.14.239.121 [ASN 15169/GOOGLE] 21.541 ms \n11 lax17s14-in-f14.1e100.net. (172.217.4.142) [ASN 15169/GOOGLE] 18.127 ms 17.151 ms 18.892 ms \n\nlocal&amp;gt; show config \nset ping     timeout    2s\nset ping     interval   1s\nset ping     count      4\nset hping    timeout    2s\nset hping    method     HEAD\nset hping    data       mylg\nset hping    count      5\nset web      port       8080\nset web      address    127.0.0.1\nset scan     port       1-500\n\nlocal&amp;gt; set hping count 10\n\nsh-3.2# mylg peering 577\nThe data provided from www.peeringdb.com\n+----------------------+---------+------+--------------------+------+\n|         NAME         | TRAFFIC | TYPE |      WEB SITE      | NOTE |\n+----------------------+---------+------+--------------------+------+\n| Bell Canada Backbone |         | NSP  | http://www.bell.ca |      |\n+----------------------+---------+------+--------------------+------+\n+-------------------+--------+-------+-----------------+------------------------+\n|       NAME        | STATUS | SPEED |    IPV4 ADDR    |       IPV6 ADDR        |\n+-------------------+--------+-------+-----------------+------------------------+\n| Equinix Ashburn   | ok     | 20000 | 206.126.236.203 | 2001:504:0:2::577:1    |\n| Equinix Chicago   | ok     | 20000 | 206.223.119.66  | 2001:504:0:4::577:1    |\n| Equinix Palo Alto | ok     | 10000 | 198.32.176.94   | 2001:504:d::5e         |\n| Equinix New York  | ok     | 10000 | 198.32.118.113  | 2001:504:f::577:1      |\n| SIX Seattle       | ok     | 10000 | 206.81.80.217   | 2001:504:16::241       |\n| NYIIX             | ok     | 10000 | 198.32.160.36   | 2001:504:1::a500:577:1 |\n+-------------------+--------+-------+-----------------+------------------------+\n\nlocal&amp;gt; nms\nnms&amp;gt; connect core1-sjc\nConnected: Juniper Networks, Inc. qfx10008 Ethernet Switch, kernel JUNOS 15.1X53 ...\nnms/core1-sjc&amp;gt; show interface xe-.*\n15 interfaces has been found\n+--------------+---------+---------------------------------+------------+-------------+------------+-------------+------------+-------------+----------+-----------+\n|  INTERFACE   | STATUS  |           DESCRIPTION           | TRAFFIC IN | TRAFFIC OUT | PACKETS IN | PACKETS OUT | DISCARD IN | DISCARD OUT | ERROR IN | ERROR OUT |\n+--------------+---------+---------------------------------+------------+-------------+------------+-------------+------------+-------------+----------+-----------+\n| xe-7/0/0:1   | Up      | RSW011-01-SJC-002               | 192.58 K   | 75.72 K     | 64.60      | 56.60       | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-7/0/0:2   | Down    |                                 | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-7/0/0:3   | Down    |                                 | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-7/0/0:0   | Up      | RSW012-01-SJC-001               | 61.40 K    | 10.04 K     | 8.60       | 5.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/0:0   | Down    | CORE1-SAN-XE-2/2/0-AGGIPER40GLR | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/0:1   | Down    |                                 | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/0:2   | Down    |                                 | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/0:3   | Down    |                                 | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/1:0   | Up      | CORE1-SAN-XE-10/3/1-10GTEK      | 11.79 M    | 1.39 M      | 1.82 K     | 1.02 K      | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/1:1   | Down    |                                 | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/1:2   | Down    |                                 | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/1:3   | Down    |                                 | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/2:0   | Up      | CORE2-SJC-XE-1/2/0-AGG59        | 5.25 K     | 409.60      | 0.20       | 0.01        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/2:1   | Up      | CORE3-SJC-XE-1/3/0-AGG31        | 5.44 K     | 0.00        | 0.31       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n| xe-6/0/3:0   | Down    | CORE3-SJC-XE-1/0/0-40GTEK       | 0.00       | 0.00        | 0.00       | 0.00        | 0.00       | 0.00        | 0.00     | 0.00      |\n+--------------+---------+---------------------------------+------------+-------------+------------+-------------+------------+-------------+----------+-----------+\n* units per seconds\n</span></code></pre> ",
    "hits": 708,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 62,
    "title": "求推荐beego开发的小项目或者blog练练手",
    "created_at": "2016-10-13 16:00:22",
    "updated_at": "2016-12-02 00:20:55",
    "replied_at": "2016-12-02 00:20:55",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 88,
    "last_reply_user_login": "qi19901212",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 317,
    "user": "{\"id\": 317, \"name\": \"svolence\", \"login\": \"svolence\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "初次接触beego，对着官方文档，简单的搭建了下Welcome to Beego，求大家推荐个轻量级的开源代码练练手！",
    "body_html": "<p>初次接触 beego，对着官方文档，简单的搭建了下 Welcome to Beego，求大家推荐个轻量级的开源代码练练手！</p>",
    "hits": 559,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 63,
    "title": "slice的小问题",
    "created_at": "2016-10-13 17:25:26",
    "updated_at": "2016-10-18 11:58:23",
    "replied_at": "2016-10-18 11:56:18",
    "replies_count": 8,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 715,
    "last_reply_user_login": "changjixiong",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 471,
    "user": "{\"id\": 471, \"name\": \"willee\", \"login\": \"willee\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```\npackage main\n\nimport (\n\t&quot;fmt&quot;\n)\n\n\nfunc FuncSlice(s *[]int) {\n\tfmt.Println(&amp;s)\n}\nfunc main() {\n\ta := &amp;[]int{0, 1, 2, 3}\n\tfmt.Println(&amp;a)\n\tFuncSlice(a)\n\tfmt.Print(&amp;a)\n}\n```\n\n结果：\n```\n/usr/local/go/bin/go run /Users/Apple/gowork/src/just/mian.go\n0xc82002c020\n0xc82002c030\n0xc82002c020\nProcess finished with exit code 0\n```\n为什么传递到函数内部去的指针地址会变",
    "body_html": " <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"n\">import</span> <span class=\"p\">(</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"n\">func</span> <span class=\"n\">FuncSlice</span><span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"p\">*[]</span><span class=\"n\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">a</span> <span class=\"p\">:=</span> <span class=\"p\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;[]</span><span class=\"n\">int</span><span class=\"p\">{</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">}</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">a</span><span class=\"p\">)</span>\n    <span class=\"n\">FuncSlice</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>结果：</p>\n <pre class=\"highlight plaintext\"><code>/usr/local/go/bin/go run /Users/Apple/gowork/src/just/mian.go\n0xc82002c020\n0xc82002c030\n0xc82002c020\nProcess finished with exit code 0\n</code></pre> \n<p>为什么传递到函数内部去的指针地址会变</p>",
    "hits": 507,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 64,
    "title": "go是如何分配内存的？",
    "created_at": "2016-10-13 19:07:31",
    "updated_at": "2016-10-14 16:19:16",
    "replied_at": "2016-10-14 16:19:16",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 785,
    "last_reply_user_login": "wayslog",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 423,
    "user": "{\"id\": 423, \"name\": \"chenqinghe\", \"login\": \"chenqinghe\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\nfunc main() {\n\ta := 1\n\tb := 2\n\tc := &quot;hello world&quot;\n\td := 1\n\tfmt.Printf(&quot;var a address is %p\\n&quot;, &amp;a)//var a address is 0xc0420361d0\n\tfmt.Printf(&quot;var b address is %p\\n&quot;, &amp;b)//var b address is 0xc0420361d8\n\tfmt.Printf(&quot;var c address is %p\\n&quot;, &amp;c)//var c address is 0xc0420361e0\n\tfmt.Printf(&quot;var d address is %p\\n&quot;, &amp;d)//var d address is 0xc0420361f0\n\n}\n\n```\n变量c的大小明显超过了2B，为什么还是只占了2B的长度？golang的变量内存是如何分配的？\n",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"m\">1</span>\n    <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"m\">2</span>\n    <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">hello</span> <span class=\"n\">world</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"m\">1</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"k\">var</span> <span class=\"n\">a</span> <span class=\"n\">address</span> <span class=\"n\">is</span> <span class=\"o\">%</span><span class=\"n\">p</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">a</span><span class=\"p\">)</span><span class=\"c\">//var a address is 0xc0420361d0</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"k\">var</span> <span class=\"n\">b</span> <span class=\"n\">address</span> <span class=\"n\">is</span> <span class=\"o\">%</span><span class=\"n\">p</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">b</span><span class=\"p\">)</span><span class=\"c\">//var b address is 0xc0420361d8</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"k\">var</span> <span class=\"n\">c</span> <span class=\"n\">address</span> <span class=\"n\">is</span> <span class=\"o\">%</span><span class=\"n\">p</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">c</span><span class=\"p\">)</span><span class=\"c\">//var c address is 0xc0420361e0</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"k\">var</span> <span class=\"n\">d</span> <span class=\"n\">address</span> <span class=\"n\">is</span> <span class=\"o\">%</span><span class=\"n\">p</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">d</span><span class=\"p\">)</span><span class=\"c\">//var d address is 0xc0420361f0</span>\n\n<span class=\"p\">}</span>\n\n</code></pre> \n<p>变量 c 的大小明显超过了 2B，为什么还是只占了 2B 的长度？golang 的变量内存是如何分配的？</p>",
    "hits": 452,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 65,
    "title": "beego使用事务或者mysql的存储过程，处理复杂的支付等问题思想",
    "created_at": "2016-10-13 19:37:23",
    "updated_at": "2016-10-13 22:08:24",
    "replied_at": "2016-10-13 22:08:23",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 52,
    "user": "{\"id\": 52, \"name\": \"小蚂蚁\", \"login\": \"18368870825\", \"avatar\": \"https://gocn.vip/system/letter_avatars/1.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "beego使用事务或者mysql的存储过程，处理复杂的支付等问题思想\n\t项目业务比较复杂多变，但是使用beego的处理机制，觉得业务不好分离;想使用mysql的存储过程，业务也是比较复杂，不好处理，有没有中和点的办法或思想:alien:",
    "body_html": "<p>beego 使用事务或者 mysql 的存储过程，处理复杂的支付等问题思想\n    项目业务比较复杂多变，但是使用 beego 的处理机制，觉得业务不好分离;想使用 mysql 的存储过程，业务也是比较复杂，不好处理，有没有中和点的办法或思想<img title=\":alien:\" alt=\"?\" src=\"https://twemoji.ruby-china.com/2/svg/1f47d.svg\" class=\"twemoji\"></p>",
    "hits": 456,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 66,
    "title": "想用 golang 写个分布式的监控，大神给点建议",
    "created_at": "2016-10-13 20:38:16",
    "updated_at": "2020-03-22 14:32:37",
    "replied_at": "2020-03-22 14:32:36",
    "replies_count": 15,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 9384,
    "last_reply_user_login": "UlricQin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 407,
    "user": "{\"id\": 407, \"name\": \"lucyne\", \"login\": \"lucyne\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "\n\n现在是一台liunx作为中控机，多台liunx作为应用服务器，想试着写个liunx性能监控的程序\n有两种方法\n1.不写agent程序，每次收集监控数据，直接在中控机上发起到应用服务器去收集，收集完后返回，多台可以并发\n2.写agent程序，定时在应用服务器上将agent收集的监控数据发送到中控的server端，然后再去作展现\n\n如果应用服务器多，第1种方法可能会慢？\n\n如果是使用第2种方法，那这个agent 和server程序是使用tcp，还是http 还是socket? 那种更好，程序新手，不太懂呢，请大神给点建议。\n\n监控cpu，io，内存之类的。",
    "body_html": "<p>现在是一台 liunx 作为中控机，多台 liunx 作为应用服务器，想试着写个 liunx 性能监控的程序\n有两种方法\n1.不写 agent 程序，每次收集监控数据，直接在中控机上发起到应用服务器去收集，收集完后返回，多台可以并发\n2.写 agent 程序，定时在应用服务器上将 agent 收集的监控数据发送到中控的 server 端，然后再去作展现</p>\n\n<p>如果应用服务器多，第 1 种方法可能会慢？</p>\n\n<p>如果是使用第 2 种方法，那这个 agent 和 server 程序是使用 tcp，还是 http 还是 socket? 那种更好，程序新手，不太懂呢，请大神给点建议。</p>\n\n<p>监控 cpu，io，内存之类的。</p>",
    "hits": 1337,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 68,
    "title": "go test 如何执行某一个测试函数？",
    "created_at": "2016-10-13 22:00:02",
    "updated_at": "2016-10-14 09:53:17",
    "replied_at": "2016-10-14 09:52:58",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 563,
    "last_reply_user_login": "smallfish1",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 489,
    "user": "{\"id\": 489, \"name\": \"benbearchen\", \"login\": \"benbearchen\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "参考： http://blog.csdn.net/leonpengweicn/article/details/32334137",
    "body_html": "<p>参考： <a href=\"http://blog.csdn.net/leonpengweicn/article/details/32334137\" rel=\"nofollow\" target=\"_blank\">http://blog.csdn.net/leonpengweicn/article/details/32334137</a></p>",
    "hits": 517,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 69,
    "title": "哪里有用Go写的TCP服务呢？",
    "created_at": "2016-10-13 22:11:27",
    "updated_at": "2016-10-13 22:14:20",
    "replied_at": "2016-10-13 22:14:20",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 38,
    "user": "{\"id\": 38, \"name\": \"TianGenglan\", \"login\": \"TianGenglan\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "就是模仿QQ的样子实时监控接收的消息，然后在发出去。",
    "body_html": "<p>就是模仿 QQ 的样子实时监控接收的消息，然后在发出去。</p>",
    "hits": 367,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 70,
    "title": "go的移动端编译器有吗",
    "created_at": "2016-10-14 08:51:21",
    "updated_at": "2016-10-14 10:34:09",
    "replied_at": "2016-10-14 10:34:09",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 354,
    "last_reply_user_login": "myml",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 414,
    "user": "{\"id\": 414, \"name\": \"ilmari\", \"login\": \"ilmari\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "像c/c++，python这些语言都有手机端的ide，找go的没找到，有人知道吗",
    "body_html": "<p>像 c/c++，python 这些语言都有手机端的 ide，找 go 的没找到，有人知道吗</p>",
    "hits": 602,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 71,
    "title": "社区代码是否开源的？",
    "created_at": "2016-10-14 09:45:32",
    "updated_at": "2016-10-14 10:13:55",
    "replied_at": "2016-10-14 10:13:55",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 155,
    "last_reply_user_login": "ego008",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 563,
    "user": "{\"id\": 563, \"name\": \"small_fish__\", \"login\": \"smallfish1\", \"avatar\": \"https://static.gocn.vip/user/avatar/563/e56d0a.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "RT\n\n刚来社区，路子不熟，偶尔逛逛，发现小 bug，不知道如何提交 issue.",
    "body_html": "<p>RT</p>\n\n<p>刚来社区，路子不熟，偶尔逛逛，发现小 bug，不知道如何提交 issue.</p>",
    "hits": 559,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 72,
    "title": "glide如何获取包的所有依赖？",
    "created_at": "2016-10-14 10:15:34",
    "updated_at": "2016-10-14 13:07:10",
    "replied_at": "2016-10-14 13:07:10",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 605,
    "user": "{\"id\": 605, \"name\": \"ofttryaj\", \"login\": \"ofttryaj\", \"avatar\": \"https://gocn.vip/system/letter_avatars/o.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "比如：glide get github.com/astaxie/beego，这个操作只会单纯地拉取beego框架，但是不会去拉取github.com/go-sql-driver/mysql这个依赖包，还有其他的依赖包",
    "body_html": "<p>比如：glide get github.com/astaxie/beego，这个操作只会单纯地拉取 beego 框架，但是不会去拉取 github.com/go-sql-driver/mysql 这个依赖包，还有其他的依赖包</p>",
    "hits": 320,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 73,
    "title": "Go和Java的interface有什么不同",
    "created_at": "2016-10-14 10:31:02",
    "updated_at": "2017-05-04 10:47:30",
    "replied_at": "2017-05-04 10:47:30",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1858,
    "last_reply_user_login": "zsy619",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 247,
    "user": "{\"id\": 247, \"name\": \"leoliu\", \"login\": \"leoliu\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 478,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 74,
    "title": "都说vscode好，请教一下大家的配置方式",
    "created_at": "2016-10-14 10:40:59",
    "updated_at": "2017-07-28 10:46:32",
    "replied_at": "2017-07-28 10:46:32",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2012,
    "last_reply_user_login": "plain",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 234,
    "user": "{\"id\": 234, \"name\": \"sryan\", \"login\": \"sryan\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "首先golang的插件已安装\n\n目前相比liteide有几点不方便的地方：\n\n1.gocode的代码提示有时候很慢，比如成员函数提示可能需要3秒或者更久才会显示，并且那时候gocode的cpu占用率很高，liteide这个问题好很多，基本都是秒提示\n\n2.快速build某个dir的话，可以通过编写task来实现，并且可以通过快捷键调用，这个很方便，但是install某个dir比较不方便，要通过呼出控制台来调用install的task，貌似也没有右键菜单的自定义支持或者是内置的command支持\n\n3.在install或者build后假设有错误，通过编写task的problemMatcher的正则可以在滚动栏中标出大概哪行有错，但是无法双击错误信息快速定位到错误的文件和行数\n\n当然上述问题可能是我对vsc不熟悉导致的，大家都是怎么解决以上问题的？",
    "body_html": "<p>首先 golang 的插件已安装</p>\n\n<p>目前相比 liteide 有几点不方便的地方：</p>\n\n<p>1.gocode 的代码提示有时候很慢，比如成员函数提示可能需要 3 秒或者更久才会显示，并且那时候 gocode 的 cpu 占用率很高，liteide 这个问题好很多，基本都是秒提示</p>\n\n<p>2.快速 build 某个 dir 的话，可以通过编写 task 来实现，并且可以通过快捷键调用，这个很方便，但是 install 某个 dir 比较不方便，要通过呼出控制台来调用 install 的 task，貌似也没有右键菜单的自定义支持或者是内置的 command 支持</p>\n\n<p>3.在 install 或者 build 后假设有错误，通过编写 task 的 problemMatcher 的正则可以在滚动栏中标出大概哪行有错，但是无法双击错误信息快速定位到错误的文件和行数</p>\n\n<p>当然上述问题可能是我对 vsc 不熟悉导致的，大家都是怎么解决以上问题的？</p>",
    "hits": 661,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 75,
    "title": "exec.Command执行出错: exit status 64",
    "created_at": "2016-10-14 10:53:18",
    "updated_at": "2016-10-14 11:53:54",
    "replied_at": "2016-10-14 11:53:54",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 696,
    "last_reply_user_login": "limard",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 247,
    "user": "{\"id\": 247, \"name\": \"leoliu\", \"login\": \"leoliu\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "执行下面的代码, 报&quot;exit status 64&quot;\n```go\nresult , err := exec.Command(&quot;ping&quot;,&quot;-n 1&quot;, &quot;-w 1&quot;, &quot;223.6.6.6&quot;).Output()\n\tif err != nil {\n\t\tfmt.Println(err)\n\t}\n\tfmt.Printf(&quot;%s\\n&quot;, result)\n```",
    "body_html": "<p>执行下面的代码, 报\"exit status 64\"</p>\n <pre class=\"highlight go\"><code><span class=\"n\">result</span> <span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">exec</span><span class=\"o\">.</span><span class=\"n\">Command</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">ping</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">n</span> <span class=\"m\">1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">w</span> <span class=\"m\">1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"m\">223.6.6.6</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span><span class=\"o\">.</span><span class=\"n\">Output</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">%</span><span class=\"n\">s</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n</code></pre> ",
    "hits": 539,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 76,
    "title": "提交一个社区的bug",
    "created_at": "2016-10-14 11:01:22",
    "updated_at": "2016-10-14 11:28:57",
    "replied_at": "2016-10-14 11:28:57",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 659,
    "user": "{\"id\": 659, \"name\": \"godonggua\", \"login\": \"godonggua\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在动态列表点赞的时候发现点赞记录不能保存。。。刷新一下就没了。\n\n但是刚试了下又没问题了",
    "body_html": "<p>在动态列表点赞的时候发现点赞记录不能保存。。。刷新一下就没了。</p>\n\n<p>但是刚试了下又没问题了</p>",
    "hits": 414,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 77,
    "title": "关于交叉编译的错误: no buildable Go source files in $GOPATH/src/github.com/zeromq/goczmq",
    "created_at": "2016-10-14 11:12:52",
    "updated_at": "2016-10-14 11:31:05",
    "replied_at": "2016-10-14 11:31:05",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 96,
    "last_reply_user_login": "sheepbao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 96,
    "user": "{\"id\": 96, \"name\": \"sheepbao\", \"login\": \"sheepbao\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "H，all  \n最近在研究分布式消息队列[zeroMQ](https://github.com/zeromq),[goczmq](https://github.com/zeromq/goczmq)是用go实现zeroMQ接口，我用goczmq写了个程序:  \nreq_msg.go\n```go\npackage main\n\nimport (\n\t&quot;flag&quot;\n\t&quot;log&quot;\n\n\t&quot;github.com/zeromq/goczmq&quot;\n)\n\nvar (\n\tclient  = flag.String(&quot;s&quot;, &quot;sewise&quot;, &quot;sign of client&quot;)\n\tmachine = flag.String(&quot;ma&quot;, &quot;machine1&quot;, &quot;sign of machine&quot;)\n\tmsg     = flag.String(&quot;m&quot;, &quot;hello world&quot;, &quot;message&quot;)\n\tcount   = flag.Int(&quot;c&quot;, 10, &quot;send message count&quot;)\n\treqAddr = flag.String(&quot;req&quot;, &quot;tcp://127.0.0.1:5556&quot;, &quot;request address&quot;)\n)\n\nfunc main() {\n\tflag.Parse()\n\treqEndpoint := *reqAddr\n\treqSock := goczmq.NewSock(goczmq.Req)\n\tdefer reqSock.Destroy()\n\terr := reqSock.Connect(reqEndpoint)\n\tif err != nil {\n\t\tlog.Fatal(&quot;connect error:&quot;, err)\n\t}\n\tlog.Println(&quot;connect to &quot;, reqEndpoint)\n\n\tfor i := 0; i &lt; *count; i++ {\n\t\tmessage := [][]byte{[]byte(*client), []byte(*machine), []byte(*msg)}\n\t\terr := reqSock.SendMessage(message)\n\t\tif err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t\tm, err := reqSock.RecvMessage()\n\t\tif err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t\t// log.Println(&quot;response msg: &quot;, string(*msg))\n\t\tfor _, v := range m {\n\t\t\tlog.Println(&quot;response msg: &quot;, string(v))\n\t\t}\n\n\t\t// time.Sleep(time.Second)\n\t}\n}\n```\n我的golang版本：`go version go1.7.1 darwin/amd64`,系统：`mac os`\n我执行 `go build -o req req_msg.go` 没有任何问题\n但是我想交叉编译的时候：`GOOS=linux go build -o req req_msg.go `\n就出现问题了：\n`go build github.com/zeromq/goczmq: no buildable Go source files in /Users/bao/go/src/github.com/zeromq/goczmq`\n这是为何？？",
    "body_html": "<p>H，all<br>\n最近在研究分布式消息队列<a href=\"https://github.com/zeromq\" rel=\"nofollow\" target=\"_blank\" title=\"\">zeroMQ</a>,<a href=\"https://github.com/zeromq/goczmq\" rel=\"nofollow\" target=\"_blank\" title=\"\">goczmq</a>是用 go 实现 zeroMQ 接口，我用 goczmq 写了个程序:<br>\nreq_msg.go</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">flag</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">log</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">zeromq</span><span class=\"o\">/</span><span class=\"n\">goczmq</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">var</span> <span class=\"p\">(</span>\n    <span class=\"n\">client</span>  <span class=\"o\">=</span> <span class=\"n\">flag</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">s</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">sewise</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">sign</span> <span class=\"n\">of</span> <span class=\"n\">client</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">machine</span> <span class=\"o\">=</span> <span class=\"n\">flag</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">ma</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">machine1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">sign</span> <span class=\"n\">of</span> <span class=\"n\">machine</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">msg</span>     <span class=\"o\">=</span> <span class=\"n\">flag</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">m</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">hello</span> <span class=\"n\">world</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">message</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">count</span>   <span class=\"o\">=</span> <span class=\"n\">flag</span><span class=\"o\">.</span><span class=\"n\">Int</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">c</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">send</span> <span class=\"n\">message</span> <span class=\"n\">count</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">reqAddr</span> <span class=\"o\">=</span> <span class=\"n\">flag</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">req</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">tcp</span><span class=\"o\">:</span><span class=\"c\">//127.0.0.1:5556&amp;quot;, &amp;quot;request address&amp;quot;)</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">flag</span><span class=\"o\">.</span><span class=\"n\">Parse</span><span class=\"p\">()</span>\n    <span class=\"n\">reqEndpoint</span> <span class=\"o\">:=</span> <span class=\"o\">*</span><span class=\"n\">reqAddr</span>\n    <span class=\"n\">reqSock</span> <span class=\"o\">:=</span> <span class=\"n\">goczmq</span><span class=\"o\">.</span><span class=\"n\">NewSock</span><span class=\"p\">(</span><span class=\"n\">goczmq</span><span class=\"o\">.</span><span class=\"n\">Req</span><span class=\"p\">)</span>\n    <span class=\"k\">defer</span> <span class=\"n\">reqSock</span><span class=\"o\">.</span><span class=\"n\">Destroy</span><span class=\"p\">()</span>\n    <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">reqSock</span><span class=\"o\">.</span><span class=\"n\">Connect</span><span class=\"p\">(</span><span class=\"n\">reqEndpoint</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatal</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">connect</span> <span class=\"kt\">error</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">connect</span> <span class=\"n\">to</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">reqEndpoint</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"o\">*</span><span class=\"n\">count</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n        <span class=\"n\">message</span> <span class=\"o\">:=</span> <span class=\"p\">[][]</span><span class=\"kt\">byte</span><span class=\"p\">{[]</span><span class=\"kt\">byte</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">client</span><span class=\"p\">),</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">machine</span><span class=\"p\">),</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">msg</span><span class=\"p\">)}</span>\n        <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">reqSock</span><span class=\"o\">.</span><span class=\"n\">SendMessage</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n            <span class=\"nb\">panic</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">reqSock</span><span class=\"o\">.</span><span class=\"n\">RecvMessage</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n            <span class=\"nb\">panic</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n        <span class=\"c\">// log.Println(&amp;quot;response msg: &amp;quot;, string(*msg))</span>\n        <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">m</span> <span class=\"p\">{</span>\n            <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">response</span> <span class=\"n\">msg</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"kt\">string</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">))</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"c\">// time.Sleep(time.Second)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>我的 golang 版本：<code>go version go1.7.1 darwin/amd64</code>,系统：<code>mac os</code>\n我执行 <code>go build -o req req_msg.go</code> 没有任何问题\n但是我想交叉编译的时候：<code>GOOS=linux go build -o req req_msg.go</code>\n就出现问题了：\n<code>go build github.com/zeromq/goczmq: no buildable Go source files in /Users/bao/go/src/github.com/zeromq/goczmq</code>\n这是为何？？</p>",
    "hits": 921,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 78,
    "title": "关于golang写的web服务，大家都是怎么调试的",
    "created_at": "2016-10-14 11:27:06",
    "updated_at": "2016-11-01 09:58:13",
    "replied_at": "2016-11-01 09:58:13",
    "replies_count": 9,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1224,
    "last_reply_user_login": "larry",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 432,
    "user": "{\"id\": 432, \"name\": \"woshicixide\", \"login\": \"woshicixide\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "感觉调试好麻烦啊",
    "body_html": "<p>感觉调试好麻烦啊</p>",
    "hits": 587,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 79,
    "title": "【兼职】有没有想接私活程序猿，看过来！",
    "created_at": "2016-10-14 11:31:40",
    "updated_at": "2016-10-14 13:46:24",
    "replied_at": "2016-10-14 13:46:24",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 683,
    "last_reply_user_login": "erbajie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 683,
    "user": "{\"id\": 683, \"name\": \"erbajie\", \"login\": \"erbajie\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "“干得比驴累，吃得比猪差，起得比鸡早，睡得比狗晚，看上去比谁都好，五年后比谁都老。“——先自嘲下！ \n![](http://ww1.sinaimg.cn/mw1024/8db48fb7jw1f8ro353i3kj209a09at9y.jpg)\n\n我们都知道，未来是互联网科技从业者的，更确切的说是属于程序员、设计师、产品经理的... \n\n因此，我们需要一个地方让这些人立体展现自我成就，建立影响力，输出价值，拓展机遇。 同时我们帮助企业团队找到行业里最优秀的人才，解决难题。 \n\n码易，无论你是在校生、公司职员、还是自由职业者只要你有兴趣就能愉快地赚钱！ \n\n我们欢迎中高端程序员人才加入码易，共享工作平台，远程工作、自由工作、兼职工作。 \n\n我们已经合作的伙伴有： \n![](http://ww1.sinaimg.cn/mw1024/8db48fb7jw1f8ro384lioj21kw11napu.jpg)\n\n所以在这里请放心接任务，因为质量和口碑我们看的比谁都重要！欢迎加入我们的程序员精英交流群：281024 \n![](http://ww1.sinaimg.cn/mw1024/8db48fb7jw1f8ro38nytfj20sg0sgwgh.jpg)\n\n接私活请戳：http://www.mayigeek.com/\n",
    "body_html": "<p>“干得比驴累，吃得比猪差，起得比鸡早，睡得比狗晚，看上去比谁都好，五年后比谁都老。“——先自嘲下！ \n<img src=\"http://ww1.sinaimg.cn/mw1024/8db48fb7jw1f8ro353i3kj209a09at9y.jpg\" title=\"\" alt=\"\"></p>\n\n<p>我们都知道，未来是互联网科技从业者的，更确切的说是属于程序员、设计师、产品经理的... </p>\n\n<p>因此，我们需要一个地方让这些人立体展现自我成就，建立影响力，输出价值，拓展机遇。 同时我们帮助企业团队找到行业里最优秀的人才，解决难题。 </p>\n\n<p>码易，无论你是在校生、公司职员、还是自由职业者只要你有兴趣就能愉快地赚钱！ </p>\n\n<p>我们欢迎中高端程序员人才加入码易，共享工作平台，远程工作、自由工作、兼职工作。 </p>\n\n<p>我们已经合作的伙伴有： \n<img src=\"http://ww1.sinaimg.cn/mw1024/8db48fb7jw1f8ro384lioj21kw11napu.jpg\" title=\"\" alt=\"\"></p>\n\n<p>所以在这里请放心接任务，因为质量和口碑我们看的比谁都重要！欢迎加入我们的程序员精英交流群：281024 \n<img src=\"http://ww1.sinaimg.cn/mw1024/8db48fb7jw1f8ro38nytfj20sg0sgwgh.jpg\" title=\"\" alt=\"\"></p>\n\n<p>接私活请戳：<a href=\"http://www.mayigeek.com/\" rel=\"nofollow\" target=\"_blank\">http://www.mayigeek.com/</a></p>",
    "hits": 463,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 80,
    "title": "区块链会是下一个风口么？",
    "created_at": "2016-10-14 11:42:37",
    "updated_at": "2018-03-18 15:52:33",
    "replied_at": "2018-03-18 15:52:33",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 5032,
    "last_reply_user_login": "dilisk",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 682,
    "user": "{\"id\": 682, \"name\": \"mintzhao\", \"login\": \"mintzhao\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "## 问题目的\n看到astaxie及其相关小伙伴又为golang中国社区做出了相当的贡献，我万分感谢。所以结合我现在的工作，大家可以来讨论一下，区块链未来的前景。\n\n### 为何区块链和go相关\n现在区块链最火的两个项目，[hyperledger fabric](https://github.com/hyperledger/fabric), 和 [ethereum](https://github.com/ethereum/go-ethereum)都有go版本的实现。而且hyperledger fabric是由linux基金会，IBM主持开源的GO项目，所以间接的推动了go的发展\n\n### 区块链是否是炒作，智能合约及其相关应用能否落地\n一部分了解区块链的技术人员可能会说，区块链不是新的技术，只是把旧的技术包装一下，新瓶装旧酒。我同意这个观点，但是理解错了区块链的本质，他只是一份协议，类似tcp/ip协议。至于怎么去实现它，是基于各自需求的妥协。\n\n区块链或许能在金融、共享经济、智能合约、价值互联网等方面有所建树。但就对技术人员来说，对hyperledger fabric相关开发人员来说，本质上各种应用都是一个chaincode（智能合约）。如何去学习，怎么去落地，大家可以热情讨论。\n\n### 开源协作\n我不才，在github上建立了一个[开源组织](https://github.com/hydrusio),用于写一些智能合约demo供大家参考，感兴趣的童鞋可以加入一起玩。",
    "body_html": "<h2 id=\"问题目的\">问题目的</h2>\n<p>看到 astaxie 及其相关小伙伴又为 golang 中国社区做出了相当的贡献，我万分感谢。所以结合我现在的工作，大家可以来讨论一下，区块链未来的前景。</p>\n<h3 id=\"为何区块链和go相关\">为何区块链和 go 相关</h3>\n<p>现在区块链最火的两个项目，<a href=\"https://github.com/hyperledger/fabric\" rel=\"nofollow\" target=\"_blank\" title=\"\">hyperledger fabric</a>, 和 <a href=\"https://github.com/ethereum/go-ethereum\" rel=\"nofollow\" target=\"_blank\" title=\"\">ethereum</a>都有 go 版本的实现。而且 hyperledger fabric 是由 linux 基金会，IBM 主持开源的 GO 项目，所以间接的推动了 go 的发展</p>\n<h3 id=\"区块链是否是炒作，智能合约及其相关应用能否落地\">区块链是否是炒作，智能合约及其相关应用能否落地</h3>\n<p>一部分了解区块链的技术人员可能会说，区块链不是新的技术，只是把旧的技术包装一下，新瓶装旧酒。我同意这个观点，但是理解错了区块链的本质，他只是一份协议，类似 tcp/ip 协议。至于怎么去实现它，是基于各自需求的妥协。</p>\n\n<p>区块链或许能在金融、共享经济、智能合约、价值互联网等方面有所建树。但就对技术人员来说，对 hyperledger fabric 相关开发人员来说，本质上各种应用都是一个 chaincode（智能合约）。如何去学习，怎么去落地，大家可以热情讨论。</p>\n<h3 id=\"开源协作\">开源协作</h3>\n<p>我不才，在 github 上建立了一个<a href=\"https://github.com/hydrusio\" rel=\"nofollow\" target=\"_blank\" title=\"\">开源组织</a>,用于写一些智能合约 demo 供大家参考，感兴趣的童鞋可以加入一起玩。</p>",
    "hits": 597,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 81,
    "title": "大家是如何处理 golang web 应用静态资源的？",
    "created_at": "2016-10-14 13:03:45",
    "updated_at": "2016-10-14 13:08:15",
    "replied_at": "2016-10-14 13:08:15",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 74,
    "user": "{\"id\": 74, \"name\": \"xieyanke\", \"login\": \"xieyanke\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 403,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 82,
    "title": "Go里面有没有重写和重载这么一说？",
    "created_at": "2016-10-14 13:24:33",
    "updated_at": "2016-10-14 14:02:55",
    "replied_at": "2016-10-14 14:02:29",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 569,
    "last_reply_user_login": "philc",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我们知道面向对象的语言里面有override和overload，这里说一下这两个概念的定义：\n\n- 重写（override）\n\toverride是重写（覆盖）了一个方法，以实现不同的功能。一般是用于子类在继承父类时，重写（重新实现）父类中的方法。\n- 重载(overload)，一般是用于在一个类内实现若干重载的方法，这些方法的名称相同而参数形式不同。\n\nGo里面是怎么定义这些的呢？",
    "body_html": "<p>我们知道面向对象的语言里面有 override 和 overload，这里说一下这两个概念的定义：</p>\n\n<ul>\n<li>重写（override）\noverride 是重写（覆盖）了一个方法，以实现不同的功能。一般是用于子类在继承父类时，重写（重新实现）父类中的方法。</li>\n<li>重载 (overload)，一般是用于在一个类内实现若干重载的方法，这些方法的名称相同而参数形式不同。</li>\n</ul>\n\n<p>Go 里面是怎么定义这些的呢？</p>",
    "hits": 841,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 83,
    "title": "golang可以调用C++的动态链接库么",
    "created_at": "2016-10-14 13:45:20",
    "updated_at": "2018-02-11 13:54:43",
    "replied_at": "2018-02-11 13:54:43",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1588,
    "last_reply_user_login": "zanjs",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2,
    "user": "{\"id\": 2, \"name\": \"xiemengjun\", \"login\": \"xiemengjun\", \"avatar\": \"https://static.gocn.vip/user/avatar/2/9fa872.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "有一个C++的.so动态链接库和相关的.h文件，可以用golang调用么？\n\n什么库比较好？会有哪些坑？",
    "body_html": "<p>有一个 C++ 的.so 动态链接库和相关的.h 文件，可以用 golang 调用么？</p>\n\n<p>什么库比较好？会有哪些坑？</p>",
    "hits": 982,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 84,
    "title": "请问有没有比较好的方案用来远程备份大量的文件？",
    "created_at": "2016-10-14 13:56:36",
    "updated_at": "2016-10-14 18:00:01",
    "replied_at": "2016-10-14 18:00:01",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 649,
    "last_reply_user_login": "btfak",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2,
    "user": "{\"id\": 2, \"name\": \"xiemengjun\", \"login\": \"xiemengjun\", \"avatar\": \"https://static.gocn.vip/user/avatar/2/9fa872.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "比如我有1000万个小文件，我想备份到另外一台机器上。\n\n除了rsync有没有其他工具可用？\n\n要支持断点续传、进度实时看到等。\n\n谢谢~",
    "body_html": "<p>比如我有 1000 万个小文件，我想备份到另外一台机器上。</p>\n\n<p>除了 rsync 有没有其他工具可用？</p>\n\n<p>要支持断点续传、进度实时看到等。</p>\n\n<p>谢谢~</p>",
    "hits": 423,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 85,
    "title": "kingshard安家了",
    "created_at": "2016-10-14 14:35:12",
    "updated_at": "2017-05-05 08:36:01",
    "replied_at": "2017-05-05 08:36:01",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 931,
    "last_reply_user_login": "lifei6671",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 418,
    "user": "{\"id\": 418, \"name\": \"flike\", \"login\": \"flike\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我是kingshard的作者，以后大家使用kingshard过程中，遇到问题可以来这里提问。我会定期来这里回答的。谢谢。",
    "body_html": "<p>我是 kingshard 的作者，以后大家使用 kingshard 过程中，遇到问题可以来这里提问。我会定期来这里回答的。谢谢。</p>",
    "hits": 438,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 86,
    "title": "2016 年 10 月，当前好用的 ORM 是哪个？",
    "created_at": "2016-10-14 14:55:53",
    "updated_at": "2017-05-27 17:15:11",
    "replied_at": "2017-05-27 17:14:56",
    "replies_count": 14,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2000,
    "last_reply_user_login": "arstd",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 765,
    "user": "{\"id\": 765, \"name\": \"WildCat\", \"login\": \"WildCat\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 631,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 87,
    "title": "哪位大神能给一下GO的学习路线呢？现在感觉go的知识体系有点乱啊",
    "created_at": "2016-10-14 15:49:26",
    "updated_at": "2016-10-17 10:53:47",
    "replied_at": "2016-10-17 10:53:47",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 895,
    "last_reply_user_login": "xichen",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 38,
    "user": "{\"id\": 38, \"name\": \"TianGenglan\", \"login\": \"TianGenglan\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "想系统的整理自己的GO语言知识，希望大神能给点指点。:ok_hand:",
    "body_html": "<p>想系统的整理自己的 GO 语言知识，希望大神能给点指点。<img title=\":ok_hand:\" alt=\"?\" src=\"https://twemoji.ruby-china.com/2/svg/1f44c.svg\" class=\"twemoji\"></p>",
    "hits": 521,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 88,
    "title": "使用channel代替条件变量",
    "created_at": "2016-10-14 16:24:02",
    "updated_at": "2016-10-14 17:25:58",
    "replied_at": "2016-10-14 17:25:58",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 222,
    "user": "{\"id\": 222, \"name\": \"themoonstone\", \"login\": \"themoonstone\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "条件变量信号传递是将条件传达给一个或多个并发任务的方式，在Go标准库中'sync'包提供了使用条件变量发送信号的方法。除此之外、在golang中另一种方式是使用内置的channel   \n两种方式都是暂停当前正在执行的goroutine并将CPU出让给另一个goroutine、在此我解释一下为什么我更偏向于使用channel而不是条件变量传播信号到我的worker goroutines。\n使用条件变量遇到的问题：\n条件变量的两个解除阻塞方法:\n1、唤醒一个单一的等待goroutine\n2、唤醒一个所有的等待goroutine\n示例如下：\n```go\nc := sync.NewCond(&amp;sync.Mutex{})\ngo func() {\n\tc.L.Lock()\n\tc.Wait()\n\tc.L.Unlock()\n\tfmt.Println(&quot;DONE&quot;)\n}()\nc.Signal()\n```\n理论上，goroutine将在条件创建信号时唤醒。一旦发生这种情况，我们应该看到一个字符串'DONE'出现、但是由于当前的操作系统是抢占式的，所以我们不能保证s.Signal()一定会在goroutine被完全初始化和阻塞之后才调用(无法保证程序执行过程中各个goroutine的执行顺序)、实际上，对c.Signal()的调用可以在Wait()之前执行，此时程序将退出、我们什么也看不到、如果我们正在运行的时一个服务、将会有一个goroutine处于阻塞状态、该goroutine可能会一直阻塞、直到有信号来唤醒它。之所以会出现这样的情况是因为阻塞的goroutine可能会错过Signal()或者Broadcast()方法的唤醒。\n而如果你的程序是一个必须7*24小时不间断运行的服务的话、这样的情况会使得你的程序goroutine持续保持增长直到内存“爆炸”，而你的操作系统最终会因为内存溢出而终止该进程\n通过channels在并发goroutine中进行信息传递则可以有效避免这样的情况、因为channel可以通过超时机制终止goroutine运行\n正常情况下，每次计算机的操作都需要一段时间，它们会在特定的（也许很少的，也许是频繁的）条件下包含并应该包含停止自身运行的机制。使用channel的情况下，我们可以使用select语句并添加超时机制。\n```go\nreadyChan := make(chan bool, 1)\ngo func() {\n\tselect {\n\t\tcase &lt;- readyChan:\n\t\t\tfmt.Println(&quot;HELLO&quot;)\n\t\tcase &lt;- time.After(time.Minute):\n\t}\n}()\nreadyChan &lt;- true\n```\n如代码所示、在使用channel的情况下、不会出现goroutine一直堆积的情况、如果因为某些原因导致阻塞进程没有被唤醒 、则在一分钟的超时期到的时候、goroutine会优雅地终止\n有一些情况，我们想结束所有等待goroutines。幸运的是，channel可以关闭，并保持此状态，以便进一步尝试从中读取：\n```go\nreadyChan := make(chan bool, 1)\nfor i := 0; i &lt; 5; i++ {\n\tgo func() {\n\t\t_, ok := &lt;-readyChan\n\t\tif !ok {\n\t\t\tfmt.Println(&quot;Worker ending ...&quot;)\n\t\t\treturn\n\t\t}\n\t}()\n}\nclose(readyChan)\ntime.Sleep(3*time.Second)\n```\n三秒钟后，我们将看到尝试从channel中读取数据的五个goroutine返回，因为主goroutine刚刚关闭了该channel。\n为什么要使用缓冲通道？\n这两个示例都使用缓冲channel，因为如果等待goroutine需要很长时间来初始化而且channel没有缓冲，发送goroutine将锁定并等待，直到channel上有一个监听器。\n原文链接：https://zeta.si/page/Using-Go-Channels-Instead-Of-Conditions",
    "body_html": "<p>条件变量信号传递是将条件传达给一个或多个并发任务的方式，在 Go 标准库中'sync'包提供了使用条件变量发送信号的方法。除此之外、在 golang 中另一种方式是使用内置的 channel<br>\n两种方式都是暂停当前正在执行的 goroutine 并将 CPU 出让给另一个 goroutine、在此我解释一下为什么我更偏向于使用 channel 而不是条件变量传播信号到我的 worker goroutines。\n使用条件变量遇到的问题：\n条件变量的两个解除阻塞方法:\n1、唤醒一个单一的等待 goroutine\n2、唤醒一个所有的等待 goroutine\n示例如下：</p>\n <pre class=\"highlight go\"><code><span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"n\">sync</span><span class=\"o\">.</span><span class=\"n\">NewCond</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">sync</span><span class=\"o\">.</span><span class=\"n\">Mutex</span><span class=\"p\">{})</span>\n<span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">L</span><span class=\"o\">.</span><span class=\"n\">Lock</span><span class=\"p\">()</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">()</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">L</span><span class=\"o\">.</span><span class=\"n\">Unlock</span><span class=\"p\">()</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">DONE</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">}()</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Signal</span><span class=\"p\">()</span>\n</code></pre> \n<p>理论上，goroutine 将在条件创建信号时唤醒。一旦发生这种情况，我们应该看到一个字符串'DONE'出现、但是由于当前的操作系统是抢占式的，所以我们不能保证 s.Signal() 一定会在 goroutine 被完全初始化和阻塞之后才调用 (无法保证程序执行过程中各个 goroutine 的执行顺序)、实际上，对 c.Signal() 的调用可以在 Wait() 之前执行，此时程序将退出、我们什么也看不到、如果我们正在运行的时一个服务、将会有一个 goroutine 处于阻塞状态、该 goroutine 可能会一直阻塞、直到有信号来唤醒它。之所以会出现这样的情况是因为阻塞的 goroutine 可能会错过 Signal() 或者 Broadcast() 方法的唤醒。\n而如果你的程序是一个必须 7*24 小时不间断运行的服务的话、这样的情况会使得你的程序 goroutine 持续保持增长直到内存 “爆炸”，而你的操作系统最终会因为内存溢出而终止该进程\n通过 channels 在并发 goroutine 中进行信息传递则可以有效避免这样的情况、因为 channel 可以通过超时机制终止 goroutine 运行\n正常情况下，每次计算机的操作都需要一段时间，它们会在特定的（也许很少的，也许是频繁的）条件下包含并应该包含停止自身运行的机制。使用 channel 的情况下，我们可以使用 select 语句并添加超时机制。</p>\n <pre class=\"highlight go\"><code><span class=\"n\">readyChan</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">bool</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">)</span>\n<span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">select</span> <span class=\"p\">{</span>\n        <span class=\"k\">case</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"n\">readyChan</span><span class=\"o\">:</span>\n            <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">HELLO</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"k\">case</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">After</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Minute</span><span class=\"p\">)</span><span class=\"o\">:</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}()</span>\n<span class=\"n\">readyChan</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"no\">true</span>\n</code></pre> \n<p>如代码所示、在使用 channel 的情况下、不会出现 goroutine 一直堆积的情况、如果因为某些原因导致阻塞进程没有被唤醒 、则在一分钟的超时期到的时候、goroutine 会优雅地终止\n有一些情况，我们想结束所有等待 goroutines。幸运的是，channel 可以关闭，并保持此状态，以便进一步尝试从中读取：</p>\n <pre class=\"highlight go\"><code><span class=\"n\">readyChan</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">bool</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"m\">5</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n    <span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">ok</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">readyChan</span>\n        <span class=\"k\">if</span> <span class=\"o\">!</span><span class=\"n\">ok</span> <span class=\"p\">{</span>\n            <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Worker</span> <span class=\"n\">ending</span> <span class=\"o\">...&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n            <span class=\"k\">return</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}()</span>\n<span class=\"p\">}</span>\n<span class=\"nb\">close</span><span class=\"p\">(</span><span class=\"n\">readyChan</span><span class=\"p\">)</span>\n<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"o\">*</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"p\">)</span>\n</code></pre> \n<p>三秒钟后，我们将看到尝试从 channel 中读取数据的五个 goroutine 返回，因为主 goroutine 刚刚关闭了该 channel。\n为什么要使用缓冲通道？\n这两个示例都使用缓冲 channel，因为如果等待 goroutine 需要很长时间来初始化而且 channel 没有缓冲，发送 goroutine 将锁定并等待，直到 channel 上有一个监听器。\n原文链接：<a href=\"https://zeta.si/page/Using-Go-Channels-Instead-Of-Conditions\" rel=\"nofollow\" target=\"_blank\">https://zeta.si/page/Using-Go-Channels-Instead-Of-Conditions</a></p>",
    "hits": 622,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 89,
    "title": "Go能写桌面程序吗？比如winform 这样的",
    "created_at": "2016-10-14 16:32:50",
    "updated_at": "2018-01-07 19:59:37",
    "replied_at": "2018-01-07 19:59:37",
    "replies_count": 15,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 791,
    "last_reply_user_login": "jicg",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 38,
    "user": "{\"id\": 38, \"name\": \"TianGenglan\", \"login\": \"TianGenglan\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "能写类似winform程序吗？",
    "body_html": "<p>能写类似 winform 程序吗？</p>",
    "hits": 832,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 90,
    "title": "Go还有那些社区？",
    "created_at": "2016-10-14 16:44:54",
    "updated_at": "2017-01-11 10:34:58",
    "replied_at": "2017-01-11 10:34:58",
    "replies_count": 9,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 48,
    "last_reply_user_login": "DL88250",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 38,
    "user": "{\"id\": 38, \"name\": \"TianGenglan\", \"login\": \"TianGenglan\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "各位大神推荐一下",
    "body_html": "<p>各位大神推荐一下</p>",
    "hits": 611,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 91,
    "title": "golang在goroutine里的错误怎么传递？",
    "created_at": "2016-10-14 18:23:49",
    "updated_at": "2016-10-14 21:03:32",
    "replied_at": "2016-10-14 21:03:32",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 222,
    "last_reply_user_login": "themoonstone",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 96,
    "user": "{\"id\": 96, \"name\": \"sheepbao\", \"login\": \"sheepbao\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "首先goroutine真的很爽。。。\n场景是这样的，就是要把goroutine里的错误消息传递出来，简单的代码示例：\n```go\n\tfunc work(some string, ch chan string){\n\t\t// do something\n\t\terr:=dosomething()\n\t\tfor{\n\t\t\tselect{\n\t\t\tcase &lt;-ch:\n\t\t\t\t// do something\n\t\t\t\terr:=doOthersome()\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunc main(){\n\t\tgo work(some, ch)\n\t\t//  在这里如何得到work函数里的err\n\t}\n```\n\n我现在用的是在main函数里定义一个chan error，传递给work，然后在work里有err的时候，给这个chan error发消息，在main函数里接收，但这样如果没有err，会导致main函数阻塞。\n```go\n\tfunc work(some string, ch chan string, chanErr chan error){\n\t\t// do something\n\t\terr:=dosomething()\n\t\tif err!=nil{\n\t\t\tchanErr&lt;-err\n\t\t\treturn\n\t\t}\n\t\tfor{\n\t\t\tselect{\n\t\t\tcase &lt;-ch:\n\t\t\t\t// do something\n\t\t\t\terr:=doOthersome()\n\t\t\t\tif err!=nil{\n\t\t\t\t\tchanErr&lt;-err\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunc main(){\n\tchanErr:=make(chan error)\n\t\tgo work(some, ch, chanErr)\n\t\t//  在这里接收work函数里的err， 没有任何错误的话会阻塞\n\t\terr:=&lt;-chanErr\n\t}\n```\n来请教大家，有没有更好的方法？不让main函数阻塞",
    "body_html": "<p>首先 goroutine 真的很爽。。。\n场景是这样的，就是要把 goroutine 里的错误消息传递出来，简单的代码示例：</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">work</span><span class=\"p\">(</span><span class=\"n\">some</span> <span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"n\">ch</span> <span class=\"k\">chan</span> <span class=\"kt\">string</span><span class=\"p\">){</span>\n    <span class=\"c\">// do something</span>\n    <span class=\"n\">err</span><span class=\"o\">:=</span><span class=\"n\">dosomething</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span><span class=\"p\">{</span>\n        <span class=\"k\">select</span><span class=\"p\">{</span>\n        <span class=\"k\">case</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">ch</span><span class=\"o\">:</span>\n            <span class=\"c\">// do something</span>\n            <span class=\"n\">err</span><span class=\"o\">:=</span><span class=\"n\">doOthersome</span><span class=\"p\">()</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">(){</span>\n    <span class=\"k\">go</span> <span class=\"n\">work</span><span class=\"p\">(</span><span class=\"n\">some</span><span class=\"p\">,</span> <span class=\"n\">ch</span><span class=\"p\">)</span>\n    <span class=\"c\">// &nbsp;在这里如何得到work函数里的err</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>我现在用的是在 main 函数里定义一个 chan error，传递给 work，然后在 work 里有 err 的时候，给这个 chan error 发消息，在 main 函数里接收，但这样如果没有 err，会导致 main 函数阻塞。</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">work</span><span class=\"p\">(</span><span class=\"n\">some</span> <span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"n\">ch</span> <span class=\"k\">chan</span> <span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"n\">chanErr</span> <span class=\"k\">chan</span> <span class=\"kt\">error</span><span class=\"p\">){</span>\n    <span class=\"c\">// do something</span>\n    <span class=\"n\">err</span><span class=\"o\">:=</span><span class=\"n\">dosomething</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span><span class=\"o\">!=</span><span class=\"no\">nil</span><span class=\"p\">{</span>\n        <span class=\"n\">chanErr</span><span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">err</span>\n        <span class=\"k\">return</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">for</span><span class=\"p\">{</span>\n        <span class=\"k\">select</span><span class=\"p\">{</span>\n        <span class=\"k\">case</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">ch</span><span class=\"o\">:</span>\n            <span class=\"c\">// do something</span>\n            <span class=\"n\">err</span><span class=\"o\">:=</span><span class=\"n\">doOthersome</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"n\">err</span><span class=\"o\">!=</span><span class=\"no\">nil</span><span class=\"p\">{</span>\n                <span class=\"n\">chanErr</span><span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">err</span>\n                <span class=\"k\">return</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">(){</span>\n<span class=\"n\">chanErr</span><span class=\"o\">:=</span><span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">error</span><span class=\"p\">)</span>\n    <span class=\"k\">go</span> <span class=\"n\">work</span><span class=\"p\">(</span><span class=\"n\">some</span><span class=\"p\">,</span> <span class=\"n\">ch</span><span class=\"p\">,</span> <span class=\"n\">chanErr</span><span class=\"p\">)</span>\n    <span class=\"c\">// &nbsp;在这里接收work函数里的err， 没有任何错误的话会阻塞</span>\n    <span class=\"n\">err</span><span class=\"o\">:=&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">chanErr</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>来请教大家，有没有更好的方法？不让 main 函数阻塞</p>",
    "hits": 672,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 92,
    "title": "为什么http标准库的Handler第一个参数是接口，第二个是结构体，出于哪些方面考虑呢？",
    "created_at": "2016-10-14 19:40:16",
    "updated_at": "2016-10-14 22:41:42",
    "replied_at": "2016-10-14 22:41:42",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 171,
    "user": "{\"id\": 171, \"name\": \"cloudaice\", \"login\": \"cloudaice\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "\n```go\ntype Handler interface {\n        ServeHTTP(ResponseWriter, *Request)\n}\n```\n\n如上，ServeHTPP方法的第一个参数是一个接口定义，而第二个参数是一个实例类型的引用，这样的设计是出于什么考虑呢？",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">Handler</span> <span class=\"k\">interface</span> <span class=\"p\">{</span>\n        <span class=\"n\">ServeHTTP</span><span class=\"p\">(</span><span class=\"n\">ResponseWriter</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">Request</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>如上，ServeHTPP 方法的第一个参数是一个接口定义，而第二个参数是一个实例类型的引用，这样的设计是出于什么考虑呢？</p>",
    "hits": 388,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 93,
    "title": "gocn.io 的程序代码会像 wetalk 一样开源吗？",
    "created_at": "2016-10-15 00:36:47",
    "updated_at": "2017-06-28 20:19:50",
    "replied_at": "2017-06-28 20:19:50",
    "replies_count": 28,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1914,
    "last_reply_user_login": "chanehua",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 829,
    "user": "{\"id\": 829, \"name\": \"proofreading\", \"login\": \"proofreading\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "\n\n1、 gocn.io 的程序代码会像 wetalk 一样开源吗？\n2、 gocn 的社区和 wetalk 在功能上那里不一样呢？\n\n\n谢谢",
    "body_html": "<p>1、 gocn.io 的程序代码会像 wetalk 一样开源吗？\n2、 gocn 的社区和 wetalk 在功能上那里不一样呢？</p>\n\n<p>谢谢</p>",
    "hits": 844,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 94,
    "title": "进程退出时如何保证占用的端口完全释放？",
    "created_at": "2016-10-15 08:23:10",
    "updated_at": "2016-10-16 08:55:08",
    "replied_at": "2016-10-16 08:55:08",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 184,
    "last_reply_user_login": "vz",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2,
    "user": "{\"id\": 2, \"name\": \"xiemengjun\", \"login\": \"xiemengjun\", \"avatar\": \"https://static.gocn.vip/user/avatar/2/9fa872.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "有时候发现某端口未释放，进程重启失败了。",
    "body_html": "<p>有时候发现某端口未释放，进程重启失败了。</p>",
    "hits": 590,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 95,
    "title": "golang里 math/rand 和 crypto/rand 区别是什么",
    "created_at": "2016-10-15 09:06:53",
    "updated_at": "2016-10-15 09:27:35",
    "replied_at": "2016-10-15 09:27:35",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 813,
    "user": "{\"id\": 813, \"name\": \"domac\", \"login\": \"domac\", \"avatar\": \"https://static.gocn.vip/user/avatar/813/a5bd47.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "想请教下各位，\n\n- 既然go提供了 math/rand 和 crypto/rand 两个用于随机数的包，它们的区别有哪些？\n\n- 我看过一些其他人的源码，以生成随机数为例，有些人使用 math/rand 有些使用 crypto/rand，或者像beego utils包里的rand.go一样，两者同时使用。两者常用于什么场景比较多呢？\n\n- 如果我是要生成一些token,是否crypto/rand使用上会更好一些呢？因为一些文章描述math/rand 只是生成伪随机数。\n\n谢谢",
    "body_html": "<p>想请教下各位，</p>\n\n<ul>\n<li><p>既然 go 提供了 math/rand 和 crypto/rand 两个用于随机数的包，它们的区别有哪些？</p></li>\n<li><p>我看过一些其他人的源码，以生成随机数为例，有些人使用 math/rand 有些使用 crypto/rand，或者像 beego utils 包里的 rand.go 一样，两者同时使用。两者常用于什么场景比较多呢？</p></li>\n<li><p>如果我是要生成一些 token,是否 crypto/rand 使用上会更好一些呢？因为一些文章描述 math/rand 只是生成伪随机数。</p></li>\n</ul>\n\n<p>谢谢</p>",
    "hits": 657,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 96,
    "title": "glang如何实现小票打印",
    "created_at": "2016-10-15 09:43:38",
    "updated_at": "2016-10-16 12:57:03",
    "replied_at": "2016-10-16 12:57:03",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 791,
    "last_reply_user_login": "jicg",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 791,
    "user": "{\"id\": 791, \"name\": \"jicg\", \"login\": \"jicg\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "有没有用golang取调用打印机的库？",
    "body_html": "<p>有没有用 golang 取调用打印机的库？</p>",
    "hits": 596,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 97,
    "title": "关于转vscode 使用过程的几点疑惑",
    "created_at": "2016-10-15 10:59:49",
    "updated_at": "2017-03-14 18:41:25",
    "replied_at": "2017-03-14 18:41:25",
    "replies_count": 8,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1426,
    "last_reply_user_login": "doob",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 460,
    "user": "{\"id\": 460, \"name\": \"cooppor\", \"login\": \"cooppor\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "看到有篇问答《[大家说说看都用啥写Go](https://gocn.io/question/49?notification_id=2588&amp;rf=false&amp;item_id=234,235,240,246,247,249,253,254,255,264,282,289,322,323,325,326,328#!answer_328)》，发现用vscode的人越来多了，于是打算尝试一下。\n\n安装完成后，装了`gocode`, `godef`, `go-outline`,`go-symbols`,`golint`,`gopkgs`,`guru`,`gorename`,`goreturns`,`gotests`,`dlv`等等一系列命令行工具，按照网文简单的配置了下`工作区设置`\n\n```json\n// 将设置放入此文件中以覆盖默认值和用户设置。\n{\n    &quot;files.autoSave&quot;: &quot;onFocusChange&quot;,\n    &quot;go.buildOnSave&quot;: true,\n    &quot;go.lintOnSave&quot;: true,\n    &quot;go.vetOnSave&quot;: true,\n    &quot;go.buildTags&quot;: &quot;&quot;,\n    &quot;go.buildFlags&quot;: [],\n    &quot;go.lintFlags&quot;: [],\n    &quot;go.vetFlags&quot;: [],\n    &quot;go.coverOnSave&quot;: false,\n    &quot;go.useCodeSnippetsOnFunctionSuggest&quot;: false,\n    &quot;go.formatOnSave&quot;: true,\n    &quot;go.formatTool&quot;: &quot;goreturns&quot;,\n    &quot;go.goroot&quot;: &quot;/usr/local/go&quot;,\n    &quot;go.gopath&quot;: &quot;path/to/gopath(略)&quot;,\n    &quot;go.gocodeAutoBuild&quot;: true\n}\n```\n开始使用vsocde, 在体验过程中，有几个地方有点疑惑\n\n- 自己项目内的包、结构、方法、变量等等怎么设置才能进行补全提示，必须也要安装一下自己的项目吗？\n\n- 开启调试模式的时候总是报`could not launch process: could not fork/exec`异常\n详细如下：\n```\n2016/10/15 10:41:13 server.go:71: Using API v1\n2016/10/15 10:41:13 debugger.go:61: launching process with args: [./debug]\ncould not launch process: could not fork/exec\n```\n里面的这个`debug`文件，在刚安装好vscode的时候，我尝试开启调试的时候，在项目根目录下看到过，再后来就不知道怎么没有了，也不知道这个是要如何生成。\n\n其他的暂时还没有，有了再研究。希望大家帮我解答一下，谢谢。\n\n",
    "body_html": "<p>看到有篇问答《<a href=\"https://gocn.io/question/49?notification_id=2588&amp;rf=false&amp;item_id=234,235,240,246,247,249,253,254,255,264,282,289,322,323,325,326,328#!answer_328\" rel=\"nofollow\" target=\"_blank\" title=\"\">大家说说看都用啥写 Go</a>》，发现用 vscode 的人越来多了，于是打算尝试一下。</p>\n\n<p>安装完成后，装了<code>gocode</code>, <code>godef</code>, <code>go-outline</code>,<code>go-symbols</code>,<code>golint</code>,<code>gopkgs</code>,<code>guru</code>,<code>gorename</code>,<code>goreturns</code>,<code>gotests</code>,<code>dlv</code>等等一系列命令行工具，按照网文简单的配置了下<code>工作区设置</code></p>\n <pre class=\"highlight json\"><code><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">将设置放入此文件中以覆盖默认值和用户设置。</span><span class=\"w\">\n</span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;files.autoSave&amp;quot;:</span><span class=\"w\"> </span><span class=\"err\">&amp;quot;onFocusChange&amp;quot;</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;go.buildOnSave&amp;quot;:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;go.lintOnSave&amp;quot;:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;go.vetOnSave&amp;quot;:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;go.buildTags&amp;quot;:</span><span class=\"w\"> </span><span class=\"err\">&amp;quot;&amp;quot;</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;go.buildFlags&amp;quot;:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;go.lintFlags&amp;quot;:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;go.vetFlags&amp;quot;:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;go.coverOnSave&amp;quot;:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;go.useCodeSnippetsOnFunctionSuggest&amp;quot;:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;go.formatOnSave&amp;quot;:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;go.formatTool&amp;quot;:</span><span class=\"w\"> </span><span class=\"err\">&amp;quot;goreturns&amp;quot;</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;go.goroot&amp;quot;:</span><span class=\"w\"> </span><span class=\"err\">&amp;quot;/usr/local/go&amp;quot;</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;go.gopath&amp;quot;:</span><span class=\"w\"> </span><span class=\"err\">&amp;quot;path/to/gopath(略)&amp;quot;</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;go.gocodeAutoBuild&amp;quot;:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre> \n<p>开始使用 vsocde, 在体验过程中，有几个地方有点疑惑</p>\n\n<ul>\n<li><p>自己项目内的包、结构、方法、变量等等怎么设置才能进行补全提示，必须也要安装一下自己的项目吗？</p></li>\n<li>\n<p>开启调试模式的时候总是报<code>could not launch process: could not fork/exec</code>异常\n详细如下：</p>\n <pre class=\"highlight plaintext\"><code>2016/10/15 10:41:13 server.go:71: Using API v1\n2016/10/15 10:41:13 debugger.go:61: launching process with args: [./debug]\ncould not launch process: could not fork/exec\n</code></pre> \n<p>里面的这个<code>debug</code>文件，在刚安装好 vscode 的时候，我尝试开启调试的时候，在项目根目录下看到过，再后来就不知道怎么没有了，也不知道这个是要如何生成。</p>\n</li>\n</ul>\n\n<p>其他的暂时还没有，有了再研究。希望大家帮我解答一下，谢谢。</p>",
    "hits": 649,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 98,
    "title": "beego中struct中有field是slice类型怎么存储？",
    "created_at": "2016-10-15 14:14:33",
    "updated_at": "2019-04-21 23:05:00",
    "replied_at": "2019-04-21 23:05:00",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 7460,
    "last_reply_user_login": "jeffSheng",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 423,
    "user": "{\"id\": 423, \"name\": \"chenqinghe\", \"login\": \"chenqinghe\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\ntype Article struct{\n\tTitle string\n\tContent string\n\tAuthor []string\n}\n\no:= orm.NewOrm()\no.insert(&amp;a)//a:=Article{...}\n```\n这样会报错：\n&gt; field: Article.Author, unsupport field type [], may be miss setting tag\n\n我知道可以把tag设置成string类型，然后将[]string，json编码一下，这样可以存储，但是取出来渲染模板的时候就比较麻烦了。想问大家有什么好办法可以存储吗？或者beego orm本身就可以设置tag来存储，不过在官网上找了下没找到，请大家告诉一下。",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">Article</span> <span class=\"k\">struct</span><span class=\"p\">{</span>\n    <span class=\"n\">Title</span> <span class=\"kt\">string</span>\n    <span class=\"n\">Content</span> <span class=\"kt\">string</span>\n    <span class=\"n\">Author</span> <span class=\"p\">[]</span><span class=\"kt\">string</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">o</span><span class=\"o\">:=</span> <span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">NewOrm</span><span class=\"p\">()</span>\n<span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">a</span><span class=\"p\">)</span><span class=\"c\">//a:=Article{...}</span>\n</code></pre> \n<p>这样会报错：\n&gt; field: Article.Author, unsupport field type [], may be miss setting tag</p>\n\n<p>我知道可以把 tag 设置成 string 类型，然后将 [] string，json 编码一下，这样可以存储，但是取出来渲染模板的时候就比较麻烦了。想问大家有什么好办法可以存储吗？或者 beego orm 本身就可以设置 tag 来存储，不过在官网上找了下没找到，请大家告诉一下。</p>",
    "hits": 1250,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 99,
    "title": "struct的拷贝问题",
    "created_at": "2016-10-15 15:13:20",
    "updated_at": "2016-10-15 23:07:29",
    "replied_at": "2016-10-15 23:04:13",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 713,
    "last_reply_user_login": "tonyluj",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 845,
    "user": "{\"id\": 845, \"name\": \"voidint\", \"login\": \"voidint\", \"avatar\": \"https://static.gocn.vip/user/avatar/845/a0dbfd.jpg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "包a下有`struct A`，包b下有`struct B`，并且struct A和struct B的结构完全一致，有哪些方法可以将struct A的内容拷贝到struct B中？",
    "body_html": "<p>包 a 下有<code>struct A</code>，包 b 下有<code>struct B</code>，并且 struct A 和 struct B 的结构完全一致，有哪些方法可以将 struct A 的内容拷贝到 struct B 中？</p>",
    "hits": 592,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 100,
    "title": "哪一个关于的Go的演讲或者视频或者教材对你的影响最大",
    "created_at": "2016-10-15 15:43:15",
    "updated_at": "2016-10-21 17:31:20",
    "replied_at": "2016-10-21 17:31:20",
    "replies_count": 21,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1066,
    "last_reply_user_login": "afocus",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "先说一下我自己的，Go的三天入门教材， Rob Pike's 2011 three day course\n\nhttps://github.com/golang/go/wiki/Learn",
    "body_html": "<p>先说一下我自己的，Go 的三天入门教材， Rob Pike's 2011 three day course</p>\n\n<p><a href=\"https://github.com/golang/go/wiki/Learn\" rel=\"nofollow\" target=\"_blank\">https://github.com/golang/go/wiki/Learn</a></p>",
    "hits": 746,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 101,
    "title": "神奇的copy函数",
    "created_at": "2016-10-15 15:57:56",
    "updated_at": "2016-10-16 19:34:51",
    "replied_at": "2016-10-16 19:34:51",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 723,
    "last_reply_user_login": "CTO",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "大家猜猜下面的代码输出什么：\n\n```\npackage main\n\nimport &quot;fmt&quot;\n\nfunc f(a int, b uint) {\n    var min = 0\n    min = copy(make([]struct{}, a), make([]struct{}, b))\n    fmt.Printf(&quot;The min of %d and %d is %d\\n&quot;, a, b, min)\n}\n\nfunc main() {\n    f(9000, 314)\n}\n```\n\n",
    "body_html": "<p>大家猜猜下面的代码输出什么：</p>\n <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"n\">import</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n<span class=\"n\">func</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">a</span> <span class=\"n\">int</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"n\">uint</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">var</span> <span class=\"k\">min</span> <span class=\"p\">=</span> <span class=\"m\">0</span>\n    <span class=\"k\">min</span> <span class=\"p\">=</span> <span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"n\">make</span><span class=\"p\">([]</span><span class=\"n\">struct</span><span class=\"p\">{},</span> <span class=\"n\">a</span><span class=\"p\">),</span> <span class=\"n\">make</span><span class=\"p\">([]</span><span class=\"n\">struct</span><span class=\"p\">{},</span> <span class=\"n\">b</span><span class=\"p\">))</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Printf</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">The</span> <span class=\"k\">min</span> <span class=\"k\">of</span> <span class=\"p\">%</span><span class=\"n\">d</span> <span class=\"k\">and</span> <span class=\"p\">%</span><span class=\"n\">d</span> <span class=\"n\">is</span> <span class=\"p\">%</span><span class=\"n\">d</span><span class=\"p\">\\</span><span class=\"n\">n</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"k\">min</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"m\">9000</span><span class=\"p\">,</span> <span class=\"m\">314</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 420,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 102,
    "title": "强烈建议 bee 工具创建目录结构时，去掉s",
    "created_at": "2016-10-16 10:22:35",
    "updated_at": "2016-10-16 11:23:38",
    "replied_at": "2016-10-16 11:23:38",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 322,
    "user": "{\"id\": 322, \"name\": \"qianyunlai\", \"login\": \"qianyunlai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/q.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "强烈建议 bee 工具创建目录结构时，去掉s，都统一用单数，如：\ncontroller、model、view",
    "body_html": "<p>强烈建议 bee 工具创建目录结构时，去掉 s，都统一用单数，如：\ncontroller、model、view</p>",
    "hits": 439,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 103,
    "title": "空结构体struct{}的用法",
    "created_at": "2016-10-16 10:50:34",
    "updated_at": "2016-10-16 20:09:36",
    "replied_at": "2016-10-16 20:09:36",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 659,
    "user": "{\"id\": 659, \"name\": \"godonggua\", \"login\": \"godonggua\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题，空接口interface{}可以用来做泛型，那空结构体struct{}一般是如何使用的呢？",
    "body_html": "<p>如题，空接口 interface{}可以用来做泛型，那空结构体 struct{}一般是如何使用的呢？</p>",
    "hits": 429,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 104,
    "title": "golang 怎么在 release 版本避免编译一些代码？",
    "created_at": "2016-10-16 13:42:03",
    "updated_at": "2018-04-13 22:59:01",
    "replied_at": "2018-04-13 22:59:01",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 3686,
    "last_reply_user_login": "lichao2018",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 867,
    "user": "{\"id\": 867, \"name\": \"oldcai\", \"login\": \"oldcai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/o.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在 C/C++中，一般都是用一个宏来将 release 版本不需要的代码过滤掉\n\n在 go 中好像没有找到相关的方法，搜了一圈也没找到合适的方法",
    "body_html": "<p>在 C/C++ 中，一般都是用一个宏来将 release 版本不需要的代码过滤掉</p>\n\n<p>在 go 中好像没有找到相关的方法，搜了一圈也没找到合适的方法</p>",
    "hits": 590,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 105,
    "title": "go如何实现类似java的动态代理",
    "created_at": "2016-10-16 19:32:05",
    "updated_at": "2018-03-25 23:45:49",
    "replied_at": "2018-03-25 23:44:19",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 509,
    "last_reply_user_login": "zhr",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 723,
    "user": "{\"id\": 723, \"name\": \"CTO\", \"login\": \"CTO\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "java的动态代理还是很强大的，go有办法实现类似的动态代理吗\n------------\n下面的代码用来代理一个实现了List接口的对象。所实现的功能也非常简单，那就是禁止使用List接口中的add方法。如果在getList中传入一个实现List接口的对象，那么返回的实际就是一个代理对象，尝试在该对象上调用add方法就会抛出来异常。\n```java\npublic List getList(final List list) {\n    return (List) Proxy.newProxyInstance(DummyProxy.class.getClassLoader(), new Class[] { List.class },\n        new InvocationHandler() {\n            public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n                if (&quot;add&quot;.equals(method.getName())) {\n                    throw new UnsupportedOperationException();\n                }\n                else {\n                    return method.invoke(list, args);\n                }\n            }\n        });\n } \n```",
    "body_html": "<h2 id=\"java的动态代理还是很强大的，go有办法实现类似的动态代理吗\">java 的动态代理还是很强大的，go 有办法实现类似的动态代理吗</h2>\n<p>下面的代码用来代理一个实现了 List 接口的对象。所实现的功能也非常简单，那就是禁止使用 List 接口中的 add 方法。如果在 getList 中传入一个实现 List 接口的对象，那么返回的实际就是一个代理对象，尝试在该对象上调用 add 方法就会抛出来异常。</p>\n <pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"nc\">List</span> <span class=\"nf\">getList</span><span class=\"o\">(</span><span class=\"kd\">final</span> <span class=\"nc\">List</span> <span class=\"n\">list</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"k\">return</span> <span class=\"o\">(</span><span class=\"nc\">List</span><span class=\"o\">)</span> <span class=\"nc\">Proxy</span><span class=\"o\">.</span><span class=\"na\">newProxyInstance</span><span class=\"o\">(</span><span class=\"nc\">DummyProxy</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">.</span><span class=\"na\">getClassLoader</span><span class=\"o\">(),</span> <span class=\"k\">new</span> <span class=\"nc\">Class</span><span class=\"o\">[]</span> <span class=\"o\">{</span> <span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"na\">class</span> <span class=\"o\">},</span>\n        <span class=\"k\">new</span> <span class=\"nf\">InvocationHandler</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n            <span class=\"kd\">public</span> <span class=\"nc\">Object</span> <span class=\"nf\">invoke</span><span class=\"o\">(</span><span class=\"nc\">Object</span> <span class=\"n\">proxy</span><span class=\"o\">,</span> <span class=\"nc\">Method</span> <span class=\"n\">method</span><span class=\"o\">,</span> <span class=\"nc\">Object</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"nc\">Throwable</span> <span class=\"o\">{</span>\n                <span class=\"k\">if</span> <span class=\"o\">(&amp;</span><span class=\"n\">quot</span><span class=\"o\">;</span><span class=\"n\">add</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"o\">;.</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"n\">method</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">()))</span> <span class=\"o\">{</span>\n                    <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nf\">UnsupportedOperationException</span><span class=\"o\">();</span>\n                <span class=\"o\">}</span>\n                <span class=\"k\">else</span> <span class=\"o\">{</span>\n                    <span class=\"k\">return</span> <span class=\"n\">method</span><span class=\"o\">.</span><span class=\"na\">invoke</span><span class=\"o\">(</span><span class=\"n\">list</span><span class=\"o\">,</span> <span class=\"n\">args</span><span class=\"o\">);</span>\n                <span class=\"o\">}</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">});</span>\n <span class=\"o\">}</span> \n</code></pre> ",
    "hits": 781,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 106,
    "title": "Linux下一个程序正在写文件，另外一个程序删除该文件，会怎样？",
    "created_at": "2016-10-16 20:20:16",
    "updated_at": "2016-10-16 20:46:46",
    "replied_at": "2016-10-16 20:46:46",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2,
    "user": "{\"id\": 2, \"name\": \"xiemengjun\", \"login\": \"xiemengjun\", \"avatar\": \"https://static.gocn.vip/user/avatar/2/9fa872.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "比如文件共30G，写到了10G，另外一个程序删除该文件。\n\n剩下的20G数据，文件系统会怎么处理？",
    "body_html": "<p>比如文件共 30G，写到了 10G，另外一个程序删除该文件。</p>\n\n<p>剩下的 20G 数据，文件系统会怎么处理？</p>",
    "hits": 409,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 107,
    "title": "release的时候如何把我们的版本号打包到应用中",
    "created_at": "2016-10-16 20:25:29",
    "updated_at": "2017-07-11 14:44:36",
    "replied_at": "2017-07-11 14:44:36",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1954,
    "last_reply_user_login": "kid_408",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我们写代码的时候其实并不知道我们即将发布的版本是什么，而我们经常会使用tag或者使用git的commit来当做版本，而我们的程序也许有一个version的参数，那么如何在发布的时候动态的设定呢？",
    "body_html": "<p>我们写代码的时候其实并不知道我们即将发布的版本是什么，而我们经常会使用 tag 或者使用 git 的 commit 来当做版本，而我们的程序也许有一个 version 的参数，那么如何在发布的时候动态的设定呢？</p>",
    "hits": 504,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 108,
    "title": "go的算法问题",
    "created_at": "2016-10-16 20:42:44",
    "updated_at": "2016-10-21 17:01:40",
    "replied_at": "2016-10-21 17:01:40",
    "replies_count": 8,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 877,
    "last_reply_user_login": "SuperFashi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 414,
    "user": "{\"id\": 414, \"name\": \"ilmari\", \"login\": \"ilmari\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "# Leetcode上的twosum算法怎么用go实现\n## *two Sum\n```go\nGiven nums = [2, 7, 11, 15], target = 9,\n\nBecause nums[0] + nums[1] = 2 + 7 = 9,\nreturn [0, 1].\n```",
    "body_html": "<h2 id=\"Leetcode上的twosum算法怎么用go实现\">Leetcode 上的 twosum 算法怎么用 go 实现</h2><h2 id=\"*two Sum\">*two Sum</h2> <pre class=\"highlight go\"><code><span class=\"n\">Given</span> <span class=\"n\">nums</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">7</span><span class=\"p\">,</span> <span class=\"m\">11</span><span class=\"p\">,</span> <span class=\"m\">15</span><span class=\"p\">],</span> <span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"m\">9</span><span class=\"p\">,</span>\n\n<span class=\"n\">Because</span> <span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">2</span> <span class=\"o\">+</span> <span class=\"m\">7</span> <span class=\"o\">=</span> <span class=\"m\">9</span><span class=\"p\">,</span>\n<span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">]</span><span class=\"o\">.</span>\n</code></pre> ",
    "hits": 526,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 109,
    "title": "请问 Go 的 fmt 是什么单词的缩写？",
    "created_at": "2016-10-16 22:27:31",
    "updated_at": "2018-03-09 20:14:18",
    "replied_at": "2018-03-09 20:14:18",
    "replies_count": 34,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 810,
    "last_reply_user_login": "simple",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 322,
    "user": "{\"id\": 322, \"name\": \"qianyunlai\", \"login\": \"qianyunlai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/q.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题：请问 Go 的 fmt 是什么单词的缩写？",
    "body_html": "<p>如题：请问 Go 的 fmt 是什么单词的缩写？</p>",
    "hits": 1308,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 110,
    "title": "看完基础书籍应该怎么做",
    "created_at": "2016-10-16 22:32:56",
    "updated_at": "2016-10-17 10:54:33",
    "replied_at": "2016-10-17 10:54:33",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 895,
    "last_reply_user_login": "xichen",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 414,
    "user": "{\"id\": 414, \"name\": \"ilmari\", \"login\": \"ilmari\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "看完一些go的基础教程，然后应该看哪些进阶类的书籍呢？或者是看些开源的小项目吗？",
    "body_html": "<p>看完一些 go 的基础教程，然后应该看哪些进阶类的书籍呢？或者是看些开源的小项目吗？</p>",
    "hits": 391,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 111,
    "title": "Crane，支持最新swarmkit 特性的容器管理面板，完全开源",
    "created_at": "2016-10-17 07:07:30",
    "updated_at": "2016-10-17 07:07:30",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 431,
    "user": "{\"id\": 431, \"name\": \"xds2000\", \"login\": \"xds2000\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "![logo](https://raw.githubusercontent.com/Dataman-Cloud/crane/master/doc/img/crane-logo-black.png &quot;logo&quot;)\n\nCrane, maintained by dataman-cloud, is a docker control panel based on latest docker release. Besides swarm features, Crane implements some badly needed functionalities by enterprise user, such as private registries authentation, ACL and application DAB(distributed application bundle) sharing. The smart fuzzy search function give user quickly access to the desired page. Crane can help storing registry auth pair, from where you can choose a predefined registry auth pair when deploying a DAB, without the need to docker login when access private image. Crane can also help sharing your private images with your coworkers easily.\n\nhttps://github.com/Dataman-Cloud/crane\n\n",
    "body_html": "<p><img src=\"https://raw.githubusercontent.com/Dataman-Cloud/crane/master/doc/img/crane-logo-black.png\" title=\"&quot;logo&quot;\" alt=\"logo\"></p>\n\n<p>Crane, maintained by dataman-cloud, is a docker control panel based on latest docker release. Besides swarm features, Crane implements some badly needed functionalities by enterprise user, such as private registries authentation, ACL and application DAB(distributed application bundle) sharing. The smart fuzzy search function give user quickly access to the desired page. Crane can help storing registry auth pair, from where you can choose a predefined registry auth pair when deploying a DAB, without the need to docker login when access private image. Crane can also help sharing your private images with your coworkers easily.</p>\n\n<p><a href=\"https://github.com/Dataman-Cloud/crane\" rel=\"nofollow\" target=\"_blank\">https://github.com/Dataman-Cloud/crane</a></p>",
    "hits": 303,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 112,
    "title": "关于beego bee makefile中的设置求大神解惑？",
    "created_at": "2016-10-17 08:48:52",
    "updated_at": "2016-10-17 10:09:05",
    "replied_at": "2016-10-17 10:09:05",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 882,
    "last_reply_user_login": "chuzhaoqian",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 882,
    "user": "{\"id\": 882, \"name\": \"chuzhaoqian\", \"login\": \"chuzhaoqian\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "[Makefile](https://github.com/beego/bee/blob/master/Makefile &quot;Makefile&quot;)\n\n```markdown\n.PHONY: all test clean build install\n\nGOFLAGS ?= $(GOFLAGS:)\n\nall: install test\n\nbuild:\n\tgo build $(GOFLAGS) ./...\n\ninstall:\n\tgo get $(GOFLAGS) ./...\n\ntest: install\n\tgo test $(GOFLAGS) ./...\n\nbench: install\n\tgo test -run=NONE -bench=. $(GOFLAGS) ./...\n\nclean:\n\tgo clean $(GOFLAGS) -i ./...\n```\n\nGOFLAGS ?= $(GOFLAGS:) 中的GOFLAGS:表示什么？\ngo build $(GOFLAGS) ./...  中的./...是表示当前目录中的所有文件么？",
    "body_html": "<p><a href=\"https://github.com/beego/bee/blob/master/Makefile%20%22Makefile%22\" title=\"\">Makefile</a></p>\n <pre class=\"highlight markdown\"><code>.PHONY: all test clean build install\n\nGOFLAGS ?= $(GOFLAGS:)\n\nall: install test\n\nbuild:\n    go build $(GOFLAGS) ./...\n\ninstall:\n    go get $(GOFLAGS) ./...\n\ntest: install\n    go test $(GOFLAGS) ./...\n\nbench: install\n    go test -run=NONE -bench=. $(GOFLAGS) ./...\n\nclean:\n    go clean $(GOFLAGS) -i ./...\n</code></pre> \n<p>GOFLAGS ?= $(GOFLAGS:) 中的 GOFLAGS:表示什么？\ngo build $(GOFLAGS) ./...  中的./...是表示当前目录中的所有文件么？</p>",
    "hits": 539,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 113,
    "title": "GoCN 第一期《老司机带你看 Go 风景》——游戏达人达达",
    "created_at": "2016-10-17 09:26:26",
    "updated_at": "2020-02-18 19:04:01",
    "replied_at": "2019-07-16 15:00:35",
    "replies_count": 42,
    "node_name": "线上活动",
    "node_id": 40,
    "last_reply_user_id": 7895,
    "last_reply_user_login": "hu5210898",
    "grade": "excellent",
    "likes_count": 1,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 1,
    "body": "GoCN 本期老司机系列我们请来了游戏后端开发的达人，之前也分享过很多游戏开发经验 —— @达达 为大家解答关于Go 游戏开发方面的问题。\r\n\r\n达达是来自真有趣信息科技有限公司的CTO，非科班老司机，在游戏和互联网行业摸爬滚打十余载，擅长各种降低研发难度和成本的奇技淫巧，曾负责《神仙道》、《仙侠道》等项目的服务端架构设计和研发，目前正在逐步整理并开源真有趣团队的游戏服务端技术架构和开发流程，请关注 https://github.com/funny/ 了解最新进展，欢迎广大同行参与开源框架的研发。\r\n\r\n![](https://github.com/gocn/images/blob/master/269e6c88f90b5ceb69095566bd4503b5.jpeg?raw=true)\r\n\r\n不欢迎任何与主题无关的讨论和喷子。\r\n\r\n下面欢迎大家对Go游戏开发方面的问题向 @达达 提问，请直接回帖提问！\r\n\r\n&gt; 达达的个人博客：http://1234n.com/\r\n&gt; 知乎的专栏：https://zhuanlan.zhihu.com/idada\r\n&gt; 最热门的一个回答：Go 的垃圾回收机制在实践中有哪些需要注意的地方？https://www.zhihu.com/question/21615032/answer/18781477\r\n\r\n本次活动持续两天，2016-10-17至2016-10-18，达达会在空闲时间上来给大家一一回答。",
    "body_html": "<p>GoCN 本期老司机系列我们请来了游戏后端开发的达人，之前也分享过很多游戏开发经验 —— @ 达达 为大家解答关于 Go 游戏开发方面的问题。</p>\n\n<p>达达是来自真有趣信息科技有限公司的 CTO，非科班老司机，在游戏和互联网行业摸爬滚打十余载，擅长各种降低研发难度和成本的奇技淫巧，曾负责《神仙道》、《仙侠道》等项目的服务端架构设计和研发，目前正在逐步整理并开源真有趣团队的游戏服务端技术架构和开发流程，请关注 <a href=\"https://github.com/funny/\" rel=\"nofollow\" target=\"_blank\">https://github.com/funny/</a> 了解最新进展，欢迎广大同行参与开源框架的研发。</p>\n\n<p><img src=\"https://github.com/gocn/images/blob/master/269e6c88f90b5ceb69095566bd4503b5.jpeg?raw=true\" title=\"\" alt=\"\"></p>\n\n<p>不欢迎任何与主题无关的讨论和喷子。</p>\n\n<p>下面欢迎大家对 Go 游戏开发方面的问题向 @ 达达 提问，请直接回帖提问！</p>\n\n<p>&gt; 达达的个人博客：<a href=\"http://1234n.com/\" rel=\"nofollow\" target=\"_blank\">http://1234n.com/</a>\n&gt; 知乎的专栏：<a href=\"https://zhuanlan.zhihu.com/idada\" rel=\"nofollow\" target=\"_blank\">https://zhuanlan.zhihu.com/idada</a>\n&gt; 最热门的一个回答：Go 的垃圾回收机制在实践中有哪些需要注意的地方？<a href=\"https://www.zhihu.com/question/21615032/answer/18781477\" rel=\"nofollow\" target=\"_blank\">https://www.zhihu.com/question/21615032/answer/18781477</a></p>\n\n<p>本次活动持续两天，2016-10-17 至 2016-10-18，达达会在空闲时间上来给大家一一回答。</p>",
    "hits": 1308,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 115,
    "title": "自己也是新手，一个极好的链接 https://tour.golang.org/basics/",
    "created_at": "2016-10-17 10:57:13",
    "updated_at": "2016-10-17 10:59:01",
    "replied_at": "2016-10-17 10:59:01",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 895,
    "user": "{\"id\": 895, \"name\": \"xichen\", \"login\": \"xichen\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "本人留学生， 学校要用go做课程语言写作业，入门学习1个月。 \n\nhttps://tour.golang.org/basics/\n这个链接帮助很大，有讲解的内容，可以随时的对代码编译，验证自己的猜想\n很不错。 \n\n",
    "body_html": "<p>本人留学生， 学校要用 go 做课程语言写作业，入门学习 1 个月。 </p>\n\n<p><a href=\"https://tour.golang.org/basics/\" rel=\"nofollow\" target=\"_blank\">https://tour.golang.org/basics/</a>\n这个链接帮助很大，有讲解的内容，可以随时的对代码编译，验证自己的猜想\n很不错。 </p>",
    "hits": 326,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 116,
    "title": "interface method 返回 interface 如何实现？",
    "created_at": "2016-10-17 11:18:43",
    "updated_at": "2016-10-17 12:33:14",
    "replied_at": "2016-10-17 12:33:14",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 904,
    "last_reply_user_login": "boilingbit",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 244,
    "user": "{\"id\": 244, \"name\": \"zensh\", \"login\": \"zensh\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "需求来自于 https://github.com/teambition/ratelimiter-go 这个库，它是基于 redis 实现的接口速率控制。\n\n当前的实现会显示的依赖 &quot;gopkg.in/redis.v5&quot; ，我希望去掉这个显示的依赖，通过 interface 来定义需要的 redis 接口，从而可以支持 v3, v4, v5 等不同的版本，甚至其它 redis 实现（只要实现了定义的 interface）。\n\n目前存在的问题就是 `interface method 返回 interface` 的问题：\n\n```go\ntype redisResult interface {\n\tResult() (interface{}, error)\n}\n\ntype baseRedisClient interface {\n\tDel(...string) redisResult\n\tScriptLoad(string) redisResult\n\tEvalSha(string, []string, ...interface{}) redisResult\n}\n```\n具体代码详见 https://github.com/teambition/ratelimiter-go/blob/dev/ratelimiter.go#L36\n\n这个目前会报错：\n```\n➜  ratelimiter-go git:(dev) go test\n# github.com/teambition/ratelimiter-go_test\n./example_test.go:19: cannot use client (type *redis.Client) as type ratelimiter.redisClient in argument to ratelimiter.New:\n\t*redis.Client does not implement ratelimiter.redisClient (wrong type for Del method)\n\t\thave Del(...string) *redis.IntCmd\n\t\twant Del(...string) ratelimiter.redisResult\n...\n```\n\ngoogle 了一把，有这样一个答案：[How to implement interface method with return type is an interface in Golang](http://stackoverflow.com/questions/11921634/how-to-implement-interface-method-with-return-type-is-an-interface-in-golang) ，但这个解决不了我的需求，因为它要修改 method 实现方的代码。\n\n-----\n最终放弃了上面这种实现方式，而是由使用者来实现 RedisClient interface，通过这种方式来支持不同版本不同实现的 redis client。\n```go\ntype RedisClient interface {\n    RateDel(string) error\n    RateEvalSha(string, []string, ...interface{}) (interface{}, error)\n    RateScriptLoad(string) (string, error)\n}\n```",
    "body_html": "<p>需求来自于 <a href=\"https://github.com/teambition/ratelimiter-go\" rel=\"nofollow\" target=\"_blank\">https://github.com/teambition/ratelimiter-go</a> 这个库，它是基于 redis 实现的接口速率控制。</p>\n\n<p>当前的实现会显示的依赖 \"gopkg.in/redis.v5\" ，我希望去掉这个显示的依赖，通过 interface 来定义需要的 redis 接口，从而可以支持 v3, v4, v5 等不同的版本，甚至其它 redis 实现（只要实现了定义的 interface）。</p>\n\n<p>目前存在的问题就是 <code>interface method 返回 interface</code> 的问题：</p>\n <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">redisResult</span> <span class=\"k\">interface</span> <span class=\"p\">{</span>\n    <span class=\"n\">Result</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"k\">interface</span><span class=\"p\">{},</span> <span class=\"kt\">error</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">type</span> <span class=\"n\">baseRedisClient</span> <span class=\"k\">interface</span> <span class=\"p\">{</span>\n    <span class=\"n\">Del</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"n\">redisResult</span>\n    <span class=\"n\">ScriptLoad</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"n\">redisResult</span>\n    <span class=\"n\">EvalSha</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"p\">[]</span><span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"k\">interface</span><span class=\"p\">{})</span> <span class=\"n\">redisResult</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>具体代码详见 <a href=\"https://github.com/teambition/ratelimiter-go/blob/dev/ratelimiter.go#L36\" rel=\"nofollow\" target=\"_blank\">https://github.com/teambition/ratelimiter-go/blob/dev/ratelimiter.go#L36</a></p>\n\n<p>这个目前会报错：</p>\n <pre class=\"highlight plaintext\"><code>➜  ratelimiter-go git:(dev) go test\n# github.com/teambition/ratelimiter-go_test\n./example_test.go:19: cannot use client (type *redis.Client) as type ratelimiter.redisClient in argument to ratelimiter.New:\n    *redis.Client does not implement ratelimiter.redisClient (wrong type for Del method)\n        have Del(...string) *redis.IntCmd\n        want Del(...string) ratelimiter.redisResult\n...\n</code></pre> \n<p>google 了一把，有这样一个答案：<a href=\"http://stackoverflow.com/questions/11921634/how-to-implement-interface-method-with-return-type-is-an-interface-in-golang\" rel=\"nofollow\" target=\"_blank\" title=\"\">How to implement interface method with return type is an interface in Golang</a> ，但这个解决不了我的需求，因为它要修改 method 实现方的代码。</p>\n\n<hr>\n\n<p>最终放弃了上面这种实现方式，而是由使用者来实现 RedisClient interface，通过这种方式来支持不同版本不同实现的 redis client。</p>\n <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">RedisClient</span> <span class=\"k\">interface</span> <span class=\"p\">{</span>\n    <span class=\"n\">RateDel</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"kt\">error</span>\n    <span class=\"n\">RateEvalSha</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"p\">[]</span><span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"k\">interface</span><span class=\"p\">{})</span> <span class=\"p\">(</span><span class=\"k\">interface</span><span class=\"p\">{},</span> <span class=\"kt\">error</span><span class=\"p\">)</span>\n    <span class=\"n\">RateScriptLoad</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"kt\">error</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 382,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 117,
    "title": "关于https链接无法添加Header认证的问题",
    "created_at": "2016-10-17 11:42:29",
    "updated_at": "2016-10-17 12:44:51",
    "replied_at": "2016-10-17 12:44:51",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 192,
    "user": "{\"id\": 192, \"name\": \"nino\", \"login\": \"nino\", \"avatar\": \"https://gocn.vip/system/letter_avatars/n.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "因为最近项目有需求要写一个代理，我刚好最近拿来练手，就找了一个开源项目进行二次开发（有点偷懒），然后自己添加了一个密码认证模块,要使用的话添加一个&quot;Proxy \nAuthorization&quot;。这种方法然后在http链接的时候是测试成功，但是https的时候我发现认证的时候就发现无论什么heaher都无法添加了。(代码没有同步，所以比较尴尬了，先没法贴代码，我google过，然后看了那部分的源码，还是一脸懵逼，提问不对的地方请指正)\n",
    "body_html": "<p>因为最近项目有需求要写一个代理，我刚好最近拿来练手，就找了一个开源项目进行二次开发（有点偷懒），然后自己添加了一个密码认证模块,要使用的话添加一个\"Proxy \nAuthorization\"。这种方法然后在 http 链接的时候是测试成功，但是 https 的时候我发现认证的时候就发现无论什么 heaher 都无法添加了。(代码没有同步，所以比较尴尬了，先没法贴代码，我 google 过，然后看了那部分的源码，还是一脸懵逼，提问不对的地方请指正)</p>",
    "hits": 356,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 118,
    "title": "初来乍到，两处问题",
    "created_at": "2016-10-17 11:45:57",
    "updated_at": "2016-10-17 12:46:00",
    "replied_at": "2016-10-17 12:46:00",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 902,
    "user": "{\"id\": 902, \"name\": \"UkiyoESoragoto\", \"login\": \"UkiyoESoragoto\", \"avatar\": \"https://gocn.vip/system/letter_avatars/u.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "### 验证码太花\n注册的时候刷新了10次以上\n\n### 好像头像只支持jpg格式\n我换了ie 还有 firefox 都不能上传png图片\n\n其实也不是什么大问题，就是略微影响体验吧。\n\n祝社区越办越好",
    "body_html": "<h3 id=\"验证码太花\">验证码太花</h3>\n<p>注册的时候刷新了 10 次以上</p>\n<h3 id=\"好像头像只支持jpg格式\">好像头像只支持 jpg 格式</h3>\n<p>我换了 ie 还有 firefox 都不能上传 png 图片</p>\n\n<p>其实也不是什么大问题，就是略微影响体验吧。</p>\n\n<p>祝社区越办越好</p>",
    "hits": 224,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 119,
    "title": "go-rm: 使用 Golang 来写 Redis 模块的开源库",
    "created_at": "2016-10-17 12:09:43",
    "updated_at": "2016-10-17 12:09:43",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 900,
    "user": "{\"id\": 900, \"name\": \"wener\", \"login\": \"wener\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Redis 的使用以及相当广泛了,最近 Redis 的模块规范也出来了,必定后面会有越来越多的模块出现.Redis 的模块接口非常简洁,实现新的模块也很容易,但使用 C 来写模块还是有太多的不便,因此做了 [go-rm](https://github.com/wenerme/go-rm), 你可以非常方便的使用 Golang 来实现 Redis 的模块.\n\n目前已经实现了的模块有\n\n* [rxhash](https://github.com/redismodule/rxhash)\n\t* 对 Hash 类型进行的扩展\n* [redisbleve](https://github.com/redismodule/redisbleve)\n\t* 集成 bleve 到 Redis 中实现全文索引\n\n觉得 Redis 的模块还有很大的潜力,如果感兴趣可以一起来参与开发.如果有任何问题也可以尽量提问.\n",
    "body_html": "<p>Redis 的使用以及相当广泛了,最近 Redis 的模块规范也出来了,必定后面会有越来越多的模块出现.Redis 的模块接口非常简洁,实现新的模块也很容易,但使用 C 来写模块还是有太多的不便,因此做了 <a href=\"https://github.com/wenerme/go-rm\" rel=\"nofollow\" target=\"_blank\" title=\"\">go-rm</a>, 你可以非常方便的使用 Golang 来实现 Redis 的模块.</p>\n\n<p>目前已经实现了的模块有</p>\n\n<ul>\n<li>\n<a href=\"https://github.com/redismodule/rxhash\" rel=\"nofollow\" target=\"_blank\" title=\"\">rxhash</a>\n\n<ul>\n<li>对 Hash 类型进行的扩展</li>\n</ul>\n</li>\n<li>\n<a href=\"https://github.com/redismodule/redisbleve\" rel=\"nofollow\" target=\"_blank\" title=\"\">redisbleve</a>\n\n<ul>\n<li>集成 bleve 到 Redis 中实现全文索引</li>\n</ul>\n</li>\n</ul>\n\n<p>觉得 Redis 的模块还有很大的潜力,如果感兴趣可以一起来参与开发.如果有任何问题也可以尽量提问.</p>",
    "hits": 296,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 120,
    "title": "golang在国内外的项目应用案例",
    "created_at": "2016-10-17 14:16:01",
    "updated_at": "2016-10-18 10:38:49",
    "replied_at": "2016-10-18 10:38:49",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 257,
    "last_reply_user_login": "小平",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 257,
    "user": "{\"id\": 257, \"name\": \"小平\", \"login\": \"lcp8888\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "知道国内七牛，京东，盛大，金山，美团，豆瓣，小米等等很多的公司都在基于go开发一些项目\n看到谢大在知乎的回答,国内大部分用在什么领域\nnsq：bitly开源的消息队列系统，性能非常高，目前他们每天处理数十亿条的消息\ndocker:基于lxc的一个虚拟打包工具，能够实现PAAS平台的组建。\npacker:用来生成不同平台的镜像文件，例如VM、vbox、AWS等，作者是vagrant的作者\nskynet：分布式调度框架\nDoozer：分布式同步工具，类似ZooKeeper\nHeka：mazila开源的日志处理系统\ncbfs：couchbase开源的分布式文件系统\ntsuru：开源的PAAS平台，和SAE实现的功能一模一样\ngroupcache：memcahe作者写的用于Google下载系统的缓存系统\ngod：类似redis的缓存系统，但是支持分布式和扩展性\ngor：网络流量抓包和重放工具\n以下是一些公司，只是一小部分：\nhttp://Apcera.com\nhttp://Stathat.com\nJuju at Canonical/Ubuntu, presentation\nhttp://Beachfront.iO at Beachfront Media\nCloudFlare\nSoundcloud\nMozilla\nDisqus\nhttp://Bit.ly\nHeroku\ngoogle\nyoutube",
    "body_html": "<p>知道国内七牛，京东，盛大，金山，美团，豆瓣，小米等等很多的公司都在基于 go 开发一些项目\n看到谢大在知乎的回答,国内大部分用在什么领域\nnsq：bitly 开源的消息队列系统，性能非常高，目前他们每天处理数十亿条的消息\ndocker:基于 lxc 的一个虚拟打包工具，能够实现 PAAS 平台的组建。\npacker:用来生成不同平台的镜像文件，例如 VM、vbox、AWS 等，作者是 vagrant 的作者\nskynet：分布式调度框架\nDoozer：分布式同步工具，类似 ZooKeeper\nHeka：mazila 开源的日志处理系统\ncbfs：couchbase 开源的分布式文件系统\ntsuru：开源的 PAAS 平台，和 SAE 实现的功能一模一样\ngroupcache：memcahe 作者写的用于 Google 下载系统的缓存系统\ngod：类似 redis 的缓存系统，但是支持分布式和扩展性\ngor：网络流量抓包和重放工具\n以下是一些公司，只是一小部分：\n<a href=\"http://Apcera.com\" rel=\"nofollow\" target=\"_blank\">http://Apcera.com</a>\n<a href=\"http://Stathat.com\" rel=\"nofollow\" target=\"_blank\">http://Stathat.com</a>\nJuju at Canonical/Ubuntu, presentation\n<a href=\"http://Beachfront.iO\" rel=\"nofollow\" target=\"_blank\">http://Beachfront.iO</a> at Beachfront Media\nCloudFlare\nSoundcloud\nMozilla\nDisqus\n<a href=\"http://Bit.ly\" rel=\"nofollow\" target=\"_blank\">http://Bit.ly</a>\nHeroku\ngoogle\nyoutube</p>",
    "hits": 379,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 121,
    "title": "go微服务",
    "created_at": "2016-10-17 14:17:39",
    "updated_at": "2016-10-17 14:31:20",
    "replied_at": "2016-10-17 14:24:07",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 911,
    "last_reply_user_login": "alexstocks",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 911,
    "user": "{\"id\": 911, \"name\": \"alexstocks\", \"login\": \"alexstocks\", \"avatar\": \"https://static.gocn.vip/user/avatar/911/a07a35.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 508,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 122,
    "title": "golang异常时如何返回HttpResponse",
    "created_at": "2016-10-17 14:23:22",
    "updated_at": "2016-10-17 17:32:25",
    "replied_at": "2016-10-17 17:32:25",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 569,
    "last_reply_user_login": "philc",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 70,
    "user": "{\"id\": 70, \"name\": \"Samuier\", \"login\": \"Samuier\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "RT,在Python中我们可以使用:\ntry:\n\t...\n\treturn HttpResponse(...)\nexcept:\n\treturn HttpResponse(...)\n这样在发生异常时,总能返回数据,但是在golang中由于defer不能使用return,怎样才能保证在Controller函数中总能返回数据呢?",
    "body_html": "<p>RT,在 Python 中我们可以使用:\ntry:\n    ...\n    return HttpResponse(...)\nexcept:\n    return HttpResponse(...)\n这样在发生异常时,总能返回数据,但是在 golang 中由于 defer 不能使用 return,怎样才能保证在 Controller 函数中总能返回数据呢?</p>",
    "hits": 378,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 123,
    "title": "beego orm  事务串联多个函数",
    "created_at": "2016-10-17 14:27:34",
    "updated_at": "2017-11-06 14:17:24",
    "replied_at": "2017-11-06 14:17:24",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 321,
    "last_reply_user_login": "白眉",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 426,
    "user": "{\"id\": 426, \"name\": \"east\", \"login\": \"east\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "用beego的时候，moudel 里面有多个函数，怎么让这些函数都包含在一个事务中呢？除了每个函数都包含一个 orm 参数这个方法。\n\n```go\nbegin\nf1()\nf2()\nerr := f3()\nif err != nil {\n   rollback\n}\ncommit\n```\n如果回滚的话，f1, f2, f3 里面对数据库的操作都回滚。",
    "body_html": "<p>用 beego 的时候，moudel 里面有多个函数，怎么让这些函数都包含在一个事务中呢？除了每个函数都包含一个 orm 参数这个方法。</p>\n <pre class=\"highlight go\"><code><span class=\"n\">begin</span>\n<span class=\"n\">f1</span><span class=\"p\">()</span>\n<span class=\"n\">f2</span><span class=\"p\">()</span>\n<span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">f3</span><span class=\"p\">()</span>\n<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n   <span class=\"n\">rollback</span>\n<span class=\"p\">}</span>\n<span class=\"n\">commit</span>\n</code></pre> \n<p>如果回滚的话，f1, f2, f3 里面对数据库的操作都回滚。</p>",
    "hits": 723,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 124,
    "title": "请教关于sync.Pool相关问题",
    "created_at": "2016-10-17 14:28:28",
    "updated_at": "2016-10-18 12:20:26",
    "replied_at": "2016-10-18 12:20:26",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 982,
    "last_reply_user_login": "su21",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 124,
    "user": "{\"id\": 124, \"name\": \"mnhkahn\", \"login\": \"mnhkahn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我们的业务场景是每次查询会创建一个`slice`，这个`slice`大小不固定。最早想到的优化是申请`slice`的时候`make`一个较大的初始值。后来发现还是得继续优化，就用`sync.Pool`试了一下。\n\n\tvar idsPool = sync.Pool{\n\t\tNew: func() interface{} {\n\t\t\tids := make([]int64, 0, 20000)\n\t\t\treturn &amp;ids\n\t\t},\n\t}\n\n\tfunc NewIds() []int64 {\n\t\tids := idsPool.Get().(*[]int64)\n\t\t*ids = (*ids)[:0]\n\t\tidsPool.Put(ids)\n\t\treturn *ids\n\t}\n\n代码如上，压了一把效果不明显。是不是`slice`这种对象不适合这么用呢？",
    "body_html": "<p>我们的业务场景是每次查询会创建一个<code>slice</code>，这个<code>slice</code>大小不固定。最早想到的优化是申请<code>slice</code>的时候<code>make</code>一个较大的初始值。后来发现还是得继续优化，就用<code>sync.Pool</code>试了一下。</p>\n\n<p>var idsPool = sync.Pool{\n        New: func() interface{} {\n            ids := make([] int64, 0, 20000)\n            return &amp;ids\n        },\n    }</p>\n\n<p>func NewIds() [] int64 {\n        ids := idsPool.Get().(*[] int64)\n        *ids = (*ids)[:0]\n        idsPool.Put(ids)\n        return *ids\n    }</p>\n\n<p>代码如上，压了一把效果不明显。是不是<code>slice</code>这种对象不适合这么用呢？</p>",
    "hits": 521,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 125,
    "title": "兼容dubbo的微服务框架dubbogo;dubbo的完整go语言实现",
    "created_at": "2016-10-17 14:29:36",
    "updated_at": "2016-10-18 08:51:55",
    "replied_at": "2016-10-18 08:51:55",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 958,
    "last_reply_user_login": "zzhua",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 911,
    "user": "{\"id\": 911, \"name\": \"alexstocks\", \"login\": \"alexstocks\", \"avatar\": \"https://static.gocn.vip/user/avatar/911/a07a35.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "## 1 说明\n\n一个支持dubbo协议的go微服务框架；dubbo的完整go语言实现[dubbogo](https://github.com/dubbo/go-for-apache-dubbo)，以及其代码示例[dubbogo-examples](https://github.com/dubbo/go-for-apache-dubbo/tree/master/examples)。\n\n## 2 feature\n\nv0.2 feature list:\n\n 1. 基于 dubbo(hessian2.0) + tcp  实现的 go client 以阻塞并行方式调用 dubbo（hessian2）原生协议的 java server 的服务；\n\nv 0.1.2 feature list:\n\n 1. 基于 jsonrpc 2.0 + http 实现的go client可以调用基于dubbogo（jsonrpc 2.0）实现的go server 的服务； \n 2. 基于 jsonrpc 2.0 + http 实现的go client可以调用基于dubbo（jsonrpc 2.0）实现的java server 的服务； \n 3. 基于 jsonrpc 2.0 + http 实现的java client可以调用基于dubbogo（jsonrpc 2.0）实现的go server 的服务；\n\nv 2.6.5.0 feature list:\n\n\tRole: Consumer(√), Provider(√);\n\n\tTransport: HTTP(√), TCP(√);\n\n\tCodec: JsonRPC v2(√), Hessian v2(√);\n\n\tRegistry: ZooKeeper(√);\n\n\tCluster Strategy: Failover(√);\n\n\tLoad Balance: Random(√);\n\n\tFilter: Echo Health Check(√);\n\n\n### 2.1 补充\n\n将近两年【2016/10/07 ~ 2018/05/18】的多次延期后，v0.2.0 于今日发布，目前仅仅在 client 层面支持了 dubbo 原生协议。\n\nv0.1.2 其实现基于 http + jsonrpc2.0.\n\nv 2.6.5.0\n 作为一个大版本迭代，对之前版本的代码进行了重构。基于dubbo的extension模块和分层的代码设计(包括 protocol layer, registry layer, cluster layer, config 等等)。我们的目标是：你可以对这些分层接口进行新的实现，并通过调用 extension 模块的“ extension.SetXXX ”方法来覆盖 dubbo-go [同 go-for-apache-dubbo ]的默认实现，以完成自己的特殊需求而无需修改源代码;\n \n项目已经合并进dubbo社区，详情请查看最新项目地址：\nhttps://github.com/dubbo/go-for-apache-dubbo\n\n## 3 代码示例 \n\n 1. 在dubbogo-examples的示例[user-info](https://github.com/AlexStocks/dubbogo-examples/tree/master/user-info)下面添加了client &amp; server &amp; java-client &amp; java-server 四个示例，完整演示了上面 v0.1.2 所示的三个featrue； \n 2. 在dubbogo-examples的示例[user-info](https://github.com/AlexStocks/dubbogo-examples/tree/master/user-info)下面添加了 client &amp; java-server两个示例，完整演示了上面 v0.2.0 所示的featrue；\n 3. 最新v2.6.5.0的example请查看：https://github.com/dubbo/go-for-apache-dubbo/tree/master/examples  配合代码重构做了一个比较大的变更。 ",
    "body_html": "<h2 id=\"1 说明\">1 说明</h2>\n<p>一个支持 dubbo 协议的 go 微服务框架；dubbo 的完整 go 语言实现<a href=\"https://github.com/dubbo/go-for-apache-dubbo\" rel=\"nofollow\" target=\"_blank\" title=\"\">dubbogo</a>，以及其代码示例<a href=\"https://github.com/dubbo/go-for-apache-dubbo/tree/master/examples\" rel=\"nofollow\" target=\"_blank\" title=\"\">dubbogo-examples</a>。</p>\n<h2 id=\"2 feature\">2 feature</h2>\n<p>v0.2 feature list:</p>\n\n<ol>\n<li>基于 dubbo(hessian2.0) + tcp  实现的 go client 以阻塞并行方式调用 dubbo（hessian2）原生协议的 java server 的服务；</li>\n</ol>\n\n<p>v 0.1.2 feature list:</p>\n\n<ol>\n<li>基于 jsonrpc 2.0 + http 实现的 go client 可以调用基于 dubbogo（jsonrpc 2.0）实现的 go server 的服务； </li>\n<li>基于 jsonrpc 2.0 + http 实现的 go client 可以调用基于 dubbo（jsonrpc 2.0）实现的 java server 的服务； </li>\n<li>基于 jsonrpc 2.0 + http 实现的 java client 可以调用基于 dubbogo（jsonrpc 2.0）实现的 go server 的服务；</li>\n</ol>\n\n<p>v 2.6.5.0 feature list:</p>\n\n<p>Role: Consumer(√), Provider(√);</p>\n\n<p>Transport: HTTP(√), TCP(√);</p>\n\n<p>Codec: JsonRPC v2(√), Hessian v2(√);</p>\n\n<p>Registry: ZooKeeper(√);</p>\n\n<p>Cluster Strategy: Failover(√);</p>\n\n<p>Load Balance: Random(√);</p>\n\n<p>Filter: Echo Health Check(√);</p>\n<h3 id=\"2.1 补充\">2.1 补充</h3>\n<p>将近两年【2016/10/07 ~ 2018/05/18】的多次延期后，v0.2.0 于今日发布，目前仅仅在 client 层面支持了 dubbo 原生协议。</p>\n\n<p>v0.1.2 其实现基于 http + jsonrpc2.0.</p>\n\n<p>v 2.6.5.0\n 作为一个大版本迭代，对之前版本的代码进行了重构。基于 dubbo 的 extension 模块和分层的代码设计 (包括 protocol layer, registry layer, cluster layer, config 等等)。我们的目标是：你可以对这些分层接口进行新的实现，并通过调用 extension 模块的 “ extension.SetXXX ” 方法来覆盖 dubbo-go [同 go-for-apache-dubbo ] 的默认实现，以完成自己的特殊需求而无需修改源代码;</p>\n\n<p>项目已经合并进 dubbo 社区，详情请查看最新项目地址：\n<a href=\"https://github.com/dubbo/go-for-apache-dubbo\" rel=\"nofollow\" target=\"_blank\">https://github.com/dubbo/go-for-apache-dubbo</a></p>\n<h2 id=\"3 代码示例\">3 代码示例</h2>\n<ol>\n<li>在 dubbogo-examples 的示例<a href=\"https://github.com/AlexStocks/dubbogo-examples/tree/master/user-info\" rel=\"nofollow\" target=\"_blank\" title=\"\">user-info</a>下面添加了 client &amp; server &amp; java-client &amp; java-server 四个示例，完整演示了上面 v0.1.2 所示的三个 featrue； </li>\n<li>在 dubbogo-examples 的示例<a href=\"https://github.com/AlexStocks/dubbogo-examples/tree/master/user-info\" rel=\"nofollow\" target=\"_blank\" title=\"\">user-info</a>下面添加了 client &amp; java-server 两个示例，完整演示了上面 v0.2.0 所示的 featrue；</li>\n<li>最新 v2.6.5.0 的 example 请查看：<a href=\"https://github.com/dubbo/go-for-apache-dubbo/tree/master/examples\" rel=\"nofollow\" target=\"_blank\">https://github.com/dubbo/go-for-apache-dubbo/tree/master/examples</a>  配合代码重构做了一个比较大的变更。 </li>\n</ol>",
    "hits": 846,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 126,
    "title": "乐视云 招聘PAAS研发工程师",
    "created_at": "2016-10-17 15:21:54",
    "updated_at": "2016-10-18 10:31:02",
    "replied_at": "2016-10-18 10:31:02",
    "replies_count": 1,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 290,
    "user": "{\"id\": 290, \"name\": \"jiulongzaitian\", \"login\": \"jiulongzaitian\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "**职位： 云平台后端开发工程师**\n岗位职责： \n\n1 参与开发PAAS平台的后台系统的设计与实现， 主要包括：基于Docker 技术的镜像自动构建，日志收集，容器监控，负载均衡,服务发现，容器网络等系统模块的设计和开发。 \n2 参与docker ，kubernetes开源社区的代码贡献\n\n\n职责要求： \n\n计算机或相关专业本科以上学历 \n熟练掌握一门编程语言，有shell/Go/Python语言经验者最佳，有Linux 环境开发经验者优先 \n熟悉Docker容器技术 \n熟悉kubernetes等框架者优先 \n熟悉beego等web框架 \n\n以上技能要求至少满足两项，多技能者优先 ~~~ \n\n开发语言： \ngo,python 为主 \n\n-工作地址：北京市朝阳区酒仙桥北路甲10号 201号楼\n-福利待遇：五险一金、弹性工作制、 股票期权，商业保险，班车，海外工作机会\n\n**职位：PAAS 平台研发工程师**\n岗位职责： \n\n使用docker，kubernetes 参与开发和设计PAAS平台的后台系统的设计与实现 。\n\n1、 负责云计算PaaS平台子系统的设计及核心模块开发工作；\n2、 参与kubernetes ， docker 开源社区，负责跟踪PaaS新技术与实现；\n3、 能充分理解产品需求，具有一定钻研能力，能解决各种技术难题；\n4、 与团队成员分享经验和新技术，帮助团队成长。\n\n职责要求： \n\n计算机或相关专业本科以上学历 \n熟练掌握一门编程语言，有shell/Go/Python语言经验者最佳，有Linux 环境开发经验者优先 \n熟悉Docker容器技术 \n熟悉kubernetes 框架者优先 \n熟悉beego等web框架 \n熟悉容器网络协议者优先\n\n以上技能要求至少满足两项，多技能者优先 ~~~ \n\n开发语言： \ngo 为主 \n\n-工作地址：北京市朝阳区酒仙桥北路甲10号 201号楼\n-福利待遇：五险一金、弹性工作制、 股票期权，商业保险，班车，海外工作机会\n\n**职位：云平台后台研发工程师**\n岗位职责： \n\n参与开发平台的后台系统的设计与实现， 主要包括：基于Docker 技术的镜像自动构建，日志收集，容器监控，负载均衡等系统模块的设计和开发。 \n\n\n职责要求： \n\n计算机或相关专业本科以上学历 \n熟练掌握一门编程语言，有shell/Go/Python语言经验者最佳，有Linux 环境开发经验者优先 \n熟悉Docker容器技术 \n熟悉mesos、kubernetes、openshift 等框架者优先 \n熟悉tornado，beego等web框架 \n\n以上技能要求至少满足两项，多技能者优先 ~~~ \n\n开发语言： \ngo,python 为主 \n\n-工作地址：北京市朝阳区酒仙桥北路甲10号 201号楼\n-福利待遇：五险一金、弹性工作制、 股票期权，商业保险，班车，海外工作机会\n\n\n\n欢迎志同道合的朋友加入： zhangjie@le.com",
    "body_html": "<p><strong>职位： 云平台后端开发工程师</strong>\n岗位职责： </p>\n\n<p>1 参与开发 PAAS 平台的后台系统的设计与实现， 主要包括：基于 Docker 技术的镜像自动构建，日志收集，容器监控，负载均衡,服务发现，容器网络等系统模块的设计和开发。 \n2 参与 docker ，kubernetes 开源社区的代码贡献</p>\n\n<p>职责要求： </p>\n\n<p>计算机或相关专业本科以上学历 \n熟练掌握一门编程语言，有 shell/Go/Python 语言经验者最佳，有 Linux 环境开发经验者优先 \n熟悉 Docker 容器技术 \n熟悉 kubernetes 等框架者优先 \n熟悉 beego 等 web 框架 </p>\n\n<p>以上技能要求至少满足两项，多技能者优先 ~~~ </p>\n\n<p>开发语言： \ngo,python 为主 </p>\n\n<p>-工作地址：北京市朝阳区酒仙桥北路甲 10 号 201 号楼\n-福利待遇：五险一金、弹性工作制、 股票期权，商业保险，班车，海外工作机会</p>\n\n<p><strong>职位：PAAS 平台研发工程师</strong>\n岗位职责： </p>\n\n<p>使用 docker，kubernetes 参与开发和设计 PAAS 平台的后台系统的设计与实现 。</p>\n\n<p>1、 负责云计算 PaaS 平台子系统的设计及核心模块开发工作；\n2、 参与 kubernetes ， docker 开源社区，负责跟踪 PaaS 新技术与实现；\n3、 能充分理解产品需求，具有一定钻研能力，能解决各种技术难题；\n4、 与团队成员分享经验和新技术，帮助团队成长。</p>\n\n<p>职责要求： </p>\n\n<p>计算机或相关专业本科以上学历 \n熟练掌握一门编程语言，有 shell/Go/Python 语言经验者最佳，有 Linux 环境开发经验者优先 \n熟悉 Docker 容器技术 \n熟悉 kubernetes 框架者优先 \n熟悉 beego 等 web 框架 \n熟悉容器网络协议者优先</p>\n\n<p>以上技能要求至少满足两项，多技能者优先 ~~~ </p>\n\n<p>开发语言： \ngo 为主 </p>\n\n<p>-工作地址：北京市朝阳区酒仙桥北路甲 10 号 201 号楼\n-福利待遇：五险一金、弹性工作制、 股票期权，商业保险，班车，海外工作机会</p>\n\n<p><strong>职位：云平台后台研发工程师</strong>\n岗位职责： </p>\n\n<p>参与开发平台的后台系统的设计与实现， 主要包括：基于 Docker 技术的镜像自动构建，日志收集，容器监控，负载均衡等系统模块的设计和开发。 </p>\n\n<p>职责要求： </p>\n\n<p>计算机或相关专业本科以上学历 \n熟练掌握一门编程语言，有 shell/Go/Python 语言经验者最佳，有 Linux 环境开发经验者优先 \n熟悉 Docker 容器技术 \n熟悉 mesos、kubernetes、openshift 等框架者优先 \n熟悉 tornado，beego 等 web 框架 </p>\n\n<p>以上技能要求至少满足两项，多技能者优先 ~~~ </p>\n\n<p>开发语言： \ngo,python 为主 </p>\n\n<p>-工作地址：北京市朝阳区酒仙桥北路甲 10 号 201 号楼\n-福利待遇：五险一金、弹性工作制、 股票期权，商业保险，班车，海外工作机会</p>\n\n<p>欢迎志同道合的朋友加入： zhangjie@le.com</p>",
    "hits": 536,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 127,
    "title": "beego / admin",
    "created_at": "2016-10-17 16:01:05",
    "updated_at": "2016-10-17 18:02:16",
    "replied_at": "2016-10-17 18:02:16",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 87,
    "last_reply_user_login": "lychee",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 407,
    "user": "{\"id\": 407, \"name\": \"lucyne\", \"login\": \"lucyne\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "谢大能不测讲下beego admin下的分组管理和节点管理？\n\n",
    "body_html": "<p>谢大能不测讲下 beego admin 下的分组管理和节点管理？</p>",
    "hits": 507,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 128,
    "title": "关于使用orm的问题",
    "created_at": "2016-10-17 16:20:13",
    "updated_at": "2016-10-17 16:36:26",
    "replied_at": "2016-10-17 16:36:26",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 682,
    "last_reply_user_login": "mintzhao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 940,
    "user": "{\"id\": 940, \"name\": \"zradelaide1122\", \"login\": \"zradelaide1122\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "之前写go 提供api的程序，先是beego,后是macaron+gorm 其中都是用了开源的orm库。\n但是最近看了另外一些代码，框架是beego，但是内部并没有使用任何的orm 框架，而是sql 直接查询，转换成[]map[string]string,的格式返回。也咨询过一些人，他们说，这种做法是有经验的人干的，不是很理解，谁能帮我讲解下，用orm和后者，不用orm之间的不同在哪里",
    "body_html": "<p>之前写 go 提供 api 的程序，先是 beego,后是 macaron+gorm 其中都是用了开源的 orm 库。\n但是最近看了另外一些代码，框架是 beego，但是内部并没有使用任何的 orm 框架，而是 sql 直接查询，转换成 [] map[string] string,的格式返回。也咨询过一些人，他们说，这种做法是有经验的人干的，不是很理解，谁能帮我讲解下，用 orm 和后者，不用 orm 之间的不同在哪里</p>",
    "hits": 377,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 129,
    "title": "我就想知道10月24号你们知道是什么日子不？",
    "created_at": "2016-10-17 16:27:01",
    "updated_at": "2016-10-18 10:32:50",
    "replied_at": "2016-10-18 10:32:50",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 683,
    "last_reply_user_login": "erbajie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 683,
    "user": "{\"id\": 683, \"name\": \"erbajie\", \"login\": \"erbajie\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "![](http://ww1.sinaimg.cn/large/005RpNbhjw1f8vb2k5jv1j30g508eaae.jpg)\n作为一个程序猿...\n “干得比驴累，吃得比猪差，起得比鸡早，睡得比狗晚，看上去比谁都好，五年后比谁都老。”\n \n时不时的，你们肯定都会听到过这样的新闻 XXX 又猝死了… 很荣幸我们在和平年代还能感受到生存威胁。猝死程序员年年有，每次听到消息都下意识摸摸心脏，拍拍胸口，嘱咐小心脏“你可要好好跳”。\n![](http://ww1.sinaimg.cn/large/005RpNbhjw1f8vb2bhevyj30640643yh.jpg)\n\n大学的时候选专业，以为选一个技术流僻专业当大神会有很多妹子追，结果妹子没交几个，身边基友一大堆，工作后直接断了活路，硕果仅存的异性都是内外兼修的爷们儿，至今哥还是“单身汪”，人生大事未解决，蓝瘦、香菇…\n![](http://ww2.sinaimg.cn/large/005RpNbhjw1f8vb215v31j3064064mx4.jpg)\n作为苦逼的程序员，我们的希望真的很简单： 我们只想安安静静的敲代码； 给我们那么点时间去认识一个妹子； 能像大家一样吃饭睡觉打豆豆….. 你看，女孩都有三八妇女节半天假了…. 作为男同胞们，没有半天假也就算了，作为男同胞里面极有可能“猝死”的码农们， 10 月 24 （ 1024 ）这么“巧合”的一天，请关爱自己。 同时也呼吁大家重视程序员这个群体，在 10.24 没有被提上法定节假日之前，希望每一个程序员知道，让身边的每一个人知道，就像 11.11 一样，总有人开了先头，才会发扬壮大。\n\n**在码易，我们相信蚂蚁的精神：“只要我做就能成功”。所以， Now, DO IT.**\n\n即刻起，加入码易“接私活”计划，利用闲暇时间，开启 1 年赚取 30W 的大门！ 程序员“接私活”请戳这里： http://www.mayigeek.com/ （请先注册码易认证开发者，完善个人技能信息，现在注册立刻获得 50 元项目开启基金（成功接单后即可提现））\n\n同时也欢迎加入我们的码易私活小分队 Q 交流群： 281024 （加群请备注自己的码易昵称）\n\n感谢GO社区，终于知道怎么发图片了~\n![](http://ww2.sinaimg.cn/mw690/005RpNbhjw1f8vce7z9kcj30c80jk3zz.jpg)",
    "body_html": "<p><img src=\"http://ww1.sinaimg.cn/large/005RpNbhjw1f8vb2k5jv1j30g508eaae.jpg\" title=\"\" alt=\"\">\n作为一个程序猿...\n “干得比驴累，吃得比猪差，起得比鸡早，睡得比狗晚，看上去比谁都好，五年后比谁都老。”</p>\n\n<p>时不时的，你们肯定都会听到过这样的新闻 XXX 又猝死了… 很荣幸我们在和平年代还能感受到生存威胁。猝死程序员年年有，每次听到消息都下意识摸摸心脏，拍拍胸口，嘱咐小心脏 “你可要好好跳”。\n<img src=\"http://ww1.sinaimg.cn/large/005RpNbhjw1f8vb2bhevyj30640643yh.jpg\" title=\"\" alt=\"\"></p>\n\n<p>大学的时候选专业，以为选一个技术流僻专业当大神会有很多妹子追，结果妹子没交几个，身边基友一大堆，工作后直接断了活路，硕果仅存的异性都是内外兼修的爷们儿，至今哥还是 “单身汪”，人生大事未解决，蓝瘦、香菇…\n<img src=\"http://ww2.sinaimg.cn/large/005RpNbhjw1f8vb215v31j3064064mx4.jpg\" title=\"\" alt=\"\">\n作为苦逼的程序员，我们的希望真的很简单： 我们只想安安静静的敲代码； 给我们那么点时间去认识一个妹子； 能像大家一样吃饭睡觉打豆豆….. 你看，女孩都有三八妇女节半天假了…. 作为男同胞们，没有半天假也就算了，作为男同胞里面极有可能 “猝死” 的码农们， 10 月 24（ 1024 ）这么 “巧合” 的一天，请关爱自己。 同时也呼吁大家重视程序员这个群体，在 10.24 没有被提上法定节假日之前，希望每一个程序员知道，让身边的每一个人知道，就像 11.11 一样，总有人开了先头，才会发扬壮大。</p>\n\n<p><strong>在码易，我们相信蚂蚁的精神：“只要我做就能成功”。所以， Now, DO IT.</strong></p>\n\n<p>即刻起，加入码易 “接私活” 计划，利用闲暇时间，开启 1 年赚取 30W 的大门！ 程序员 “接私活” 请戳这里： <a href=\"http://www.mayigeek.com/\" rel=\"nofollow\" target=\"_blank\">http://www.mayigeek.com/</a>（请先注册码易认证开发者，完善个人技能信息，现在注册立刻获得 50 元项目开启基金（成功接单后即可提现））</p>\n\n<p>同时也欢迎加入我们的码易私活小分队 Q 交流群： 281024（加群请备注自己的码易昵称）</p>\n\n<p>感谢 GO 社区，终于知道怎么发图片了~\n<img src=\"http://ww2.sinaimg.cn/mw690/005RpNbhjw1f8vce7z9kcj30c80jk3zz.jpg\" title=\"\" alt=\"\"></p>",
    "hits": 374,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 130,
    "title": "golang是否支持Binary Only Packages?",
    "created_at": "2016-10-17 20:15:48",
    "updated_at": "2016-10-17 20:30:34",
    "replied_at": "2016-10-17 20:30:34",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 18,
    "last_reply_user_login": "dada",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 950,
    "user": "{\"id\": 950, \"name\": \"owen\", \"login\": \"owen\", \"avatar\": \"https://gocn.vip/system/letter_avatars/o.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "使用golang开发，为了相对安全，局部代码想进行闭源，golang是否支持只引用二进制包不提供源码的方式？",
    "body_html": "<p>使用 golang 开发，为了相对安全，局部代码想进行闭源，golang 是否支持只引用二进制包不提供源码的方式？</p>",
    "hits": 459,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 131,
    "title": "【搬运】goim官方资料",
    "created_at": "2016-10-18 09:20:31",
    "updated_at": "2016-10-18 09:20:31",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 111,
    "user": "{\"id\": 111, \"name\": \"niugou\", \"login\": \"niugou\", \"avatar\": \"https://gocn.vip/system/letter_avatars/n.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "[官方文档](https://github.com/Terry-Mao/goim/blob/master/README_cn.md)\n\n# 特性  \n- 轻量级\n- 高性能\n- 纯Golang实现\n- 支持单个、多个、单房间以及广播消息推送\n- 支持单个Key多个订阅者（可限制订阅者最大人数）\n- 心跳支持（应用心跳和tcp、keepalive）\n- 支持安全验证（未授权用户不能订阅）\n- 多协议支持（websocket，tcp）\n- 可拓扑的架构（job、logic模块可动态无限扩展）\n- 基于Kafka做异步消息推送",
    "body_html": "<p><a href=\"https://github.com/Terry-Mao/goim/blob/master/README_cn.md\" rel=\"nofollow\" target=\"_blank\" title=\"\">官方文档</a></p>\n<h2 id=\"特性\">特性</h2>\n<ul>\n<li>轻量级</li>\n<li>高性能</li>\n<li>纯 Golang 实现</li>\n<li>支持单个、多个、单房间以及广播消息推送</li>\n<li>支持单个 Key 多个订阅者（可限制订阅者最大人数）</li>\n<li>心跳支持（应用心跳和 tcp、keepalive）</li>\n<li>支持安全验证（未授权用户不能订阅）</li>\n<li>多协议支持（websocket，tcp）</li>\n<li>可拓扑的架构（job、logic 模块可动态无限扩展）</li>\n<li>基于 Kafka 做异步消息推送</li>\n</ul>",
    "hits": 316,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 132,
    "title": "大家都有哪些 golang code  的 debug 的神器推荐？",
    "created_at": "2016-10-18 09:29:50",
    "updated_at": "2016-11-01 09:58:44",
    "replied_at": "2016-11-01 09:58:44",
    "replies_count": 11,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 960,
    "last_reply_user_login": "tupunco",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 74,
    "user": "{\"id\": 74, \"name\": \"xieyanke\", \"login\": \"xieyanke\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 732,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 134,
    "title": "Go有哪些好的视频教程",
    "created_at": "2016-10-18 09:41:25",
    "updated_at": "2017-08-18 13:56:42",
    "replied_at": "2017-08-18 13:56:42",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 137,
    "last_reply_user_login": "故城",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我找了一些youtube上面的视频：\n- Go in 5 Minutes: https://www.youtube.com/channel/UC2GHqYE3fVJMncbrRd8AqcA\n- Applied Go: https://www.youtube.com/channel/UCsf0cZc4jnvE5-CjEhWN8pg\n- The Go Programming Language: https://www.youtube.com/user/gocoding\n- Gopher Academy: https://www.youtube.com/channel/UCx9QVEApa5BKLw9r8cnOFEA\n- Boston Golang: https://www.youtube.com/channel/UCWeX1DrOg9unIw9-PkS_tWA\n- Todd McLeod: https://www.youtube.com/user/toddmcleod\n- Golang UK Conference: https://www.youtube.com/channel/UC9ZNrGdT2aAdrNbX78lbNlQ\n- Golang Vids: https://www.youtube.com/channel/UCz7KItbg3owOqMpB5IjI7sA\n- Golang TV: https://www.youtube.com/user/golangtv\n\n自己翻墙",
    "body_html": "<p>我找了一些 youtube 上面的视频：</p>\n\n<ul>\n<li>Go in 5 Minutes: <a href=\"https://www.youtube.com/channel/UC2GHqYE3fVJMncbrRd8AqcA\" rel=\"nofollow\" target=\"_blank\">https://www.youtube.com/channel/UC2GHqYE3fVJMncbrRd8AqcA</a>\n</li>\n<li>Applied Go: <a href=\"https://www.youtube.com/channel/UCsf0cZc4jnvE5-CjEhWN8pg\" rel=\"nofollow\" target=\"_blank\">https://www.youtube.com/channel/UCsf0cZc4jnvE5-CjEhWN8pg</a>\n</li>\n<li>The Go Programming Language: <a href=\"https://www.youtube.com/user/gocoding\" rel=\"nofollow\" target=\"_blank\">https://www.youtube.com/user/gocoding</a>\n</li>\n<li>Gopher Academy: <a href=\"https://www.youtube.com/channel/UCx9QVEApa5BKLw9r8cnOFEA\" rel=\"nofollow\" target=\"_blank\">https://www.youtube.com/channel/UCx9QVEApa5BKLw9r8cnOFEA</a>\n</li>\n<li>Boston Golang: <a href=\"https://www.youtube.com/channel/UCWeX1DrOg9unIw9-PkS_tWA\" rel=\"nofollow\" target=\"_blank\">https://www.youtube.com/channel/UCWeX1DrOg9unIw9-PkS_tWA</a>\n</li>\n<li>Todd McLeod: <a href=\"https://www.youtube.com/user/toddmcleod\" rel=\"nofollow\" target=\"_blank\">https://www.youtube.com/user/toddmcleod</a>\n</li>\n<li>Golang UK Conference: <a href=\"https://www.youtube.com/channel/UC9ZNrGdT2aAdrNbX78lbNlQ\" rel=\"nofollow\" target=\"_blank\">https://www.youtube.com/channel/UC9ZNrGdT2aAdrNbX78lbNlQ</a>\n</li>\n<li>Golang Vids: <a href=\"https://www.youtube.com/channel/UCz7KItbg3owOqMpB5IjI7sA\" rel=\"nofollow\" target=\"_blank\">https://www.youtube.com/channel/UCz7KItbg3owOqMpB5IjI7sA</a>\n</li>\n<li>Golang TV: <a href=\"https://www.youtube.com/user/golangtv\" rel=\"nofollow\" target=\"_blank\">https://www.youtube.com/user/golangtv</a>\n</li>\n</ul>\n\n<p>自己翻墙</p>",
    "hits": 434,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 135,
    "title": "Go的protobuf库大家用哪一个啊？",
    "created_at": "2016-10-18 10:12:32",
    "updated_at": "2016-10-19 17:50:10",
    "replied_at": "2016-10-19 17:50:10",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 636,
    "last_reply_user_login": "stevewang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "目前看下来有两个不错\n\n1. https://github.com/golang/protobuf\n2. https://github.com/gogo/protobuf\n\n但是看上去gogo的性能和可用性上面更好一点，etcd这些好像都是在用，大家在实际项目中怎么使用的",
    "body_html": "<p>目前看下来有两个不错</p>\n\n<ol>\n<li><a href=\"https://github.com/golang/protobuf\" rel=\"nofollow\" target=\"_blank\">https://github.com/golang/protobuf</a></li>\n<li><a href=\"https://github.com/gogo/protobuf\" rel=\"nofollow\" target=\"_blank\">https://github.com/gogo/protobuf</a></li>\n</ol>\n\n<p>但是看上去 gogo 的性能和可用性上面更好一点，etcd 这些好像都是在用，大家在实际项目中怎么使用的</p>",
    "hits": 418,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 136,
    "title": "求推荐好用的，长期维护的golang ui库",
    "created_at": "2016-10-18 10:16:56",
    "updated_at": "2016-10-18 10:46:31",
    "replied_at": "2016-10-18 10:46:31",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 973,
    "last_reply_user_login": "softminer",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 962,
    "user": "{\"id\": 962, \"name\": \"codinghxl\", \"login\": \"codinghxl\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 235,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 137,
    "title": "来这里寻求大神思路",
    "created_at": "2016-10-18 10:19:20",
    "updated_at": "2016-10-18 12:32:10",
    "replied_at": "2016-10-18 12:32:10",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 715,
    "last_reply_user_login": "changjixiong",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 940,
    "user": "{\"id\": 940, \"name\": \"zradelaide1122\", \"login\": \"zradelaide1122\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "现在工作上遇到一个需求，无从下手，没有思路。\n具体是这样，比方说现在有9台服务器， 他们的一些文件都存在于 /home/xxxx 下面   (暂时假设路径一致吧),当 其中有一台，文件发生变动的时候，那么要对其余的8台服务器做文件的同步，最终强调文件同步一致， 有点没思路，望高人指点一二",
    "body_html": "<p>现在工作上遇到一个需求，无从下手，没有思路。\n具体是这样，比方说现在有 9 台服务器， 他们的一些文件都存在于 /home/xxxx 下面   (暂时假设路径一致吧),当 其中有一台，文件发生变动的时候，那么要对其余的 8 台服务器做文件的同步，最终强调文件同步一致， 有点没思路，望高人指点一二</p>",
    "hits": 432,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 138,
    "title": "钛核互动急招Go服务器工程师的职位-想做游戏的看过来 ",
    "created_at": "2016-10-18 10:54:26",
    "updated_at": "2016-10-27 17:40:03",
    "replied_at": "2016-10-27 17:40:03",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 968,
    "last_reply_user_login": "lisa_zhao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 968,
    "user": "{\"id\": 968, \"name\": \"lisa_zhao\", \"login\": \"lisa_zhao\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "关于我们：\n钛核互动成立于2014年10月，创始人团队在游戏行业从业平均达十年以上，做出了多款移动和家用机平台上的大作（永恒战士系列，口袋商业街系列，暴走！僵尸之 城，蚯蚓战士等）。\n钛核致力于建立平等，放权和高效的公司文化，招募和培养精英成员，营造宽松但有激情的开发氛围，追求在智能手机平台上制作出即叫好又叫座的精品游戏！\n创始人团队：\n姚乐中，制作人，04年在美国硅谷进入手机游戏开发领域，在硅谷工作多年后回到北京，将Glu北京工作室建设成业界一流的工作室，是Glu在中国和亚太成功的主要推动者；\n殷炜晔（Franc），美术总监，国际CG界最早成名的华人艺术家之一，十一年游戏领域美术经验， Glu北京工作室美术总监，个人作品集见 www.franc-art.com；\n尹泽弘，技术总监，先后在Gameloft和Glu任职技术经理和技术总监，顶尖的全平台游戏技术专家，亚马逊云服务专家；\n王亮，首席工程师，十五年技术领域经验，系统优化，图形，网络领域的专家。\n你将获得\n你会和一群有多年经验却不忘初心，努力同时达到高制作水准和商业成功的人一起做游戏。\n\uF0D8\t产品和设计领域:我们在核心和休闲方向都获得过系列成功；\n\uF0D8\t技术领域：我们是国内最早使用Unity3D引擎的团队，在3D动作游戏领域有深厚积累，常年和Unity支持部门进行源码级交流；\n\uF0D8\t美术领域：你会和业界少有的在2D绘画，概念设计和3D模型均有超强能力的美术大神Franc合作。\n我们希望找到\n\uF0D8\t热爱做游戏的人。\n\uF0D8\t有专长的综合性人才。 \n\uF0D8\t自我驱动，用心做事的人。\n\uF0D8\t有耐心着眼长远的人。\n\nGolang 服务器工程师\n职位描述：\n1.\t钛核互动所有服务器将会使用弹性云自动伸缩架构，在这里你将能够学习并开发具有国际最先进的云架构方案。\n2.\t我们招聘具有创新精神的工程师，敢创新、思维严谨、勇于承担。\n基本能力要求:\n1.\t热爱玩游戏，热爱开发游戏。具备足够的游戏常识；\n2.\t生活工作态度积极，有足够的团队意识和协作精神；\n3.\t敢创新、思维严谨、勇于承担\n4.\t扎实编程功底，常用算法设计模式可以灵活运用到开发中\n5.\t能够开放心态学习任何新语言新知识\n6.\t能够阅读英文技术文档\n任职技能要求：\n1.\t能够在Linux下开发\n2.\t精通Golang\n加分项：\n1.\t精通网络通讯技术， 对多线程开发和线程安全有较深的理解。\n2.\t熟悉MongoDB, Redis优先\n3.\t有Linux下开发C/C++游戏服务器经验优先，熟悉指针、内存管理，epoll;\n4.\t拥有MMORPG开发经验者优先考虑\n5.\t熟悉云架构，有任何云服务使用经验（aws, aliyun, qingcloud, qcloud, ucloud）\n\nEmai：lisa@taiyouxi.cn\nQQ:3348361317",
    "body_html": "<p>关于我们：\n钛核互动成立于 2014 年 10 月，创始人团队在游戏行业从业平均达十年以上，做出了多款移动和家用机平台上的大作（永恒战士系列，口袋商业街系列，暴走！僵尸之 城，蚯蚓战士等）。\n钛核致力于建立平等，放权和高效的公司文化，招募和培养精英成员，营造宽松但有激情的开发氛围，追求在智能手机平台上制作出即叫好又叫座的精品游戏！\n创始人团队：\n姚乐中，制作人，04 年在美国硅谷进入手机游戏开发领域，在硅谷工作多年后回到北京，将 Glu 北京工作室建设成业界一流的工作室，是 Glu 在中国和亚太成功的主要推动者；\n殷炜晔（Franc），美术总监，国际 CG 界最早成名的华人艺术家之一，十一年游戏领域美术经验， Glu 北京工作室美术总监，个人作品集见 <a href=\"http://www.franc-art.com%EF%BC%9B\" title=\"\">www.franc-art.com；</a>\n尹泽弘，技术总监，先后在 Gameloft 和 Glu 任职技术经理和技术总监，顶尖的全平台游戏技术专家，亚马逊云服务专家；\n王亮，首席工程师，十五年技术领域经验，系统优化，图形，网络领域的专家。\n你将获得\n你会和一群有多年经验却不忘初心，努力同时达到高制作水准和商业成功的人一起做游戏。\n\uF0D8 产品和设计领域:我们在核心和休闲方向都获得过系列成功；\n\uF0D8 技术领域：我们是国内最早使用 Unity3D 引擎的团队，在 3D 动作游戏领域有深厚积累，常年和 Unity 支持部门进行源码级交流；\n\uF0D8 美术领域：你会和业界少有的在 2D 绘画，概念设计和 3D 模型均有超强能力的美术大神 Franc 合作。\n我们希望找到\n\uF0D8 热爱做游戏的人。\n\uF0D8 有专长的综合性人才。 \n\uF0D8 自我驱动，用心做事的人。\n\uF0D8 有耐心着眼长远的人。</p>\n\n<p>Golang 服务器工程师\n职位描述：</p>\n\n<ol>\n<li> 钛核互动所有服务器将会使用弹性云自动伸缩架构，在这里你将能够学习并开发具有国际最先进的云架构方案。</li>\n<li> 我们招聘具有创新精神的工程师，敢创新、思维严谨、勇于承担。\n基本能力要求:</li>\n<li> 热爱玩游戏，热爱开发游戏。具备足够的游戏常识；</li>\n<li> 生活工作态度积极，有足够的团队意识和协作精神；</li>\n<li> 敢创新、思维严谨、勇于承担</li>\n<li> 扎实编程功底，常用算法设计模式可以灵活运用到开发中</li>\n<li> 能够开放心态学习任何新语言新知识</li>\n<li> 能够阅读英文技术文档\n任职技能要求：</li>\n<li> 能够在 Linux 下开发</li>\n<li> 精通 Golang\n加分项：</li>\n<li> 精通网络通讯技术， 对多线程开发和线程安全有较深的理解。</li>\n<li> 熟悉 MongoDB, Redis 优先</li>\n<li> 有 Linux 下开发 C/C++ 游戏服务器经验优先，熟悉指针、内存管理，epoll;</li>\n<li> 拥有 MMORPG 开发经验者优先考虑</li>\n<li> 熟悉云架构，有任何云服务使用经验（aws, aliyun, qingcloud, qcloud, ucloud）</li>\n</ol>\n\n<p>Emai：lisa@taiyouxi.cn\nQQ:3348361317</p>",
    "hits": 466,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 139,
    "title": "感觉社区代码块的显示不是特别好看",
    "created_at": "2016-10-18 11:52:21",
    "updated_at": "2016-10-18 18:35:59",
    "replied_at": "2016-10-18 18:35:59",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2,
    "last_reply_user_login": "itfanr",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 198,
    "user": "{\"id\": 198, \"name\": \"lucky\", \"login\": \"lucky\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "代码块看着有点生硬\n强迫症表示不舒服啊\n不知道谢大能不能设置下",
    "body_html": "<p>代码块看着有点生硬\n强迫症表示不舒服啊\n不知道谢大能不能设置下</p>",
    "hits": 499,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 140,
    "title": "Go 1.7.2 版本发布，修复编译器和运行时",
    "created_at": "2016-10-18 12:18:45",
    "updated_at": "2016-10-19 21:06:35",
    "replied_at": "2016-10-19 21:06:35",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1047,
    "last_reply_user_login": "够浪",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 55,
    "user": "{\"id\": 55, \"name\": \"itsky365\", \"login\": \"itsky365\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Go 1.7.2 版本发布了。该版本主要修复了编译器和运行时状态，点此查看详情\n\n点此查看更多更新内容，以及发行主页\n\n下载地址：\n\nSource code (zip)\nSource code (tar.gz)\n\nhttps://golang.org/dl/\n\nLinux：\nhttps://storage.googleapis.com/golang/go1.7.2.linux-amd64.tar.gz\n\nMacOS：\nhttps://storage.googleapis.com/golang/go1.7.2.darwin-amd64.pkg\n\nWindows：\nhttps://storage.googleapis.com/golang/go1.7.2.windows-amd64.msi\n\nSource：\nhttps://storage.googleapis.com/golang/go1.7.2.src.tar.gz\n",
    "body_html": "<p>Go 1.7.2 版本发布了。该版本主要修复了编译器和运行时状态，点此查看详情</p>\n\n<p>点此查看更多更新内容，以及发行主页</p>\n\n<p>下载地址：</p>\n\n<p>Source code (zip)\nSource code (tar.gz)</p>\n\n<p><a href=\"https://golang.org/dl/\" rel=\"nofollow\" target=\"_blank\">https://golang.org/dl/</a></p>\n\n<p>Linux：\n<a href=\"https://storage.googleapis.com/golang/go1.7.2.linux-amd64.tar.gz\" rel=\"nofollow\" target=\"_blank\">https://storage.googleapis.com/golang/go1.7.2.linux-amd64.tar.gz</a></p>\n\n<p>MacOS：\n<a href=\"https://storage.googleapis.com/golang/go1.7.2.darwin-amd64.pkg\" rel=\"nofollow\" target=\"_blank\">https://storage.googleapis.com/golang/go1.7.2.darwin-amd64.pkg</a></p>\n\n<p>Windows：\n<a href=\"https://storage.googleapis.com/golang/go1.7.2.windows-amd64.msi\" rel=\"nofollow\" target=\"_blank\">https://storage.googleapis.com/golang/go1.7.2.windows-amd64.msi</a></p>\n\n<p>Source：\n<a href=\"https://storage.googleapis.com/golang/go1.7.2.src.tar.gz\" rel=\"nofollow\" target=\"_blank\">https://storage.googleapis.com/golang/go1.7.2.src.tar.gz</a></p>",
    "hits": 574,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 141,
    "title": "【美餐招聘】Web全栈工程师（Go语言）",
    "created_at": "2016-10-18 13:34:47",
    "updated_at": "2016-10-23 15:04:37",
    "replied_at": "2016-10-23 15:04:37",
    "replies_count": 3,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 929,
    "last_reply_user_login": "gogoing",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 984,
    "user": "{\"id\": 984, \"name\": \"meican\", \"login\": \"meican\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "工作职责：\n1. 在具体使用场景中理解用户使用方式和遇到的问题；\n2. 通过 Web 前/后端开发，解决上述问题，带给用户更好的使用体验；\n3. 创造自动化工具，帮助工作伙伴提升运营效率。\n\n任职要求：\n1. 大学本科及以上学历；\n2. 曾独立完成包含前端和后端的 Web 项目（个人项目亦可）；\n3. 熟悉 Unix/Linux 环境；\n4. 熟悉以下语言中的一种：Go/Java/Ruby/Python；\n5. 熟悉至少一种数据库；\n6. 熟悉 HTML5/CSS3/JavaScript；\n7. 熟悉至少一种前端框架：React/Angular/Vue 等；\n8. 基本功扎实，能够写清晰的代码，对代码质量有很高的追求；\n9. 思路清晰，有很好的团队协作能力，乐于分享；\n10. 爱折腾，对新技术充满好奇心；\n11. 对良好代码风格具有强迫症。\n优先条件：\n1. 玩儿过以下语言中的至少一种：Lua/Erlang/Scala/R；\n2. 玩儿过至少一种非关系型数据库；\n3. 能使用 HTML/JavaScript/CSS 绘制原生应用级别的界面；\n4. 熟悉 Play Framework 框架；\n5. 如有 GitHub 账号或技术博客，请在简历中写明。\n\n工作中将涉及的技术：\n- AWS\n- Ansible\n- Gin-Gonic\n- Play Framework \n- Webpack \n- React\n- Angular\n- ES6\n- RESTful API\n- OAuth 2.0 协议\n- LDAP\n- 支付宝、微信支付相关开发\n\n简历投递：longyun@meican.com\n地址：北京市海淀区西三环中外文大厦B座10层",
    "body_html": "<p>工作职责：</p>\n\n<ol>\n<li>在具体使用场景中理解用户使用方式和遇到的问题；</li>\n<li>通过 Web 前/后端开发，解决上述问题，带给用户更好的使用体验；</li>\n<li>创造自动化工具，帮助工作伙伴提升运营效率。</li>\n</ol>\n\n<p>任职要求：</p>\n\n<ol>\n<li>大学本科及以上学历；</li>\n<li>曾独立完成包含前端和后端的 Web 项目（个人项目亦可）；</li>\n<li>熟悉 Unix/Linux 环境；</li>\n<li>熟悉以下语言中的一种：Go/Java/Ruby/Python；</li>\n<li>熟悉至少一种数据库；</li>\n<li>熟悉 HTML5/CSS3/JavaScript；</li>\n<li>熟悉至少一种前端框架：React/Angular/Vue 等；</li>\n<li>基本功扎实，能够写清晰的代码，对代码质量有很高的追求；</li>\n<li>思路清晰，有很好的团队协作能力，乐于分享；</li>\n<li>爱折腾，对新技术充满好奇心；</li>\n<li>对良好代码风格具有强迫症。\n优先条件：</li>\n<li>玩儿过以下语言中的至少一种：Lua/Erlang/Scala/R；</li>\n<li>玩儿过至少一种非关系型数据库；</li>\n<li>能使用 HTML/JavaScript/CSS 绘制原生应用级别的界面；</li>\n<li>熟悉 Play Framework 框架；</li>\n<li>如有 GitHub 账号或技术博客，请在简历中写明。</li>\n</ol>\n\n<p>工作中将涉及的技术：</p>\n\n<ul>\n<li>AWS</li>\n<li>Ansible</li>\n<li>Gin-Gonic</li>\n<li>Play Framework </li>\n<li>Webpack </li>\n<li>React</li>\n<li>Angular</li>\n<li>ES6</li>\n<li>RESTful API</li>\n<li>OAuth 2.0 协议</li>\n<li>LDAP</li>\n<li>支付宝、微信支付相关开发</li>\n</ul>\n\n<p>简历投递：longyun@meican.com\n地址：北京市海淀区西三环中外文大厦 B 座 10 层</p>",
    "hits": 567,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 142,
    "title": "关于Idea 怎么run  beego程序",
    "created_at": "2016-10-18 14:22:46",
    "updated_at": "2017-01-06 16:15:42",
    "replied_at": "2017-01-06 16:15:42",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1526,
    "last_reply_user_login": "yinjun622",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 88,
    "user": "{\"id\": 88, \"name\": \"qi19901212\", \"login\": \"qi19901212\", \"avatar\": \"https://static.gocn.vip/user/avatar/88/4a10d7.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "其他环境配置完成。使用idea 开发beego程序，怎么run（直接点击按钮的方式不是指令）**！！！这里不讨论这种方式多low，只需要这种方法**\n\n\n图片发布不了，点击一下就会打开\n\n\n[![](图)](http://7d9jel.com1.z0.glb.clouddn.com/QQ%E6%88%AA%E5%9B%BE20161018141805.png)",
    "body_html": "<p>其他环境配置完成。使用 idea 开发 beego 程序，怎么 run（直接点击按钮的方式不是指令）<strong>！！！这里不讨论这种方式多 low，只需要这种方法</strong></p>\n\n<p>图片发布不了，点击一下就会打开</p>\n\n<p><a href=\"http://7d9jel.com1.z0.glb.clouddn.com/QQ%E6%88%AA%E5%9B%BE20161018141805.png\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"%E5%9B%BE\" title=\"\" alt=\"\"></a></p>",
    "hits": 409,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 143,
    "title": "Go语言现在能写移动端了吗？",
    "created_at": "2016-10-18 15:13:37",
    "updated_at": "2016-10-19 09:37:40",
    "replied_at": "2016-10-19 09:36:42",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 166,
    "last_reply_user_login": "cwind",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 38,
    "user": "{\"id\": 38, \"name\": \"TianGenglan\", \"login\": \"TianGenglan\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "现在Go语言能写手机端吗？能的话现在有啥成熟的框架呢？安卓或iOS",
    "body_html": "<p>现在 Go 语言能写手机端吗？能的话现在有啥成熟的框架呢？安卓或 iOS</p>",
    "hits": 507,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 146,
    "title": "beego表操作通用函数",
    "created_at": "2016-10-18 15:50:23",
    "updated_at": "2016-10-18 17:24:47",
    "replied_at": "2016-10-18 17:24:47",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 909,
    "last_reply_user_login": "ysqi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 70,
    "user": "{\"id\": 70, \"name\": \"Samuier\", \"login\": \"Samuier\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "使用bee工具生成model,顺便会为每个model生成GetOne,GetAll等函数,麻烦问下大家在进行表操作(增删改查)时,是每个表都有相应的增删改查函数,还是有通用的增删改查函数啊.\n要是每个表都有几个函数的话,表多起来函数就太多了,而且都是重复性的函数....\n大家有没有好的解决方法啊.\n",
    "body_html": "<p>使用 bee 工具生成 model,顺便会为每个 model 生成 GetOne,GetAll 等函数,麻烦问下大家在进行表操作 (增删改查) 时,是每个表都有相应的增删改查函数,还是有通用的增删改查函数啊.\n要是每个表都有几个函数的话,表多起来函数就太多了,而且都是重复性的函数....\n大家有没有好的解决方法啊.</p>",
    "hits": 464,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 147,
    "title": "有没有好用的开源CDN服务？",
    "created_at": "2016-10-18 16:03:47",
    "updated_at": "2016-10-18 16:40:55",
    "replied_at": "2016-10-18 16:40:55",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2,
    "user": "{\"id\": 2, \"name\": \"xiemengjun\", \"login\": \"xiemengjun\", \"avatar\": \"https://static.gocn.vip/user/avatar/2/9fa872.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "场景是后端为ceph文件系统，存储大量小文件。业务仅仅是读写，没有删除。\n\n我想在文件系统上层加一层CDN，用来加速读。不一定的posix接口，http等也可以。\n\n谢谢！",
    "body_html": "<p>场景是后端为 ceph 文件系统，存储大量小文件。业务仅仅是读写，没有删除。</p>\n\n<p>我想在文件系统上层加一层 CDN，用来加速读。不一定的 posix 接口，http 等也可以。</p>\n\n<p>谢谢！</p>",
    "hits": 850,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 148,
    "title": "社区菜单，只有浮动到菜单名称才能点击",
    "created_at": "2016-10-18 18:08:32",
    "updated_at": "2016-10-21 13:52:31",
    "replied_at": "2016-10-21 13:47:49",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 904,
    "last_reply_user_login": "boilingbit",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 833,
    "user": "{\"id\": 833, \"name\": \"CodyGuo\", \"login\": \"CodyGuo\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "鼠标移动到菜单名称上才能点击，点了半天都不跳转，不知道的还以为自己鼠标坏了。\n**建议修改为浮动到整个菜单框体上就可点击。**",
    "body_html": "<p>鼠标移动到菜单名称上才能点击，点了半天都不跳转，不知道的还以为自己鼠标坏了。\n<strong>建议修改为浮动到整个菜单框体上就可点击。</strong></p>",
    "hits": 321,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 149,
    "title": "字符串如何转换为时间戳",
    "created_at": "2016-10-18 18:30:57",
    "updated_at": "2016-10-18 18:49:10",
    "replied_at": "2016-10-18 18:49:10",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 544,
    "last_reply_user_login": "yougg",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 999,
    "user": "{\"id\": 999, \"name\": \"ninefive\", \"login\": \"ninefive\", \"avatar\": \"https://gocn.vip/system/letter_avatars/n.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "解析json获取到一个时间字符串：\n```\n2016-02-11T02:33:08.972113228Z\n```\n如何将该字符串转换为时间戳？\n",
    "body_html": "<p>解析 json 获取到一个时间字符串：</p>\n <pre class=\"highlight plaintext\"><code>2016-02-11T02:33:08.972113228Z\n</code></pre> \n<p>如何将该字符串转换为时间戳？</p>",
    "hits": 396,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 150,
    "title": "使用go-oci8 的程序编译打包后，可以把oci8依赖的环境一起打进去吗？",
    "created_at": "2016-10-18 23:16:16",
    "updated_at": "2016-10-19 14:08:18",
    "replied_at": "2016-10-19 14:08:18",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 992,
    "last_reply_user_login": "Archer",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1006,
    "user": "{\"id\": 1006, \"name\": \"runc\", \"login\": \"runc\", \"avatar\": \"https://gocn.vip/system/letter_avatars/r.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "使用go-oci8开发的程序编译打包后，可以把oci8依赖的oracle client环境一起打进去吗？就是不用再去配置oracle instant client的环境，直接可以可以使用，这个怎么做呢？",
    "body_html": "<p>使用 go-oci8 开发的程序编译打包后，可以把 oci8 依赖的 oracle client 环境一起打进去吗？就是不用再去配置 oracle instant client 的环境，直接可以可以使用，这个怎么做呢？</p>",
    "hits": 250,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 151,
    "title": "win10+sublime text3+gosublime还需要什么插件实现代码的跳转，方便查看源码",
    "created_at": "2016-10-19 04:01:11",
    "updated_at": "2016-10-19 09:35:20",
    "replied_at": "2016-10-19 09:24:11",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 130,
    "last_reply_user_login": "geidoo",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 221,
    "user": "{\"id\": 221, \"name\": \"chore\", \"login\": \"chore\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题，请各位帮忙。",
    "body_html": "<p>如题，请各位帮忙。</p>",
    "hits": 325,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 152,
    "title": "go中有没有类似python的装饰器",
    "created_at": "2016-10-19 10:07:53",
    "updated_at": "2016-10-19 10:34:10",
    "replied_at": "2016-10-19 10:34:10",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 70,
    "user": "{\"id\": 70, \"name\": \"Samuier\", \"login\": \"Samuier\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "由于需要记录每个人对数据库的操作,所以每个对数据库更新,删除,修改的操作函数都要加一段一样的代码.\n感觉每个地方都加的话太麻烦了,有没有类似python的装饰器的东西,避免重复的代码?\n看了golang的依赖注入,在依赖注入中宿主没法获得注入的函数的参数(或者是我没找到方法)......\n大家有没有好一点的方法啊~~",
    "body_html": "<p>由于需要记录每个人对数据库的操作,所以每个对数据库更新,删除,修改的操作函数都要加一段一样的代码.\n感觉每个地方都加的话太麻烦了,有没有类似 python 的装饰器的东西,避免重复的代码?\n看了 golang 的依赖注入,在依赖注入中宿主没法获得注入的函数的参数 (或者是我没找到方法)......\n大家有没有好一点的方法啊~~</p>",
    "hits": 484,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 153,
    "title": "使用什么docker image来运行Go程序",
    "created_at": "2016-10-19 10:58:07",
    "updated_at": "2017-09-01 10:15:43",
    "replied_at": "2017-09-01 10:15:43",
    "replies_count": 22,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1478,
    "last_reply_user_login": "myonlyzzy",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "目前大家都是使用什么docker image来运行我们的Go程序啊，默认的golang包还是有点大，想尽量做到最小，大家有什么好的推荐吗？",
    "body_html": "<p>目前大家都是使用什么 docker image 来运行我们的 Go 程序啊，默认的 golang 包还是有点大，想尽量做到最小，大家有什么好的推荐吗？</p>",
    "hits": 876,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 154,
    "title": "go实现定时任务有什么好办法?",
    "created_at": "2016-10-19 11:07:56",
    "updated_at": "2016-10-19 11:43:00",
    "replied_at": "2016-10-19 11:43:00",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 111,
    "last_reply_user_login": "niugou",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "rt\n原生ok\n有库的求推荐",
    "body_html": "<p>rt\n原生 ok\n有库的求推荐</p>",
    "hits": 267,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 155,
    "title": "High Performance Go",
    "created_at": "2016-10-19 11:13:51",
    "updated_at": "2020-02-11 02:02:18",
    "replied_at": "2016-10-20 09:10:51",
    "replies_count": 7,
    "node_name": "原创分享",
    "node_id": 3,
    "last_reply_user_id": 49,
    "last_reply_user_login": "mutoulbj",
    "grade": "excellent",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 1,
    "body": "Dave Cheney之前在Gopher China分享过一次怎么写出高性能的Go程序，这一次有进一步的讲解了如何写高性能的Go程序。\r\n\r\nhttp://talks.godoc.org/github.com/davecheney/high-performance-go-workshop/high-performance-go-workshop.slide#1",
    "body_html": "<p>Dave Cheney 之前在 Gopher China 分享过一次怎么写出高性能的 Go 程序，这一次有进一步的讲解了如何写高性能的 Go 程序。</p>\n\n<p><a href=\"http://talks.godoc.org/github.com/davecheney/high-performance-go-workshop/high-performance-go-workshop.slide#1\" rel=\"nofollow\" target=\"_blank\">http://talks.godoc.org/github.com/davecheney/high-performance-go-workshop/high-performance-go-workshop.slide#1</a></p>",
    "hits": 622,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 156,
    "title": "beego多个数据库建表",
    "created_at": "2016-10-19 11:46:49",
    "updated_at": "2016-10-19 13:35:48",
    "replied_at": "2016-10-19 13:35:48",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 70,
    "user": "{\"id\": 70, \"name\": \"Samuier\", \"login\": \"Samuier\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "beego中使用多个数据库时,可以使用别名(o.Using(别名))来区分,但是在建表的时候发现没法区分不同的数据库,建立不同的表\n比如:\n我有两个表:TableA(想要自动建到dbA),TableB(想要自动建到dbB)\n在package models的init函数中是这样写的:\n```\nfunc init() {\n\torm.RegisterDriver(&quot;mysql&quot;, orm.DRMySQL)\n\t\n\torm.RegisterDataBase(&quot;A&quot;, &quot;mysql&quot;, &quot;root:@/dbA?charset=utf8&quot;)\n\torm.RegisterDataBase(&quot;B&quot;, &quot;mysql&quot;, &quot;root:@/dbB?charset=utf8&quot;)\n\t\n\torm.RegisterModel(new(TableA))\n\torm.RegisterModel(new(TableB))\n\t\n\torm.RunSyncdb(&quot;A&quot;, false, false)\n\torm.RunSyncdb(&quot;B&quot;, false, false)\n}\n```\n发现两个数据库中都有TableA和TableB.\n麻烦问下怎样才能在不同的数据库中建立不同的表啊...",
    "body_html": "<p>beego 中使用多个数据库时,可以使用别名 (o.Using(别名)) 来区分,但是在建表的时候发现没法区分不同的数据库,建立不同的表\n比如:\n我有两个表:TableA(想要自动建到 dbA),TableB(想要自动建到 dbB)\n在 package models 的 init 函数中是这样写的:</p>\n <pre class=\"highlight plaintext\"><code>func init() {\n    orm.RegisterDriver(&amp;quot;mysql&amp;quot;, orm.DRMySQL)\n\n    orm.RegisterDataBase(&amp;quot;A&amp;quot;, &amp;quot;mysql&amp;quot;, &amp;quot;root:@/dbA?charset=utf8&amp;quot;)\n    orm.RegisterDataBase(&amp;quot;B&amp;quot;, &amp;quot;mysql&amp;quot;, &amp;quot;root:@/dbB?charset=utf8&amp;quot;)\n\n    orm.RegisterModel(new(TableA))\n    orm.RegisterModel(new(TableB))\n\n    orm.RunSyncdb(&amp;quot;A&amp;quot;, false, false)\n    orm.RunSyncdb(&amp;quot;B&amp;quot;, false, false)\n}\n</code></pre> \n<p>发现两个数据库中都有 TableA 和 TableB.\n麻烦问下怎样才能在不同的数据库中建立不同的表啊...</p>",
    "hits": 560,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 157,
    "title": "go volatile功能怎么实现？",
    "created_at": "2016-10-19 12:04:55",
    "updated_at": "2016-10-19 13:25:29",
    "replied_at": "2016-10-19 13:25:29",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 962,
    "user": "{\"id\": 962, \"name\": \"codinghxl\", \"login\": \"codinghxl\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 637,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 159,
    "title": "推荐一些golang项目, 学习一下源码",
    "created_at": "2016-10-19 13:03:52",
    "updated_at": "2019-12-20 18:07:50",
    "replied_at": "2019-12-20 18:07:50",
    "replies_count": 12,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 8323,
    "last_reply_user_login": "guonaihong",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 247,
    "user": "{\"id\": 247, \"name\": \"leoliu\", \"login\": \"leoliu\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "推荐一些不错的golang项目的源码， 学习一下",
    "body_html": "<p>推荐一些不错的 golang 项目的源码， 学习一下</p>",
    "hits": 728,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 160,
    "title": "终于有一个靠谱的Go写GUI的库了",
    "created_at": "2016-10-19 13:44:24",
    "updated_at": "2018-09-12 13:42:56",
    "replied_at": "2018-09-12 13:42:56",
    "replies_count": 20,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2822,
    "last_reply_user_login": "buscoop",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 222,
    "user": "{\"id\": 222, \"name\": \"themoonstone\", \"login\": \"themoonstone\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "一直觉得像golang这种代码精简而且语法简单的语言只用来写后台服务有点浪费啊！今天终于看到了一个靠谱的Go写的GUI库了！在各个平台系统下都能正常使用、安装方式也很简单、以windows为例：\n- 1、安装1.7.1以上的golang版本、设置一个合适的gopath\n - https://golang.org/doc/install?download=go1.7.1.windows-amd64.msi\n- 2、安装Qt5.7.0;你可以通过QT_DIR自定义路径\n - https://download.qt.io/official_releases/qt/5.7/5.7.0/qt-opensource-windows-x86-android-5.7.0.exe\n- 3、为你的路径添加一个包含GCC和G++的目录\n - C:\\Qt\\Qt5.7.0\\Tools\\mingw530_32\\bin\n- 4、下载绑定工具\n - go get -d github.com/therecipe/qt\n- 5、生成、安装、测试(20min)\n - cd %GOPATH%\\src\\github.com\\therecipe\\qt &amp;&amp; setup.bat\n- 6、创建你的第一个应用\n\n从以上方式可以看到、我们只需要短短几步就能搭建好golang+Qt开发环境、使得我们能够很方便的用golang实现客户端开发、接下来上几张图、看看开发的直观效果\n# PC端\n## Windows\n![](https://github.com/therecipe/qt/blob/master/internal/screens/windows.png?raw=true)\n## Linux\n![](https://github.com/therecipe/qt/blob/master/internal/screens/linux.png?raw=true)\n## 移动端\n![](https://github.com/therecipe/qt/blob/master/internal/screens/android_portrait.png?raw=true)\n以上图片就是不同平台和系统下golang和qt的界面开发产生的效果、没有全部列举、但相信很多同学已经有亲自一试的冲动了。 感兴趣的同学赶紧去看看具体教程吧！\n原文链接：https://github.com/therecipe/qt#linux-1",
    "body_html": "<p>一直觉得像 golang 这种代码精简而且语法简单的语言只用来写后台服务有点浪费啊！今天终于看到了一个靠谱的 Go 写的 GUI 库了！在各个平台系统下都能正常使用、安装方式也很简单、以 windows 为例：</p>\n\n<ul>\n<li>1、安装 1.7.1 以上的 golang 版本、设置一个合适的 gopath\n\n<ul>\n<li><a href=\"https://golang.org/doc/install?download=go1.7.1.windows-amd64.msi\" rel=\"nofollow\" target=\"_blank\">https://golang.org/doc/install?download=go1.7.1.windows-amd64.msi</a></li>\n</ul>\n</li>\n<li>2、安装 Qt5.7.0;你可以通过 QT_DIR 自定义路径\n\n<ul>\n<li><a href=\"https://download.qt.io/official_releases/qt/5.7/5.7.0/qt-opensource-windows-x86-android-5.7.0.exe\" rel=\"nofollow\" target=\"_blank\">https://download.qt.io/official_releases/qt/5.7/5.7.0/qt-opensource-windows-x86-android-5.7.0.exe</a></li>\n</ul>\n</li>\n<li>3、为你的路径添加一个包含 GCC 和 G++ 的目录\n\n<ul>\n<li>C:\\Qt\\Qt5.7.0\\Tools\\mingw530_32\\bin</li>\n</ul>\n</li>\n<li>4、下载绑定工具\n\n<ul>\n<li>go get -d github.com/therecipe/qt</li>\n</ul>\n</li>\n<li>5、生成、安装、测试 (20min)\n\n<ul>\n<li>cd %GOPATH%\\src\\github.com\\therecipe\\qt &amp;&amp; setup.bat</li>\n</ul>\n</li>\n<li>6、创建你的第一个应用</li>\n</ul>\n\n<p>从以上方式可以看到、我们只需要短短几步就能搭建好 golang+Qt 开发环境、使得我们能够很方便的用 golang 实现客户端开发、接下来上几张图、看看开发的直观效果</p>\n<h2 id=\"PC端\">PC 端</h2><h2 id=\"Windows\">Windows</h2>\n<p><img src=\"https://github.com/therecipe/qt/blob/master/internal/screens/windows.png?raw=true\" title=\"\" alt=\"\"></p>\n<h2 id=\"Linux\">Linux</h2>\n<p><img src=\"https://github.com/therecipe/qt/blob/master/internal/screens/linux.png?raw=true\" title=\"\" alt=\"\"></p>\n<h2 id=\"移动端\">移动端</h2>\n<p><img src=\"https://github.com/therecipe/qt/blob/master/internal/screens/android_portrait.png?raw=true\" title=\"\" alt=\"\">\n以上图片就是不同平台和系统下 golang 和 qt 的界面开发产生的效果、没有全部列举、但相信很多同学已经有亲自一试的冲动了。 感兴趣的同学赶紧去看看具体教程吧！\n原文链接：<a href=\"https://github.com/therecipe/qt#linux-1\" rel=\"nofollow\" target=\"_blank\">https://github.com/therecipe/qt#linux-1</a></p>",
    "hits": 1428,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 161,
    "title": "【翻译】使用 sync.ErrGroup 实现并发搜索文件",
    "created_at": "2016-10-19 14:12:53",
    "updated_at": "2017-10-11 15:11:49",
    "replied_at": "2017-10-11 15:11:49",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1279,
    "last_reply_user_login": "crazyvv",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1026,
    "user": "{\"id\": 1026, \"name\": \"山羊wayne\", \"login\": \"cumtxh_zyy\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Go 的一个很重要的的特性就是其原生的并发，像 channel 和 goroutines 这样的利器。但是对于一个新手来说 goroutines 这个概念可能比较陌生。\n\nGo 团队发布的第一个 goroutines 的管理工具是 sync.WaitGroup，这个工具允许你创建 WaitGroup 去等待一定数量的 goroutines 执行完成。这里有个例子：\n\n    var wg sync.WaitGroup\n    var urls = []string{\n            &quot;http://www.golang.org/&quot;,\n            &quot;http://www.google.com/&quot;,\n            &quot;http://www.somestupidname.com/&quot;,\n    }\n    for _, url := range urls {\n            // Increment the WaitGroup counter.\n            wg.Add(1)\n            // Launch a goroutine to fetch the URL.\n            go func(url string) {\n                    // Decrement the counter when the goroutine completes.\n                    defer wg.Done()\n                    // Fetch the URL.\n                    http.Get(url)\n            }(url)\n    }\n    // Wait for all HTTP fetches to complete.\n    wg.Wait()\n\nWaitGroup 使你在处理并发任务时对 goroutines 的创建和停止的数量控制都变的更加简单。每次你创建 goroutine 的时候只要调用 Add() 就可以了。当这个任务结束调用 wg.Done()。等待所有的任务完成，调用 wg.Wait()。但是用 WatiGroup 唯一的问题就是当你的 goroutines 出错时，你不能捕获到错误的原因。\n\nsync.WaitGroup 的加强版\n\n最近 Go 的团队在试验的代码仓库中增加了一个包叫 sync.ErrGroup。sync.ErrGroup 相当于为 sync.WaitGroup 增加了错误返回的功能。下面我们来看一个同样的例子：\n\n    var g errgroup.Group\n    var urls = []string{\n        &quot;&quot;,\n        &quot;&quot;,\n        &quot;&quot;,\n    }\n    for _, url := range urls {\n        url := url\n        g.Go(func() error {\n            resp, err := http.Get(url)\n            if err == nil {\n                resp.Body.Close()\n            }\n            return err\n        })\n    }\n    if err := g.Wait(); err == nil {\n        fmt.Println(&quot;Successfully fetched all URLs.&quot;)\n    }\n\ng.Go() 这个方法不仅允许你传一个匿名的函数，而且还能捕获错误信息，你只要像这样返回一个错误 return err。这对使用 goroutines 的开发者来说在功能上是一个很大的提升。\n\n为了测试 sync.ErrGroup 的所有特性， 我已经写了一个递归搜索指定目录的Go程序。并且我还加了一个超时的机制 。当程序超时了，所有的 goroutines 将被取消，程序退出。\n\n当执行程序的结果如下：\n\n    $ gogrep -timeout 1000ms . fmt                                                                                                 \n    gogrep.go\n    1 hits\n\n如果你没有使用正确的参数，将会输出正确的使用方法：\n\n    gogrep by Brian Ketelsen\n    Flags:\n      -timeout duration\n            timeout in milliseconds (default 500ms)\n    Usage:\n        gogrep [flags] path pattern\n\nsync.ErrGroup 如何是我们程序写的更加简单呢\n\n让我们看看我们是如何利用 sync.ErrGroup 来使程序写的更简单。我们将从一个 main() 函数开始，因为我喜欢像写故事一样写代码，每个代码的故事都是从 main() 函数开始。\n\n    package main\n    \n    import (\n        &quot;bytes&quot;\n        &quot;flag&quot;\n        &quot;fmt&quot;\n        &quot;io/ioutil&quot;\n        &quot;log&quot;\n        &quot;os&quot;\n        &quot;path/filepath&quot;\n        &quot;strings&quot;\n        &quot;time&quot;\n    \n        &quot;golang.org/x/net/context&quot;\n        &quot;golang.org/x/sync/errgroup&quot;\n    )\n    \n    func main() {\n        duration := flag.Duration(&quot;timeout&quot;, 500*time.Millisecond, &quot;timeout in milliseconds&quot;)\n        flag.Usage = func() {\n            fmt.Printf(&quot;%s by Brian Ketelsen\\n&quot;, os.Args[0])\n            fmt.Println(&quot;Usage:&quot;)\n            fmt.Printf(&quot;    gogrep [flags] path pattern \\n&quot;)\n            fmt.Println(&quot;Flags:&quot;)\n            flag.PrintDefaults()\n    \n        }\n        flag.Parse()\n        if flag.NArg() != 2 {\n            flag.Usage()\n            os.Exit(-1)\n        }\n        path := flag.Arg(0)\n        pattern := flag.Arg(1)\n        ctx, _ := context.WithTimeout(context.Background(), *duration)\n        m, err := search(ctx, path, pattern)\n        if err != nil {\n            log.Fatal(err)\n        }\n        for _, name := range m {\n            fmt.Println(name)\n        }\n        fmt.Println(len(m), &quot;hits&quot;)\n    }\n\n程序的前15行对命令行传进来的参数做了解析。第一段比较又去的代码是在第16行：\n\n    ctx, _ := context.WithTimeout(context Backgroud(), *duration)\n\n这里，我给 context.Context 加了一个超时的时间。这个超时变量是通过 duration 来设置的。当超时时间到了，&quot;ctx&quot; 将接受到 channel 的超时警告。WithTimeout 同样也会返回一个取消的方法，但是我们不需要，所以用 &quot;_&quot; 来取消了。\n\n下面 search() 方法的参数有 context, search path, 和 search pattern。最后把找到的文件和数量输出到终端上。\n\n分解 search() 方法**：**\n\n这个 search() 函数比 main() 函数要长，所以我们把它分解开解释。\n\n首先 search() 函数创建了一个新的 errgroup。\n\n    func search(ctx context.Context, root string, pattern string) ([]string, error) {\n        g, ctx := errgroup.WithContext(ctx)\n\n下面我创建了 channel 用来传递被搜索到的文件。稍后我们将发送搜索到的文件到 channel 中去判断这些文件是否符合 pattern 参数。这个 channel 开启的buffer 数为100\n\n    paths := make(chan string, 100)\n\n这个 errgroup 类型有两个方法：Wait() 和 Go()。Go() 创建一个任务，Wait() 等待所有的任务完成。现在我们调用参数为匿名函数、返回值为error的 Go() 方法。\n\n    当所有的目录搜索完成时，我们将用 defer 来关闭 &quot;paths&quot; channel。后续我们将在更多的 goroutines 中使用这些文件。\n\n    defer close(paths)\n\n最后我们使用 filepath 包提供的 Walk() 方法去递归查找指定目录的所有文件。我们将检查这些文件是否可读，是否带有 &quot;.go&quot; 后缀的文件。\n\n    return filepath.Walk(root, func(path string, info os.FileInfo, err error) error {\n                if err != nil {\n                    return err\n                }\n                if !info.Mode().IsRegular() {\n                    return nil\n                }\n                if !info.IsDir() &amp;&amp; !strings.HasSuffix(info.Name(), &quot;.go&quot;) {\n                    return nil\n                }\n\n发现 sync.Errgroup 真正的能力：\n\n上面的那些过滤条件将丢掉不符合的文件。现在我们正式展示一下 sync.Errgroup 的真正能力。我在 select 里放了两个条件。首先发送 path 到 paths channel 里，另外的 goroutine 将会接收这个 channel 里的数据。第二个事件就是等待 context 超时发生。只要没到超时时间，就会继续处理文件。当超时后，context 的 Done channel 将发送数据导致 goroutine 返回，这个返回将停止文件搜索。\n\n            select {\n                case paths &lt;- path:\n                case &lt;-ctx.Done():\n                    return ctx.Err()\n                }\n                return nil\n            })\n    \n        })\n\n下面我将创建一个 channel 去处理文件是否符合 patter 参数。\n\n      c := make(chan string,100)\n\n现在我将遍历所有的文件查找他们的内容：\n\n    for path := range paths {\n\n这里我将说明的是我们将为每个文件创建一个 goroutine 去做模式匹配：\n\n            p := path\n            g.Go(func() error {\n                data, err := ioutil.ReadFile(p)\n                if err != nil {\n                    return err\n                }\n                if !bytes.Contains(data, []byte(pattern)) {\n                    return nil\n                }\n\n我们将再次使用 select 去等待处理完成的文件和超时。\n\n                select {\n                case c &lt;- p:\n                case &lt;-ctx.Done():\n                    return ctx.Err()\n                }\n                return nil\n            })\n        }\n\n这个函数将会等待所有的 errgroup 的 goroutines 全部完成后关闭结果的 channel。\n\n        go func() {\n            g.Wait()\n            close(c)\n        }()\n\n现在我们可以收集到所有的文件了。\n\n        var m []string\n        for r := range c {\n            m = append(m, r)\n        }\n\n最后我们将这些文件返回给 main() 函数作为结果：\n\n        return m, g.Wait()\n    }\n\n这只是个简单的例子，完整的代码在 Github 上\n\n*原文地址：**https://www.oreilly.com/learning/run-strikingly-fast-parallel-file-searches-in-go-with-sync-errgroup*\n",
    "body_html": "<p>Go 的一个很重要的的特性就是其原生的并发，像 channel 和 goroutines 这样的利器。但是对于一个新手来说 goroutines 这个概念可能比较陌生。</p>\n\n<p>Go 团队发布的第一个 goroutines 的管理工具是 sync.WaitGroup，这个工具允许你创建 WaitGroup 去等待一定数量的 goroutines 执行完成。这里有个例子：</p>\n\n<p>var wg sync.WaitGroup\n    var urls = [] string{\n            \"<a href=\"http://www.golang.org/\" rel=\"nofollow\" target=\"_blank\">http://www.golang.org/</a>\",\n            \"<a href=\"http://www.google.com/\" rel=\"nofollow\" target=\"_blank\">http://www.google.com/</a>\",\n            \"<a href=\"http://www.somestupidname.com/\" rel=\"nofollow\" target=\"_blank\">http://www.somestupidname.com/</a>\",\n    }\n    for _, url := range urls {\n            // Increment the WaitGroup counter.\n            wg.Add(1)\n            // Launch a goroutine to fetch the URL.\n            go func(url string) {\n                    // Decrement the counter when the goroutine completes.\n                    defer wg.Done()\n                    // Fetch the URL.\n                    http.Get(url)\n            }(url)\n    }\n    // Wait for all HTTP fetches to complete.\n    wg.Wait()</p>\n\n<p>WaitGroup 使你在处理并发任务时对 goroutines 的创建和停止的数量控制都变的更加简单。每次你创建 goroutine 的时候只要调用 Add() 就可以了。当这个任务结束调用 wg.Done()。等待所有的任务完成，调用 wg.Wait()。但是用 WatiGroup 唯一的问题就是当你的 goroutines 出错时，你不能捕获到错误的原因。</p>\n\n<p>sync.WaitGroup 的加强版</p>\n\n<p>最近 Go 的团队在试验的代码仓库中增加了一个包叫 sync.ErrGroup。sync.ErrGroup 相当于为 sync.WaitGroup 增加了错误返回的功能。下面我们来看一个同样的例子：</p>\n\n<p>var g errgroup.Group\n    var urls = [] string{\n        \"\",\n        \"\",\n        \"\",\n    }\n    for _, url := range urls {\n        url := url\n        g.Go(func() error {\n            resp, err := http.Get(url)\n            if err == nil {\n                resp.Body.Close()\n            }\n            return err\n        })\n    }\n    if err := g.Wait(); err == nil {\n        fmt.Println(\"Successfully fetched all URLs.\")\n    }</p>\n\n<p>g.Go() 这个方法不仅允许你传一个匿名的函数，而且还能捕获错误信息，你只要像这样返回一个错误 return err。这对使用 goroutines 的开发者来说在功能上是一个很大的提升。</p>\n\n<p>为了测试 sync.ErrGroup 的所有特性， 我已经写了一个递归搜索指定目录的 Go 程序。并且我还加了一个超时的机制 。当程序超时了，所有的 goroutines 将被取消，程序退出。</p>\n\n<p>当执行程序的结果如下：</p>\n\n<p>$ gogrep -timeout 1000ms . fmt<br>\n    gogrep.go\n    1 hits</p>\n\n<p>如果你没有使用正确的参数，将会输出正确的使用方法：</p>\n\n<p>gogrep by Brian Ketelsen\n    Flags:\n      -timeout duration\n            timeout in milliseconds (default 500ms)\n    Usage:\n        gogrep [flags] path pattern</p>\n\n<p>sync.ErrGroup 如何是我们程序写的更加简单呢</p>\n\n<p>让我们看看我们是如何利用 sync.ErrGroup 来使程序写的更简单。我们将从一个 main() 函数开始，因为我喜欢像写故事一样写代码，每个代码的故事都是从 main() 函数开始。</p>\n\n<p>package main</p>\n\n<p>import (\n        \"bytes\"\n        \"flag\"\n        \"fmt\"\n        \"io/ioutil\"\n        \"log\"\n        \"os\"\n        \"path/filepath\"\n        \"strings\"\n        \"time\"</p>\n\n<p>\"golang.org/x/net/context\"\n        \"golang.org/x/sync/errgroup\"\n    )</p>\n\n<p>func main() {\n        duration := flag.Duration(\"timeout\", 500*time.Millisecond, \"timeout in milliseconds\")\n        flag.Usage = func() {\n            fmt.Printf(\"%s by Brian Ketelsen\\n\", os.Args[0])\n            fmt.Println(\"Usage:\")\n            fmt.Printf(\"    gogrep [flags] path pattern \\n\")\n            fmt.Println(\"Flags:\")\n            flag.PrintDefaults()</p>\n\n<p>}\n        flag.Parse()\n        if flag.NArg() != 2 {\n            flag.Usage()\n            os.Exit(-1)\n        }\n        path := flag.Arg(0)\n        pattern := flag.Arg(1)\n        ctx, _ := context.WithTimeout(context.Background(), *duration)\n        m, err := search(ctx, path, pattern)\n        if err != nil {\n            log.Fatal(err)\n        }\n        for _, name := range m {\n            fmt.Println(name)\n        }\n        fmt.Println(len(m), \"hits\")\n    }</p>\n\n<p>程序的前 15 行对命令行传进来的参数做了解析。第一段比较又去的代码是在第 16 行：</p>\n\n<p>ctx, _ := context.WithTimeout(context Backgroud(), *duration)</p>\n\n<p>这里，我给 context.Context 加了一个超时的时间。这个超时变量是通过 duration 来设置的。当超时时间到了，\"ctx\" 将接受到 channel 的超时警告。WithTimeout 同样也会返回一个取消的方法，但是我们不需要，所以用 \"_\" 来取消了。</p>\n\n<p>下面 search()&nbsp;方法的参数有 context, search path, 和 search pattern。最后把找到的文件和数量输出到终端上。</p>\n\n<p>分解 search() 方法<strong>：</strong></p>\n\n<p>这个 search() 函数比 main() 函数要长，所以我们把它分解开解释。</p>\n\n<p>首先 search() 函数创建了一个新的 errgroup。</p>\n\n<p>func search(ctx context.Context, root string, pattern string) ([] string, error) {\n        g, ctx := errgroup.WithContext(ctx)</p>\n\n<p>下面我创建了 channel&nbsp;用来传递被搜索到的文件。稍后我们将发送搜索到的文件到 channel 中去判断这些文件是否符合 pattern 参数。这个 channel 开启的 buffer 数为 100</p>\n\n<p>paths := make(chan string, 100)</p>\n\n<p>这个 errgroup 类型有两个方法：Wait() 和 Go()。Go() 创建一个任务，Wait() 等待所有的任务完成。现在我们调用参数为匿名函数、返回值为 error 的&nbsp;Go() 方法。</p>\n\n<p>当所有的目录搜索完成时，我们将用 defer 来关闭 \"paths\" channel。后续我们将在更多的 goroutines 中使用这些文件。</p>\n\n<p>defer close(paths)</p>\n\n<p>最后我们使用 filepath 包提供的 Walk() 方法去递归查找指定目录的所有文件。我们将检查这些文件是否可读，是否带有 \".go\" 后缀的文件。</p>\n\n<p>return filepath.Walk(root, func(path string, info os.FileInfo, err error) error {\n                if err != nil {\n                    return err\n                }\n                if ! info.Mode().IsRegular() {\n                    return nil\n                }\n                if ! info.IsDir() &amp;&amp; ! strings.HasSuffix(info.Name(), \".go\") {\n                    return nil\n                }</p>\n\n<p>发现 sync.Errgroup 真正的能力：</p>\n\n<p>上面的那些过滤条件将丢掉不符合的文件。现在我们正式展示一下 sync.Errgroup 的真正能力。我在 select 里放了两个条件。首先发送 path 到 paths channel 里，另外的&nbsp;goroutine 将会接收这个 channel 里的数据。第二个事件就是等待 context 超时发生。只要没到超时时间，就会继续处理文件。当超时后，context 的 Done channel 将发送数据导致 goroutine 返回，这个返回将停止文件搜索。</p>\n\n<p>select {\n                case paths &lt;- path:\n                case &lt;-ctx.Done():\n                    return ctx.Err()\n                }\n                return nil\n            })</p>\n\n<p>})</p>\n\n<p>下面我将创建一个 channel 去处理文件是否符合 patter 参数。</p>\n\n<p>c := make(chan string,100)</p>\n\n<p>现在我将遍历所有的文件查找他们的内容：</p>\n\n<p>for path := range paths {</p>\n\n<p>这里我将说明的是我们将为每个文件创建一个 goroutine 去做模式匹配：</p>\n\n<p>p := path\n            g.Go(func() error {\n                data, err := ioutil.ReadFile(p)\n                if err != nil {\n                    return err\n                }\n                if ! bytes.Contains(data, [] byte(pattern)) {\n                    return nil\n                }</p>\n\n<p>我们将再次使用 select 去等待处理完成的文件和超时。</p>\n\n<p>select {\n                case c &lt;- p:\n                case &lt;-ctx.Done():\n                    return ctx.Err()\n                }\n                return nil\n            })\n        }</p>\n\n<p>这个函数将会等待所有的 errgroup 的 goroutines 全部完成后关闭结果的 channel。</p>\n\n<p>go func() {\n            g.Wait()\n            close(c)\n        }()</p>\n\n<p>现在我们可以收集到所有的文件了。</p>\n\n<p>var m [] string\n        for r := range c {\n            m = append(m, r)\n        }</p>\n\n<p>最后我们将这些文件返回给 main() 函数作为结果：</p>\n\n<p>return m, g.Wait()\n    }</p>\n\n<p>这只是个简单的例子，完整的代码在 Github 上</p>\n\n<p><em>原文地址：</em><em><a href=\"https://www.oreilly.com/learning/run-strikingly-fast-parallel-file-searches-in-go-with-sync-errgroup\" rel=\"nofollow\" target=\"_blank\">https://www.oreilly.com/learning/run-strikingly-fast-parallel-file-searches-in-go-with-sync-errgroup</a></em></p>",
    "hits": 645,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 162,
    "title": "Go 1.7.2 版本被取消了",
    "created_at": "2016-10-19 15:39:37",
    "updated_at": "2016-10-19 16:20:37",
    "replied_at": "2016-10-19 16:20:37",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 238,
    "last_reply_user_login": "kevin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "淡淡的忧伤\n\n[![](https://github.com/gocn/images/blob/master/WechatIMG2027.jpeg?raw=true)](https://github.com/gocn/images/blob/master/WechatIMG2027.jpeg?raw=true)",
    "body_html": "<p>淡淡的忧伤</p>\n\n<p><a href=\"https://github.com/gocn/images/blob/master/WechatIMG2027.jpeg?raw=true\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"https://github.com/gocn/images/blob/master/WechatIMG2027.jpeg?raw=true\" title=\"\" alt=\"\"></a></p>",
    "hits": 612,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 163,
    "title": "swagger beego",
    "created_at": "2016-10-19 16:25:09",
    "updated_at": "2016-10-19 22:21:12",
    "replied_at": "2016-10-19 22:21:12",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 348,
    "user": "{\"id\": 348, \"name\": \"eric\", \"login\": \"eric\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在beego里用swagger，然后浏览器访问：http://127.0.0.1:8080/swagger/#!/order\n\nCan't read swagger JSON from http://127.0.0.1:8080/swagger/swagger.json\n\n谢谢",
    "body_html": "<p>在 beego 里用 swagger，然后浏览器访问：<a href=\"http://127.0.0.1:8080/swagger/#!/order\" rel=\"nofollow\" target=\"_blank\">http://127.0.0.1:8080/swagger/#!/order</a></p>\n\n<p>Can't read swagger JSON from <a href=\"http://127.0.0.1:8080/swagger/swagger.json\" rel=\"nofollow\" target=\"_blank\">http://127.0.0.1:8080/swagger/swagger.json</a></p>\n\n<p>谢谢</p>",
    "hits": 427,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 164,
    "title": "当前比较好用的golang的redis客户端有哪些？",
    "created_at": "2016-10-19 17:13:46",
    "updated_at": "2016-10-19 22:23:19",
    "replied_at": "2016-10-19 22:23:19",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 562,
    "user": "{\"id\": 562, \"name\": \"Sphinx\", \"login\": \"Sphinx\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "说一说痛点，聊一聊尿性",
    "body_html": "<p>说一说痛点，聊一聊尿性</p>",
    "hits": 650,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 165,
    "title": "Beego orm 怎么自动建表？",
    "created_at": "2016-10-19 17:43:57",
    "updated_at": "2016-10-19 18:13:28",
    "replied_at": "2016-10-19 18:13:28",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1041,
    "last_reply_user_login": "bt",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 261,
    "user": "{\"id\": 261, \"name\": \"hacpai\", \"login\": \"hacpai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```\n\npackage models\n\nimport (\n\t&quot;github.com/astaxie/beego/orm&quot;\n)\n\ntype Credit struct {\n\tId           int64 `&quot;orm:pk;auto&quot;`\n\tOrganization *Organization\n\tCloudQuantity\n}\n\ntype Cost struct {\n\tId           int64 `&quot;orm:pk;auto&quot;`\n\tOrganization *Organization\n\tCloudQuantity\n}\n\ntype CloudQuantity struct {\n\tCpuInAliyun int\n\tRamInAliyun int\n\tCpuInAws    int\n\tRamInAws    int\n}\n\nfunc init() {\n\torm.RegisterModel(new(Credit), new(Cost))\n}\n```\n\n这种形式支持自动建表吗？",
    "body_html": " <pre class=\"highlight mosel\"><code>\n<span class=\"k\">package</span> <span class=\"n\">models</span>\n\n<span class=\"n\">import</span> <span class=\"p\">(</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">/</span><span class=\"n\">astaxie</span><span class=\"p\">/</span><span class=\"n\">beego</span><span class=\"p\">/</span><span class=\"n\">orm</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">type</span> <span class=\"n\">Credit</span> <span class=\"n\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span>           <span class=\"n\">int64</span> <span class=\"p\">`&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">orm</span><span class=\"p\">:</span><span class=\"n\">pk</span><span class=\"p\">;</span><span class=\"n\">auto</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;`</span>\n    <span class=\"n\">Organization</span> <span class=\"p\">*</span><span class=\"n\">Organization</span>\n    <span class=\"n\">CloudQuantity</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">type</span> <span class=\"n\">Cost</span> <span class=\"n\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span>           <span class=\"n\">int64</span> <span class=\"p\">`&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">orm</span><span class=\"p\">:</span><span class=\"n\">pk</span><span class=\"p\">;</span><span class=\"n\">auto</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;`</span>\n    <span class=\"n\">Organization</span> <span class=\"p\">*</span><span class=\"n\">Organization</span>\n    <span class=\"n\">CloudQuantity</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">type</span> <span class=\"n\">CloudQuantity</span> <span class=\"n\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">CpuInAliyun</span> <span class=\"n\">int</span>\n    <span class=\"n\">RamInAliyun</span> <span class=\"n\">int</span>\n    <span class=\"n\">CpuInAws</span>    <span class=\"n\">int</span>\n    <span class=\"n\">RamInAws</span>    <span class=\"n\">int</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">init</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">orm</span><span class=\"p\">.</span><span class=\"n\">RegisterModel</span><span class=\"p\">(</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Credit</span><span class=\"p\">),</span> <span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Cost</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>这种形式支持自动建表吗？</p>",
    "hits": 595,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 166,
    "title": "byte数组转字符串？",
    "created_at": "2016-10-19 21:19:29",
    "updated_at": "2016-10-20 00:06:25",
    "replied_at": "2016-10-20 00:06:19",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 877,
    "last_reply_user_login": "SuperFashi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 382,
    "user": "{\"id\": 382, \"name\": \"simeon\", \"login\": \"simeon\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\nimport &quot;crypto/sha256&quot;\n\nfunc main() {\n    c1 := sha256.Sum256([]byte(&quot;x&quot;))\n    c2 := sha256.Sum256([]byte(&quot;X&quot;))\n    fmt.Printf(&quot;%x\\n%x\\n%t\\n%T\\n&quot;, c1, c2, c1 == c2, c1)\n    // Output:\n    // 2d711642b726b04401627ca9fbac32f5c8530fb1903cc4db02258717921a4881\n    // 4b68ab3847feda7d6c62c1fbcbeebfa35eab7351ed5e78f4ddadea5df64b8015\n    // false\n    // [32]uint8\n}\n```\n\nfmt包可以输出16进制的字符串，如何直接转成string",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">import</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">sha256</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">c1</span> <span class=\"o\">:=</span> <span class=\"n\">sha256</span><span class=\"o\">.</span><span class=\"n\">Sum256</span><span class=\"p\">([]</span><span class=\"kt\">byte</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">x</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;))</span>\n    <span class=\"n\">c2</span> <span class=\"o\">:=</span> <span class=\"n\">sha256</span><span class=\"o\">.</span><span class=\"n\">Sum256</span><span class=\"p\">([]</span><span class=\"kt\">byte</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">X</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;))</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">%</span><span class=\"n\">x</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">%</span><span class=\"n\">x</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">%</span><span class=\"n\">t</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">%</span><span class=\"n\">T</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">c1</span><span class=\"p\">,</span> <span class=\"n\">c2</span><span class=\"p\">,</span> <span class=\"n\">c1</span> <span class=\"o\">==</span> <span class=\"n\">c2</span><span class=\"p\">,</span> <span class=\"n\">c1</span><span class=\"p\">)</span>\n    <span class=\"c\">// Output:</span>\n    <span class=\"c\">// 2d711642b726b04401627ca9fbac32f5c8530fb1903cc4db02258717921a4881</span>\n    <span class=\"c\">// 4b68ab3847feda7d6c62c1fbcbeebfa35eab7351ed5e78f4ddadea5df64b8015</span>\n    <span class=\"c\">// false</span>\n    <span class=\"c\">// [32]uint8</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>fmt 包可以输出 16 进制的字符串，如何直接转成 string</p>",
    "hits": 444,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 167,
    "title": "请问有类似sqlite 的纯go写的database吗？",
    "created_at": "2016-10-19 23:15:13",
    "updated_at": "2016-10-20 15:56:49",
    "replied_at": "2016-10-20 15:56:49",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 418,
    "last_reply_user_login": "flike",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 962,
    "user": "{\"id\": 962, \"name\": \"codinghxl\", \"login\": \"codinghxl\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我看用go-sqlite driver交叉编译很麻烦，不知道有没有好用的类似sqlite的go写的轻量级的嵌入式数据库？",
    "body_html": "<p>我看用 go-sqlite driver 交叉编译很麻烦，不知道有没有好用的类似 sqlite 的 go 写的轻量级的嵌入式数据库？</p>",
    "hits": 462,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 168,
    "title": "go在window上如何跨平台编译?",
    "created_at": "2016-10-20 01:48:16",
    "updated_at": "2017-12-22 11:11:21",
    "replied_at": "2017-12-22 11:11:13",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2737,
    "last_reply_user_login": "mikemintang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "求简单的方法\n有软件制作做也挺好",
    "body_html": "<p>求简单的方法\n有软件制作做也挺好</p>",
    "hits": 541,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 169,
    "title": "关于golang http.HttpClient.Do的问题",
    "created_at": "2016-10-20 02:25:59",
    "updated_at": "2016-10-20 09:05:25",
    "replied_at": "2016-10-20 09:04:33",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1039,
    "last_reply_user_login": "Bobo",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 940,
    "user": "{\"id\": 940, \"name\": \"zradelaide1122\", \"login\": \"zradelaide1122\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\nfunc (c *Clients) PushData(reader io.Reader) error {\n\tlog.Println(&quot;进入pushData&quot;)\n\tpath := c.Slave.LocalFolder\n\tif strings.HasPrefix(path, &quot;/&quot;) == false {\n\t\tpath = &quot;/&quot; + path\n\t}\n\tbuffer := new(bytes.Buffer)\n\t_, err := io.Copy(buffer, reader)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t\treturn err\n\t}\n\n\tcontentType := http.DetectContentType(buffer.Bytes())\n\tparams := map[string]string{}\n\t// log.Println(contentType, &quot;contentType&quot;)\n\tparams[&quot;Content-Type&quot;] = contentType\n\n\tresp, err := c.DoRequest(&quot;PUT&quot;, path, params, buffer)\n\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t\treturn err\n\t}\n\n\tbody, _ := ioutil.ReadAll(resp.Body)\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode != 200 {\n\t\terr := errors.New(resp.Status)\n\t\tlog.Println(string(body))\n\t\treturn err\n\t}\n\treturn nil\n}\n\n\nfunc (c *Clients) DoRequest(method, path string, params map[string]string, data io.Reader) (*http.Response, error) {\n\n\treqUrl := &quot;http://&quot; + c.Slave.IpAddr + path\n\tlog.Println(&quot;进入reqUrl&quot;, reqUrl)\n\treq, _ := http.NewRequest(method, reqUrl, data)\n\tdate := time.Now().UTC().Format(&quot;Mon, 02 Jan 2006 15:04:05 GMT&quot;)\n\treq.Header.Set(&quot;Date&quot;, date)\n\treq.Header.Set(&quot;Host&quot;, c.Master.IpAddr)\n\tif params != nil {\n\t\tfor k, v := range params {\n\t\t\treq.Header.Set(k, v)\n\t\t}\n\t}\n\n\tif data != nil {\n\t\treq.Header.Set(&quot;Content-Length&quot;, strconv.Itoa(int(req.ContentLength)))\n\t}\n\t// log.Println(req)\n\t// c.HttpClient.Do(req)\n\t// c.HttpClient.Timeout = time.Duration(time.Second * 10)\n\n\tresp, err := c.HttpClient.Do(req)\n\tlog.Fatal(&quot;==============================&quot;)\n\tlog.Println(resp)\n\tlog.Fatal(err)\n\tlog.Fatal(&quot;==============================&quot;)\n\n\treturn resp, err\n}\n\n关于这两段代码，在执行的时候 会在\nresp, err := c.HttpClient.Do(req) 这边抛出一个\n\npanic: runtime error: invalid memory address or nil pointer dereference\nÄsignal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0x830c6Ü\n\ngoroutine 5 ÄrunningÜ:\npanic(0x389560, 0xc42000c0b0)\n\t/usr/local/go/src/runtime/panic.go:500 +0x1a1\nnet/http.(*Client).deadline(0x0, 0xc420166010, 0x420d7c, 0x5)\n\t/usr/local/go/src/net/http/client.go:193 +0x26\nnet/http.(*Client).doFollowingRedirects(0x0, 0xc4201c4000, 0x423400, 0x3, 0xb6901, 0xc420146210)\n\t/usr/local/go/src/net/http/client.go:446 +0x8b\nnet/http.(*Client).Do(0x0, 0xc4201c4000, 0xe, 0xc420176170, 0x5)\n\t/usr/local/go/src/net/http/client.go:187 +0x11d\n\n的异常，我看了下 这个地方是关于deadline的 尝试了下给httpClient.TimeOut赋值，还是会抛出resp, err := c.HttpClient.Do(req)\npanic: runtime error: invalid memory address or nil pointer dereference\nÄsignal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0x830c6Ü 这样一个错误。夜深，写的有点懵了。。。 希望高人指点下。。。\n\n具体业务是put一个文件到远程文件夹。。。\n",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"o\">*</span><span class=\"n\">Clients</span><span class=\"p\">)</span> <span class=\"n\">PushData</span><span class=\"p\">(</span><span class=\"n\">reader</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">Reader</span><span class=\"p\">)</span> <span class=\"kt\">error</span> <span class=\"p\">{</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">进入pushData</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">path</span> <span class=\"o\">:=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Slave</span><span class=\"o\">.</span><span class=\"n\">LocalFolder</span>\n    <span class=\"k\">if</span> <span class=\"n\">strings</span><span class=\"o\">.</span><span class=\"n\">HasPrefix</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span> <span class=\"o\">==</span> <span class=\"no\">false</span> <span class=\"p\">{</span>\n        <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"o\">+</span> <span class=\"n\">path</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">buffer</span> <span class=\"o\">:=</span> <span class=\"nb\">new</span><span class=\"p\">(</span><span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"n\">Buffer</span><span class=\"p\">)</span>\n    <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">Copy</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">,</span> <span class=\"n\">reader</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatal</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">err</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">contentType</span> <span class=\"o\">:=</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">DetectContentType</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">Bytes</span><span class=\"p\">())</span>\n    <span class=\"n\">params</span> <span class=\"o\">:=</span> <span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"kt\">string</span><span class=\"p\">{}</span>\n    <span class=\"c\">// log.Println(contentType, &amp;quot;contentType&amp;quot;)</span>\n    <span class=\"n\">params</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Content</span><span class=\"o\">-</span><span class=\"n\">Type</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;]</span> <span class=\"o\">=</span> <span class=\"n\">contentType</span>\n\n    <span class=\"n\">resp</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">DoRequest</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">PUT</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">buffer</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatal</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">err</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">body</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">ioutil</span><span class=\"o\">.</span><span class=\"n\">ReadAll</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">Body</span><span class=\"p\">)</span>\n    <span class=\"k\">defer</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">Body</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">StatusCode</span> <span class=\"o\">!=</span> <span class=\"m\">200</span> <span class=\"p\">{</span>\n        <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">errors</span><span class=\"o\">.</span><span class=\"n\">New</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">Status</span><span class=\"p\">)</span>\n        <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">err</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"no\">nil</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"o\">*</span><span class=\"n\">Clients</span><span class=\"p\">)</span> <span class=\"n\">DoRequest</span><span class=\"p\">(</span><span class=\"n\">method</span><span class=\"p\">,</span> <span class=\"n\">path</span> <span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"n\">params</span> <span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"n\">data</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">Reader</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">,</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n    <span class=\"n\">reqUrl</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">http</span><span class=\"o\">:</span><span class=\"c\">//&amp;quot; + c.Slave.IpAddr + path</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">进入reqUrl</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">reqUrl</span><span class=\"p\">)</span>\n    <span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">NewRequest</span><span class=\"p\">(</span><span class=\"n\">method</span><span class=\"p\">,</span> <span class=\"n\">reqUrl</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">)</span>\n    <span class=\"n\">date</span> <span class=\"o\">:=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">UTC</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Format</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Mon</span><span class=\"p\">,</span> <span class=\"m\">02</span> <span class=\"n\">Jan</span> <span class=\"m\">2006</span> <span class=\"m\">15</span><span class=\"o\">:</span><span class=\"m\">04</span><span class=\"o\">:</span><span class=\"m\">05</span> <span class=\"n\">GMT</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">Header</span><span class=\"o\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Date</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">date</span><span class=\"p\">)</span>\n    <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">Header</span><span class=\"o\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Host</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Master</span><span class=\"o\">.</span><span class=\"n\">IpAddr</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">params</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">params</span> <span class=\"p\">{</span>\n            <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">Header</span><span class=\"o\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">data</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">Header</span><span class=\"o\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Content</span><span class=\"o\">-</span><span class=\"n\">Length</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">strconv</span><span class=\"o\">.</span><span class=\"n\">Itoa</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">ContentLength</span><span class=\"p\">)))</span>\n    <span class=\"p\">}</span>\n    <span class=\"c\">// log.Println(req)</span>\n    <span class=\"c\">// c.HttpClient.Do(req)</span>\n    <span class=\"c\">// c.HttpClient.Timeout = time.Duration(time.Second * 10)</span>\n\n    <span class=\"n\">resp</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">HttpClient</span><span class=\"o\">.</span><span class=\"n\">Do</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatal</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">==============================&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatal</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatal</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">==============================&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">resp</span><span class=\"p\">,</span> <span class=\"n\">err</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">关于这两段代码</span><span class=\"err\">，</span><span class=\"n\">在执行的时候</span> <span class=\"n\">会在</span>\n<span class=\"n\">resp</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">HttpClient</span><span class=\"o\">.</span><span class=\"n\">Do</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span> <span class=\"n\">这边抛出一个</span>\n\n<span class=\"nb\">panic</span><span class=\"o\">:</span> <span class=\"n\">runtime</span> <span class=\"kt\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">memory</span> <span class=\"n\">address</span> <span class=\"n\">or</span> <span class=\"no\">nil</span> <span class=\"n\">pointer</span> <span class=\"n\">dereference</span>\n<span class=\"n\">Äsignal</span> <span class=\"n\">SIGSEGV</span><span class=\"o\">:</span> <span class=\"n\">segmentation</span> <span class=\"n\">violation</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"m\">0x1</span> <span class=\"n\">addr</span><span class=\"o\">=</span><span class=\"m\">0x28</span> <span class=\"n\">pc</span><span class=\"o\">=</span><span class=\"m\">0x830c6</span><span class=\"n\">Ü</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">5</span> <span class=\"n\">ÄrunningÜ</span><span class=\"o\">:</span>\n<span class=\"nb\">panic</span><span class=\"p\">(</span><span class=\"m\">0x389560</span><span class=\"p\">,</span> <span class=\"m\">0xc42000c0b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"nb\">panic</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">500</span> <span class=\"o\">+</span><span class=\"m\">0x1a1</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Client</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">deadline</span><span class=\"p\">(</span><span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0xc420166010</span><span class=\"p\">,</span> <span class=\"m\">0x420d7c</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">193</span> <span class=\"o\">+</span><span class=\"m\">0x26</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Client</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">doFollowingRedirects</span><span class=\"p\">(</span><span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0xc4201c4000</span><span class=\"p\">,</span> <span class=\"m\">0x423400</span><span class=\"p\">,</span> <span class=\"m\">0x3</span><span class=\"p\">,</span> <span class=\"m\">0xb6901</span><span class=\"p\">,</span> <span class=\"m\">0xc420146210</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">446</span> <span class=\"o\">+</span><span class=\"m\">0x8b</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Client</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Do</span><span class=\"p\">(</span><span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0xc4201c4000</span><span class=\"p\">,</span> <span class=\"m\">0xe</span><span class=\"p\">,</span> <span class=\"m\">0xc420176170</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">187</span> <span class=\"o\">+</span><span class=\"m\">0x11d</span>\n\n<span class=\"n\">的异常</span><span class=\"err\">，</span><span class=\"n\">我看了下</span> <span class=\"n\">这个地方是关于deadline的</span> <span class=\"n\">尝试了下给httpClient</span><span class=\"o\">.</span><span class=\"n\">TimeOut赋值</span><span class=\"err\">，</span><span class=\"n\">还是会抛出resp</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">HttpClient</span><span class=\"o\">.</span><span class=\"n\">Do</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n<span class=\"nb\">panic</span><span class=\"o\">:</span> <span class=\"n\">runtime</span> <span class=\"kt\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">memory</span> <span class=\"n\">address</span> <span class=\"n\">or</span> <span class=\"no\">nil</span> <span class=\"n\">pointer</span> <span class=\"n\">dereference</span>\n<span class=\"n\">Äsignal</span> <span class=\"n\">SIGSEGV</span><span class=\"o\">:</span> <span class=\"n\">segmentation</span> <span class=\"n\">violation</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"m\">0x1</span> <span class=\"n\">addr</span><span class=\"o\">=</span><span class=\"m\">0x28</span> <span class=\"n\">pc</span><span class=\"o\">=</span><span class=\"m\">0x830c6</span><span class=\"n\">Ü</span> <span class=\"n\">这样一个错误</span><span class=\"err\">。</span><span class=\"n\">夜深</span><span class=\"err\">，</span><span class=\"n\">写的有点懵了</span><span class=\"err\">。。。</span> <span class=\"n\">希望高人指点下</span><span class=\"err\">。。。</span>\n\n<span class=\"n\">具体业务是put一个文件到远程文件夹</span><span class=\"err\">。。。</span>\n</code></pre> ",
    "hits": 553,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 170,
    "title": "beego的orm每update,delete,read的时候都要给主键值？",
    "created_at": "2016-10-20 10:41:00",
    "updated_at": "2016-10-20 14:23:14",
    "replied_at": "2016-10-20 14:23:14",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 233,
    "last_reply_user_login": "ming",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 261,
    "user": "{\"id\": 261, \"name\": \"hacpai\", \"login\": \"hacpai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 554,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 171,
    "title": "为什么web的路由url到handllefunc的映射都用的树结构，如果用map[url]func，好处是什么",
    "created_at": "2016-10-20 12:02:18",
    "updated_at": "2016-10-20 15:30:29",
    "replied_at": "2016-10-20 15:26:16",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 159,
    "last_reply_user_login": "Xargin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 229,
    "user": "{\"id\": 229, \"name\": \"golang\", \"login\": \"golang\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "type ControllerRegister struct {\n\trouters      map[string]*Tree\n\tenableFilter bool\n\tfilters      map[int][]*FilterRouter\n\tpool         sync.Pool\n}\n\nbeegod的路由，还有看到的几个web框架也是树，但是用\ntype HandleMap map[string]HandleFunc\n\nvar handleMap HandleMap\n\ntype Route struct {\n\tTree map[string]*HandleMap\n}\n也是可以得，因为url是唯一的，问问这样的好处是什么",
    "body_html": "<p>type ControllerRegister struct {\n    routers      map[string]*Tree\n    enableFilter bool\n    filters      map[int][]*FilterRouter\n    pool         sync.Pool\n}</p>\n\n<p>beegod 的路由，还有看到的几个 web 框架也是树，但是用\ntype HandleMap map[string] HandleFunc</p>\n\n<p>var handleMap HandleMap</p>\n\n<p>type Route struct {\n    Tree map[string]*HandleMap\n}\n也是可以得，因为 url 是唯一的，问问这样的好处是什么</p>",
    "hits": 380,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 172,
    "title": "Beego怎样用根目录来访问静态文件？",
    "created_at": "2016-10-20 12:44:15",
    "updated_at": "2016-10-20 18:02:12",
    "replied_at": "2016-10-20 15:27:35",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 283,
    "last_reply_user_login": "chendx79",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 283,
    "user": "{\"id\": 283, \"name\": \"chendx79\", \"login\": \"chendx79\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Beego怎样用根目录来访问静态文件？\n我的静态文件是放在static目录下的例如login.html\n\n我现在的做法是\nbeego.BConfig.WebConfig.StaticDir[&quot;/static&quot;] = &quot;static&quot;\n只能用ip/static/login.html来访问\n\n如果我改成\nbeego.BConfig.WebConfig.StaticDir[&quot;/&quot;] = &quot;static&quot;\n就访问不了了\n\n请问怎么解决？",
    "body_html": "<p>Beego 怎样用根目录来访问静态文件？\n我的静态文件是放在 static 目录下的例如 login.html</p>\n\n<p>我现在的做法是\nbeego.BConfig.WebConfig.StaticDir[\"/static\"] = \"static\"\n只能用 ip/static/login.html 来访问</p>\n\n<p>如果我改成\nbeego.BConfig.WebConfig.StaticDir[\"/\"] = \"static\"\n就访问不了了</p>\n\n<p>请问怎么解决？</p>",
    "hits": 466,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 173,
    "title": "go语言有什么图形类包(对比,查找图片模式等等)",
    "created_at": "2016-10-20 15:26:29",
    "updated_at": "2016-10-21 17:15:40",
    "replied_at": "2016-10-21 17:15:40",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 193,
    "last_reply_user_login": "philosophia14",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "对比两张图的不同\n在一张大图中查找小图,确定坐标什么的\n等等\n\n简单转换图片大小等等",
    "body_html": "<p>对比两张图的不同\n在一张大图中查找小图,确定坐标什么的\n等等</p>\n\n<p>简单转换图片大小等等</p>",
    "hits": 350,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 174,
    "title": "go解压缩包有什么好的包?",
    "created_at": "2016-10-20 16:06:01",
    "updated_at": "2016-10-21 09:36:22",
    "replied_at": "2016-10-21 09:36:22",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我想获取解压结束的信息.\n\n一般需要:\n加压过程阻塞\n才能进一步下面操作\n\n找了些,都不太轻便\n\n===========\n看到一个这个包,有好的欢迎介绍\ngithub.com/mholt/archiver\n\n",
    "body_html": "<p>我想获取解压结束的信息.</p>\n\n<p>一般需要:\n加压过程阻塞\n才能进一步下面操作</p>\n\n<p>找了些,都不太轻便</p>\n\n<p>===========\n看到一个这个包,有好的欢迎介绍\ngithub.com/mholt/archiver</p>",
    "hits": 265,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 175,
    "title": "对于对象的动态创建实例问题",
    "created_at": "2016-10-20 16:07:32",
    "updated_at": "2016-10-20 18:08:00",
    "replied_at": "2016-10-20 18:08:00",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 715,
    "last_reply_user_login": "changjixiong",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 198,
    "user": "{\"id\": 198, \"name\": \"lucky\", \"login\": \"lucky\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "可能是自身学习不足,对设计模式什么不够了解,今天遇到了一个问题\n具体情况是这样:\n在http请求中,客户端会传一定的参数给服务端(比如json,服务端json-&gt;Struct)\n假定服务端有\n```go\ntype I interface{}\ntype A struct{}\ntype B struct{}\ntype C struct{}\n....\n//这些struct里面的属性都会不一致,但是会和客户端参数一一对应,并且都假定实现了I接口\n```\n现在实现情况是根据客户端一个参数,比如p,来确定使用哪个struct\n代码就会变成\n```go\nswitch p {\n\tcase x1:\n\ts := A{}\n\tcase x2:\n\ts: = B{}\n\tcase x3:\n\t....\n\t....\n}\n//这样的伪代码很丑而且维护起来比较尴尬,因为有个case,代码多少都会有点耦合,在新增或者删除struct的时候都需要去删除相应的case\n```\n有没有比较优雅的方法,让A\\B\\C这样的struct完全独立,增加删除不会影响到其他\n因为是之前写php的,php代码的意思类似\n```php\n&lt;?php\nClass A {}\n$obj = &quot;A&quot;\n$a = new $obj\n```\n不知道有没有表达清楚,有点长\n谢谢大家",
    "body_html": "<p>可能是自身学习不足,对设计模式什么不够了解,今天遇到了一个问题\n具体情况是这样:\n在 http 请求中,客户端会传一定的参数给服务端 (比如 json,服务端 json-&gt;Struct)\n假定服务端有</p>\n <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">I</span> <span class=\"k\">interface</span><span class=\"p\">{}</span>\n<span class=\"k\">type</span> <span class=\"n\">A</span> <span class=\"k\">struct</span><span class=\"p\">{}</span>\n<span class=\"k\">type</span> <span class=\"n\">B</span> <span class=\"k\">struct</span><span class=\"p\">{}</span>\n<span class=\"k\">type</span> <span class=\"n\">C</span> <span class=\"k\">struct</span><span class=\"p\">{}</span>\n<span class=\"o\">....</span>\n<span class=\"c\">//这些struct里面的属性都会不一致,但是会和客户端参数一一对应,并且都假定实现了I接口</span>\n</code></pre> \n<p>现在实现情况是根据客户端一个参数,比如 p,来确定使用哪个 struct\n代码就会变成</p>\n <pre class=\"highlight go\"><code><span class=\"k\">switch</span> <span class=\"n\">p</span> <span class=\"p\">{</span>\n    <span class=\"k\">case</span> <span class=\"n\">x1</span><span class=\"o\">:</span>\n    <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"n\">A</span><span class=\"p\">{}</span>\n    <span class=\"k\">case</span> <span class=\"n\">x2</span><span class=\"o\">:</span>\n    <span class=\"n\">s</span><span class=\"o\">:</span> <span class=\"o\">=</span> <span class=\"n\">B</span><span class=\"p\">{}</span>\n    <span class=\"k\">case</span> <span class=\"n\">x3</span><span class=\"o\">:</span>\n    <span class=\"o\">....</span>\n    <span class=\"o\">....</span>\n<span class=\"p\">}</span>\n<span class=\"c\">//这样的伪代码很丑而且维护起来比较尴尬,因为有个case,代码多少都会有点耦合,在新增或者删除struct的时候都需要去删除相应的case</span>\n</code></pre> \n<p>有没有比较优雅的方法,让 A\\B\\C 这样的 struct 完全独立,增加删除不会影响到其他\n因为是之前写 php 的,php 代码的意思类似</p>\n <pre class=\"highlight php\"><code><span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">?</span><span class=\"n\">php</span>\n<span class=\"kd\">Class</span> <span class=\"nc\">A</span> <span class=\"p\">{}</span>\n<span class=\"nv\">$obj</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"nc\">A</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"nv\">$a</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nv\">$obj</span>\n</code></pre> \n<p>不知道有没有表达清楚,有点长\n谢谢大家</p>",
    "hits": 562,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 176,
    "title": "怎么实现tryLock(timeout int)的功能",
    "created_at": "2016-10-20 17:38:00",
    "updated_at": "2016-10-21 11:19:09",
    "replied_at": "2016-10-21 11:19:09",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 787,
    "last_reply_user_login": "dongzerun",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 962,
    "user": "{\"id\": 962, \"name\": \"codinghxl\", \"login\": \"codinghxl\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "这是我自己尝试写的一个\n```go\npackage internal_struct\n\nimport (\n\t&quot;sync/atomic&quot;\n\t&quot;time&quot;\n)\n\ntype MutexLock struct {\n\ti *int32\n}\n\nfunc NewMutexLock() *MutexLock {\n\tvar i int32\n\ti = 0\n\treturn &amp;MutexLock{&amp;i}\n}\n\nfunc (m *MutexLock) TryLock(timeout int) bool {\n\tt := timeout\n\tb := false\n\tfor !b {\n\t\tb = atomic.CompareAndSwapInt32(m.i, 0, 1)\n\t\tif b {\n\t\t\tbreak\n\t\t}\n\t\tt--\n\t\tif t == 0 {\n\t\t\tbreak\n\t\t}\n\t\ttime.Sleep(time.Millisecond)\n\t}\n\treturn b\n}\n\nfunc (m *MutexLock) UnLock() {\n\tatomic.CompareAndSwapInt32(m.i, 1, 0)\n}\n\n```\n\n测试代码\n```go\npackage internal_struct\n\nimport (\n\t&quot;sync/atomic&quot;\n\t&quot;testing&quot;\n\t&quot;time&quot;\n)\n\nfunc TestMutexLock_TryLock(t *testing.T) {\n\tmutex := NewMutexLock()\n\tt.Log(mutex.TryLock(1))\n\tt.Log(mutex.TryLock(1))\n\tmutex.UnLock()\n\tt.Log(mutex.TryLock(1))\n}\n\nfunc TestMutexLock_UnLock(t *testing.T) {\n\tmutex := NewMutexLock()\n\tt.Log(mutex.TryLock(1))\n\tmutex.UnLock()\n\tt.Log(mutex.TryLock(1))\n}\n\nfunc TestMutexLock_TryLock2(t *testing.T) {\n\tmutex := NewMutexLock()\n\tvar tid int32 = 0\n\ti := 0\n\tfor ; i &lt;= 20; i++ {\n\n\t\tgo func() {\n\t\t\tid := atomic.AddInt32(&amp;tid, 1)\n\t\t\tf := mutex.TryLock(20)\n\n\t\t\tt.Log(id, &quot;【&quot;, time.Now(), &quot;】&quot;, &quot;--&gt;&quot;, f)\n\t\t\ttime.Sleep(500*time.Millisecond)\n\t\t\tif f {\n\t\t\t\tt.Log(id, &quot;【&quot;, time.Now(), &quot;】&quot;, &quot;--&gt;unlock&quot;)\n\t\t\t\tmutex.UnLock()\n\t\t\t}\n\t\t}()\n\n\t\ttime.Sleep(time.Millisecond * 50)\n\t}\n\n\ttime.Sleep(10 * time.Second)\n}\n\n```\n\n",
    "body_html": "<p>这是我自己尝试写的一个</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">internal_struct</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">sync</span><span class=\"o\">/</span><span class=\"n\">atomic</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">type</span> <span class=\"n\">MutexLock</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">i</span> <span class=\"o\">*</span><span class=\"kt\">int32</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">NewMutexLock</span><span class=\"p\">()</span> <span class=\"o\">*</span><span class=\"n\">MutexLock</span> <span class=\"p\">{</span>\n    <span class=\"k\">var</span> <span class=\"n\">i</span> <span class=\"kt\">int32</span>\n    <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"m\">0</span>\n    <span class=\"k\">return</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">MutexLock</span><span class=\"p\">{</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">m</span> <span class=\"o\">*</span><span class=\"n\">MutexLock</span><span class=\"p\">)</span> <span class=\"n\">TryLock</span><span class=\"p\">(</span><span class=\"n\">timeout</span> <span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"kt\">bool</span> <span class=\"p\">{</span>\n    <span class=\"n\">t</span> <span class=\"o\">:=</span> <span class=\"n\">timeout</span>\n    <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"no\">false</span>\n    <span class=\"k\">for</span> <span class=\"o\">!</span><span class=\"n\">b</span> <span class=\"p\">{</span>\n        <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">atomic</span><span class=\"o\">.</span><span class=\"n\">CompareAndSwapInt32</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">b</span> <span class=\"p\">{</span>\n            <span class=\"k\">break</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">t</span><span class=\"o\">--</span>\n        <span class=\"k\">if</span> <span class=\"n\">t</span> <span class=\"o\">==</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n            <span class=\"k\">break</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Millisecond</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">b</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">m</span> <span class=\"o\">*</span><span class=\"n\">MutexLock</span><span class=\"p\">)</span> <span class=\"n\">UnLock</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">atomic</span><span class=\"o\">.</span><span class=\"n\">CompareAndSwapInt32</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n</code></pre> \n<p>测试代码</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">internal_struct</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">sync</span><span class=\"o\">/</span><span class=\"n\">atomic</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">testing</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">TestMutexLock_TryLock</span><span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">*</span><span class=\"n\">testing</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">mutex</span> <span class=\"o\">:=</span> <span class=\"n\">NewMutexLock</span><span class=\"p\">()</span>\n    <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">Log</span><span class=\"p\">(</span><span class=\"n\">mutex</span><span class=\"o\">.</span><span class=\"n\">TryLock</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">))</span>\n    <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">Log</span><span class=\"p\">(</span><span class=\"n\">mutex</span><span class=\"o\">.</span><span class=\"n\">TryLock</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">))</span>\n    <span class=\"n\">mutex</span><span class=\"o\">.</span><span class=\"n\">UnLock</span><span class=\"p\">()</span>\n    <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">Log</span><span class=\"p\">(</span><span class=\"n\">mutex</span><span class=\"o\">.</span><span class=\"n\">TryLock</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">TestMutexLock_UnLock</span><span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">*</span><span class=\"n\">testing</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">mutex</span> <span class=\"o\">:=</span> <span class=\"n\">NewMutexLock</span><span class=\"p\">()</span>\n    <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">Log</span><span class=\"p\">(</span><span class=\"n\">mutex</span><span class=\"o\">.</span><span class=\"n\">TryLock</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">))</span>\n    <span class=\"n\">mutex</span><span class=\"o\">.</span><span class=\"n\">UnLock</span><span class=\"p\">()</span>\n    <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">Log</span><span class=\"p\">(</span><span class=\"n\">mutex</span><span class=\"o\">.</span><span class=\"n\">TryLock</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">TestMutexLock_TryLock2</span><span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">*</span><span class=\"n\">testing</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">mutex</span> <span class=\"o\">:=</span> <span class=\"n\">NewMutexLock</span><span class=\"p\">()</span>\n    <span class=\"k\">var</span> <span class=\"n\">tid</span> <span class=\"kt\">int32</span> <span class=\"o\">=</span> <span class=\"m\">0</span>\n    <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span>\n    <span class=\"k\">for</span> <span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">=</span> <span class=\"m\">20</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n\n        <span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n            <span class=\"n\">id</span> <span class=\"o\">:=</span> <span class=\"n\">atomic</span><span class=\"o\">.</span><span class=\"n\">AddInt32</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">tid</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">)</span>\n            <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"n\">mutex</span><span class=\"o\">.</span><span class=\"n\">TryLock</span><span class=\"p\">(</span><span class=\"m\">20</span><span class=\"p\">)</span>\n\n            <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">Log</span><span class=\"p\">(</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">【</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Now</span><span class=\"p\">(),</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">】</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">--&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">f</span><span class=\"p\">)</span>\n            <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"m\">500</span><span class=\"o\">*</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Millisecond</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">f</span> <span class=\"p\">{</span>\n                <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">Log</span><span class=\"p\">(</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">【</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Now</span><span class=\"p\">(),</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">】</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">--&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span><span class=\"n\">unlock</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n                <span class=\"n\">mutex</span><span class=\"o\">.</span><span class=\"n\">UnLock</span><span class=\"p\">()</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}()</span>\n\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Millisecond</span> <span class=\"o\">*</span> <span class=\"m\">50</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"m\">10</span> <span class=\"o\">*</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n</code></pre> ",
    "hits": 527,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 177,
    "title": "怎么样编译Godoc源码",
    "created_at": "2016-10-20 19:39:25",
    "updated_at": "2016-10-21 09:34:26",
    "replied_at": "2016-10-21 09:34:26",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1073,
    "user": "{\"id\": 1073, \"name\": \"FancyGo\", \"login\": \"FancyGo\", \"avatar\": \"https://static.gocn.vip/user/avatar/1073/a6d075.jpg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我修改了godoc的源码，但是不知道该怎么编译，有人知道么。",
    "body_html": "<p>我修改了 godoc 的源码，但是不知道该怎么编译，有人知道么。</p>",
    "hits": 363,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 178,
    "title": "go的数据类型",
    "created_at": "2016-10-21 09:06:13",
    "updated_at": "2016-10-21 10:16:26",
    "replied_at": "2016-10-21 10:16:26",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 891,
    "last_reply_user_login": "gameogre",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 414,
    "user": "{\"id\": 414, \"name\": \"ilmari\", \"login\": \"ilmari\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "go的int8，int16，int32，int64\n如果定义的是int，那么代表的是哪种，是等于int32吗",
    "body_html": "<p>go 的 int8，int16，int32，int64\n如果定义的是 int，那么代表的是哪种，是等于 int32 吗</p>",
    "hits": 411,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 179,
    "title": "gorm怎么连接mssql数据库？",
    "created_at": "2016-10-21 10:21:50",
    "updated_at": "2016-10-25 09:57:37",
    "replied_at": "2016-10-25 09:57:37",
    "replies_count": 2,
    "node_name": "GORM",
    "node_id": 44,
    "last_reply_user_id": 1069,
    "last_reply_user_login": "haha",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1069,
    "user": "{\"id\": 1069, \"name\": \"haha\", \"login\": \"haha\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "gorm怎么连接mssql数据库？https://github.com/jinzhu/gorm 上没找到例子和说明。\n-----------------------------------------------------\nimport _ &quot;github.com/jinzhu/gorm/dialects/mssql&quot;\nfunc main() {\n  db, err := gorm.Open(&quot;mssql&quot;, &quot;这里怎么写？&quot;)\n  defer db.Close()\n}",
    "body_html": "<h2 id=\"gorm怎么连接mssql数据库？https://github.com/jinzhu/gorm 上没找到例子和说明。\">gorm 怎么连接 mssql 数据库？<a href=\"https://github.com/jinzhu/gorm\" rel=\"nofollow\" target=\"_blank\">https://github.com/jinzhu/gorm</a> 上没找到例子和说明。</h2>\n<p>import _ \"github.com/jinzhu/gorm/dialects/mssql\"\nfunc main() {\n  db, err := gorm.Open(\"mssql\", \"这里怎么写？\")\n  defer db.Close()\n}</p>",
    "hits": 852,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 180,
    "title": "ASP.NET Core vs Go data 压测对比",
    "created_at": "2016-10-21 11:03:11",
    "updated_at": "2018-09-11 23:35:34",
    "replied_at": "2018-09-11 23:35:34",
    "replies_count": 11,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 6464,
    "last_reply_user_login": "sukney",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "原文不打算翻译了，直接先上压测结果吧：\n\n```\n     \t        REQ/sec   TIME     REQ    Concurrency  Memory\n-------------------------------------------------------------\nASP.NET Core    936       10sec    10K    50           224MB\nGo              3213      3sec     10K    50           9MB\nASP.NET Core    1324      75sec    100K   300          235MB\nGo              6051      16sec    100K   300          12MB\n```\n\nGo无论在并发还是资源上面都完胜ASP.NET Core. \n\n[![](https://stefanprodan.com/assets/benchmark-system-data-flow.png)](https://stefanprodan.com/assets/benchmark-system-data-flow.png)\n\n[原文](https://stefanprodan.com/2016/aspnetcore-vs-golang-data-ingestion-benchmark/)",
    "body_html": "<p>原文不打算翻译了，直接先上压测结果吧：</p>\n <pre class=\"highlight plaintext\"><code>                REQ/sec   TIME     REQ    Concurrency  Memory\n-------------------------------------------------------------\nASP.NET Core    936       10sec    10K    50           224MB\nGo              3213      3sec     10K    50           9MB\nASP.NET Core    1324      75sec    100K   300          235MB\nGo              6051      16sec    100K   300          12MB\n</code></pre> \n<p>Go 无论在并发还是资源上面都完胜 ASP.NET Core. </p>\n\n<p><a href=\"https://stefanprodan.com/assets/benchmark-system-data-flow.png\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"https://stefanprodan.com/assets/benchmark-system-data-flow.png\" title=\"\" alt=\"\"></a></p>\n\n<p><a href=\"https://stefanprodan.com/2016/aspnetcore-vs-golang-data-ingestion-benchmark/\" rel=\"nofollow\" target=\"_blank\" title=\"\">原文</a></p>",
    "hits": 698,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 181,
    "title": "求 beego api  apiauth.go 正确使用姿势",
    "created_at": "2016-10-21 11:06:31",
    "updated_at": "2016-10-21 16:44:01",
    "replied_at": "2016-10-21 16:44:01",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1055,
    "last_reply_user_login": "hlj2722",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1055,
    "user": "{\"id\": 1055, \"name\": \"hlj2722\", \"login\": \"hlj2722\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 476,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 182,
    "title": "Go文件命名规范",
    "created_at": "2016-10-21 11:10:44",
    "updated_at": "2016-10-21 13:30:10",
    "replied_at": "2016-10-21 13:30:10",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 882,
    "last_reply_user_login": "chuzhaoqian",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 882,
    "user": "{\"id\": 882, \"name\": \"chuzhaoqian\", \"login\": \"chuzhaoqian\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "./beego/bee/colorwriter.go\n./beego/bee/colorwriter_windows.go\n这个文件都定义了 \n```\ntype colorWriter struct {\n\tw             io.Writer\n\tmode          outputMode\n\tstate         csiState\n\tparamStartBuf bytes.Buffer\n\tparamBuf      bytes.Buffer\n}\ntype colorWriter struct {\n\tw    io.Writer\n\tmode outputMode\n}\n```\n程序并没有采用包的形式来调用，那程序是怎么区分的该调用哪个呢？并且这种同名结构为什么不会产生冲突？\n难道是凭借的后面的windows，来平台区分？",
    "body_html": "<p>./beego/bee/colorwriter.go\n./beego/bee/colorwriter_windows.go\n这个文件都定义了 </p>\n <pre class=\"highlight plaintext\"><code>type colorWriter struct {\n    w             io.Writer\n    mode          outputMode\n    state         csiState\n    paramStartBuf bytes.Buffer\n    paramBuf      bytes.Buffer\n}\ntype colorWriter struct {\n    w    io.Writer\n    mode outputMode\n}\n</code></pre> \n<p>程序并没有采用包的形式来调用，那程序是怎么区分的该调用哪个呢？并且这种同名结构为什么不会产生冲突？\n难道是凭借的后面的 windows，来平台区分？</p>",
    "hits": 393,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 183,
    "title": "【银联智惠】诚招 Golang开发工程师  20-30K（上海）",
    "created_at": "2016-10-21 11:31:45",
    "updated_at": "2016-10-21 11:31:45",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1082,
    "user": "{\"id\": 1082, \"name\": \"risa\", \"login\": \"risa\", \"avatar\": \"https://gocn.vip/system/letter_avatars/r.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "**公司介绍**：\n银联智惠是中国银联旗下子公司，成立于2012年，核心团队曾在ORACLE、Morgan Stanley、阿里巴巴、腾讯、百度、盛大等国内外知名企业担任重要职务，拥有成熟的公司治理经验，市场/销售经验，大数据挖掘核心技术，并拥有多项软件著作权。\n公司定位为开放式大数据平台，致力于大数据的整合、挖掘、应用，为零售和金融行业提供深度数据服务，提升客户企业运作效率，发展创新业务模式。\n公司依托银联强大的跨行转接交易数据资源，采集并整合银行、运营商、互联网等来源的数据，建设统一的大数据基础平台；在此基础上，采用数据挖掘核心技术，精心打造银联智惠大数据模型，勾勒出全国8亿持卡人的画像及500万商户的特征，形成公司的核心资产；同时，开放数据调用接口，自主或合作开发基于数据模型的应用服务，实现大数据的商业价值。\n\n\n**岗位职责**：\n1、负责高并发、高可用广告系统系统开发；\n2、负责公司产品服务器端开发及维护；\n3、负责应用系统数据端RESTful API服务开发。\n\n**职位要求**：\n1、Go语言2年以上开发经验；\n2、php、python、java等服务端语言开发5年以上工作经验；\n3、熟悉Linux系统下操作；\n4、有分布式、集群、高并发、高负载、高可用系统或大型网站开发经验；\n5、有微服务系统架构经验。\n\n**公司福利**：\n1、带薪年假：在本公司工作满两年内享5天年假，三年内享8天年假，三年以上享10天年假。其余按国家规定。\n2、带薪病假：每年享5天带薪病假。\n3、公司为员工缴纳五险一金、以及补充公积金。\n4、健康活动：每周一次为员工预定运动场所（例如：羽毛球、篮球），不定期举办此类比赛。\n5、每年享有公司及部门举办的团建、旅游活动。\n6、每年一次员工体检。\n7、其他福利：员工生日福利、结婚生子慰问、端午中秋节日福利。\n\n**薪资范围**：\n20K-30K\n\n公司网站：www.unionpaysmart.com\n公司地址：上海市浦东新区东方路3261号B座\n欢迎各位大神自荐或推荐， 简历投递邮箱： lujiani@unionpaysmart.com\n\n",
    "body_html": "<p><strong>公司介绍</strong>：\n银联智惠是中国银联旗下子公司，成立于 2012 年，核心团队曾在 ORACLE、Morgan Stanley、阿里巴巴、腾讯、百度、盛大等国内外知名企业担任重要职务，拥有成熟的公司治理经验，市场/销售经验，大数据挖掘核心技术，并拥有多项软件著作权。\n公司定位为开放式大数据平台，致力于大数据的整合、挖掘、应用，为零售和金融行业提供深度数据服务，提升客户企业运作效率，发展创新业务模式。\n公司依托银联强大的跨行转接交易数据资源，采集并整合银行、运营商、互联网等来源的数据，建设统一的大数据基础平台；在此基础上，采用数据挖掘核心技术，精心打造银联智惠大数据模型，勾勒出全国 8 亿持卡人的画像及 500 万商户的特征，形成公司的核心资产；同时，开放数据调用接口，自主或合作开发基于数据模型的应用服务，实现大数据的商业价值。</p>\n\n<p><strong>岗位职责</strong>：\n1、负责高并发、高可用广告系统系统开发；\n2、负责公司产品服务器端开发及维护；\n3、负责应用系统数据端 RESTful API 服务开发。</p>\n\n<p><strong>职位要求</strong>：\n1、Go 语言 2 年以上开发经验；\n2、php、python、java 等服务端语言开发 5 年以上工作经验；\n3、熟悉 Linux 系统下操作；\n4、有分布式、集群、高并发、高负载、高可用系统或大型网站开发经验；\n5、有微服务系统架构经验。</p>\n\n<p><strong>公司福利</strong>：\n1、带薪年假：在本公司工作满两年内享 5 天年假，三年内享 8 天年假，三年以上享 10 天年假。其余按国家规定。\n2、带薪病假：每年享 5 天带薪病假。\n3、公司为员工缴纳五险一金、以及补充公积金。\n4、健康活动：每周一次为员工预定运动场所（例如：羽毛球、篮球），不定期举办此类比赛。\n5、每年享有公司及部门举办的团建、旅游活动。\n6、每年一次员工体检。\n7、其他福利：员工生日福利、结婚生子慰问、端午中秋节日福利。</p>\n\n<p><strong>薪资范围</strong>：\n20K-30K</p>\n\n<p>公司网站：www.unionpaysmart.com\n公司地址：上海市浦东新区东方路 3261 号 B 座\n欢迎各位大神自荐或推荐， 简历投递邮箱： lujiani@unionpaysmart.com</p>",
    "hits": 467,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 184,
    "title": "关于接口实现的一个小问题",
    "created_at": "2016-10-21 14:25:03",
    "updated_at": "2016-10-22 22:53:56",
    "replied_at": "2016-10-22 22:53:56",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 962,
    "last_reply_user_login": "codinghxl",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 891,
    "user": "{\"id\": 891, \"name\": \"gameogre\", \"login\": \"gameogre\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```\ntype geometry interface {\n\tarea() float64\n\tperim() float64\n}\n\ntype rect struct {\n\twidth, height float64\n}\ntype circle struct {\n\tradius float64\n}\n\nfunc (r rect) area() float64 {\n\treturn r.width * r.height\n}\nfunc (r rect) perim() float64 {\n\treturn 2*r.width + 2*r.height\n}\n\nfunc (c *circle) area() float64 {\n\treturn math.Pi * c.radius * c.radius\n}\nfunc (c *circle) perim() float64 {\n\treturn 2 * math.Pi * c.radius\n}\nfunc measure(g geometry) {\n\tfmt.Println(g)\n\tfmt.Println(g.area())\n\tfmt.Println(g.perim())\n}\n\nr := rect{3, 4}\nc := circle{5}\nmeasure(r)\nmeasure(&amp;c) //如果这样写 measure(c)就不行，也就是说c没有实现相应的接口，报错。必须 传地址进去,意思是&amp;c 实现了接口。\n看下面代码:\nvar cc circle= circle{6}\n\tvar ccptr *circle= &amp;cc\n\tfmt.Println(cc.area())\n\tfmt.Println(ccptr.area())\n\tfmt.Println(cc)\n```\t\n既然编译器可以聪明的在适当的时候进行取地址 和 指针解引用 ，为何在接口这里就不行了呢？为什么要区分这么严格呢？\n\n谢谢。",
    "body_html": " <pre class=\"highlight plaintext\"><code>type geometry interface {\n    area() float64\n    perim() float64\n}\n\ntype rect struct {\n    width, height float64\n}\ntype circle struct {\n    radius float64\n}\n\nfunc (r rect) area() float64 {\n    return r.width * r.height\n}\nfunc (r rect) perim() float64 {\n    return 2*r.width + 2*r.height\n}\n\nfunc (c *circle) area() float64 {\n    return math.Pi * c.radius * c.radius\n}\nfunc (c *circle) perim() float64 {\n    return 2 * math.Pi * c.radius\n}\nfunc measure(g geometry) {\n    fmt.Println(g)\n    fmt.Println(g.area())\n    fmt.Println(g.perim())\n}\n\nr := rect{3, 4}\nc := circle{5}\nmeasure(r)\nmeasure(&amp;amp;c) //如果这样写 measure(c)就不行，也就是说c没有实现相应的接口，报错。必须 传地址进去,意思是&amp;amp;c 实现了接口。\n看下面代码:\nvar cc circle= circle{6}\n    var ccptr *circle= &amp;amp;cc\n    fmt.Println(cc.area())\n    fmt.Println(ccptr.area())\n    fmt.Println(cc)\n</code></pre> \n<p>既然编译器可以聪明的在适当的时候进行取地址 和 指针解引用 ，为何在接口这里就不行了呢？为什么要区分这么严格呢？</p>\n\n<p>谢谢。</p>",
    "hits": 593,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 185,
    "title": "几种string转[]byte方法 的比较",
    "created_at": "2016-10-21 14:35:15",
    "updated_at": "2016-10-21 20:02:44",
    "replied_at": "2016-10-21 20:02:44",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 108,
    "last_reply_user_login": "silentred",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 108,
    "user": "{\"id\": 108, \"name\": \"silentred\", \"login\": \"silentred\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "看了达达的黑魔法 https://zhuanlan.zhihu.com/p/20010926 ，想尝试下 unsafe 的使用，文中提到了 []byte 转 string 的方法，于是试了下 string to []byte, 对benchmark的结果有些疑问。\n\n如下，写了两个方法: \n```\n// DANDER: SHOULD NOT read or write cap of the slice\nfunc quickStringByte(s string) []byte {\n\treturn *(*[]byte)(unsafe.Pointer(&amp;s))\n}\n\n// StringByte converts string to byte.\nfunc StringByte(s string) []byte {\n\tvar sh reflect.SliceHeader\n\tsh.Len = len(s)\n\tsh.Cap = len(s)\n\tsh.Data = uintptr(stringPointer(s))\n\treturn *(*[]byte)(unsafe.Pointer(&amp;sh))\n}\n```\n\nbenchmark代码如下:\n\n```\nfunc Benchmark_StringByte(b *testing.B) {\n\ts := &quot;test&quot;\n\tfor i := 0; i &lt; b.N; i++ {\n\t\t_ = StringByte(s)\n\t}\n}\n\nfunc Benchmark_StringByte_Simple(b *testing.B) {\n\ts := &quot;test&quot;\n\tfor i := 0; i &lt; b.N; i++ {\n\t\t_ = []byte(s)\n\t}\n}\n\nfunc Benchmark_StringByte_Quick(b *testing.B) {\n\ts := &quot;test&quot;\n\tfor i := 0; i &lt; b.N; i++ {\n\t\t_ = quickStringByte(s)\n\t}\n}\n```\n\n结果：\n```\ngo test -benchmem -bench=StringByte -run=xxx\nBenchmark_StringByte-4          \t1000000000\t         2.07 ns/op\t       0 B/op\t       0 allocs/op\nBenchmark_StringByte_Simple-4   \t200000000\t         8.03 ns/op\t       0 B/op\t       0 allocs/op\nBenchmark_StringByte_Quick-4    \t2000000000\t         0.68 ns/op\t       0 B/op\t       0 allocs/op\n```\n\n疑问是：\n为什么每个方法都没有分配内存，但是效率有明显差别？是因为 `_ = []byte(s)` 把结果舍弃了，导致编译器的优化吗？\n",
    "body_html": "<p>看了达达的黑魔法 <a href=\"https://zhuanlan.zhihu.com/p/20010926\" rel=\"nofollow\" target=\"_blank\">https://zhuanlan.zhihu.com/p/20010926</a> ，想尝试下 unsafe 的使用，文中提到了 [] byte 转 string 的方法，于是试了下 string to [] byte, 对 benchmark 的结果有些疑问。</p>\n\n<p>如下，写了两个方法: </p>\n <pre class=\"highlight plaintext\"><code>// DANDER: SHOULD NOT read or write cap of the slice\nfunc quickStringByte(s string) []byte {\n    return *(*[]byte)(unsafe.Pointer(&amp;amp;s))\n}\n\n// StringByte converts string to byte.\nfunc StringByte(s string) []byte {\n    var sh reflect.SliceHeader\n    sh.Len = len(s)\n    sh.Cap = len(s)\n    sh.Data = uintptr(stringPointer(s))\n    return *(*[]byte)(unsafe.Pointer(&amp;amp;sh))\n}\n</code></pre> \n<p>benchmark 代码如下:</p>\n <pre class=\"highlight plaintext\"><code>func Benchmark_StringByte(b *testing.B) {\n    s := &amp;quot;test&amp;quot;\n    for i := 0; i &amp;lt; b.N; i++ {\n        _ = StringByte(s)\n    }\n}\n\nfunc Benchmark_StringByte_Simple(b *testing.B) {\n    s := &amp;quot;test&amp;quot;\n    for i := 0; i &amp;lt; b.N; i++ {\n        _ = []byte(s)\n    }\n}\n\nfunc Benchmark_StringByte_Quick(b *testing.B) {\n    s := &amp;quot;test&amp;quot;\n    for i := 0; i &amp;lt; b.N; i++ {\n        _ = quickStringByte(s)\n    }\n}\n</code></pre> \n<p>结果：</p>\n <pre class=\"highlight plaintext\"><code>go test -benchmem -bench=StringByte -run=xxx\nBenchmark_StringByte-4              1000000000           2.07 ns/op        0 B/op          0 allocs/op\nBenchmark_StringByte_Simple-4       200000000            8.03 ns/op        0 B/op          0 allocs/op\nBenchmark_StringByte_Quick-4        2000000000           0.68 ns/op        0 B/op          0 allocs/op\n</code></pre> \n<p>疑问是：\n为什么每个方法都没有分配内存，但是效率有明显差别？是因为 <code>_ = []byte(s)</code> 把结果舍弃了，导致编译器的优化吗？</p>",
    "hits": 483,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 186,
    "title": "讨论一下如何建立一个好的社区氛围？",
    "created_at": "2016-10-21 15:12:17",
    "updated_at": "2020-02-02 12:08:15",
    "replied_at": "2020-02-02 12:08:15",
    "replies_count": 37,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 8066,
    "last_reply_user_login": "猴子",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "之前社区里面有人提了一个这个问题[请问 Go 的 fmt 是什么单词的缩写](https://gocn.io/question/109)，我也表达了自己对于新手如何提问的态度，有些人会觉得站长如何如何的清高和自傲，怎么对新手那么不友好。我这里申明一下：我一直怀着一颗谦卑的心在帮助尽量多的人学习Go，在骨子里面没有任何清高和自傲一说，我组织了那么多次的meetup和大会，当面见过我的同学应该都觉得我人很nice。我们都是从新手过来的，我是非常尊重新手的问题的，也是在社区里面尽量多的回答大家提出的每一个问题。同时也有一部分人觉得这个问题的提问实在是让人不觉得你是新手，影响了社区的氛围，觉得这种质量的提问不是一个新手应该提问的。\n\n那么我们一起来讨论一下如何建立一个好的社区氛围？\n\n社区需要怎么样的氛围，交流的基础是什么？我们来社区为了什么？我想大家都是希望从社区中可以学习到之前没有覆盖的知识面，我在回答很多问题的时候其实也是学习到很多，也从别人的回答里面获取到知识。我想这就是社区的价值，知识的沉淀。那么好的知识是需要大家一起来共建的，例如下面几个问题\n\n1. Go命名规范的疑问 https://gocn.io/question/182\n2. 几种string转[]byte方法 的比较 https://gocn.io/question/185\n3. 关于接口实现的一个小问题 https://gocn.io/question/184\n\n这些的问题是基于自己的观察，测试提出的一些问题，我觉得这样的问题非常有价值。\n\n对于在那个问题里面我的回答如果伤害了一部分人的内心，那么我向你说一声sorry，我不是针对任何人，只是就事论事而已，我是由衷的希望大家建立一个高质量的社区。\n\n有些人也提出来建立一个新手入门栏目，其实我觉得没有这个必要，大家还是有问题就问，目前我也在考虑建立一个类似ruby社区这样的wiki，https://ruby-china.org/wiki\n\n- 导航\n- 推荐阅读\n- 入门教程\n- 高级教程\n\n最后还是非常希望大家能够在提出技术问题前，请先做到以下事情：\n\n1. 尝试在论坛的旧文章中搜索答案。\n2. 尝试自己检查或试验以找到答案\n\n欢迎大家提出自己的看法，Go技术社区始终保持open的心态来接受大家的意见和建议。",
    "body_html": "<p>之前社区里面有人提了一个这个问题<a href=\"https://gocn.io/question/109\" rel=\"nofollow\" target=\"_blank\" title=\"\">请问 Go 的 fmt 是什么单词的缩写</a>，我也表达了自己对于新手如何提问的态度，有些人会觉得站长如何如何的清高和自傲，怎么对新手那么不友好。我这里申明一下：我一直怀着一颗谦卑的心在帮助尽量多的人学习 Go，在骨子里面没有任何清高和自傲一说，我组织了那么多次的 meetup 和大会，当面见过我的同学应该都觉得我人很 nice。我们都是从新手过来的，我是非常尊重新手的问题的，也是在社区里面尽量多的回答大家提出的每一个问题。同时也有一部分人觉得这个问题的提问实在是让人不觉得你是新手，影响了社区的氛围，觉得这种质量的提问不是一个新手应该提问的。</p>\n\n<p>那么我们一起来讨论一下如何建立一个好的社区氛围？</p>\n\n<p>社区需要怎么样的氛围，交流的基础是什么？我们来社区为了什么？我想大家都是希望从社区中可以学习到之前没有覆盖的知识面，我在回答很多问题的时候其实也是学习到很多，也从别人的回答里面获取到知识。我想这就是社区的价值，知识的沉淀。那么好的知识是需要大家一起来共建的，例如下面几个问题</p>\n\n<ol>\n<li>Go 命名规范的疑问 <a href=\"https://gocn.io/question/182\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/182</a>\n</li>\n<li>几种 string 转 [] byte 方法 的比较 <a href=\"https://gocn.io/question/185\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/185</a>\n</li>\n<li>关于接口实现的一个小问题 <a href=\"https://gocn.io/question/184\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/184</a>\n</li>\n</ol>\n\n<p>这些的问题是基于自己的观察，测试提出的一些问题，我觉得这样的问题非常有价值。</p>\n\n<p>对于在那个问题里面我的回答如果伤害了一部分人的内心，那么我向你说一声 sorry，我不是针对任何人，只是就事论事而已，我是由衷的希望大家建立一个高质量的社区。</p>\n\n<p>有些人也提出来建立一个新手入门栏目，其实我觉得没有这个必要，大家还是有问题就问，目前我也在考虑建立一个类似 ruby 社区这样的 wiki，<a href=\"https://ruby-china.org/wiki\" rel=\"nofollow\" target=\"_blank\">https://ruby-china.org/wiki</a></p>\n\n<ul>\n<li>导航</li>\n<li>推荐阅读</li>\n<li>入门教程</li>\n<li>高级教程</li>\n</ul>\n\n<p>最后还是非常希望大家能够在提出技术问题前，请先做到以下事情：</p>\n\n<ol>\n<li>尝试在论坛的旧文章中搜索答案。</li>\n<li>尝试自己检查或试验以找到答案</li>\n</ol>\n\n<p>欢迎大家提出自己的看法，Go 技术社区始终保持 open 的心态来接受大家的意见和建议。</p>",
    "hits": 707,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 187,
    "title": "请问idea怎么配置delve",
    "created_at": "2016-10-21 16:06:57",
    "updated_at": "2016-10-21 16:10:51",
    "replied_at": "2016-10-21 16:10:51",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 836,
    "last_reply_user_login": "caoqianli",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 659,
    "user": "{\"id\": 659, \"name\": \"godonggua\", \"login\": \"godonggua\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "delve装好了，作者说了\nThe following editor plugins for delve are available:\n\nGolang Plugin for IntelliJ IDEA\nGo for Visual Studio Code\nEmacs plugin\nLiteIDE\nGo Debugger for Atom\n\n网上找到了 litelIDE的配置delve的方法，但是没找到 idea的 求指点",
    "body_html": "<p>delve 装好了，作者说了\nThe following editor plugins for delve are available:</p>\n\n<p>Golang Plugin for IntelliJ IDEA\nGo for Visual Studio Code\nEmacs plugin\nLiteIDE\nGo Debugger for Atom</p>\n\n<p>网上找到了 litelIDE 的配置 delve 的方法，但是没找到 idea 的 求指点</p>",
    "hits": 438,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 188,
    "title": "用bee 命令启动beego项目 跟直接执行 main.go 文件启动项目有什么区别吗",
    "created_at": "2016-10-21 16:27:24",
    "updated_at": "2016-10-21 22:06:10",
    "replied_at": "2016-10-21 22:06:10",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 58,
    "user": "{\"id\": 58, \"name\": \"为你上线\", \"login\": \"751891786\", \"avatar\": \"https://gocn.vip/system/letter_avatars/7.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "用bee 命令启动beego 跟直接执行 main.go 文件启动项目有什么区别吗",
    "body_html": "<p>用 bee 命令启动 beego 跟直接执行 main.go 文件启动项目有什么区别吗</p>",
    "hits": 687,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 192,
    "title": " 回复的时候，空行会被删除",
    "created_at": "2016-10-21 17:18:50",
    "updated_at": "2016-10-22 11:25:41",
    "replied_at": "2016-10-22 11:25:41",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2,
    "last_reply_user_login": "itfanr",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 295,
    "user": "{\"id\": 295, \"name\": \"lgn21st\", \"login\": \"lgn21st\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "回复一个问题，如果写了几个段落，段落之间如果有空行，提交后并刷新页面，空行会被删除。",
    "body_html": "<p>回复一个问题，如果写了几个段落，段落之间如果有空行，提交后并刷新页面，空行会被删除。</p>",
    "hits": 409,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 193,
    "title": "有没有轻量级的go ui. 各种绑定好重啊,也要很多学习成本!",
    "created_at": "2016-10-21 17:19:35",
    "updated_at": "2016-10-22 09:55:19",
    "replied_at": "2016-10-22 09:55:19",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1105,
    "last_reply_user_login": "aqtata",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "期待中!!!\n编译啊,下载啊,都好麻烦.\n感觉这都不应该是这么麻烦的事\n\n如果没有,期待以后会出来.\n关注中!!!\n\n================= \n不要说好不好,只管能不能.\n有的大牛会h5,有的不会\n\n都喜欢做h5,C#,JAVA,都出网页版好了.\n桌面版,都不要出了.\n没有一个语言,出生的时候说一定就是要做什么.\n\n \n",
    "body_html": "<p>期待中!!!\n编译啊,下载啊,都好麻烦.\n感觉这都不应该是这么麻烦的事</p>\n\n<p>如果没有,期待以后会出来.\n关注中!!!</p>\n\n<p>================= \n不要说好不好,只管能不能.\n有的大牛会 h5,有的不会</p>\n\n<p>都喜欢做 h5,C#,JAVA,都出网页版好了.\n桌面版,都不要出了.\n没有一个语言,出生的时候说一定就是要做什么.</p>",
    "hits": 536,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 195,
    "title": "Ticker 中的那个通道怎么关闭呢？",
    "created_at": "2016-10-21 17:44:51",
    "updated_at": "2016-10-21 18:25:18",
    "replied_at": "2016-10-21 18:25:18",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 904,
    "last_reply_user_login": "boilingbit",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 891,
    "user": "{\"id\": 891, \"name\": \"gameogre\", \"login\": \"gameogre\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\nfunc main() {\n\n\tdone := make(chan bool)\n\tticker := time.NewTicker(time.Millisecond * 500)\n\tgo func() {\n\t\tfor t := range ticker.C {\n\t\t\tfmt.Println(&quot;Tick at&quot;, t)\n\t\t}\n\t\tfmt.Println(&quot;done&lt;-true&quot;) //这个好象执行不到!!所以死锁了？？\n\t\tdone &lt;- true\n\t}()\n\n\ttime.Sleep(time.Millisecond * 1600)\n\tticker.Stop()\n\t//close(ticker.C) 这句编译不过\n\tfmt.Println(&quot;Ticker stopped&quot;)\n\t&lt;-done\n}\n```\n查了下文档，说ticker.Stop()不会关闭那个通道。但手动用close以不能关，原因是cannot close receive-only channel,这个如何是好？",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"n\">done</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">bool</span><span class=\"p\">)</span>\n    <span class=\"n\">ticker</span> <span class=\"o\">:=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">NewTicker</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Millisecond</span> <span class=\"o\">*</span> <span class=\"m\">500</span><span class=\"p\">)</span>\n    <span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">ticker</span><span class=\"o\">.</span><span class=\"n\">C</span> <span class=\"p\">{</span>\n            <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Tick</span> <span class=\"n\">at</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">t</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">done</span><span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"no\">true</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span> <span class=\"c\">//这个好象执行不到!!所以死锁了？？</span>\n        <span class=\"n\">done</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"no\">true</span>\n    <span class=\"p\">}()</span>\n\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Millisecond</span> <span class=\"o\">*</span> <span class=\"m\">1600</span><span class=\"p\">)</span>\n    <span class=\"n\">ticker</span><span class=\"o\">.</span><span class=\"n\">Stop</span><span class=\"p\">()</span>\n    <span class=\"c\">//close(ticker.C) 这句编译不过</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Ticker</span> <span class=\"n\">stopped</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">done</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>查了下文档，说 ticker.Stop() 不会关闭那个通道。但手动用 close 以不能关，原因是 cannot close receive-only channel,这个如何是好？</p>",
    "hits": 568,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 196,
    "title": "有没有golang 敏感词的项目",
    "created_at": "2016-10-21 19:16:42",
    "updated_at": "2016-10-21 19:33:33",
    "replied_at": "2016-10-21 19:33:33",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 88,
    "user": "{\"id\": 88, \"name\": \"qi19901212\", \"login\": \"qi19901212\", \"avatar\": \"https://static.gocn.vip/user/avatar/88/4a10d7.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "**敏感词**\n如果没有，自己实现一个敏感词项目，一般基本的思想是什么？\n有哪些需要注意的点",
    "body_html": "<p><strong>敏感词</strong>\n如果没有，自己实现一个敏感词项目，一般基本的思想是什么？\n有哪些需要注意的点</p>",
    "hits": 432,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 197,
    "title": "协程无法启动",
    "created_at": "2016-10-21 20:07:38",
    "updated_at": "2016-10-22 21:27:19",
    "replied_at": "2016-10-22 21:27:19",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 715,
    "last_reply_user_login": "changjixiong",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1101,
    "user": "{\"id\": 1101, \"name\": \"word哥\", \"login\": \"496984879\", \"avatar\": \"https://gocn.vip/system/letter_avatars/4.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "以下是我参考gobyexample的一段代码，但是goroutine并不生效，求助大神：\n我的环境是macbookpro , go 版本：go version go1.6 darwin/amd64\n```go\npackage main\nimport &quot;fmt&quot;\n\nfunc f(from string) {\n        for i := 0; i &lt; 3; i++ {\n                fmt.Println(from, &quot;:&quot;, i)\n        }\n}\n\nfunc main() {\n        f(&quot;direct&quot;)\n\n        go f(&quot;goroutine&quot;)\n\n        go func(msg string) {\n                fmt.Println(msg)\n        }(&quot;going&quot;)\n\n        fmt.Println(&quot;done&quot;)\n}\n```",
    "body_html": "<p>以下是我参考 gobyexample 的一段代码，但是 goroutine 并不生效，求助大神：\n我的环境是 macbookpro , go 版本：go version go1.6 darwin/amd64</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n<span class=\"k\">import</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n<span class=\"k\">func</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">from</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"m\">3</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n                <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">from</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">direct</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n        <span class=\"k\">go</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">goroutine</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n        <span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"n\">msg</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n        <span class=\"p\">}(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">going</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">done</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 462,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 198,
    "title": "beego markdown",
    "created_at": "2016-10-21 23:56:14",
    "updated_at": "2016-10-22 06:18:13",
    "replied_at": "2016-10-22 06:18:13",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1104,
    "user": "{\"id\": 1104, \"name\": \"dust\", \"login\": \"dust\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "模板中使用markdown方法时报这个错误，是怎么回事啊？？\n```go\n[template.go:187] parse template err: front/article.html template: front/article.html:9: function &quot;markdown&quot; not defined\n```",
    "body_html": "<p>模板中使用 markdown 方法时报这个错误，是怎么回事啊？？</p>\n<pre class=\"highlight go\"><code><span class=\"p\">[</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">187</span><span class=\"p\">]</span> <span class=\"n\">parse</span> <span class=\"n\">template</span> <span class=\"n\">err</span><span class=\"o\">:</span> <span class=\"n\">front</span><span class=\"o\">/</span><span class=\"n\">article</span><span class=\"o\">.</span><span class=\"n\">html</span> <span class=\"n\">template</span><span class=\"o\">:</span> <span class=\"n\">front</span><span class=\"o\">/</span><span class=\"n\">article</span><span class=\"o\">.</span><span class=\"n\">html</span><span class=\"o\">:</span><span class=\"m\">9</span><span class=\"o\">:</span> <span class=\"n\">function</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">markdown</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"n\">not</span> <span class=\"n\">defined</span>\n</code></pre>",
    "hits": 520,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 199,
    "title": "brew 安装 go 的GOROOT被设置为/usr/local/Cellar/go/x.x.x/libexec，请问brew把这个变量设置在哪里",
    "created_at": "2016-10-22 09:40:16",
    "updated_at": "2016-10-22 10:08:38",
    "replied_at": "2016-10-22 10:08:38",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 715,
    "user": "{\"id\": 715, \"name\": \"changjixiong\", \"login\": \"changjixiong\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "用源码编译或者下载golang.org上已经编译好的包，放置到合适的位置后，需要设置GOROOT。  \n\n\n但是用brew 安装 go以后,GOROOT已经被brew 设置好，无需手工设置，只需要手工设置GOPATH即可。\nosx 10.11 + go1.6.2,brew 安装后GOROOT已经被设置为 /usr/local/Cellar/go/1.6.2/libexec\nosx 10.11.6 + go1.7.1,brew 安装后GOROOT已经被设置为 /usr/local/Cellar/go/1.7.1/libexec\n\n一直比较困惑brew把GOROOT设置在哪里。\n\n望解答。",
    "body_html": "<p>用源码编译或者下载 golang.org 上已经编译好的包，放置到合适的位置后，需要设置 GOROOT。  </p>\n\n<p>但是用 brew 安装 go 以后,GOROOT 已经被 brew 设置好，无需手工设置，只需要手工设置 GOPATH 即可。\nosx 10.11 + go1.6.2,brew 安装后 GOROOT 已经被设置为&nbsp;/usr/local/Cellar/go/1.6.2/libexec\nosx 10.11.6 + go1.7.1,brew 安装后 GOROOT 已经被设置为&nbsp;/usr/local/Cellar/go/1.7.1/libexec</p>\n\n<p>一直比较困惑 brew 把 GOROOT 设置在哪里。</p>\n\n<p>望解答。</p>",
    "hits": 358,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 200,
    "title": "求菜鸟golang开发学习建议",
    "created_at": "2016-10-22 12:11:10",
    "updated_at": "2016-10-22 19:11:32",
    "replied_at": "2016-10-22 19:11:32",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 715,
    "last_reply_user_login": "changjixiong",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 396,
    "user": "{\"id\": 396, \"name\": \"dgonly\", \"login\": \"dgonly\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "接触openstack私有云相关系统工程师工作，对基础架构有了解，有Linux的基础，现想学习golang开发（服务端/基础架构相关），学习了雨痕无闻大神们的《go学习笔记》《the-way-to-go_ZH_CN》，有C的基础go语法学习起来问题不大，非计算机专业也没开发的经验，尝试阅读源码继续学习遇到问题，求大神们指教，谢谢！",
    "body_html": "<p>接触 openstack 私有云相关系统工程师工作，对基础架构有了解，有 Linux 的基础，现想学习 golang 开发（服务端/基础架构相关），学习了雨痕无闻大神们的《go 学习笔记》《the-way-to-go_ZH_CN》，有 C 的基础 go 语法学习起来问题不大，非计算机专业也没开发的经验，尝试阅读源码继续学习遇到问题，求大神们指教，谢谢！</p>",
    "hits": 475,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 201,
    "title": "守护进程和自更新包?",
    "created_at": "2016-10-22 14:34:57",
    "updated_at": "2016-10-25 23:24:02",
    "replied_at": "2016-10-25 23:23:12",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 291,
    "last_reply_user_login": "opsnull",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "网络上比较完善,成熟的包,目前还没有.\n这两个功能,对于运维还是比较常见的需求.\n\n一.自动更新:也会遇到很多问题. 判断,解压缩啊什么的.\n\n二.护进程:也有跨平台问题等等.有些pid的获取函数在win上就不好用,也不知道bug改了没.\n\n自己兜了一圈,感觉顺手的不太有.一些文档也写的不是很清楚\n\n\n求推荐,谢谢大家!!\n\n",
    "body_html": "<p>网络上比较完善,成熟的包,目前还没有.\n这两个功能,对于运维还是比较常见的需求.</p>\n\n<p>一.自动更新:也会遇到很多问题. 判断,解压缩啊什么的.</p>\n\n<p>二.护进程:也有跨平台问题等等.有些 pid 的获取函数在 win 上就不好用,也不知道 bug 改了没.</p>\n\n<p>自己兜了一圈,感觉顺手的不太有.一些文档也写的不是很清楚</p>\n\n<p>求推荐,谢谢大家!!</p>",
    "hits": 601,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 202,
    "title": "大家如何看待百度的bfs？",
    "created_at": "2016-10-22 15:46:14",
    "updated_at": "2016-10-22 19:45:34",
    "replied_at": "2016-10-22 19:45:34",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 111,
    "last_reply_user_login": "niugou",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2,
    "user": "{\"id\": 2, \"name\": \"xiemengjun\", \"login\": \"xiemengjun\", \"avatar\": \"https://static.gocn.vip/user/avatar/2/9fa872.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "https://github.com/baidu/bfs\n\n前几天看了下bibili的[bfs](https://github.com/Terry-Mao/bfs &quot;bfs&quot;)(golang写的)，后来发现不是个真正的文件系统，没有基本的POSIX接口。只能称之为kv图片数据库。\n\n百度这个是微型文件系统。麻雀虽小，五脏俱全。\n\n大家怎么看？随便聊聊呗。\n\n",
    "body_html": "<p><a href=\"https://github.com/baidu/bfs\" rel=\"nofollow\" target=\"_blank\">https://github.com/baidu/bfs</a></p>\n\n<p>前几天看了下 bibili 的<a href=\"https://github.com/Terry-Mao/bfs%20%22bfs%22\" title=\"\">bfs</a>(golang 写的)，后来发现不是个真正的文件系统，没有基本的 POSIX 接口。只能称之为 kv 图片数据库。</p>\n\n<p>百度这个是微型文件系统。麻雀虽小，五脏俱全。</p>\n\n<p>大家怎么看？随便聊聊呗。</p>",
    "hits": 485,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 203,
    "title": "encode/json 的Marshal函数对于指针和对象返回得到结果不一样",
    "created_at": "2016-10-22 17:03:12",
    "updated_at": "2016-10-22 19:46:17",
    "replied_at": "2016-10-22 19:46:17",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 636,
    "last_reply_user_login": "stevewang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 134,
    "user": "{\"id\": 134, \"name\": \"九命猫\", \"login\": \"liang.hsh\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\npackage main\n\nimport (\n    &quot;encoding/json&quot;\n    &quot;fmt&quot;\n)\n\ntype X struct {\n    B json.RawMessage `json:&quot;b&quot;`\n}\n\nfunc main() {\n    x := X{B: []byte(`{&quot;test&quot;:&quot;t&quot;}`)}\n\n    b, err := json.Marshal(x)\n    if err != nil {\n        fmt.Println(err.Error())\n        return\n    }\n    fmt.Printf(&quot;%s\\n&quot;, b)\n\n    b, err = json.Marshal(&amp;x)\n    if err != nil {\n        fmt.Println(err.Error())\n        return\n    }\n    fmt.Printf(&quot;%s\\n&quot;, b)\n\n    return\n}\n```\n代码如上，结果为\n{&quot;b&quot;:&quot;eyJ0ZXN0IjoidCJ9&quot;}\n{&quot;b&quot;:{&quot;test&quot;:&quot;t&quot;}}\n为什么会不同呢",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">encoding</span><span class=\"o\">/</span><span class=\"n\">json</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">type</span> <span class=\"n\">X</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">B</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">RawMessage</span> <span class=\"s\">`json:&amp;quot;b&amp;quot;`</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">X</span><span class=\"p\">{</span><span class=\"n\">B</span><span class=\"o\">:</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span><span class=\"p\">(</span><span class=\"s\">`{&amp;quot;test&amp;quot;:&amp;quot;t&amp;quot;}`</span><span class=\"p\">)}</span>\n\n    <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">Marshal</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"o\">.</span><span class=\"n\">Error</span><span class=\"p\">())</span>\n        <span class=\"k\">return</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">%</span><span class=\"n\">s</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n\n    <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">Marshal</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">x</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"o\">.</span><span class=\"n\">Error</span><span class=\"p\">())</span>\n        <span class=\"k\">return</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">%</span><span class=\"n\">s</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>代码如上，结果为\n{\"b\":\"eyJ0ZXN0IjoidCJ9\"}\n{\"b\":{\"test\":\"t\"}}\n为什么会不同呢</p>",
    "hits": 682,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 204,
    "title": "beego 静态模板路径",
    "created_at": "2016-10-22 19:53:00",
    "updated_at": "2016-10-23 09:08:31",
    "replied_at": "2016-10-23 09:08:31",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 74,
    "last_reply_user_login": "xieyanke",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1104,
    "user": "{\"id\": 1104, \"name\": \"dust\", \"login\": \"dust\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "beego模板默认采用的是去项目中的views中找模板，我现在前端采用普通网页利于seo，而后台管理采用react减少复杂度，所以创建两个项目，一个前端一个后端，那么beego能不能支持去指定路径下找模板呢？",
    "body_html": "<p>beego 模板默认采用的是去项目中的 views 中找模板，我现在前端采用普通网页利于 seo，而后台管理采用 react 减少复杂度，所以创建两个项目，一个前端一个后端，那么 beego 能不能支持去指定路径下找模板呢？</p>",
    "hits": 526,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 205,
    "title": "go 什么时候能打windows，macOS，linux下的动态链接库，供其他语言调用啊？",
    "created_at": "2016-10-22 22:52:14",
    "updated_at": "2020-05-27 14:39:07",
    "replied_at": "2016-10-25 13:54:33",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 982,
    "last_reply_user_login": "su21",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 962,
    "user": "{\"id\": 962, \"name\": \"codinghxl\", \"login\": \"codinghxl\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 618,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 206,
    "title": "gocn.io开源吗?",
    "created_at": "2016-10-22 23:01:54",
    "updated_at": "2016-10-23 00:16:52",
    "replied_at": "2016-10-23 00:16:52",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1013,
    "last_reply_user_login": "lcp0578",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 333,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 207,
    "title": "社区的通知貌似有点问题。",
    "created_at": "2016-10-23 07:12:18",
    "updated_at": "2016-10-23 10:05:19",
    "replied_at": "2016-10-23 10:05:19",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 715,
    "user": "{\"id\": 715, \"name\": \"changjixiong\", \"login\": \"changjixiong\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "早上起来看有5个通知，提示有新回复，只有2个是真的，另外3个并没有新回复。\n\n其他人有感觉到这个问题吗？",
    "body_html": "<p>早上起来看有 5 个通知，提示有新回复，只有 2 个是真的，另外 3 个并没有新回复。</p>\n\n<p>其他人有感觉到这个问题吗？</p>",
    "hits": 399,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 208,
    "title": "golang的源代码太长如何折行",
    "created_at": "2016-10-23 08:21:37",
    "updated_at": "2019-05-16 21:55:37",
    "replied_at": "2019-05-16 21:55:37",
    "replies_count": 8,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 7588,
    "last_reply_user_login": "polar9527",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 715,
    "user": "{\"id\": 715, \"name\": \"changjixiong\", \"login\": \"changjixiong\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "形如 a:=b.c.e.f() 的代码太长，想折行\n\na:=b.c.e.+\nf()\n\na:=b.c.e.\\\nf()\n\n都不行，请问如何折行？",
    "body_html": "<p>形如 a:=b.c.e.f() 的代码太长，想折行</p>\n\n<p>a:=b.c.e.+\nf()</p>\n\n<p>a:=b.c.e.\\\nf()</p>\n\n<p>都不行，请问如何折行？</p>",
    "hits": 3268,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 209,
    "title": "Go 边看边练 - 《Go 学习笔记》系列",
    "created_at": "2016-10-23 08:49:14",
    "updated_at": "2016-10-24 10:00:49",
    "replied_at": "2016-10-24 10:00:49",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 247,
    "last_reply_user_login": "leoliu",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 48,
    "user": "{\"id\": 48, \"name\": \"DL88250\", \"login\": \"DL88250\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "https://hacpai.com/article/1437497122181\n\n希望 gocn 社区也能嵌入 [Wide](https://github.com/b3log/wide)\n\n",
    "body_html": "<p><a href=\"https://hacpai.com/article/1437497122181\" rel=\"nofollow\" target=\"_blank\">https://hacpai.com/article/1437497122181</a></p>\n\n<p>希望 gocn 社区也能嵌入 <a href=\"https://github.com/b3log/wide\" rel=\"nofollow\" target=\"_blank\" title=\"\">Wide</a></p>",
    "hits": 447,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 210,
    "title": "有没有基于beego做的API开源项目",
    "created_at": "2016-10-23 13:01:16",
    "updated_at": "2016-10-23 14:17:17",
    "replied_at": "2016-10-23 14:17:17",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 816,
    "last_reply_user_login": "easonme",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 816,
    "user": "{\"id\": 816, \"name\": \"easonme\", \"login\": \"easonme\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题\n希望找到做api开发的开源项目\n\n目的\n\t1；主要是思考channal等相关的应用，\n\t2；想看看他们的设计思路以及在项目中的架构位置以及权限模块",
    "body_html": "<p>如题\n希望找到做 api 开发的开源项目</p>\n\n<p>目的\n    1；主要是思考 channal 等相关的应用，\n    2；想看看他们的设计思路以及在项目中的架构位置以及权限模块</p>",
    "hits": 433,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 211,
    "title": "调研下大家都用golang干嘛",
    "created_at": "2016-10-23 14:07:45",
    "updated_at": "2016-10-24 12:54:12",
    "replied_at": "2016-10-24 12:54:12",
    "replies_count": 9,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 408,
    "last_reply_user_login": "seeyoup",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1113,
    "user": "{\"id\": 1113, \"name\": \"dawn\", \"login\": \"dawn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "难道都是用来写web吗？\n之前是用php写web。但是我感觉golang写web好像没有php那么畅快。\n所以大家的使用场景是什么呢？",
    "body_html": "<p>难道都是用来写 web 吗？\n之前是用 php 写 web。但是我感觉 golang 写 web 好像没有 php 那么畅快。\n所以大家的使用场景是什么呢？</p>",
    "hits": 503,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 212,
    "title": "beego 如何导出 excl 呢？",
    "created_at": "2016-10-23 16:11:01",
    "updated_at": "2020-10-12 13:52:34",
    "replied_at": "2020-10-12 13:52:34",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 584,
    "last_reply_user_login": "xuri",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 38,
    "user": "{\"id\": 38, \"name\": \"TianGenglan\", \"login\": \"TianGenglan\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如何导出excl文件呢？哪里有例子？",
    "body_html": "<p>如何导出 excl 文件呢？哪里有例子？</p>",
    "hits": 547,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 213,
    "title": "mgo的ObjectId存入redis后,再次从redis里读取使用",
    "created_at": "2016-10-23 18:26:13",
    "updated_at": "2016-10-23 18:27:48",
    "replied_at": "2016-10-23 18:27:48",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 198,
    "last_reply_user_login": "lucky",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 198,
    "user": "{\"id\": 198, \"name\": \"lucky\", \"login\": \"lucky\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "伪代码\n```go\ntype A struct {\n\tId bson.ObjectId `bson:&quot;_id&quot; redis:&quot;id&quot;` \n}\n\ntype B struct{\n  Aid bson.ObjectId\n}\n\nvar a = new(A)\na.Id = bson.NewObjectId()\n```\na对象存入mongo和redis\n在redis中显示\n&quot;id&quot;\n&quot;ObjectIdHex(\\&quot;580c8790c7f41c47a98a31e1\\&quot;)&quot;\n\n然后我想把这条数据从redis中读取\n这时候读取出来的A.Id打印出来是\nObjectIdHex(&quot;4f626a656374496448657828223538306338373930633766343163343761393861333165312229&quot;)\n这样使得我没法把这个A.Id赋值给B.Id,报错说objectid长度不对,格式不正确\n我想问下可能造成这个情况的原因,比如编码什么的\n还有是否有解决方案\n",
    "body_html": "<p>伪代码</p>\n <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">A</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span> <span class=\"n\">bson</span><span class=\"o\">.</span><span class=\"n\">ObjectId</span> <span class=\"s\">`bson:&amp;quot;_id&amp;quot; redis:&amp;quot;id&amp;quot;`</span> \n<span class=\"p\">}</span>\n\n<span class=\"k\">type</span> <span class=\"n\">B</span> <span class=\"k\">struct</span><span class=\"p\">{</span>\n  <span class=\"n\">Aid</span> <span class=\"n\">bson</span><span class=\"o\">.</span><span class=\"n\">ObjectId</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">var</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"nb\">new</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">Id</span> <span class=\"o\">=</span> <span class=\"n\">bson</span><span class=\"o\">.</span><span class=\"n\">NewObjectId</span><span class=\"p\">()</span>\n</code></pre> \n<p>a 对象存入 mongo 和 redis\n在 redis 中显示\n\"id\"\n\"ObjectIdHex(&amp;quot;580c8790c7f41c47a98a31e1&amp;quot;)\"</p>\n\n<p>然后我想把这条数据从 redis 中读取\n这时候读取出来的 A.Id 打印出来是\nObjectIdHex(\"4f626a656374496448657828223538306338373930633766343163343761393861333165312229\")\n这样使得我没法把这个 A.Id 赋值给 B.Id,报错说 objectid 长度不对,格式不正确\n我想问下可能造成这个情况的原因,比如编码什么的\n还有是否有解决方案</p>",
    "hits": 568,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 214,
    "title": "支持运行的Go代码",
    "created_at": "2016-10-23 21:03:09",
    "updated_at": "2016-10-23 21:03:09",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "还在测试阶段：\n\n&lt;iframe style=&quot;border:1px solid&quot; src=&quot;https://wide.b3log.org/playground/8b7cc38b4c12e6fde5c4d15a4f2f32e5.go?embed=true&quot; width=&quot;99%&quot; height=&quot;600&quot;&gt;&lt;/iframe&gt;",
    "body_html": "<p>还在测试阶段：</p>\n\n<p>&lt;iframe style=\"border:1px solid\" src=\"<a href=\"https://wide.b3log.org/playground/8b7cc38b4c12e6fde5c4d15a4f2f32e5.go?embed=true\" rel=\"nofollow\" target=\"_blank\">https://wide.b3log.org/playground/8b7cc38b4c12e6fde5c4d15a4f2f32e5.go?embed=true</a>\" width=\"99%\" height=\"600\"&gt;&lt;/iframe&gt;</p>",
    "hits": 300,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 215,
    "title": "最近要写爬虫，大家有推荐 Golang 的爬虫框架吗？",
    "created_at": "2016-10-24 00:34:59",
    "updated_at": "2016-10-24 15:35:31",
    "replied_at": "2016-10-24 15:35:31",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1084,
    "last_reply_user_login": "judas",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1115,
    "user": "{\"id\": 1115, \"name\": \"zumbo\", \"login\": \"zumbo\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "最近要写爬虫，大家有推荐 Golang 的爬虫框架吗？",
    "body_html": "<p>最近要写爬虫，大家有推荐 Golang 的爬虫框架吗？</p>",
    "hits": 559,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 216,
    "title": "go如何在git环境中使用 和版本管理",
    "created_at": "2016-10-24 02:09:20",
    "updated_at": "2017-08-14 11:32:19",
    "replied_at": "2017-08-14 11:32:19",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2335,
    "last_reply_user_login": "javasgl",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1116,
    "user": "{\"id\": 1116, \"name\": \"stansun\", \"login\": \"stansun\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "go本身提供命令go get用来获取github上的源代码。但是实际中我们通常将代码放入git中，采用git clone方式检出代码，使用git fetch来更新代码。\n前者依赖于环境变量GOPATH，并且会将相关依赖一道检出，但是不支持版本管理。\n后者将这些代码当中文件检出，但是不能同时检出依赖，同时go的第三方依赖的版本管理govender貌似并不成熟。\n\n有没有一种统一简单的方式，让我们从这些细节中解放出来。\n类似java的，\ngit clone xxx\nmvn clean install\n两条命令搞定一切。\n\n希望大家能够给一个比较具体、工程化、可操作的意见。\n如果能够贴上代码那就更好了。\n",
    "body_html": "<p>go 本身提供命令 go get 用来获取 github 上的源代码。但是实际中我们通常将代码放入 git 中，采用 git clone 方式检出代码，使用 git fetch 来更新代码。\n前者依赖于环境变量 GOPATH，并且会将相关依赖一道检出，但是不支持版本管理。\n后者将这些代码当中文件检出，但是不能同时检出依赖，同时 go 的第三方依赖的版本管理 govender 貌似并不成熟。</p>\n\n<p>有没有一种统一简单的方式，让我们从这些细节中解放出来。\n类似 java 的，\ngit clone xxx\nmvn clean install\n两条命令搞定一切。</p>\n\n<p>希望大家能够给一个比较具体、工程化、可操作的意见。\n如果能够贴上代码那就更好了。</p>",
    "hits": 267,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 217,
    "title": "有对验证码识别感兴趣的朋友吗？",
    "created_at": "2016-10-24 08:26:51",
    "updated_at": "2016-10-24 20:54:20",
    "replied_at": "2016-10-24 20:54:20",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 289,
    "last_reply_user_login": "gongxun",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1081,
    "user": "{\"id\": 1081, \"name\": \"geekzone\", \"login\": \"geekzone\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "golang 有开源的验证码识别程序吗？ 最近想搞一下验证码识别，有兴趣的朋友可以参与进来",
    "body_html": "<p>golang 有开源的验证码识别程序吗？ 最近想搞一下验证码识别，有兴趣的朋友可以参与进来</p>",
    "hits": 583,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 218,
    "title": "导入一个模块时前面 加一个下划线 是起到什么作用？",
    "created_at": "2016-10-24 10:11:56",
    "updated_at": "2016-10-24 17:11:26",
    "replied_at": "2016-10-24 17:11:26",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 605,
    "last_reply_user_login": "ofttryaj",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 58,
    "user": "{\"id\": 58, \"name\": \"为你上线\", \"login\": \"751891786\", \"avatar\": \"https://gocn.vip/system/letter_avatars/7.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "实例：\n_ &quot;gdzj/routers&quot;",
    "body_html": "<p>实例：\n_ \"gdzj/routers\"</p>",
    "hits": 440,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 219,
    "title": "[北京-滴滴招聘]Golang开发工程师---公共平台",
    "created_at": "2016-10-24 10:19:44",
    "updated_at": "2016-10-24 10:19:44",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1118,
    "user": "{\"id\": 1118, \"name\": \"金灶沐\", \"login\": \"yjqqqqdx_01\", \"avatar\": \"https://gocn.vip/system/letter_avatars/y.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "代好友发布招聘：Golang开发工程师---公共平台\n工作职责：\n1. 参与滴滴基础服务平台的设计、研发工作，提升滴滴产品稳定性；\n2. 与产品经理尝试沟通产品需求；\n3. 进行相关产品的技术文档编写，方案设计；\n4. 学习研究业界先进技术，保持技术进步；\n任职资格：\n1. 本科及以上学历，计算机相关专业，两年以上服务端研发经验；\n2. 深入理解计算机原理，有扎实的数据结构和算法基础；\n3. 深入理解linux系统及其原理，熟悉TCP/IP、HTTP协议以及网络编程；\n4. 良好的编码和文档习惯，对代码美感的追求孜孜不倦；\n5. 精通Go/C/C++/Python等至少一门语言，有Go开发经验者优先；\n6. 熟悉常用的sql、nosql数据库原理，阅读和理解优秀的开源系统代码；\n7. 具有分布式系统设计和开发经验者优先。\n\n简历发至：liujinlong@didichuxing.com  注明：应聘golang工程师-姓名...",
    "body_html": "<p>代好友发布招聘：Golang 开发工程师 --- 公共平台\n工作职责：</p>\n\n<ol>\n<li>参与滴滴基础服务平台的设计、研发工作，提升滴滴产品稳定性；</li>\n<li>与产品经理尝试沟通产品需求；</li>\n<li>进行相关产品的技术文档编写，方案设计；</li>\n<li>学习研究业界先进技术，保持技术进步；\n任职资格：</li>\n<li>本科及以上学历，计算机相关专业，两年以上服务端研发经验；</li>\n<li>深入理解计算机原理，有扎实的数据结构和算法基础；</li>\n<li>深入理解 linux 系统及其原理，熟悉 TCP/IP、HTTP 协议以及网络编程；</li>\n<li>良好的编码和文档习惯，对代码美感的追求孜孜不倦；</li>\n<li>精通 Go/C/C++/Python 等至少一门语言，有 Go 开发经验者优先；</li>\n<li>熟悉常用的 sql、nosql 数据库原理，阅读和理解优秀的开源系统代码；</li>\n<li>具有分布式系统设计和开发经验者优先。</li>\n</ol>\n\n<p>简历发至：liujinlong@didichuxing.com  注明：应聘 golang 工程师 - 姓名...</p>",
    "hits": 496,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 220,
    "title": "reflect.TypeOf().numField()和reflect.ValueOf().numField()有什么区别？",
    "created_at": "2016-10-24 10:42:46",
    "updated_at": "2016-10-24 11:07:21",
    "replied_at": "2016-10-24 11:07:21",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 423,
    "user": "{\"id\": 423, \"name\": \"chenqinghe\", \"login\": \"chenqinghe\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\ntype People struct {\n\tName string\n\tAge  int\n\tAddr string\n}\n\nfunc main() {\n\tp := people{Name: &quot;aaa&quot;}\n\tv := reflect.ValueOf(p)\n\tt := reflect.TypeOf(p)\n\tfmt.Println(v.NumField(), t.NumField())    // 3  3\n\n}\n```\n这里打印出来的值都是3，添加或者删除People的field这两个值都是一样的，难道这两个的作用一模一样吗。\n看了下源码\n```go\n// NumField returns the number of fields in the struct v.\n// It panics if v's Kind is not Struct.\nfunc (v Value) NumField() int {\n\tv.mustBe(Struct)\n\ttt := (*structType)(unsafe.Pointer(v.typ))\n\treturn len(tt.fields)\n}\n```\n\n```go\n\n\t// NumField returns a struct type's field count.\n\t// It panics if the type's Kind is not Struct.\n\tNumField() int\n```\n\n英文不好，但感觉这两者还是有区别的，并且也没有说明这两者作用一样，求解答。",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">People</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Name</span> <span class=\"kt\">string</span>\n    <span class=\"n\">Age</span>  <span class=\"kt\">int</span>\n    <span class=\"n\">Addr</span> <span class=\"kt\">string</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"n\">people</span><span class=\"p\">{</span><span class=\"n\">Name</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">aaa</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}</span>\n    <span class=\"n\">v</span> <span class=\"o\">:=</span> <span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">ValueOf</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>\n    <span class=\"n\">t</span> <span class=\"o\">:=</span> <span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">TypeOf</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">NumField</span><span class=\"p\">(),</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">NumField</span><span class=\"p\">())</span>    <span class=\"c\">// 3  3</span>\n\n<span class=\"p\">}</span>\n</code></pre> \n<p>这里打印出来的值都是 3，添加或者删除 People 的 field 这两个值都是一样的，难道这两个的作用一模一样吗。\n看了下源码</p>\n <pre class=\"highlight go\"><code><span class=\"c\">// NumField returns the number of fields in the struct v.</span>\n<span class=\"c\">// It panics if v's Kind is not Struct.</span>\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">v</span> <span class=\"n\">Value</span><span class=\"p\">)</span> <span class=\"n\">NumField</span><span class=\"p\">()</span> <span class=\"kt\">int</span> <span class=\"p\">{</span>\n    <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">mustBe</span><span class=\"p\">(</span><span class=\"n\">Struct</span><span class=\"p\">)</span>\n    <span class=\"n\">tt</span> <span class=\"o\">:=</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">structType</span><span class=\"p\">)(</span><span class=\"n\">unsafe</span><span class=\"o\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">typ</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tt</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre>  <pre class=\"highlight go\"><code>\n<span class=\"c\">// NumField returns a struct type's field count.</span>\n<span class=\"c\">// It panics if the type's Kind is not Struct.</span>\n<span class=\"n\">NumField</span><span class=\"p\">()</span> <span class=\"kt\">int</span>\n</code></pre> \n<p>英文不好，但感觉这两者还是有区别的，并且也没有说明这两者作用一样，求解答。</p>",
    "hits": 510,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 221,
    "title": "已解决：ubuntu下sublime-text3 第三方包没有代码提示",
    "created_at": "2016-10-24 11:31:57",
    "updated_at": "2016-10-24 11:31:57",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 40,
    "user": "{\"id\": 40, \"name\": \"SoloMagic\", \"login\": \"SoloMagic\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "网上查了下 找不到答案 麻烦那位大神 帮忙解决下 谢谢\n\n### 解决了  **自己手残**  环境配置的时候大小写搞错了",
    "body_html": "<p>网上查了下 找不到答案 麻烦那位大神 帮忙解决下 谢谢</p>\n<h3 id=\"解决了  自己手残  环境配置的时候大小写搞错了\">解决了  <strong>自己手残</strong>  环境配置的时候大小写搞错了</h3>",
    "hits": 338,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 222,
    "title": "beego session 根本无法正常使用",
    "created_at": "2016-10-24 13:18:03",
    "updated_at": "2018-04-04 15:10:41",
    "replied_at": "2018-04-04 15:10:41",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 2366,
    "last_reply_user_login": "KevingoCao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1121,
    "user": "{\"id\": 1121, \"name\": \"vincentVega\", \"login\": \"vincentVega\", \"avatar\": \"https://gocn.vip/system/letter_avatars/v.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "app.conf\n```go\nSessionOn = true\nSessionProvider = file\nSessionProviderConfig = ./session\nSessionName = liveSessionID\nSessionGCMaxLifetime = 3600\nSessionAutoSetCookie = false\nEnableSidInHttpHeader = true\nSessionNameInHttpHeader = Live-Session-Token\n```\n\ncontrollers/user.go\n```go\nfunc (uc *UserController) Login(){\n   uc.SetSession(&quot;uid&quot;, user.Id)\n}\n\n```\n\n```go\nfunc (uc *UserController) Logout(){\n   uc.DelSession(&quot;uid&quot;)\n    uc.DestroySession()\n}\n\n```\n这个DelSession和DestroySession根本没有起任何作用，执行后依然可以GetSession(&quot;uid&quot;)，而且sessionId同名的文件依然存在。\n\n我把app.conf配置修改为：\nSessionProvider = redis\nSessionProviderConfig = 127.0.0.1:6379\n编译的时候直接panic了\n\n```go\npanic: session: unknown provide &quot;redis&quot; (forgotten import?)\n\ngoroutine 1 [running]:\npanic(0x9176e0, 0xc4202ad2f0)\n\t/usr/local/go/src/runtime/panic.go:500 +0x1a1\nbmob/vendor/github.com/astaxie/beego.initBeforeHTTPRun()\n\t/home/ice/Dropbox/mygo/src/project/vendor/github.com/astaxie/beego/beego.go:81 +0x276\nbmob/vendor/github.com/astaxie/beego.Run(0x0, 0x0, 0x0)\n\t/home/ice/Dropbox/mygo/src/project/vendor/github.com/astaxie/beego/beego.go:55 +0x26\nmain.main()\n\t/home/ice/Dropbox/mygo/src/project/liveapi/main.go:15 +0xda\n```\n",
    "body_html": "<p>app.conf</p>\n <pre class=\"highlight go\"><code><span class=\"n\">SessionOn</span> <span class=\"o\">=</span> <span class=\"no\">true</span>\n<span class=\"n\">SessionProvider</span> <span class=\"o\">=</span> <span class=\"n\">file</span>\n<span class=\"n\">SessionProviderConfig</span> <span class=\"o\">=</span> <span class=\"o\">./</span><span class=\"n\">session</span>\n<span class=\"n\">SessionName</span> <span class=\"o\">=</span> <span class=\"n\">liveSessionID</span>\n<span class=\"n\">SessionGCMaxLifetime</span> <span class=\"o\">=</span> <span class=\"m\">3600</span>\n<span class=\"n\">SessionAutoSetCookie</span> <span class=\"o\">=</span> <span class=\"no\">false</span>\n<span class=\"n\">EnableSidInHttpHeader</span> <span class=\"o\">=</span> <span class=\"no\">true</span>\n<span class=\"n\">SessionNameInHttpHeader</span> <span class=\"o\">=</span> <span class=\"n\">Live</span><span class=\"o\">-</span><span class=\"n\">Session</span><span class=\"o\">-</span><span class=\"n\">Token</span>\n</code></pre> \n<p>controllers/user.go</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">uc</span> <span class=\"o\">*</span><span class=\"n\">UserController</span><span class=\"p\">)</span> <span class=\"n\">Login</span><span class=\"p\">(){</span>\n   <span class=\"n\">uc</span><span class=\"o\">.</span><span class=\"n\">SetSession</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">uid</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">Id</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n</code></pre>  <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">uc</span> <span class=\"o\">*</span><span class=\"n\">UserController</span><span class=\"p\">)</span> <span class=\"n\">Logout</span><span class=\"p\">(){</span>\n   <span class=\"n\">uc</span><span class=\"o\">.</span><span class=\"n\">DelSession</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">uid</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">uc</span><span class=\"o\">.</span><span class=\"n\">DestroySession</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n\n</code></pre> \n<p>这个 DelSession 和 DestroySession 根本没有起任何作用，执行后依然可以 GetSession(\"uid\")，而且 sessionId 同名的文件依然存在。</p>\n\n<p>我把 app.conf 配置修改为：\nSessionProvider = redis\nSessionProviderConfig = 127.0.0.1:6379\n编译的时候直接 panic 了</p>\n <pre class=\"highlight go\"><code><span class=\"nb\">panic</span><span class=\"o\">:</span> <span class=\"n\">session</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">provide</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">redis</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">(</span><span class=\"n\">forgotten</span> <span class=\"k\">import</span><span class=\"err\">?</span><span class=\"p\">)</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">1</span> <span class=\"p\">[</span><span class=\"n\">running</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"nb\">panic</span><span class=\"p\">(</span><span class=\"m\">0x9176e0</span><span class=\"p\">,</span> <span class=\"m\">0xc4202ad2f0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"nb\">panic</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">500</span> <span class=\"o\">+</span><span class=\"m\">0x1a1</span>\n<span class=\"n\">bmob</span><span class=\"o\">/</span><span class=\"n\">vendor</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">initBeforeHTTPRun</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">ice</span><span class=\"o\">/</span><span class=\"n\">Dropbox</span><span class=\"o\">/</span><span class=\"n\">mygo</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">project</span><span class=\"o\">/</span><span class=\"n\">vendor</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">81</span> <span class=\"o\">+</span><span class=\"m\">0x276</span>\n<span class=\"n\">bmob</span><span class=\"o\">/</span><span class=\"n\">vendor</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">Run</span><span class=\"p\">(</span><span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">ice</span><span class=\"o\">/</span><span class=\"n\">Dropbox</span><span class=\"o\">/</span><span class=\"n\">mygo</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">project</span><span class=\"o\">/</span><span class=\"n\">vendor</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">55</span> <span class=\"o\">+</span><span class=\"m\">0x26</span>\n<span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">ice</span><span class=\"o\">/</span><span class=\"n\">Dropbox</span><span class=\"o\">/</span><span class=\"n\">mygo</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">project</span><span class=\"o\">/</span><span class=\"n\">liveapi</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">15</span> <span class=\"o\">+</span><span class=\"m\">0xda</span>\n</code></pre> ",
    "hits": 658,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 223,
    "title": "Go编译出来的库是否可以提供库给Android和iPhone进行调用？",
    "created_at": "2016-10-24 14:00:58",
    "updated_at": "2016-10-24 15:55:12",
    "replied_at": "2016-10-24 15:55:12",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 3,
    "last_reply_user_login": "傅小黑",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 950,
    "user": "{\"id\": 950, \"name\": \"owen\", \"login\": \"owen\", \"avatar\": \"https://gocn.vip/system/letter_avatars/o.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Go编译出来的库是否可以提供库给Android和iPhone进行调用？\n\n我希望使用Go统一进行一些客户端网络诊断的工作，提供给两个端调用，\n因为两个端的网络库和人员情况都不同，需要同步实现起来比较困难。\n\n不知道这样的想法是否可行，请老司机点明方向，谢谢！",
    "body_html": "<p>Go 编译出来的库是否可以提供库给 Android 和 iPhone 进行调用？</p>\n\n<p>我希望使用 Go 统一进行一些客户端网络诊断的工作，提供给两个端调用，\n因为两个端的网络库和人员情况都不同，需要同步实现起来比较困难。</p>\n\n<p>不知道这样的想法是否可行，请老司机点明方向，谢谢！</p>",
    "hits": 439,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 224,
    "title": "如何看待golang（1.9？）新的GC 的Proposal？",
    "created_at": "2016-10-24 14:06:21",
    "updated_at": "2016-10-27 13:15:14",
    "replied_at": "2016-10-27 13:15:14",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 111,
    "last_reply_user_login": "niugou",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Proposal: Eliminate STW stack re-scanning\n\nhttps://github.com/golang/proposal/blob/master/design/17503-eliminate-rescan.md\n\n声称： Preliminary experiments show that this can reduce worst-case STW time to under 50µs。\n效果很惊人啊。\n\n让我们先看一下Go的GC进步：\n\nGC pauses： \n1. Go 1.4 300ms\n2. Go 1.5 40ms\n3. Go 1.6 3ms\n4. Go 1.7 1.5 ms \n5. Go 1.8 50µs",
    "body_html": "<p>Proposal: Eliminate STW stack re-scanning</p>\n\n<p><a href=\"https://github.com/golang/proposal/blob/master/design/17503-eliminate-rescan.md\" rel=\"nofollow\" target=\"_blank\">https://github.com/golang/proposal/blob/master/design/17503-eliminate-rescan.md</a></p>\n\n<p>声称： Preliminary experiments show that this can reduce worst-case STW time to under 50µs。\n效果很惊人啊。</p>\n\n<p>让我们先看一下 Go 的 GC 进步：</p>\n\n<p>GC pauses： </p>\n\n<ol>\n<li>Go 1.4 300ms</li>\n<li>Go 1.5 40ms</li>\n<li>Go 1.6 3ms</li>\n<li>Go 1.7 1.5 ms </li>\n<li>Go 1.8 50µs</li>\n</ol>",
    "hits": 611,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 225,
    "title": "goroutine 切换时如何切换栈？",
    "created_at": "2016-10-24 17:00:43",
    "updated_at": "2016-10-25 09:13:34",
    "replied_at": "2016-10-25 09:12:35",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 3,
    "last_reply_user_login": "傅小黑",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1012,
    "user": "{\"id\": 1012, \"name\": \"fengche\", \"login\": \"fengche\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "从进程的角度，内存分为栈跟堆，但是程序能够自主分配的只有堆。所以goroutine的的资源应该都是在堆上，也就是说，goroutine的stack也是在堆上分配的。\n\n那么现在有两个stack了，一个是进程角度，一个goroutine角度。\n当执行代码的时候，由于go是编译成二进制，那么局部变量放在进程stack？但是代码又在goroutine内，所以又使用的是goroutine stack。但一个在堆上，一个在stack上？想不通了。\n\n所以goroutine的stack到底怎么切换呢？\n",
    "body_html": "<p>从进程的角度，内存分为栈跟堆，但是程序能够自主分配的只有堆。所以 goroutine 的的资源应该都是在堆上，也就是说，goroutine 的 stack 也是在堆上分配的。</p>\n\n<p>那么现在有两个 stack 了，一个是进程角度，一个 goroutine 角度。\n当执行代码的时候，由于 go 是编译成二进制，那么局部变量放在进程 stack？但是代码又在 goroutine 内，所以又使用的是 goroutine stack。但一个在堆上，一个在 stack 上？想不通了。</p>\n\n<p>所以 goroutine 的 stack 到底怎么切换呢？</p>",
    "hits": 555,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 226,
    "title": "函数里的 socket 连接没有被正确的关闭",
    "created_at": "2016-10-24 18:03:49",
    "updated_at": "2016-10-24 21:30:30",
    "replied_at": "2016-10-24 21:27:40",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 209,
    "user": "{\"id\": 209, \"name\": \"cloverstd\", \"login\": \"cloverstd\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我在我的代码里使用 Docker 的 client 时，发现在函数里面建立一个 Docker 的 client 后，当调用完毕后，函数里的 socket 并没有被关闭\n\n下面是问题代码\n\n\n```go\nimport docker_types &quot;github.com/docker/docker/api/types&quot;\nimport docker &quot;github.com/docker/docker/client&quot;\n\nfunc getDockerContainerInfo(containerId string) (ContainerInfo docker_types.ContainerJSON, err error) {\n\tdefaultHeaders := map[string]string{&quot;User-Agent&quot;: &quot;engine-api-cli-1.0&quot;}\n\tclient, err := docker.NewClient(config.DockerSocket, &quot;v1.24&quot;, nil, defaultHeaders)\n\tif err != nil {\n\t\treturn\n\t}\n\tContainerInfo, err = client.ContainerInspect(context.Background(), containerId)\n\tif err != nil {\n\t\treturn\n\t}\n\treturn\n}\n```\n\n\n在使用过程中，发现系统文件描述符被用完了，通过 `lsof` 查看定位到了这个函数，发现原因是 docker client 连接 `unix:///var/run/docker.sock` 文件后，不关闭连接\n然后改成下面这样的就没问题了\n\n\n```go\nimport docker_types &quot;github.com/docker/docker/api/types&quot;\nimport docker &quot;github.com/docker/docker/client&quot;\nvar dockerClient *docker.Client\nfunc getDockerContainerInfo(containerId string) (ContainerInfo docker_types.ContainerJSON, err error) {\n\tdefaultHeaders := map[string]string{&quot;User-Agent&quot;: &quot;engine-api-cli-1.0&quot;}\n\tif dockerClient == nil {\n\t\tdockerClient, err := docker.NewClient(config.DockerSocket, &quot;v1.24&quot;, nil, defaultHeaders)\n\t\tif err != nil {\n\t\t\treturn\n\t\t}\n\t}\n\tContainerInfo, err = dockerClient.ContainerInspect(context.Background(), containerId)\n\tif err != nil {\n\t\treturn\n\t}\n\treturn\n}\n```\n\n也就是全局一个 docker client 对象",
    "body_html": "<p>我在我的代码里使用 Docker 的 client 时，发现在函数里面建立一个 Docker 的 client 后，当调用完毕后，函数里的 socket 并没有被关闭</p>\n\n<p>下面是问题代码</p>\n <pre class=\"highlight go\"><code><span class=\"k\">import</span> <span class=\"n\">docker_types</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">docker</span><span class=\"o\">/</span><span class=\"n\">docker</span><span class=\"o\">/</span><span class=\"n\">api</span><span class=\"o\">/</span><span class=\"n\">types</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"n\">docker</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">docker</span><span class=\"o\">/</span><span class=\"n\">docker</span><span class=\"o\">/</span><span class=\"n\">client</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n<span class=\"k\">func</span> <span class=\"n\">getDockerContainerInfo</span><span class=\"p\">(</span><span class=\"n\">containerId</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"n\">ContainerInfo</span> <span class=\"n\">docker_types</span><span class=\"o\">.</span><span class=\"n\">ContainerJSON</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">defaultHeaders</span> <span class=\"o\">:=</span> <span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"kt\">string</span><span class=\"p\">{</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">User</span><span class=\"o\">-</span><span class=\"n\">Agent</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">engine</span><span class=\"o\">-</span><span class=\"n\">api</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"o\">-</span><span class=\"m\">1.0</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}</span>\n    <span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">docker</span><span class=\"o\">.</span><span class=\"n\">NewClient</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">DockerSocket</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">v1</span><span class=\"m\">.24</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"n\">defaultHeaders</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">ContainerInfo</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ContainerInspect</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">Background</span><span class=\"p\">(),</span> <span class=\"n\">containerId</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>在使用过程中，发现系统文件描述符被用完了，通过 <code>lsof</code> 查看定位到了这个函数，发现原因是 docker client 连接 <code>unix:///var/run/docker.sock</code> 文件后，不关闭连接\n然后改成下面这样的就没问题了</p>\n <pre class=\"highlight go\"><code><span class=\"k\">import</span> <span class=\"n\">docker_types</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">docker</span><span class=\"o\">/</span><span class=\"n\">docker</span><span class=\"o\">/</span><span class=\"n\">api</span><span class=\"o\">/</span><span class=\"n\">types</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"n\">docker</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">docker</span><span class=\"o\">/</span><span class=\"n\">docker</span><span class=\"o\">/</span><span class=\"n\">client</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"k\">var</span> <span class=\"n\">dockerClient</span> <span class=\"o\">*</span><span class=\"n\">docker</span><span class=\"o\">.</span><span class=\"n\">Client</span>\n<span class=\"k\">func</span> <span class=\"n\">getDockerContainerInfo</span><span class=\"p\">(</span><span class=\"n\">containerId</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"n\">ContainerInfo</span> <span class=\"n\">docker_types</span><span class=\"o\">.</span><span class=\"n\">ContainerJSON</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">defaultHeaders</span> <span class=\"o\">:=</span> <span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"kt\">string</span><span class=\"p\">{</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">User</span><span class=\"o\">-</span><span class=\"n\">Agent</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">engine</span><span class=\"o\">-</span><span class=\"n\">api</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"o\">-</span><span class=\"m\">1.0</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}</span>\n    <span class=\"k\">if</span> <span class=\"n\">dockerClient</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">dockerClient</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">docker</span><span class=\"o\">.</span><span class=\"n\">NewClient</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">DockerSocket</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">v1</span><span class=\"m\">.24</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"n\">defaultHeaders</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n            <span class=\"k\">return</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">ContainerInfo</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">dockerClient</span><span class=\"o\">.</span><span class=\"n\">ContainerInspect</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">Background</span><span class=\"p\">(),</span> <span class=\"n\">containerId</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>也就是全局一个 docker client 对象</p>",
    "hits": 300,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 227,
    "title": "Go的runtime到底是怎么工作的？",
    "created_at": "2016-10-24 21:07:03",
    "updated_at": "2016-10-25 14:11:47",
    "replied_at": "2016-10-25 14:11:47",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 982,
    "last_reply_user_login": "su21",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "目前很少有介绍runtime内部实现的文章，那么runtime包到底包含了那些模块？从开发者的角度来看的话，runtime都提供了那些功能？官方网站好像也没有文档介绍，在go-nuts的邮件群组也没看到，谁能够总结一下Go的runtime的总结架构。\n",
    "body_html": "<p>目前很少有介绍 runtime 内部实现的文章，那么 runtime 包到底包含了那些模块？从开发者的角度来看的话，runtime 都提供了那些功能？官方网站好像也没有文档介绍，在 go-nuts 的邮件群组也没看到，谁能够总结一下 Go 的 runtime 的总结架构。</p>",
    "hits": 436,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 228,
    "title": "Go 2.0要开新坑了啊",
    "created_at": "2016-10-24 21:48:42",
    "updated_at": "2016-10-25 16:54:12",
    "replied_at": "2016-10-25 16:54:12",
    "replies_count": 11,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 137,
    "last_reply_user_login": "故城",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "#Introducing Go 2.0\n\nJust so we’re clear, this post is a thought experiment, not any form of commitment to deliver Go 2.0 in any timeframe. While I personally believe there will be a Go 2.0 in the future, I’m in no position to influence its creation; hence, this post is mere speculation.\n\nhttp://dave.cheney.net/2016/10/25/introducing-go-2-0",
    "body_html": "<p>#Introducing Go 2.0</p>\n\n<p>Just so we’re clear, this post is a thought experiment, not any form of commitment to deliver Go 2.0 in any timeframe. While I personally believe there will be a Go 2.0 in the future, I’m in no position to influence its creation; hence, this post is mere speculation.</p>\n\n<p><a href=\"http://dave.cheney.net/2016/10/25/introducing-go-2-0\" rel=\"nofollow\" target=\"_blank\">http://dave.cheney.net/2016/10/25/introducing-go-2-0</a></p>",
    "hits": 449,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 229,
    "title": "golang捕获错误怎么重新开始运行？",
    "created_at": "2016-10-24 22:03:57",
    "updated_at": "2016-10-25 11:28:19",
    "replied_at": "2016-10-25 11:26:12",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 636,
    "last_reply_user_login": "stevewang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 192,
    "user": "{\"id\": 192, \"name\": \"nino\", \"login\": \"nino\", \"avatar\": \"https://gocn.vip/system/letter_avatars/n.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\n\tFeeds, items, _ := FetchFeeds(url)\n\tif Feeds == nil {\n\t\tfmt.Print(&quot;time out&quot;)\n\t} \n```\n这段代码是一个爬虫获取url的时候，由于网站是国外的，所以有时候会timeout,在timeout的时候怎么让他从FetchFeeds（）函数重新开始呢。我想到的是用递归，但是递归会不会一直增加开销啊？\n",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"n\">Feeds</span><span class=\"p\">,</span> <span class=\"n\">items</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">FetchFeeds</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">Feeds</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span> <span class=\"n\">out</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">}</span> \n</code></pre> \n<p>这段代码是一个爬虫获取 url 的时候，由于网站是国外的，所以有时候会 timeout,在 timeout 的时候怎么让他从 FetchFeeds（）函数重新开始呢。我想到的是用递归，但是递归会不会一直增加开销啊？</p>",
    "hits": 464,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 230,
    "title": "GoCN 第二期《老司机带你看 Go 风景》——数据库达人陈非",
    "created_at": "2016-10-25 09:04:28",
    "updated_at": "2020-02-11 02:00:07",
    "replied_at": "2016-10-26 18:16:22",
    "replies_count": 13,
    "node_name": "线上活动",
    "node_id": 40,
    "last_reply_user_id": 1171,
    "last_reply_user_login": "hmly",
    "grade": "excellent",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 1,
    "body": "GoCN 本期老司机系列我们请来了数据库开发的达人，之前也分享过很多数据库开发经验 —— @flike 为大家解答关于Go 数据库开发方面的问题。\r\n\r\n大家好，我叫陈非（常用网络ID:flike）。 2013年硕士毕业于电子科技大学，同年加入奇虎360的Web平台部，从事MySQL数据库中间件的设计与研发工作。2015年初加入了珠海金山WPS 云平台团队，开始用Go开发后端服务，在这个过程中慢慢地被Go语言简洁的编码风格深深吸引。后来为了造一个更好的轮子，决定用Go实现一个好用的MySQL数据库中间件。经过几个月的开发，kingshard第一个可用的版本发布，得到了社区很多工程师的关注。这也坚定了我继续开发和维护kingshard的信心。2016年又机缘巧合的来到了腾讯云，从事分布式数据库的设计和研发工作。个人对分布式数据库、MySQL内核、数据库中间件和NoSQL比较感兴趣，欢迎交流与讨论。\r\n\r\n[![](https://github.com/gocn/images/blob/master/chenfei.jpeg?raw=true)](https://github.com/gocn/images/blob/master/chenfei.jpeg?raw=true)\r\n\r\n本次活动持续两天，2016-10-25至2016-10-26，嘉宾会在空闲时间上来给大家一一回答。不欢迎任何与主题无关的讨论和喷子。\r\n\r\n",
    "body_html": "<p>GoCN 本期老司机系列我们请来了数据库开发的达人，之前也分享过很多数据库开发经验 —— <a href=\"/flike\" class=\"user-mention\" title=\"@flike\"><i>@</i>flike</a> 为大家解答关于 Go 数据库开发方面的问题。</p>\n\n<p>大家好，我叫陈非（常用网络 ID:flike）。 2013 年硕士毕业于电子科技大学，同年加入奇虎 360 的 Web 平台部，从事 MySQL 数据库中间件的设计与研发工作。2015 年初加入了珠海金山 WPS 云平台团队，开始用 Go 开发后端服务，在这个过程中慢慢地被 Go 语言简洁的编码风格深深吸引。后来为了造一个更好的轮子，决定用 Go 实现一个好用的 MySQL 数据库中间件。经过几个月的开发，kingshard 第一个可用的版本发布，得到了社区很多工程师的关注。这也坚定了我继续开发和维护 kingshard 的信心。2016 年又机缘巧合的来到了腾讯云，从事分布式数据库的设计和研发工作。个人对分布式数据库、MySQL 内核、数据库中间件和 NoSQL 比较感兴趣，欢迎交流与讨论。</p>\n\n<p><a href=\"https://github.com/gocn/images/blob/master/chenfei.jpeg?raw=true\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"https://github.com/gocn/images/blob/master/chenfei.jpeg?raw=true\" title=\"\" alt=\"\"></a></p>\n\n<p>本次活动持续两天，2016-10-25 至 2016-10-26，嘉宾会在空闲时间上来给大家一一回答。不欢迎任何与主题无关的讨论和喷子。</p>",
    "hits": 856,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 231,
    "title": "如果我有决定权, Golang...",
    "created_at": "2016-10-25 09:17:35",
    "updated_at": "2016-10-26 11:24:09",
    "replied_at": "2016-10-26 11:24:09",
    "replies_count": 12,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 581,
    "last_reply_user_login": "goofansu",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 473,
    "user": "{\"id\": 473, \"name\": \"Lampo\", \"login\": \"Lampo\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如果我有决定权我在接入层会使用Golang,可是现在新接入层是Node.js.\n\n我尝试过推进Golang,但是都是做一些是非关键的事情,不知道如何说服上面的那个人...",
    "body_html": "<p>如果我有决定权我在接入层会使用 Golang,可是现在新接入层是 Node.js.</p>\n\n<p>我尝试过推进 Golang,但是都是做一些是非关键的事情,不知道如何说服上面的那个人...</p>",
    "hits": 592,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 232,
    "title": "对go语言感兴趣的同学看过来",
    "created_at": "2016-10-25 10:24:09",
    "updated_at": "2016-10-31 17:02:57",
    "replied_at": "2016-10-31 17:02:57",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 631,
    "last_reply_user_login": "Xanthus",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1149,
    "user": "{\"id\": 1149, \"name\": \"jinxuelian1227\", \"login\": \"jinxuelian1227\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "工作内容：\n1. 采用Go语言(Golang)开发稳健可扩展的后端程序；\n2. 基于SOA架构，为各类项目需求设计架构，开发后端所有功能服务，同团队成员合作并积极提出建议和反馈；\n3.通过单元测试、自动化以及代码审查等提升优化代码质量；\n4.积极参与各种头脑风暴会议并对用到的技术、算法和产品功能提出意见和建议；\n5.同产品和设计团队协作，理解用户需求，归纳功能用例，并转化为高效的技术解决方案；\n\n任职要求：\n1.2-7年的实际项目开发经验；\n2.本科及以上学历，计算机相关专业，全面的计算机理论基础，综合能力较强者可降低学历要求；\n3. 具备按时完成项目开发与交付的能力；\n4. 工作认真负责有责任心，追求细节和极致，有解决各类疑难问题的强烈愿望；\n5.具备扎实的OOP及相关软件开发技能，能根据架构要求，开发设计可扩展、可复用、高性能的功能模块；\n6. 具备数据库（特别是关系型数据库MySQL,PostgreSQL等）及相关知识的实际应用和优化经验，能始终保持对新技术的学习热情；\n7.具备Linux/Unix平台下的编程和操作经验，熟悉一种或者多种脚本语言(Python, Perl或者Shell等。\n\n社交平台，薪资 25-45K ,坐标：帝都北京\n",
    "body_html": "<p>工作内容：</p>\n\n<ol>\n<li>采用 Go 语言 (Golang) 开发稳健可扩展的后端程序；</li>\n<li>基于 SOA 架构，为各类项目需求设计架构，开发后端所有功能服务，同团队成员合作并积极提出建议和反馈；\n3.通过单元测试、自动化以及代码审查等提升优化代码质量；\n4.积极参与各种头脑风暴会议并对用到的技术、算法和产品功能提出意见和建议；\n5.同产品和设计团队协作，理解用户需求，归纳功能用例，并转化为高效的技术解决方案；</li>\n</ol>\n\n<p>任职要求：\n1.2-7 年的实际项目开发经验；\n2.本科及以上学历，计算机相关专业，全面的计算机理论基础，综合能力较强者可降低学历要求；</p>\n\n<ol>\n<li>具备按时完成项目开发与交付的能力；</li>\n<li>工作认真负责有责任心，追求细节和极致，有解决各类疑难问题的强烈愿望；\n5.具备扎实的 OOP 及相关软件开发技能，能根据架构要求，开发设计可扩展、可复用、高性能的功能模块；</li>\n<li>具备数据库（特别是关系型数据库 MySQL,PostgreSQL 等）及相关知识的实际应用和优化经验，能始终保持对新技术的学习热情；\n7.具备 Linux/Unix 平台下的编程和操作经验，熟悉一种或者多种脚本语言 (Python, Perl 或者 Shell 等。</li>\n</ol>\n\n<p>社交平台，薪资 25-45K ,坐标：帝都北京</p>",
    "hits": 415,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 233,
    "title": "go beego orm time",
    "created_at": "2016-10-25 14:36:22",
    "updated_at": "2016-10-25 16:34:50",
    "replied_at": "2016-10-25 16:34:50",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 348,
    "user": "{\"id\": 348, \"name\": \"eric\", \"login\": \"eric\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "mysql里存的是datetime类型，格式是&quot;2015-07-24 17:10:06&quot;，在模型里我设置的是：Ctime            time.Time `orm:type(datetime)` 通过orm取出的数据格式是这样的&quot;Ctime&quot;: &quot;2015-07-24T17:10:06+08:00&quot;,请问怎么转，或者说beego会有处理的方法吗？\n\nhttps://github.com/astaxie/beego/issues/686 就是这个issue",
    "body_html": "<p>mysql 里存的是 datetime 类型，格式是\"2015-07-24 17:10:06\"，在模型里我设置的是：Ctime            time.Time <code>orm:type(datetime)</code> 通过 orm 取出的数据格式是这样的\"Ctime\": \"2015-07-24T17:10:06+08:00\",请问怎么转，或者说 beego 会有处理的方法吗？</p>\n\n<p><a href=\"https://github.com/astaxie/beego/issues/686\" rel=\"nofollow\" target=\"_blank\">https://github.com/astaxie/beego/issues/686</a> 就是这个 issue</p>",
    "hits": 474,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 234,
    "title": "关于go run、go install两者与模板",
    "created_at": "2016-10-25 17:50:10",
    "updated_at": "2016-10-25 20:55:30",
    "replied_at": "2016-10-25 20:55:30",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 101,
    "user": "{\"id\": 101, \"name\": \"huangda\", \"login\": \"huangda\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "最近在看谢大的go web编程4.1节，敲了一下里面的代码，功能是在模版中1、打出一个字符串；2、输出一个表单\n发现一个诡异的事情：直接对文件用go run两个功能都正常，但是go install后 再通过$GOBIN/form运行时，功能1可以实现，但是功能2会报打不开模板的错误，这是为什么？求懂的人赐教一下！",
    "body_html": "<p>最近在看谢大的 go web 编程 4.1 节，敲了一下里面的代码，功能是在模版中 1、打出一个字符串；2、输出一个表单\n发现一个诡异的事情：直接对文件用 go run 两个功能都正常，但是 go install 后 再通过 $GOBIN/form 运行时，功能 1 可以实现，但是功能 2 会报打不开模板的错误，这是为什么？求懂的人赐教一下！</p>",
    "hits": 218,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 235,
    "title": "beego 怎么和 sphinx一起作为全文搜索使用",
    "created_at": "2016-10-25 18:00:11",
    "updated_at": "2016-10-28 17:56:52",
    "replied_at": "2016-10-28 17:56:52",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1055,
    "last_reply_user_login": "hlj2722",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1055,
    "user": "{\"id\": 1055, \"name\": \"hlj2722\", \"login\": \"hlj2722\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 645,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 236,
    "title": "Go 接口所在源码包定位",
    "created_at": "2016-10-25 18:07:04",
    "updated_at": "2019-08-19 13:01:39",
    "replied_at": "2019-08-19 13:01:39",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 8008,
    "last_reply_user_login": "ducklife",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 231,
    "user": "{\"id\": 231, \"name\": \"tangyumeng\", \"login\": \"tangyumeng\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在写代码时，定义一个结构体。然后实现  func String() string 方法，可以在输出时格式化对象表示。然后，想要了解 String() 在go 源码中的位置。如果不知道源码中 String() 所在接口，有没有什么办法比较快速的定位到 String() 源码 所在的包？",
    "body_html": "<p>在写代码时，定义一个结构体。然后实现  func String() string 方法，可以在输出时格式化对象表示。然后，想要了解 String() 在 go 源码中的位置。如果不知道源码中 String() 所在接口，有没有什么办法比较快速的定位到 String() 源码 所在的包？</p>",
    "hits": 599,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 237,
    "title": "Go会缓存DNS吗？",
    "created_at": "2016-10-26 09:23:32",
    "updated_at": "2016-10-26 20:57:10",
    "replied_at": "2016-10-26 20:57:10",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "很多人可能都用Go写过爬虫工具，那么每次请求Go是不是会换成DSN记录？从源码看不出来有换成的迹象[dnsclient](https://golang.org/src/net/dnsclient_unix.go &quot;dnsclient&quot;)\n\n但是这个好像对于爬虫来说特别重要啊，不然每次请求都要解析DNS。\n\n如果不能缓存的话，那么操作系统层面会在网络层进行缓存吗？\n",
    "body_html": "<p>很多人可能都用 Go 写过爬虫工具，那么每次请求 Go 是不是会换成 DSN 记录？从源码看不出来有换成的迹象<a href=\"https://golang.org/src/net/dnsclient_unix.go%20%22dnsclient%22\" title=\"\">dnsclient</a></p>\n\n<p>但是这个好像对于爬虫来说特别重要啊，不然每次请求都要解析 DNS。</p>\n\n<p>如果不能缓存的话，那么操作系统层面会在网络层进行缓存吗？</p>",
    "hits": 648,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 238,
    "title": "抛砖引玉一下，求问 Go 程序的动态插件（Plugin）方案",
    "created_at": "2016-10-26 11:22:12",
    "updated_at": "2016-10-29 22:29:58",
    "replied_at": "2016-10-29 22:29:58",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 271,
    "last_reply_user_login": "cholerae",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 89,
    "user": "{\"id\": 89, \"name\": \"c4pt0r\", \"login\": \"c4pt0r\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "总所周知，Go 并没有原生动态链接的方案，大家可以总结一下自己或者见过的比较漂亮的扩展已有业务的方法。\n比如 Kubernetes 的 Controller 机制，等等。",
    "body_html": "<p>总所周知，Go 并没有原生动态链接的方案，大家可以总结一下自己或者见过的比较漂亮的扩展已有业务的方法。\n比如 Kubernetes 的 Controller 机制，等等。</p>",
    "hits": 629,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 239,
    "title": "请问下大神nsq的应用场景?",
    "created_at": "2016-10-26 11:41:58",
    "updated_at": "2017-02-24 10:38:55",
    "replied_at": "2017-02-24 10:38:55",
    "replies_count": 12,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1253,
    "last_reply_user_login": "liushuchun",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 257,
    "user": "{\"id\": 257, \"name\": \"小平\", \"login\": \"lcp8888\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "做手游,想用nsq推送数据. 不知道可行不",
    "body_html": "<p>做手游,想用 nsq 推送数据. 不知道可行不</p>",
    "hits": 1113,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 240,
    "title": "用户名登录不了网站",
    "created_at": "2016-10-26 18:18:54",
    "updated_at": "2016-10-26 18:18:54",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1171,
    "user": "{\"id\": 1171, \"name\": \"hmly\", \"login\": \"hmly\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "换了几个浏览器登陆，还以为是浏览器的问题，最后发现居然无法用用户名登陆，真是伤感！换成邮箱后顺利登陆成功。",
    "body_html": "<p>换了几个浏览器登陆，还以为是浏览器的问题，最后发现居然无法用用户名登陆，真是伤感！换成邮箱后顺利登陆成功。</p>",
    "hits": 549,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 241,
    "title": "关于递归和切片的问题",
    "created_at": "2016-10-26 18:31:04",
    "updated_at": "2019-03-01 15:28:09",
    "replied_at": "2019-03-01 15:27:26",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 6865,
    "last_reply_user_login": "qiyin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 104,
    "user": "{\"id\": 104, \"name\": \"foolbread\", \"login\": \"foolbread\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n)\n\nfunc main() {\n\tvar val []int = make([]int, 0, 100)\n\tdeepNum(3, val)\n\tfor _, v := range val {\n\t\tfmt.Println(v)\n\t}\n}\n\nfunc deepNum(deep int, ret []int) {\n\tif deep &gt; 0 {\n\t\tdeepNum(deep-1, ret)\n\t} else {\n\t\tfmt.Println(&quot;here&quot;)\n\t\tret = append(ret, 100)\n\t}\n}\n```\n\n输出：here\n\n\n\n证明是有执行到here这边的，也是有对ret进入append操作，但是当deepNum返回时，val却是空，搞不懂，传入切片不应该呀。个人认为不是应该val里面已经有插入100这个值了吗？",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">var</span> <span class=\"n\">val</span> <span class=\"p\">[]</span><span class=\"kt\">int</span> <span class=\"o\">=</span> <span class=\"nb\">make</span><span class=\"p\">([]</span><span class=\"kt\">int</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">)</span>\n    <span class=\"n\">deepNum</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">val</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">deepNum</span><span class=\"p\">(</span><span class=\"n\">deep</span> <span class=\"kt\">int</span><span class=\"p\">,</span> <span class=\"n\">ret</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"n\">deep</span> <span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n        <span class=\"n\">deepNum</span><span class=\"p\">(</span><span class=\"n\">deep</span><span class=\"o\">-</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">ret</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">here</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>输出：here</p>\n\n<p>证明是有执行到 here 这边的，也是有对 ret 进入 append 操作，但是当 deepNum 返回时，val 却是空，搞不懂，传入切片不应该呀。个人认为不是应该 val 里面已经有插入 100 这个值了吗？</p>",
    "hits": 584,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 242,
    "title": "有没有好的图片处理包，能实现大图中寻找小图",
    "created_at": "2016-10-26 22:46:16",
    "updated_at": "2016-10-31 21:45:04",
    "replied_at": "2016-10-31 21:44:56",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 183,
    "last_reply_user_login": "veni",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 846,
    "user": "{\"id\": 846, \"name\": \"andy\", \"login\": \"andy\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "最近老处理模拟人工操作，需要类似功能，也就是类似按键精灵图片查找功能。\n1.大图中是否有小图，\n2.如果有，大致坐标位置。",
    "body_html": "<p>最近老处理模拟人工操作，需要类似功能，也就是类似按键精灵图片查找功能。\n1.大图中是否有小图，\n2.如果有，大致坐标位置。</p>",
    "hits": 350,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 243,
    "title": "数据库插入的时候怎么使用NULL而不是空字符串",
    "created_at": "2016-10-27 09:09:24",
    "updated_at": "2016-12-26 13:29:01",
    "replied_at": "2016-12-26 13:29:01",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1337,
    "last_reply_user_login": "caibirdme",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我在执行如下的SQL的时候，有些字段可能为空，但是为空的时候数据库会插入一个空字符串，如果修改才能让他插入一个NULL\n\n```\n_, err := m.Db.Exec(`INSERT INTO \n                         visitor_events\n                         (type, \n                          info, \n                          url_path, \n                          visitor_id, \n                          created_at, \n                          domain)\n                          VALUES\n                          (?, ?, ?, ?, ?, ?)`,\n                          m.SaveEventType(ve), ve.EventInfo, m.SaveURLPath(ve.UrlPath), ve.VisitorId, time.Now().UTC(), ve.Domain)\n```",
    "body_html": "<p>我在执行如下的 SQL 的时候，有些字段可能为空，但是为空的时候数据库会插入一个空字符串，如果修改才能让他插入一个 NULL</p>\n <pre class=\"highlight plaintext\"><code>_, err := m.Db.Exec(`INSERT INTO \n                         visitor_events\n                         (type, \n                          info, \n                          url_path, \n                          visitor_id, \n                          created_at, \n                          domain)\n                          VALUES\n                          (?, ?, ?, ?, ?, ?)`,\n                          m.SaveEventType(ve), ve.EventInfo, m.SaveURLPath(ve.UrlPath), ve.VisitorId, time.Now().UTC(), ve.Domain)\n</code></pre> ",
    "hits": 453,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 244,
    "title": "针对新手的Go在线练习网站",
    "created_at": "2016-10-27 09:12:17",
    "updated_at": "2016-10-28 14:28:49",
    "replied_at": "2016-10-28 14:28:49",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 795,
    "last_reply_user_login": "zhqqqy",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "这里有几个在线练习的手册\n\n1. http://gocode.io/\n2. http://exercism.io/languages/go\n3. https://coderbyte.com/\n4. https://www.codingame.com/\n\n",
    "body_html": "<p>这里有几个在线练习的手册</p>\n\n<ol>\n<li><a href=\"http://gocode.io/\" rel=\"nofollow\" target=\"_blank\">http://gocode.io/</a></li>\n<li><a href=\"http://exercism.io/languages/go\" rel=\"nofollow\" target=\"_blank\">http://exercism.io/languages/go</a></li>\n<li><a href=\"https://coderbyte.com/\" rel=\"nofollow\" target=\"_blank\">https://coderbyte.com/</a></li>\n<li><a href=\"https://www.codingame.com/\" rel=\"nofollow\" target=\"_blank\">https://www.codingame.com/</a></li>\n</ol>",
    "hits": 609,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 245,
    "title": "beego的orm针对postgresql的jsonb字段的查询",
    "created_at": "2016-10-27 09:32:10",
    "updated_at": "2016-10-27 21:13:23",
    "replied_at": "2016-10-27 21:13:23",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 70,
    "user": "{\"id\": 70, \"name\": \"Samuier\", \"login\": \"Samuier\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我定义了一个struct，\ntype Demomodel struct {\n\tId   int64  `orm:&quot;auto&quot;`\n\tObjectId   string `orm:&quot;size(128)&quot; valid:&quot;Required&quot;`\n\tScore      int64 `orm:&quot;default(0)&quot; valid:&quot;Required&quot;`\n\tPlayerName string `orm:&quot;size(128)&quot; valid:&quot;Required&quot;`\n\tCreate_time time.Time `orm:&quot;auto_now_add;type(datetime)&quot;`\n\tData string `orm:&quot;type(jsonb)&quot;`\n}\n其中的Data字段是jsonb类型的。在里面插入Data是{&quot;k1&quot;: &quot;ddd&quot;, &quot;k2&quot;: 12}, {&quot;k1&quot;: &quot;d1&quot;, &quot;k2&quot;: 13}。\n我想查询Data字段的k2为13的记录，用beego的orm该怎么查询啊。在google找了好久，都没有找到对jsonb这样的字段操作的例子。",
    "body_html": "<p>我定义了一个 struct，\ntype Demomodel struct {\n    Id   int64  <code>orm:&amp;quot;auto&amp;quot;</code>\n    ObjectId   string <code>orm:&amp;quot;size(128)&amp;quot; valid:&amp;quot;Required&amp;quot;</code>\n    Score      int64 <code>orm:&amp;quot;default(0)&amp;quot; valid:&amp;quot;Required&amp;quot;</code>\n    PlayerName string <code>orm:&amp;quot;size(128)&amp;quot; valid:&amp;quot;Required&amp;quot;</code>\n    Create_time time.Time <code>orm:&amp;quot;auto_now_add;type(datetime)&amp;quot;</code>\n    Data string <code>orm:&amp;quot;type(jsonb)&amp;quot;</code>\n}\n其中的 Data 字段是 jsonb 类型的。在里面插入 Data 是{\"k1\": \"ddd\", \"k2\": 12}, {\"k1\": \"d1\", \"k2\": 13}。\n我想查询 Data 字段的 k2 为 13 的记录，用 beego 的 orm 该怎么查询啊。在 google 找了好久，都没有找到对 jsonb 这样的字段操作的例子。</p>",
    "hits": 600,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 246,
    "title": "Golang 文件路径问题",
    "created_at": "2016-10-27 10:34:46",
    "updated_at": "2016-10-27 10:34:46",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1176,
    "user": "{\"id\": 1176, \"name\": \"abaddon\", \"login\": \"abaddon\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "t, _ := template.ParseFiles(&quot;login.gtpl&quot;)\n\nlogin.gtpl文件放下的是src目录下，现在想将其移动到src目录的static文件下，想请问下参数该怎么设置？\n\n具体：https://segmentfault.com/q/1010000004930497/revision",
    "body_html": "<p>t, _ := template.ParseFiles(\"login.gtpl\")</p>\n\n<p>login.gtpl 文件放下的是 src 目录下，现在想将其移动到 src 目录的 static 文件下，想请问下参数该怎么设置？</p>\n\n<p>具体：<a href=\"https://segmentfault.com/q/1010000004930497/revision\" rel=\"nofollow\" target=\"_blank\">https://segmentfault.com/q/1010000004930497/revision</a></p>",
    "hits": 195,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 247,
    "title": "‘话题描述’ 显示有问题？",
    "created_at": "2016-10-27 12:04:02",
    "updated_at": "2016-10-27 21:27:04",
    "replied_at": "2016-10-27 21:27:04",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1017,
    "user": "{\"id\": 1017, \"name\": \"云开\", \"login\": \"819664855\", \"avatar\": \"https://gocn.vip/system/letter_avatars/8.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "进入话题，发现“话题描述”显示js代码，是显示问题，还是我想多了？\n问题链接，比如：https://gocn.io/topic/beego， 看右上角“话题描述”",
    "body_html": "<p>进入话题，发现 “话题描述” 显示 js 代码，是显示问题，还是我想多了？\n问题链接，比如：<a href=\"https://gocn.io/topic/beego\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/topic/beego</a>， 看右上角 “话题描述”</p>",
    "hits": 345,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 248,
    "title": "go如何调用exe并捕获输出?",
    "created_at": "2016-10-27 12:15:25",
    "updated_at": "2016-10-27 13:13:28",
    "replied_at": "2016-10-27 13:13:28",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 193,
    "last_reply_user_login": "philosophia14",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "cmd和os.StartProcess方法\n\n补充一\nos.StartProcess,返回的progress类好像没有类似方法.只有wait,kiil,getpid什么的\n\n补充二~:\npid, err := os.StartProcess(&quot;tesseract.exe&quot;, []string{&quot;param1&quot;,&quot;param2&quot;,&quot;param3&quot;}, procAttr) \n其中,&quot;param1&quot;,似乎是args[0]?????,从param1开始填,我这边会执行无效.\nparam1的实测行为,就像占位符一样,输入什么进去,应该都可以.\n有能力的朋友,希望帮我解释下\n\n\n补充三:\n如果连续的执行命令,pipline会不会效率更高?\n但是,pipline似乎有时间限制,我不确定,会自动关闭?\n\n",
    "body_html": "<p>cmd 和 os.StartProcess 方法</p>\n\n<p>补充一\nos.StartProcess,返回的 progress 类好像没有类似方法.只有 wait,kiil,getpid 什么的</p>\n\n<p>补充二~:\npid, err := os.StartProcess(\"tesseract.exe\", [] string{\"param1\",\"param2\",\"param3\"}, procAttr) \n其中,\"param1\",似乎是 args[0]?????,从 param1 开始填,我这边会执行无效.\nparam1 的实测行为,就像占位符一样,输入什么进去,应该都可以.\n有能力的朋友,希望帮我解释下</p>\n\n<p>补充三:\n如果连续的执行命令,pipline 会不会效率更高?\n但是,pipline 似乎有时间限制,我不确定,会自动关闭?</p>",
    "hits": 390,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 249,
    "title": "根据dockerfile docker build 遇到的错误",
    "created_at": "2016-10-27 12:27:54",
    "updated_at": "2016-10-27 14:59:58",
    "replied_at": "2016-10-27 14:59:58",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 940,
    "last_reply_user_login": "zradelaide1122",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 940,
    "user": "{\"id\": 940, \"name\": \"zradelaide1122\", \"login\": \"zradelaide1122\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Dockerfile\n\n\nFROM golang\nMAINTAINER Ricky Zhang &quot;zradelaide1122@gmail.com&quot;\n\nRUN &quot;mkdir&quot; &quot;-p&quot; &quot;/opt/golang/src&quot;\nENV &quot;GOPATH&quot; &quot;/opt/golang&quot;\nRUN apt-get install git -y\nRUN apt-get install cloc -y\nADD ./main.go /opt/golang/src\nWORKDIR /opt/golang/src\n\n但是运行到下一层 apt-get install cloc -y\n\nRemoving intermediate container 9058418f72b7\nStep 6 : RUN /bin/bash -c apt-get install cloc -y\n ---&gt; Running in b4783bd33ae9\nReading package lists...\nBuilding dependency tree...\nReading state information...\nE: Unable to locate package cloc\nThe command '/bin/bash -c apt-get install cloc -y' returned a non-zero code: 100\n\n就会出现一个Unable to locate package  \n\ngoogle了下 \n是说 版本低 \n\n加入了 \nRUN apt-get update\nRUN apt-get upgrade -y \n\nStep 1 : FROM golang\n ---&gt; f69c27b2f59a\nStep 2 : MAINTAINER Ricky Zhang &quot;zradelaide1122@gmail.com&quot;\n ---&gt; Using cache\n ---&gt; a735ba94a06a\nStep 3 : RUN &quot;mkdir&quot; &quot;-p&quot; &quot;/opt/golang/src&quot;\n ---&gt; Using cache\n ---&gt; 5bf2f5c7fc15\nStep 4 : ENV &quot;GOPATH&quot; &quot;/opt/golang&quot;\n ---&gt; Using cache\n ---&gt; 208f717a2fa7\nStep 5 : RUN apt-get update\n ---&gt; Using cache\n ---&gt; f2eeae2c4387\nStep 6 : RUN apt-get upgrade -y\n ---&gt; Using cache\n ---&gt; cd9349d89abc\nStep 7 : RUN apt-get install git -y\n ---&gt; Running in 40cc678e6d29\nReading package lists...\nBuilding dependency tree...\nReading state information...\ngit is already the newest version.\n0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\n ---&gt; 35e3e7a34b93\nRemoving intermediate container 40cc678e6d29\nStep 8 : RUN apt-get install cloc -y\n ---&gt; Running in ad6808276700\nReading package lists...\nBuilding dependency tree...\nReading state information...\nE: Unable to locate package cloc\nThe command '/bin/sh -c apt-get install cloc -y' returned a non-zero code: 100\n\n如下报错。。。  \n\n后来也尝试了 \n去github上面 \nRUN wget xxxxx \nconverted 'https://github.com/AlDanial/cloc/releases/download/v1.70/cloc-1.70.tar.gz' (ANSI_X3.4-1968) -&gt; 'https://github.com/AlDanial/cloc/releases/download/v1.70/cloc-1.70.tar.gz' (UTF-8)\n--2016-10-27 04:20:50--  https://github.com/AlDanial/cloc/releases/download/v1.70/cloc-1.70.tar.gz\nResolving github.com (github.com)... failed: Name or service not known.\nwget: unable to resolve host address 'github.com'\n\n求高人帮助下。。。",
    "body_html": "<p>Dockerfile</p>\n\n<p>FROM golang\nMAINTAINER Ricky Zhang \"zradelaide1122@gmail.com\"</p>\n\n<p>RUN \"mkdir\" \"-p\" \"/opt/golang/src\"\nENV \"GOPATH\" \"/opt/golang\"\nRUN apt-get install git -y\nRUN apt-get install cloc -y\nADD ./main.go /opt/golang/src\nWORKDIR /opt/golang/src</p>\n\n<p>但是运行到下一层 apt-get install cloc -y</p>\n\n<p>Removing intermediate container 9058418f72b7\nStep 6 : RUN /bin/bash -c apt-get install cloc -y\n ---&gt; Running in b4783bd33ae9\nReading package lists...\nBuilding dependency tree...\nReading state information...\nE: Unable to locate package cloc\nThe command '/bin/bash -c apt-get install cloc -y' returned a non-zero code: 100</p>\n\n<p>就会出现一个 Unable to locate package  </p>\n\n<p>google 了下 \n是说 版本低 </p>\n\n<p>加入了 \nRUN apt-get update\nRUN apt-get upgrade -y </p>\n\n<p>Step 1 : FROM golang\n ---&gt; f69c27b2f59a\nStep 2 : MAINTAINER Ricky Zhang \"zradelaide1122@gmail.com\"\n ---&gt; Using cache\n ---&gt; a735ba94a06a\nStep 3 : RUN \"mkdir\" \"-p\" \"/opt/golang/src\"\n ---&gt; Using cache\n ---&gt; 5bf2f5c7fc15\nStep 4 : ENV \"GOPATH\" \"/opt/golang\"\n ---&gt; Using cache\n ---&gt; 208f717a2fa7\nStep 5 : RUN apt-get update\n ---&gt; Using cache\n ---&gt; f2eeae2c4387\nStep 6 : RUN apt-get upgrade -y\n ---&gt; Using cache\n ---&gt; cd9349d89abc\nStep 7 : RUN apt-get install git -y\n ---&gt; Running in 40cc678e6d29\nReading package lists...\nBuilding dependency tree...\nReading state information...\ngit is already the newest version.\n0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\n ---&gt; 35e3e7a34b93\nRemoving intermediate container 40cc678e6d29\nStep 8 : RUN apt-get install cloc -y\n ---&gt; Running in ad6808276700\nReading package lists...\nBuilding dependency tree...\nReading state information...\nE: Unable to locate package cloc\nThe command '/bin/sh -c apt-get install cloc -y' returned a non-zero code: 100</p>\n\n<p>如下报错。。。  </p>\n\n<p>后来也尝试了 \n去 github 上面 \nRUN wget xxxxx \nconverted '<a href=\"https://github.com/AlDanial/cloc/releases/download/v1.70/cloc-1.70.tar.gz\" rel=\"nofollow\" target=\"_blank\">https://github.com/AlDanial/cloc/releases/download/v1.70/cloc-1.70.tar.gz</a>' (ANSI_X3.4-1968) -&gt; '<a href=\"https://github.com/AlDanial/cloc/releases/download/v1.70/cloc-1.70.tar.gz\" rel=\"nofollow\" target=\"_blank\">https://github.com/AlDanial/cloc/releases/download/v1.70/cloc-1.70.tar.gz</a>' (UTF-8)\n--2016-10-27 04:20:50--  <a href=\"https://github.com/AlDanial/cloc/releases/download/v1.70/cloc-1.70.tar.gz\" rel=\"nofollow\" target=\"_blank\">https://github.com/AlDanial/cloc/releases/download/v1.70/cloc-1.70.tar.gz</a>\nResolving github.com (github.com)... failed: Name or service not known.\nwget: unable to resolve host address 'github.com'</p>\n\n<p>求高人帮助下。。。</p>",
    "hits": 472,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 250,
    "title": "golang内存检测工具",
    "created_at": "2016-10-27 12:39:23",
    "updated_at": "2016-11-09 19:22:34",
    "replied_at": "2016-11-09 19:22:34",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 96,
    "last_reply_user_login": "sheepbao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 222,
    "user": "{\"id\": 222, \"name\": \"themoonstone\", \"login\": \"themoonstone\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在所有编程语言中、内存问题都是大家无法忽视的、golang也不例外、目前最为大家所熟知的golang的内存检测工具应该是pprof、不过在我们的生产环境中使用pprof时会遇到一些问题：\n- 1、接受分析请求的profilers HTTP处理程序需要将其自身附加到应用程序的HTTP服务器（或有一个正在运行），这意味着应采取额外的安全措施来保护侦听端口。\n- 2、定位和访问应用程序节点主机以运行go工具pprof可能在容器环境（例如Kubernetes）中很棘手。\n- 3、如果应用程序崩溃或无法响应pprof请求，则无法进行内存分析。\n- 4、如果要具有堆分配的历史堆栈跟踪视图，需要定期手动pprof执行，对交互式结果进行分析和比较。\n\n使用Stack Impact能有效的避免上述问题并且可以进行自动内存泄漏检测和分析(这点很强大)\n不多说、直接看看用法\nStack Impact的安装使用很简单、步骤如下：\n\n- 1、进入stackimpact.com. 获取一个agent key\n- 2、go get github.com/stackimpact/stackimpact-go\n\n以下是一个简单的实例：\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;net/http&quot;\n\n\t&quot;github.com/stackimpact/stackimpact-go&quot;\n)\n\nfunc handler(w http.ResponseWriter, r *http.Request) {\n\tres, err := http.Get(&quot;https://jsonplaceholder.typicode.com/posts&quot;)\n\tif err == nil {\n\t\tdefer res.Body.Close()\n\t}\n\n\tfmt.Fprintf(w, &quot;Loaded some data from some API!&quot;)\n}\n\nfunc main() {\n\t// StackImpact initialization\n\tagent := stackimpact.NewAgent()\n\tagent.Configure(“agent key here&quot;, &quot;Some Go Server&quot;)\n\n\t// Start server\n\thttp.HandleFunc(&quot;/&quot;, handler)\n\thttp.ListenAndServe(&quot;:8080&quot;, nil)\n}\n\n```\n\n感兴趣的同学可以进入官网深入了解\n官网地址：https://stackimpact.com/\n\n原文链接：https://stackimpact.com/blog/memory-leak-detection-in-production-go-applications/",
    "body_html": "<p>在所有编程语言中、内存问题都是大家无法忽视的、golang 也不例外、目前最为大家所熟知的 golang 的内存检测工具应该是 pprof、不过在我们的生产环境中使用 pprof 时会遇到一些问题：</p>\n\n<ul>\n<li>1、接受分析请求的 profilers HTTP 处理程序需要将其自身附加到应用程序的 HTTP 服务器（或有一个正在运行），这意味着应采取额外的安全措施来保护侦听端口。</li>\n<li>2、定位和访问应用程序节点主机以运行 go 工具 pprof 可能在容器环境（例如 Kubernetes）中很棘手。</li>\n<li>3、如果应用程序崩溃或无法响应 pprof 请求，则无法进行内存分析。</li>\n<li>4、如果要具有堆分配的历史堆栈跟踪视图，需要定期手动 pprof 执行，对交互式结果进行分析和比较。</li>\n</ul>\n\n<p>使用 Stack Impact 能有效的避免上述问题并且可以进行自动内存泄漏检测和分析 (这点很强大)\n不多说、直接看看用法\nStack Impact 的安装使用很简单、步骤如下：</p>\n\n<ul>\n<li>1、进入 stackimpact.com. 获取一个 agent key</li>\n<li>2、go get github.com/stackimpact/stackimpact-go</li>\n</ul>\n\n<p>以下是一个简单的实例：</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">stackimpact</span><span class=\"o\">/</span><span class=\"n\">stackimpact</span><span class=\"o\">-</span><span class=\"k\">go</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">handler</span><span class=\"p\">(</span><span class=\"n\">w</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">ResponseWriter</span><span class=\"p\">,</span> <span class=\"n\">r</span> <span class=\"o\">*</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Request</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">res</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c\">//jsonplaceholder.typicode.com/posts&amp;quot;)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"k\">defer</span> <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">Body</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Fprintf</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Loaded</span> <span class=\"n\">some</span> <span class=\"n\">data</span> <span class=\"n\">from</span> <span class=\"n\">some</span> <span class=\"n\">API</span><span class=\"o\">!&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"c\">// StackImpact initialization</span>\n    <span class=\"n\">agent</span> <span class=\"o\">:=</span> <span class=\"n\">stackimpact</span><span class=\"o\">.</span><span class=\"n\">NewAgent</span><span class=\"p\">()</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">Configure</span><span class=\"p\">(</span><span class=\"err\">“</span><span class=\"n\">agent</span> <span class=\"n\">key</span> <span class=\"n\">here</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Some</span> <span class=\"n\">Go</span> <span class=\"n\">Server</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n    <span class=\"c\">// Start server</span>\n    <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">HandleFunc</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">handler</span><span class=\"p\">)</span>\n    <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">ListenAndServe</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span><span class=\"m\">8080</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"no\">nil</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n</code></pre> \n<p>感兴趣的同学可以进入官网深入了解\n官网地址：<a href=\"https://stackimpact.com/\" rel=\"nofollow\" target=\"_blank\">https://stackimpact.com/</a></p>\n\n<p>原文链接：<a href=\"https://stackimpact.com/blog/memory-leak-detection-in-production-go-applications/\" rel=\"nofollow\" target=\"_blank\">https://stackimpact.com/blog/memory-leak-detection-in-production-go-applications/</a></p>",
    "hits": 704,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 251,
    "title": "vscode 对于修改的过的函数在补全时立即生效是怎么设置的",
    "created_at": "2016-10-27 13:04:35",
    "updated_at": "2016-10-30 17:09:24",
    "replied_at": "2016-10-30 17:09:24",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 960,
    "last_reply_user_login": "tupunco",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1036,
    "user": "{\"id\": 1036, \"name\": \"yong27\", \"login\": \"yong27\", \"avatar\": \"https://gocn.vip/system/letter_avatars/y.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "vscode 对于修改的过的函数在补全时立即生效是怎么设置的。\n在sublime 里面直接 ctrl+b go get就可以了",
    "body_html": "<p>vscode 对于修改的过的函数在补全时立即生效是怎么设置的。\n在 sublime 里面直接 ctrl+b go get 就可以了</p>",
    "hits": 368,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 252,
    "title": "stdin 和命令行(例如:-dir some/path/to/dir ) 是一回事吗",
    "created_at": "2016-10-27 13:19:46",
    "updated_at": "2016-10-27 14:14:35",
    "replied_at": "2016-10-27 14:14:35",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 636,
    "last_reply_user_login": "stevewang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "例如:some.exe  &quot;-h aaaa -g xxxx&quot;\n\n我一直以为,  &quot;-h aaaa -g xxxx&quot;这个部分,是标准输入,但是感觉又不对\n\n\n",
    "body_html": "<p>例如:some.exe  \"-h aaaa -g xxxx\"</p>\n\n<p>我一直以为,  \"-h aaaa -g xxxx\"这个部分,是标准输入,但是感觉又不对</p>",
    "hits": 368,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 253,
    "title": "复杂的项目里可以使用.的方式导入包吗？",
    "created_at": "2016-10-27 14:54:10",
    "updated_at": "2016-10-28 00:04:49",
    "replied_at": "2016-10-28 00:04:20",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 176,
    "last_reply_user_login": "tt_0411",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 623,
    "user": "{\"id\": 623, \"name\": \"jiazhoulvke\", \"login\": \"jiazhoulvke\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "使用.的方式导入包的时候golint就会提示警告：\n\n&gt; should not use dot imports\n\n虽然可以忽略但看着很别扭。带上包名又真的很别扭啊。\n\n假如我在foo包中定义了一个变量DB用于存放数据库连接，定义了一个Log用于存放log库实例，现在要在bar包调用，就要写foo.DB.Exec(&quot;glhf&quot;)、foo.Log.Info(&quot;gg&quot;)这样。而用.导入的方式是这样:\nDB.Exec(&quot;glhf&quot;)、Log.Info(&quot;gg&quot;)，显然后者看起来更美观自然啊。\n\n各位在项目中会采用.方式吗？或者公司有相关规定吗？",
    "body_html": "<p>使用.的方式导入包的时候 golint 就会提示警告：</p>\n\n<p>&gt; should not use dot imports</p>\n\n<p>虽然可以忽略但看着很别扭。带上包名又真的很别扭啊。</p>\n\n<p>假如我在 foo 包中定义了一个变量 DB 用于存放数据库连接，定义了一个 Log 用于存放 log 库实例，现在要在 bar 包调用，就要写 foo.DB.Exec(\"glhf\")、foo.Log.Info(\"gg\") 这样。而用.导入的方式是这样:\nDB.Exec(\"glhf\")、Log.Info(\"gg\")，显然后者看起来更美观自然啊。</p>\n\n<p>各位在项目中会采用.方式吗？或者公司有相关规定吗？</p>",
    "hits": 394,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 254,
    "title": "关于使用第三方库错误(error)的判断",
    "created_at": "2016-10-27 15:14:14",
    "updated_at": "2016-10-27 17:44:33",
    "replied_at": "2016-10-27 17:44:33",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 471,
    "last_reply_user_login": "willee",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 457,
    "user": "{\"id\": 457, \"name\": \"steven\", \"login\": \"steven\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在使用第三方库的时候，有时里面返回一些错误，我们需要根据错误类型的不同进行不同的处理，\n请问大家一些是怎么优雅的处理？\n\n比如，第三方库的代码是这样返回的：\n\n```\nfunc ThirdPartFun( somecase string ) error {\n\t\n\tswitch somecase {\n\t\tcase &quot;timeout&quot;:\n\t\t\treturn errors.New(&quot;timeout&quot;)\n\t\tcase &quot;connet close&quot;:\n\t\t\treturn errors.New(&quot;connet close&quot;)\n\t\tdefault:\n\t\t\treturn nil\t\t\n\t\t\t\n\t}\n\t\n}\n```\n如果我的程序拿到这个返回码，怎么做比较合适，想知道大家的做法\n\n```\n  err := ThirdPartFun(&quot;&quot;)\n  if err != nil {\n  \tif 超时/断开连接 { //这里怎么写比较合理，对应该上面两个error，是否只能是判断字符串？\n\t   do_reconnet()\n\t}esle {\n\t   return err\n\t}\n  \n  }\n  \n  \n  \n\n```\n",
    "body_html": "<p>在使用第三方库的时候，有时里面返回一些错误，我们需要根据错误类型的不同进行不同的处理，\n请问大家一些是怎么优雅的处理？</p>\n\n<p>比如，第三方库的代码是这样返回的：</p>\n <pre class=\"highlight plaintext\"><code>func ThirdPartFun( somecase string ) error {\n\n    switch somecase {\n        case &amp;quot;timeout&amp;quot;:\n            return errors.New(&amp;quot;timeout&amp;quot;)\n        case &amp;quot;connet close&amp;quot;:\n            return errors.New(&amp;quot;connet close&amp;quot;)\n        default:\n            return nil      \n\n    }\n\n}\n</code></pre> \n<p>如果我的程序拿到这个返回码，怎么做比较合适，想知道大家的做法</p>\n <pre class=\"highlight plaintext\"><code>err := ThirdPartFun(&amp;quot;&amp;quot;)\nif err != nil {\n  if 超时/断开连接 { //这里怎么写比较合理，对应该上面两个error，是否只能是判断字符串？\n     do_reconnet()\n  }esle {\n     return err\n  }\n\n}\n\n\n\n\n</code></pre> ",
    "hits": 397,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 255,
    "title": "golang 如何与 SOAP Service 进行通讯？",
    "created_at": "2016-10-27 15:29:03",
    "updated_at": "2016-10-28 13:31:59",
    "replied_at": "2016-10-28 13:31:59",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 111,
    "last_reply_user_login": "niugou",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 74,
    "user": "{\"id\": 74, \"name\": \"xieyanke\", \"login\": \"xieyanke\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "### 例如：\n如下的请求报文如何封装？\n\n```\n&lt;x:Envelope xmlns:x=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ope=&quot;https://I_REMOVED_THE_URL_HERE/wsdl/v4.0/operator&quot;&gt;\n    &lt;x:Header/&gt;\n    &lt;x:Body&gt;\n        &lt;ope:aLogin&gt;\n            &lt;ope:login&gt;TESTUSERNAME&lt;/ope:login&gt;\n            &lt;ope:password&gt;TESTPASSWORD&lt;/ope:password&gt;\n        &lt;/ope:aLogin&gt;\n    &lt;/x:Body&gt;\n&lt;/x:Envelope&gt;\n```",
    "body_html": "<h3 id=\"例如：\">例如：</h3>\n<p>如下的请求报文如何封装？</p>\n <pre class=\"highlight plaintext\"><code>&amp;lt;x:Envelope xmlns:x=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:ope=&amp;quot;https://I_REMOVED_THE_URL_HERE/wsdl/v4.0/operator&amp;quot;&amp;gt;\n    &amp;lt;x:Header/&amp;gt;\n    &amp;lt;x:Body&amp;gt;\n        &amp;lt;ope:aLogin&amp;gt;\n            &amp;lt;ope:login&amp;gt;TESTUSERNAME&amp;lt;/ope:login&amp;gt;\n            &amp;lt;ope:password&amp;gt;TESTPASSWORD&amp;lt;/ope:password&amp;gt;\n        &amp;lt;/ope:aLogin&amp;gt;\n    &amp;lt;/x:Body&amp;gt;\n&amp;lt;/x:Envelope&amp;gt;\n</code></pre> ",
    "hits": 416,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 256,
    "title": "go 如何定时执行",
    "created_at": "2016-10-27 16:45:53",
    "updated_at": "2016-10-28 11:58:48",
    "replied_at": "2016-10-28 11:58:48",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 64,
    "last_reply_user_login": "zituocn",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 407,
    "user": "{\"id\": 407, \"name\": \"lucyne\", \"login\": \"lucyne\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "linux服务器 当cpu利用率达到50%时，去找出使用 cpu top5的进程 然后打印到日志文件里\n如何用go实现？ 启动一个线程，每秒钟去判断下cpu使用情况 如何定时？\n哪位大神 最好代码demo下 贴下 谢谢 ！！！  go新手",
    "body_html": "<p>linux 服务器 当 cpu 利用率达到 50% 时，去找出使用 cpu top5 的进程 然后打印到日志文件里\n如何用 go 实现？ 启动一个线程，每秒钟去判断下 cpu 使用情况 如何定时？\n哪位大神 最好代码 demo 下 贴下 谢谢 ！！！ go 新手</p>",
    "hits": 472,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 257,
    "title": "beego API自动化文档问题",
    "created_at": "2016-10-27 19:10:43",
    "updated_at": "2021-01-20 02:22:10",
    "replied_at": "2016-11-21 20:31:54",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1140,
    "user": "{\"id\": 1140, \"name\": \"xiaofeng211\", \"login\": \"xiaofeng211\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "请教一下，我在自动化文档操作时候 \n&lt;&lt;然后在你的main.go函数中引入_ &quot;beeapi/docs&quot;。&gt;&gt;\n这步操作需要加文件吗？ \n\n谢谢",
    "body_html": "<p>请教一下，我在自动化文档操作时候 \n&lt;&lt;然后在你的 main.go 函数中引入_ \"beeapi/docs\"。&gt;&gt;\n这步操作需要加文件吗？ </p>\n\n<p>谢谢</p>",
    "hits": 539,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 258,
    "title": "关于fmt包优先打印类型Stringf方法结果的疑问？",
    "created_at": "2016-10-27 22:15:40",
    "updated_at": "2016-10-27 22:25:55",
    "replied_at": "2016-10-27 22:23:59",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 636,
    "last_reply_user_login": "stevewang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 382,
    "user": "{\"id\": 382, \"name\": \"simeon\", \"login\": \"simeon\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在《GO语言圣经》2.5章节中有这样的描述：\n&gt; 当使用fmt包的打印方法时，将会优先使用该类型对应的String方法返回的结果打印\n\n于是我写了下面的代码\n\n```\ntype mystr string\n\nfunc (s *mystr) String() string {\n\treturn fmt.Sprintf(&quot;name:%s&quot;, *s)\n}\n\nfunc main() {\n\tmystr := &quot;hello&quot;\n\tfmt.Println(mystr)\n}\n```\n打印结果是：`hello`\n并没有调用`String()` 为什么？ 或者什么情况下调用，什么情况下不会调用？\n",
    "body_html": "<p>在《GO 语言圣经》2.5 章节中有这样的描述：\n&gt; 当使用 fmt 包的打印方法时，将会优先使用该类型对应的 String 方法返回的结果打印</p>\n\n<p>于是我写了下面的代码</p>\n <pre class=\"highlight plaintext\"><code>type mystr string\n\nfunc (s *mystr) String() string {\n    return fmt.Sprintf(&amp;quot;name:%s&amp;quot;, *s)\n}\n\nfunc main() {\n    mystr := &amp;quot;hello&amp;quot;\n    fmt.Println(mystr)\n}\n</code></pre> \n<p>打印结果是：<code>hello</code>\n并没有调用<code>String()</code> 为什么？ 或者什么情况下调用，什么情况下不会调用？</p>",
    "hits": 450,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 259,
    "title": "网速是怎么决定的？",
    "created_at": "2016-10-28 01:05:08",
    "updated_at": "2016-10-30 00:14:31",
    "replied_at": "2016-10-30 00:14:31",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 471,
    "last_reply_user_login": "willee",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "连接速度\n传输速度\n\n请从硬件和软件角度说说？谢谢！",
    "body_html": "<p>连接速度\n传输速度</p>\n\n<p>请从硬件和软件角度说说？谢谢！</p>",
    "hits": 449,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 260,
    "title": "append一个element到一个正在读的slice是否安全",
    "created_at": "2016-10-28 09:32:55",
    "updated_at": "2016-10-28 14:19:46",
    "replied_at": "2016-10-28 14:19:46",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1017,
    "last_reply_user_login": "云开",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "请看下面的代码，如果多个goroutine读写slice是不是安全？\n\n```\nfunc (o *Obj) Reader() {\n  data := o.data;\n  for i, value := range data {\n    log.Printf(&quot;got data[%v] = %v&quot;, i, value)\n  }\n}\n```\n\n```\nfunc (o *Obj) Writer() {\n    o.data = append(o.data, 1234)\n}\n```",
    "body_html": "<p>请看下面的代码，如果多个 goroutine 读写 slice 是不是安全？</p>\n <pre class=\"highlight plaintext\"><code>func (o *Obj) Reader() {\n  data := o.data;\n  for i, value := range data {\n    log.Printf(&amp;quot;got data[%v] = %v&amp;quot;, i, value)\n  }\n}\n</code></pre>  <pre class=\"highlight plaintext\"><code>func (o *Obj) Writer() {\n    o.data = append(o.data, 1234)\n}\n</code></pre> ",
    "hits": 537,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 261,
    "title": "求救:谢大推荐的类似游戏的oj, 玩的时候遇上了困难",
    "created_at": "2016-10-28 10:34:49",
    "updated_at": "2016-11-11 10:48:29",
    "replied_at": "2016-11-11 10:48:29",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 631,
    "last_reply_user_login": "Xanthus",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 631,
    "user": "{\"id\": 631, \"name\": \"Xanthus\", \"login\": \"Xanthus\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "用反射总是用不对\n\n\n```go\n/**************************\n** Mission: Epoch's Trap **\n***************************\n**\n** This could be it if you can't stop the flow of water quickly.\n** Epoch's security is much improved in his lair with large chunks\n** of code hidden from you.  Luckily, Agent Getter introduces you to\n** the reflect package which could shed some light on the missing code,\n** hopefully in time to stop the water from filling the room.\n**\n**/\n\npackage main\n\nimport (\n  &quot;fmt&quot;\n  &quot;reflect&quot;\n  &quot;time&quot;\n)\n\nfunc main() {\n  c := initControls()\n  c.gallonsPerMin = 700\n//以下可编辑\n  v := reflect.TypeOf(c)\n  fmt.Println(v)\n  cnt := v.NumField()\n  for i:=0;i&lt;cnt;i++{\n    fmt.Println(v.Field(i))\n  }\n\t//以上可编辑\n\t  capacity := 20000\n  filled := 0\n\n  for {\n    filled += c.flow()\n    if filled &gt;= capacity {\n      fmt.Println(&quot;Waterline:&quot;, filled)\n      fmt.Println(&quot;Room filled!&quot;)\n      return\n    } else {\n      fmt.Println(&quot;Waterline:&quot;, filled)\n      time.Sleep(20 * time.Millisecond)\n    }\n    if c.emergencyShutoff() {\n      fmt.Println(&quot;Emergency shutoff activated&quot;)\n      return\n    }\n  }\n}\n```",
    "body_html": "<p>用反射总是用不对</p>\n <pre class=\"highlight go\"><code><span class=\"c\">/**************************\n** Mission: Epoch's Trap **\n***************************\n**\n** This could be it if you can't stop the flow of water quickly.\n** Epoch's security is much improved in his lair with large chunks\n** of code hidden from you.  Luckily, Agent Getter introduces you to\n** the reflect package which could shed some light on the missing code,\n** hopefully in time to stop the water from filling the room.\n**\n**/</span>\n\n<span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n  <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n  <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">reflect</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n  <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"n\">initControls</span><span class=\"p\">()</span>\n  <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">gallonsPerMin</span> <span class=\"o\">=</span> <span class=\"m\">700</span>\n<span class=\"c\">//以下可编辑</span>\n  <span class=\"n\">v</span> <span class=\"o\">:=</span> <span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">TypeOf</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n  <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n  <span class=\"n\">cnt</span> <span class=\"o\">:=</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">NumField</span><span class=\"p\">()</span>\n  <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"o\">:=</span><span class=\"m\">0</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"n\">cnt</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span>\n  <span class=\"p\">}</span>\n    <span class=\"c\">//以上可编辑</span>\n      <span class=\"n\">capacity</span> <span class=\"o\">:=</span> <span class=\"m\">20000</span>\n  <span class=\"n\">filled</span> <span class=\"o\">:=</span> <span class=\"m\">0</span>\n\n  <span class=\"k\">for</span> <span class=\"p\">{</span>\n    <span class=\"n\">filled</span> <span class=\"o\">+=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">flow</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">filled</span> <span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span><span class=\"o\">=</span> <span class=\"n\">capacity</span> <span class=\"p\">{</span>\n      <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Waterline</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">filled</span><span class=\"p\">)</span>\n      <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Room</span> <span class=\"n\">filled</span><span class=\"o\">!&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n      <span class=\"k\">return</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n      <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Waterline</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">filled</span><span class=\"p\">)</span>\n      <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"m\">20</span> <span class=\"o\">*</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Millisecond</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">if</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">emergencyShutoff</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n      <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Emergency</span> <span class=\"n\">shutoff</span> <span class=\"n\">activated</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n      <span class=\"k\">return</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 419,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 262,
    "title": "Go在数据科学领域的文章",
    "created_at": "2016-10-28 17:40:27",
    "updated_at": "2016-10-28 21:30:58",
    "replied_at": "2016-10-28 21:30:58",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 111,
    "last_reply_user_login": "niugou",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "If you follow the data science community, you have very likely seen something like “language wars” unfold between Python and R users. They seem to be the only choices. But there might be a somewhat surprising third option: Go, the open source programming language created at Google.\n\nhttps://www.oreilly.com/ideas/data-science-gophers",
    "body_html": "<p>If you follow the data science community, you have very likely seen something like “language wars” unfold between Python and R users. They seem to be the only choices. But there might be a somewhat surprising third option: Go, the open source programming language created at Google.</p>\n\n<p><a href=\"https://www.oreilly.com/ideas/data-science-gophers\" rel=\"nofollow\" target=\"_blank\">https://www.oreilly.com/ideas/data-science-gophers</a></p>",
    "hits": 389,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 263,
    "title": "golang windows程序获取管理员权限（UAC ）",
    "created_at": "2016-10-28 20:07:12",
    "updated_at": "2016-10-29 10:52:09",
    "replied_at": "2016-10-29 10:52:09",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1019,
    "last_reply_user_login": "chenghuama",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 833,
    "user": "{\"id\": 833, \"name\": \"CodyGuo\", \"login\": \"CodyGuo\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在windows上执行有关系统设置命令的时候需要管理员权限才能操作，比如修改网卡的禁用、启用状态。双击执行是不能正确执行命令的，只有右键以管理员身份运行才能成功。\n为解决此问题，花了很长时间找了各种方法，最终找到一个简单的方法，双击也能执行成功了。过程如下：\n    1&gt; Go get github.com/akavel/rsrc\n    2&gt; 把nac.manifest 文件拷贝到当前windows项目根目录\n    3&gt; rsrc -manifest nac.manifest -o nac.syso\n    4&gt; go build\n\n\n    nac.mainfest的内容为：\n    &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;\n    &lt;assembly xmlns=&quot;urn:schemas-microsoft-com:asm.v1&quot; manifestVersion=&quot;1.0&quot;&gt;\n    &lt;trustInfo xmlns=&quot;urn:schemas-microsoft-com:asm.v3&quot;&gt;\n    &lt;security&gt;\n    &lt;requestedPrivileges&gt;\n    &lt;requestedExecutionLevel level=&quot;requireAdministrator&quot;/&gt;\n    &lt;/requestedPrivileges&gt;\n    &lt;/security&gt;\n    &lt;/trustInfo&gt;\n    &lt;/assembly&gt;",
    "body_html": "<p>在 windows 上执行有关系统设置命令的时候需要管理员权限才能操作，比如修改网卡的禁用、启用状态。双击执行是不能正确执行命令的，只有右键以管理员身份运行才能成功。\n为解决此问题，花了很长时间找了各种方法，最终找到一个简单的方法，双击也能执行成功了。过程如下：\n    1&gt; Go get github.com/akavel/rsrc\n    2&gt; 把 nac.manifest 文件拷贝到当前 windows 项目根目录\n    3&gt; rsrc -manifest nac.manifest -o nac.syso\n    4&gt; go build</p>\n\n<p>nac.mainfest 的内容为：\n    &lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?&gt;\n    &lt;assembly xmlns=\"urn:schemas-microsoft-com:asm.v1\" manifestVersion=\"1.0\"&gt;\n    &lt;trustInfo xmlns=\"urn:schemas-microsoft-com:asm.v3\"&gt;\n    &lt;security&gt;\n    &lt;requestedPrivileges&gt;\n    &lt;requestedExecutionLevel level=\"requireAdministrator\"/&gt;\n    &lt;/requestedPrivileges&gt;\n    &lt;/security&gt;\n    &lt;/trustInfo&gt;\n    &lt;/assembly&gt;</p>",
    "hits": 518,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 264,
    "title": " StartProcess,的标准输入?输出?",
    "created_at": "2016-10-29 02:46:29",
    "updated_at": "2016-10-30 11:32:07",
    "replied_at": "2016-10-30 11:32:07",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "先看下os包中的,StartProcess.用于启动一个进程\nfunc StartProcess(name string, argv []string, attr *ProcAttr) (*Process, error)\n\n\n\n其中有参数 attr *ProAttr\n\ntype ProcAttr struct {\n        // If Dir is non-empty, the child changes into the directory before\n        // creating the process.\n        Dir string\n        // If Env is non-nil, it gives the environment variables for the\n        // new process in the form returned by Environ.\n        // If it is nil, the result of Environ will be used.\n        Env []string\n        // Files specifies the open files inherited by the new process. The\n        // first three entries correspond to standard input, standard output, and\n        // standard error. An implementation may support additional entries,\n        // depending on the underlying operating system. A nil entry corresponds\n        // to that file being closed when the process starts.\n     **   Files []*File**\n\n        // Operating system-specific process creation attributes.\n        // Note that setting this field means that your program\n        // may not execute properly or even compile on some\n        // operating systems.\n        Sys *syscall.SysProcAttr\n}\n\n\tFiles: []*os.File{\n\t\t\tos.Stdin,\n\t\t\tos.Stdout,\n\t\t\tos.Stderr,\n\t\t},\n\t\t\n我想知道如何给一个exe进程的标准输入,输入数据?在用 StarProcess方法的时候,\n看上去是要用到Files,但是不太确定.,也不知道Files []有什么用?\n\n",
    "body_html": "<p>先看下 os 包中的,StartProcess.用于启动一个进程\nfunc StartProcess(name string, argv [] string, attr *ProcAttr) (*Process, error)</p>\n\n<p>其中有参数 attr *ProAttr</p>\n\n<p>type ProcAttr struct {\n        // If Dir is non-empty, the child changes into the directory before\n        // creating the process.\n        Dir string\n        // If Env is non-nil, it gives the environment variables for the\n        // new process in the form returned by Environ.\n        // If it is nil, the result of Environ will be used.\n        Env [] string\n        // Files specifies the open files inherited by the new process. The\n        // first three entries correspond to standard input, standard output, and\n        // standard error. An implementation may support additional entries,\n        // depending on the underlying operating system. A nil entry corresponds\n        // to that file being closed when the process starts.\n     **   Files []<em>File</em>*</p>\n\n<p>// Operating system-specific process creation attributes.\n        // Note that setting this field means that your program\n        // may not execute properly or even compile on some\n        // operating systems.\n        Sys *syscall.SysProcAttr\n}</p>\n\n<p>Files: []*os.File{\n            os.Stdin,\n            os.Stdout,\n            os.Stderr,\n        },</p>\n\n<p>我想知道如何给一个 exe 进程的标准输入,输入数据?在用 StarProcess 方法的时候,\n看上去是要用到 Files,但是不太确定.,也不知道 Files [] 有什么用?</p>",
    "hits": 451,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 265,
    "title": "字符串连接哪一种方式最高效",
    "created_at": "2016-10-29 11:11:13",
    "updated_at": "2020-03-10 14:29:06",
    "replied_at": "2018-02-02 13:41:51",
    "replies_count": 18,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 3686,
    "last_reply_user_login": "lichao2018",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Go里面string是最基础的类型，是一个只读类型，针对他的每一个操作都会创建一个新的string\n\n所以，如果我在不知道结果是多少长字符串的情况下不断的连接字符串，怎么样的方式是最好的呢？\n\n最常用的可能是如下这样：\n\n```\ns := &quot;&quot;\nfor i := 0; i &lt; 1000; i++ {\n    s += otherString()\n}\nreturn s\n```\n\n但是这样好像非常的慢",
    "body_html": "<p>Go 里面 string 是最基础的类型，是一个只读类型，针对他的每一个操作都会创建一个新的 string</p>\n\n<p>所以，如果我在不知道结果是多少长字符串的情况下不断的连接字符串，怎么样的方式是最好的呢？</p>\n\n<p>最常用的可能是如下这样：</p>\n <pre class=\"highlight plaintext\"><code>s := &amp;quot;&amp;quot;\nfor i := 0; i &amp;lt; 1000; i++ {\n    s += otherString()\n}\nreturn s\n</code></pre> \n<p>但是这样好像非常的慢</p>",
    "hits": 754,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 266,
    "title": "据说Go1.8版本的GC已经优化到吊炸天的程度了",
    "created_at": "2016-10-29 21:44:49",
    "updated_at": "2016-11-03 09:42:31",
    "replied_at": "2016-11-03 09:42:31",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 933,
    "last_reply_user_login": "sion",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Golang的GC据说已经在0.1ms以下了，有个Google爹还是不错的，至少遇到问题都可以挖到大牛来解决问题。\n\n目前代码已经递交merge到master下面，大家有GC问题的可以测试看看，是不是传说中的降到疯狂的低了，还有是不是会影响throughput。\n\n详细的讨论在这里：\nhttps://groups.google.com/forum/?fromgroups#!topic/golang-dev/Ab1sFeoZg_8\n\n详细的设计方案在这里：\nhttps://github.com/golang/proposal/blob/master/design/17503-eliminate-rescan.md",
    "body_html": "<p>Golang 的 GC 据说已经在 0.1ms 以下了，有个 Google 爹还是不错的，至少遇到问题都可以挖到大牛来解决问题。</p>\n\n<p>目前代码已经递交 merge 到 master 下面，大家有 GC 问题的可以测试看看，是不是传说中的降到疯狂的低了，还有是不是会影响 throughput。</p>\n\n<p>详细的讨论在这里：\n<a href=\"https://groups.google.com/forum/?fromgroups#!topic/golang-dev/Ab1sFeoZg_8\" rel=\"nofollow\" target=\"_blank\">https://groups.google.com/forum/?fromgroups#! topic/golang-dev/Ab1sFeoZg_8</a></p>\n\n<p>详细的设计方案在这里：\n<a href=\"https://github.com/golang/proposal/blob/master/design/17503-eliminate-rescan.md\" rel=\"nofollow\" target=\"_blank\">https://github.com/golang/proposal/blob/master/design/17503-eliminate-rescan.md</a></p>",
    "hits": 544,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 267,
    "title": "竞争写文件",
    "created_at": "2016-10-30 00:00:41",
    "updated_at": "2016-10-30 11:33:54",
    "replied_at": "2016-10-30 11:33:54",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "通俗的说下问题\n\n\nfor ；；{\n\nCmd.cmd=(outPutAFile.exe,-d /mydir -fileName a.txt)\ncmd.run(）\n}\n\n\n\n[mydir]\na.txt\n\n在这个目录结构中，新的a.txt会一直生成，go默认也会替代掉旧文件\n\n后台打印发现，每次执行相差时间很多。\n\n我想提高性能。不知道有什么办法。\n\n\n\n\n以上是简单叙述\n。。。。。。。。。。。。。。。。\n\n一个输出，不断生成文件名相同的文件。同时，获取文件内容。\n这种情况，相当于把输出的txt文件当做是输出了。\n因为，时实获取数据，导致，txt也不断的被新生成的替换。\n\n\n替换过程中，花费的时间不尽相同。\n我希望替换的过很高效。\n\n硬件，和读源码能力有限，c的经验也没有。 我也不知道发生了什么\n\n应该如何去优化这种不断替换场景的性能呢？（无法转为stdout，第三方软件决定了）\n\n真诚求问",
    "body_html": "<p>通俗的说下问题</p>\n\n<p>for ；；{</p>\n\n<p>Cmd.cmd=(outPutAFile.exe,-d /mydir -fileName a.txt)\ncmd.run(）\n}</p>\n\n<p>[mydir]\na.txt</p>\n\n<p>在这个目录结构中，新的 a.txt 会一直生成，go 默认也会替代掉旧文件</p>\n\n<p>后台打印发现，每次执行相差时间很多。</p>\n\n<p>我想提高性能。不知道有什么办法。</p>\n\n<p>以上是简单叙述\n。。。。。。。。。。。。。。。。</p>\n\n<p>一个输出，不断生成文件名相同的文件。同时，获取文件内容。\n这种情况，相当于把输出的 txt 文件当做是输出了。\n因为，时实获取数据，导致，txt 也不断的被新生成的替换。</p>\n\n<p>替换过程中，花费的时间不尽相同。\n我希望替换的过很高效。</p>\n\n<p>硬件，和读源码能力有限，c 的经验也没有。 我也不知道发生了什么</p>\n\n<p>应该如何去优化这种不断替换场景的性能呢？（无法转为 stdout，第三方软件决定了）</p>\n\n<p>真诚求问</p>",
    "hits": 432,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 269,
    "title": "Go里面如何写多行的字符串吗？",
    "created_at": "2016-10-30 11:20:10",
    "updated_at": "2016-10-31 10:37:49",
    "replied_at": "2016-10-31 10:37:11",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 682,
    "last_reply_user_login": "mintzhao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我们知道Python里面支持写多行的字符串：\n\n```\n&quot;&quot;&quot;line 1\nline 2\nline 3&quot;&quot;&quot;\n```\n\n这个在Go里面怎么实现？",
    "body_html": "<p>我们知道 Python 里面支持写多行的字符串：</p>\n <pre class=\"highlight plaintext\"><code>&amp;quot;&amp;quot;&amp;quot;line 1\nline 2\nline 3&amp;quot;&amp;quot;&amp;quot;\n</code></pre> \n<p>这个在 Go 里面怎么实现？</p>",
    "hits": 409,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 270,
    "title": "怎么检测一个文件是否存在",
    "created_at": "2016-10-30 11:22:39",
    "updated_at": "2016-10-31 11:01:05",
    "replied_at": "2016-10-31 11:01:05",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 84,
    "last_reply_user_login": "liyongjing",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Go的标准库里面没有一个直接检测文件是否存在的函数(类似Python的os.path.exists))，Go里面正确的检测文件是否存在的姿势是怎么样的？",
    "body_html": "<p>Go 的标准库里面没有一个直接检测文件是否存在的函数 (类似 Python 的 os.path.exists))，Go 里面正确的检测文件是否存在的姿势是怎么样的？</p>",
    "hits": 449,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 271,
    "title": "为什么Go的编译那么快？",
    "created_at": "2016-10-30 11:25:25",
    "updated_at": "2016-10-30 22:12:58",
    "replied_at": "2016-10-30 22:12:58",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 810,
    "last_reply_user_login": "simple",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Go的官网搜索了一遍，好像没有找到关于Go编译方面的资料，Go为什么编译那么多，是因为他们在编译器里面做了很多优化，语言特性少？",
    "body_html": "<p>Go 的官网搜索了一遍，好像没有找到关于 Go 编译方面的资料，Go 为什么编译那么多，是因为他们在编译器里面做了很多优化，语言特性少？</p>",
    "hits": 1003,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 272,
    "title": "发现一个非常不错的性能优化的视频",
    "created_at": "2016-10-30 11:35:17",
    "updated_at": "2018-02-28 17:25:40",
    "replied_at": "2018-02-28 17:25:40",
    "replies_count": 8,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 813,
    "last_reply_user_login": "domac",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "How to optimize Go for really high performance - by Björn Rabenstein\n\nhttps://www.youtube.com/watch?v=ZuQcbqYK0BY",
    "body_html": "<p>How to optimize Go for really high performance - by Björn Rabenstein\n<span class=\"embed-responsive embed-responsive-16by9\"><iframe class=\"embed-responsive-item\" src=\"//www.youtube.com/embed/ZuQcbqYK0BY\" allowfullscreen=\"\"></iframe></span></p>",
    "hits": 566,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 273,
    "title": "beego orm的资源释放问题",
    "created_at": "2016-10-30 12:11:44",
    "updated_at": "2021-01-16 18:56:39",
    "replied_at": "2016-10-30 21:14:51",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 457,
    "user": "{\"id\": 457, \"name\": \"steven\", \"login\": \"steven\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "请问如果使用beego的orm在程序退出的时候要做什么释放工作吗？\n因为我们有个程序连接mysql后，退出，一定会有这样的报错：\n\n```\n2016-10-29T12:31:47.878848Z 204230 [Note] Aborted connection 204230 to db: 'trandb' user: 'user' host: 'x.x.x.x' (Got an error reading communication packets)\n\n```",
    "body_html": "<p>请问如果使用 beego 的 orm 在程序退出的时候要做什么释放工作吗？\n因为我们有个程序连接 mysql 后，退出，一定会有这样的报错：</p>\n <pre class=\"highlight plaintext\"><code>2016-10-29T12:31:47.878848Z 204230 [Note] Aborted connection 204230 to db: 'trandb' user: 'user' host: 'x.x.x.x' (Got an error reading communication packets)\n\n</code></pre> ",
    "hits": 413,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 274,
    "title": "process release，kill等等方法提高性能么？",
    "created_at": "2016-10-30 12:20:16",
    "updated_at": "2016-10-30 12:20:16",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如何高效使用进程？\n去使用process类的一些方法，还是别的一些方法，还是都有用？\n\n想讨论收集下这些方法\n同时，这些方法是不是真的有用，会反过来增加负担吗？\n\n常用的优化运行效率和把控资源，您是怎么做的？\n\n不想引导进入某些方面，希望各抒己见，不被先入为主的回答。（回答后，再看大家的可能比较有利于收集）\n\n",
    "body_html": "<p>如何高效使用进程？\n去使用 process 类的一些方法，还是别的一些方法，还是都有用？</p>\n\n<p>想讨论收集下这些方法\n同时，这些方法是不是真的有用，会反过来增加负担吗？</p>\n\n<p>常用的优化运行效率和把控资源，您是怎么做的？</p>\n\n<p>不想引导进入某些方面，希望各抒己见，不被先入为主的回答。（回答后，再看大家的可能比较有利于收集）</p>",
    "hits": 334,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 275,
    "title": "golang 通过exec Command启动的进程如何关闭的解决办法",
    "created_at": "2016-10-30 12:20:52",
    "updated_at": "2018-03-29 09:52:23",
    "replied_at": "2018-03-29 09:52:23",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 817,
    "last_reply_user_login": "pathbox",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 833,
    "user": "{\"id\": 833, \"name\": \"CodyGuo\", \"login\": \"CodyGuo\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在用exec包调用的其他进程后如何关闭结束，可以使用context包的机制进行管理，context包的使用详见：https://godoc.org/context  \nexec.CommandContext方发实现了context，通过context可以对exec启动的进程结束。\n隐藏程序自身黑窗口的方法：Go build -ldflags=&quot;-H windows&quot;\n隐藏子进程黑窗口的方法：\ncmd.SysProcAttr = &amp;syscall.SysProcAttr{HideWindow: true}\n```go\npackage main\n\nimport (\n\t&quot;context&quot;\n\t&quot;fmt&quot;\n\t&quot;os&quot;\n\t&quot;os/exec&quot;\n\t&quot;syscall&quot;\n\t&quot;time&quot;\n)\n\nfunc main() {\n\tctx, cancel := context.WithCancel(context.Background())\n\tcmd := exec.CommandContext(ctx, &quot;./b&quot;)\n\tcmd.SysProcAttr = &amp;syscall.SysProcAttr{HideWindow: true}\n\tcmd.Stdout = os.Stdout\n\tcmd.Start()\n\n\ttime.Sleep(10 * time.Second)\n\tfmt.Println(&quot;退出程序中...&quot;, cmd.Process.Pid)\n\tcancel()\n\n\tcmd.Wait()\n}\n\n```",
    "body_html": "<p>在用 exec 包调用的其他进程后如何关闭结束，可以使用 context 包的机制进行管理，context 包的使用详见：<a href=\"https://godoc.org/context\" rel=\"nofollow\" target=\"_blank\">https://godoc.org/context</a><br>\nexec.CommandContext 方发实现了 context，通过 context 可以对 exec 启动的进程结束。\n隐藏程序自身黑窗口的方法：Go build -ldflags=\"-H windows\"\n隐藏子进程黑窗口的方法：\ncmd.SysProcAttr = &amp;syscall.SysProcAttr{HideWindow: true}</p>\n<pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">context</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">os</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">os</span><span class=\"o\">/</span><span class=\"n\">exec</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">syscall</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"n\">cancel</span> <span class=\"o\">:=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">WithCancel</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">Background</span><span class=\"p\">())</span>\n    <span class=\"n\">cmd</span> <span class=\"o\">:=</span> <span class=\"n\">exec</span><span class=\"o\">.</span><span class=\"n\">CommandContext</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">./</span><span class=\"n\">b</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">SysProcAttr</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">syscall</span><span class=\"o\">.</span><span class=\"n\">SysProcAttr</span><span class=\"p\">{</span><span class=\"n\">HideWindow</span><span class=\"o\">:</span> <span class=\"no\">true</span><span class=\"p\">}</span>\n    <span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">Stdout</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Stdout</span>\n    <span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">Start</span><span class=\"p\">()</span>\n\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"m\">10</span> <span class=\"o\">*</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">退出程序中</span><span class=\"o\">...&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">Process</span><span class=\"o\">.</span><span class=\"n\">Pid</span><span class=\"p\">)</span>\n    <span class=\"n\">cancel</span><span class=\"p\">()</span>\n\n    <span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n\n</code></pre>",
    "hits": 995,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 276,
    "title": "在反引号里怎么使用反引号",
    "created_at": "2016-10-30 16:52:16",
    "updated_at": "2019-07-15 19:04:33",
    "replied_at": "2019-07-15 19:04:33",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 13,
    "last_reply_user_login": "h12",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 659,
    "user": "{\"id\": 659, \"name\": \"godonggua\", \"login\": \"godonggua\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "有个需求需要在反引号\n```go\n`   `\n```\n里面使用反引号\n比如我要在里面写sql语句， sql中 用 例如 t.`type` 字段有时候要用反引号括起来防止和关键字冲突   \n但是 反引号\n```go\n `   `\n```\n在go里不清楚 怎么样才能包含转义的反引号， 用双引号&quot; &quot; 的话不能换行所以写sql比较麻烦。   \n请问大家有什么好的解决方式吗？",
    "body_html": "<p>有个需求需要在反引号</p>\n <pre class=\"highlight go\"><code><span class=\"s\">`   `</span>\n</code></pre> \n<p>里面使用反引号\n比如我要在里面写 sql 语句， sql 中 用 例如 t.<code>type</code> 字段有时候要用反引号括起来防止和关键字冲突<br>\n但是 反引号</p>\n <pre class=\"highlight go\"><code><span class=\"s\">`   `</span>\n</code></pre> \n<p>在 go 里不清楚 怎么样才能包含转义的反引号， 用双引号\" \" 的话不能换行所以写 sql 比较麻烦。<br>\n请问大家有什么好的解决方式吗？</p>",
    "hits": 622,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 277,
    "title": "为什么这么写会死锁呢",
    "created_at": "2016-10-30 19:57:30",
    "updated_at": "2016-10-31 11:34:06",
    "replied_at": "2016-10-31 11:34:06",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 471,
    "last_reply_user_login": "willee",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1005,
    "user": "{\"id\": 1005, \"name\": \"insisthzr\", \"login\": \"insisthzr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n)\n\nfunc tel(ch chan int) {\n\tfor i := 0; i &lt; 15; i++ {\n\t\tch &lt;- i\n\t}\n}\n\nfunc main() {\n\tvar ok = true\n\tch := make(chan int)\n\n\tgo tel(ch)\n\tfor ok {\n\t\ti := &lt;-ch\n\t\tfmt.Printf(&quot;ok is %t and the counter is at %d\\n&quot;, ok, i)\n\n\t}\n}\n\n```\nall goroutines are asleep - deadlock",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">tel</span><span class=\"p\">(</span><span class=\"n\">ch</span> <span class=\"k\">chan</span> <span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"m\">15</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n        <span class=\"n\">ch</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"n\">i</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">var</span> <span class=\"n\">ok</span> <span class=\"o\">=</span> <span class=\"no\">true</span>\n    <span class=\"n\">ch</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">int</span><span class=\"p\">)</span>\n\n    <span class=\"k\">go</span> <span class=\"n\">tel</span><span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">ok</span> <span class=\"p\">{</span>\n        <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">ch</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">ok</span> <span class=\"n\">is</span> <span class=\"o\">%</span><span class=\"n\">t</span> <span class=\"n\">and</span> <span class=\"n\">the</span> <span class=\"n\">counter</span> <span class=\"n\">is</span> <span class=\"n\">at</span> <span class=\"o\">%</span><span class=\"n\">d</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">ok</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n</code></pre> \n<p>all goroutines are asleep - deadlock</p>",
    "hits": 478,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 278,
    "title": "参数和返回值里面到底用指针还是value",
    "created_at": "2016-10-31 10:29:09",
    "updated_at": "2018-03-13 14:26:13",
    "replied_at": "2018-03-13 14:26:06",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 3686,
    "last_reply_user_login": "lichao2018",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Go里面有很多方式返回一个struct的值或者slice，我们经常会看到的是如下的代码：\n```\ntype MyStruct struct {\n    Val int\n}\n\nfunc myfunc() MyStruct {\n    return MyStruct{Val: 1}\n}\n\nfunc myfunc() *MyStruct {\n    return &amp;MyStruct{}\n}\n\nfunc myfunc(s *MyStruct) {\n    s.Val = 1\n}\n\n```\n\n我知道这三种方式的不同点，第一个返回一个struct的copy，第二个在函数内部创建一个指向struct的指针然后返回，第三个是传入一个已经存在的struct，然后修改他的值。\n\n我在很多源码里面见过这三种不同的用法，我是想知道这个的最佳实践是什么？什么时候应该用哪一种？例如第一种用在一些小的struct(因为这个花费是最小的)，第二种应用在大的struct，而第三种可能就是为了非常的节约内存，因为你在不同的调用中重用struct。\n\nslice的例子也是类似如下:\n\n```\nfunc myfunc() []MyStruct {\n    return []MyStruct{ MyStruct{Val: 1} }\n}\n\nfunc myfunc() []*MyStruct {\n    return []MyStruct{ &amp;MyStruct{Val: 1} }\n}\n\nfunc myfunc(s *[]MyStruct) {\n    *s = []MyStruct{ MyStruct{Val: 1} }\n}\n```",
    "body_html": "<p>Go 里面有很多方式返回一个 struct 的值或者 slice，我们经常会看到的是如下的代码：</p>\n <pre class=\"highlight plaintext\"><code>type MyStruct struct {\n    Val int\n}\n\nfunc myfunc() MyStruct {\n    return MyStruct{Val: 1}\n}\n\nfunc myfunc() *MyStruct {\n    return &amp;amp;MyStruct{}\n}\n\nfunc myfunc(s *MyStruct) {\n    s.Val = 1\n}\n\n</code></pre> \n<p>我知道这三种方式的不同点，第一个返回一个 struct 的 copy，第二个在函数内部创建一个指向 struct 的指针然后返回，第三个是传入一个已经存在的 struct，然后修改他的值。</p>\n\n<p>我在很多源码里面见过这三种不同的用法，我是想知道这个的最佳实践是什么？什么时候应该用哪一种？例如第一种用在一些小的 struct(因为这个花费是最小的)，第二种应用在大的 struct，而第三种可能就是为了非常的节约内存，因为你在不同的调用中重用 struct。</p>\n\n<p>slice 的例子也是类似如下:</p>\n <pre class=\"highlight plaintext\"><code>func myfunc() []MyStruct {\n    return []MyStruct{ MyStruct{Val: 1} }\n}\n\nfunc myfunc() []*MyStruct {\n    return []MyStruct{ &amp;amp;MyStruct{Val: 1} }\n}\n\nfunc myfunc(s *[]MyStruct) {\n    *s = []MyStruct{ MyStruct{Val: 1} }\n}\n</code></pre> ",
    "hits": 496,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 279,
    "title": "go中如何将int转换成string？",
    "created_at": "2016-10-31 10:37:32",
    "updated_at": "2016-10-31 10:38:23",
    "replied_at": "2016-10-31 10:38:23",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 682,
    "last_reply_user_login": "mintzhao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 422,
    "user": "{\"id\": 422, \"name\": \"edwinxie\", \"login\": \"edwinxie\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\ni := 123\ns := string(i) \n```\n这种方式s='E', 但我们想要的结果是&quot;123&quot;\n那如何得到&quot;123&quot;呢？",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">123</span>\n<span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"kt\">string</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> \n</code></pre> \n<p>这种方式 s='E', 但我们想要的结果是\"123\"\n那如何得到\"123\"呢？</p>",
    "hits": 329,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 280,
    "title": "go中如何连接两个slice",
    "created_at": "2016-10-31 10:45:37",
    "updated_at": "2018-07-24 18:47:23",
    "replied_at": "2018-07-24 18:47:23",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 3074,
    "last_reply_user_login": "dncmn",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 422,
    "user": "{\"id\": 422, \"name\": \"edwinxie\", \"login\": \"edwinxie\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "譬如，将slice[1,2]和slice[3,4]组合成一个slice，该如何做到呢？\n这样？\n```go\nappend([]int{1,2}, []int{3,4})\n```\n但是：\n```go\ncannot use []int literal (type []int) as type int in append\n```\n而golang的文档中似乎说明这是正确的使用方式，究竟哪里出错了呢？\n```go\nslice = append(slice, anotherSlice...)\n```",
    "body_html": "<p>譬如，将 slice[1,2] 和 slice[3,4] 组合成一个 slice，该如何做到呢？\n这样？</p>\n <pre class=\"highlight go\"><code><span class=\"nb\">append</span><span class=\"p\">([]</span><span class=\"kt\">int</span><span class=\"p\">{</span><span class=\"m\">1</span><span class=\"p\">,</span><span class=\"m\">2</span><span class=\"p\">},</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">{</span><span class=\"m\">3</span><span class=\"p\">,</span><span class=\"m\">4</span><span class=\"p\">})</span>\n</code></pre> \n<p>但是：</p>\n <pre class=\"highlight go\"><code><span class=\"n\">cannot</span> <span class=\"n\">use</span> <span class=\"p\">[]</span><span class=\"kt\">int</span> <span class=\"n\">literal</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"n\">as</span> <span class=\"k\">type</span> <span class=\"kt\">int</span> <span class=\"n\">in</span> <span class=\"nb\">append</span>\n</code></pre> \n<p>而 golang 的文档中似乎说明这是正确的使用方式，究竟哪里出错了呢？</p>\n <pre class=\"highlight go\"><code><span class=\"n\">slice</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">slice</span><span class=\"p\">,</span> <span class=\"n\">anotherSlice</span><span class=\"o\">...</span><span class=\"p\">)</span>\n</code></pre> ",
    "hits": 633,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 281,
    "title": "beats工程go build报cannot find package &quot;context&quot; in any of",
    "created_at": "2016-10-31 10:45:43",
    "updated_at": "2017-08-08 19:31:52",
    "replied_at": "2017-08-08 19:31:52",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 761,
    "last_reply_user_login": "xxxcat",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1201,
    "user": "{\"id\": 1201, \"name\": \"codesky\", \"login\": \"codesky\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "https://github.com/elastic/beats   利用glide管理项目依赖，clone master代码后，glide install下载完依赖，去filebeat目录下执行go build，报下面这个错误？\n../libbeat/processors/actions/add_cloud_metadata.go:5:2: cannot find package &quot;context&quot; in any of:\n\t/Users/runc/code/godev/src/github.com/elastic/beats/vendor/context (vendor tree)\n\t/usr/local/go/src/context (from $GOROOT)\n\t/Users/runc/code/godev/src/context (from $GOPATH)\n这个问题如何解决？",
    "body_html": "<p><a href=\"https://github.com/elastic/beats\" rel=\"nofollow\" target=\"_blank\">https://github.com/elastic/beats</a>   利用 glide 管理项目依赖，clone master 代码后，glide install 下载完依赖，去 filebeat 目录下执行 go build，报下面这个错误？\n../libbeat/processors/actions/add_cloud_metadata.go:5:2: cannot find package \"context\" in any of:\n    /Users/runc/code/godev/src/github.com/elastic/beats/vendor/context (vendor tree)\n    /usr/local/go/src/context (from $GOROOT)\n    /Users/runc/code/godev/src/context (from $GOPATH)\n这个问题如何解决？</p>",
    "hits": 871,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 282,
    "title": "Go 程序如何高效地调试？",
    "created_at": "2016-10-31 11:09:46",
    "updated_at": "2016-10-31 20:50:00",
    "replied_at": "2016-10-31 20:50:00",
    "replies_count": 11,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 96,
    "last_reply_user_login": "sheepbao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "现在我在debug Go程序就只是简单在有可能错误的地方print出来看一下，不知道Go有没像c++的一些IDE一样有单步调试这类的工具？或者说各位Go大神一般是怎么debug自己的程序的？",
    "body_html": "<p>现在我在 debug Go 程序就只是简单在有可能错误的地方 print 出来看一下，不知道 Go 有没像 c++ 的一些 IDE 一样有单步调试这类的工具？或者说各位 Go 大神一般是怎么 debug 自己的程序的？</p>",
    "hits": 659,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 283,
    "title": "GoCN 第三期《老司机带你看 Go 风景》——分布式达人刘奇",
    "created_at": "2016-10-31 12:03:27",
    "updated_at": "2020-02-11 01:59:54",
    "replied_at": "2016-11-03 10:42:04",
    "replies_count": 5,
    "node_name": "线上活动",
    "node_id": 40,
    "last_reply_user_id": 883,
    "last_reply_user_login": "bopjiang",
    "grade": "excellent",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 1,
    "body": "GoCN 本期老司机系列我们请来了分布式开发的达人，之前也分享过很多分布式开发和数据库开发经验 —— @goroutine 为大家解答关于Go 数据库开发方面的问题。\r\n\r\n刘奇：PingCAP 联合创始人兼 CEO，先后创建了 Codis、TiDB / TiKV 等知名开源项目。曾任豌豆荚，京东资深系统架构师。现从事开源的分布式 NewSQL 数据库 TiDB 开发。擅长高并发、大规模、分布式数据库系统架构设计。\r\n\r\n[![](https://github.com/gocn/images/blob/master/goroutine.jpeg?raw=true)](https://github.com/gocn/images/blob/master/goroutine.jpeg?raw=true)\r\n\r\n\r\n本次活动持续两天，嘉宾会在空闲时间上来给大家一一回答。不欢迎任何与主题无关的讨论和喷子。\r\n\r\n&gt; https://github.com/pingcap/tidb\r\n&gt; 欢迎大家关注刘奇他们新的数据库项目",
    "body_html": "<p>GoCN 本期老司机系列我们请来了分布式开发的达人，之前也分享过很多分布式开发和数据库开发经验 —— <a href=\"/goroutine\" class=\"user-mention\" title=\"@goroutine\"><i>@</i>goroutine</a> 为大家解答关于 Go 数据库开发方面的问题。</p>\n\n<p>刘奇：PingCAP 联合创始人兼 CEO，先后创建了 Codis、TiDB / TiKV 等知名开源项目。曾任豌豆荚，京东资深系统架构师。现从事开源的分布式 NewSQL 数据库 TiDB 开发。擅长高并发、大规模、分布式数据库系统架构设计。</p>\n\n<p><a href=\"https://github.com/gocn/images/blob/master/goroutine.jpeg?raw=true\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"https://github.com/gocn/images/blob/master/goroutine.jpeg?raw=true\" title=\"\" alt=\"\"></a></p>\n\n<p>本次活动持续两天，嘉宾会在空闲时间上来给大家一一回答。不欢迎任何与主题无关的讨论和喷子。</p>\n\n<p>&gt; <a href=\"https://github.com/pingcap/tidb\" rel=\"nofollow\" target=\"_blank\">https://github.com/pingcap/tidb</a>\n&gt; 欢迎大家关注刘奇他们新的数据库项目</p>",
    "hits": 924,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 284,
    "title": "RobotGo v0.20.0，Golang跨平台控制鼠标键盘位图屏幕,增加全局事件监听",
    "created_at": "2016-10-31 12:22:02",
    "updated_at": "2016-11-01 16:45:14",
    "replied_at": "2016-11-01 16:45:14",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 183,
    "last_reply_user_login": "veni",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 183,
    "user": "{\"id\": 183, \"name\": \"veni\", \"login\": \"veni\", \"avatar\": \"https://gocn.vip/system/letter_avatars/v.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "RobotGo v0.20.0 发布了。v0.20.0 是针对RobotGo v0.10.0优化完善的版本，用于自动化测试工具等场景。\n\n主要变更：\n- 增加全局事件监听\n\n例子:\n```go\nmleft := robotgo.LEvent(&quot;mleft&quot;)\nif mleft == 0 {\n    Println(&quot;you press...&quot;, &quot;mouse left button&quot;)\n}\n```\n- 增加图片格式转换方法\n- 更新CaptureScreen方法,可以不传参数\n- 更新GetPixelColor方法\n- 更新测试\n- 更新文档\n- 完善bitmap\n\n修复BUG:\n\n- 修复CaptureScreen参数问题\n- 修复MouseToggle无效问题\n- 修复OpenBitmap返回bitmap异常\n\n\n安装:\n```go\ngo get github.com/go-vgo/robotgo\n```\n\n项目地址:\n\nGithub:https://github.com/go-vgo/robotgo\n",
    "body_html": "<p>RobotGo v0.20.0 发布了。v0.20.0 是针对 RobotGo v0.10.0 优化完善的版本，用于自动化测试工具等场景。</p>\n\n<p>主要变更：</p>\n\n<ul>\n<li>增加全局事件监听</li>\n</ul>\n\n<p>例子:</p>\n <pre class=\"highlight go\"><code><span class=\"n\">mleft</span> <span class=\"o\">:=</span> <span class=\"n\">robotgo</span><span class=\"o\">.</span><span class=\"n\">LEvent</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">mleft</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"k\">if</span> <span class=\"n\">mleft</span> <span class=\"o\">==</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n    <span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">you</span> <span class=\"n\">press</span><span class=\"o\">...&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">mouse</span> <span class=\"n\">left</span> <span class=\"n\">button</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<ul>\n<li>增加图片格式转换方法</li>\n<li>更新 CaptureScreen 方法,可以不传参数</li>\n<li>更新 GetPixelColor 方法</li>\n<li>更新测试</li>\n<li>更新文档</li>\n<li>完善 bitmap</li>\n</ul>\n\n<p>修复 BUG:</p>\n\n<ul>\n<li>修复 CaptureScreen 参数问题</li>\n<li>修复 MouseToggle 无效问题</li>\n<li>修复 OpenBitmap 返回 bitmap 异常</li>\n</ul>\n\n<p>安装:</p>\n <pre class=\"highlight go\"><code><span class=\"k\">go</span> <span class=\"n\">get</span> <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">-</span><span class=\"n\">vgo</span><span class=\"o\">/</span><span class=\"n\">robotgo</span>\n</code></pre> \n<p>项目地址:</p>\n\n<p>Github:<a href=\"https://github.com/go-vgo/robotgo\" rel=\"nofollow\" target=\"_blank\">https://github.com/go-vgo/robotgo</a></p>",
    "hits": 504,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 285,
    "title": "Go1.8将会在net/http内置graceful",
    "created_at": "2016-10-31 12:52:54",
    "updated_at": "2017-02-23 11:57:33",
    "replied_at": "2017-02-23 11:57:33",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1073,
    "last_reply_user_login": "FancyGo",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我们一直期盼着Go能够有graceful的库，终于Go官方打算在1.8里面内置了\n\n源码已经递交到https://go-review.googlesource.com/#/c/32412/\n\n详细的讨论在这里：\nhttps://github.com/golang/go/issues/4674#issuecomment-257161323\n\n关于graceful的库的话其实之前就有很多个：\n\n1. beego的grace:https://github.com/astaxie/beego/tree/master/grace\n2. https://github.com/facebookgo/grace",
    "body_html": "<p>我们一直期盼着 Go 能够有 graceful 的库，终于 Go 官方打算在 1.8 里面内置了</p>\n\n<p>源码已经递交到<a href=\"https://go-review.googlesource.com/#/c/32412/\" rel=\"nofollow\" target=\"_blank\">https://go-review.googlesource.com/#/c/32412/</a></p>\n\n<p>详细的讨论在这里：\n<a href=\"https://github.com/golang/go/issues/4674#issuecomment-257161323\" rel=\"nofollow\" target=\"_blank\">https://github.com/golang/go/issues/4674#issuecomment-257161323</a></p>\n\n<p>关于 graceful 的库的话其实之前就有很多个：</p>\n\n<ol>\n<li>beego 的 grace:<a href=\"https://github.com/astaxie/beego/tree/master/grace\" rel=\"nofollow\" target=\"_blank\">https://github.com/astaxie/beego/tree/master/grace</a>\n</li>\n<li><a href=\"https://github.com/facebookgo/grace\" rel=\"nofollow\" target=\"_blank\">https://github.com/facebookgo/grace</a></li>\n</ol>",
    "hits": 302,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 286,
    "title": "beego解析请求参数到struct，结果为空（postman）",
    "created_at": "2016-10-31 17:15:56",
    "updated_at": "2021-01-16 19:00:18",
    "replied_at": "2016-10-31 18:03:15",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 70,
    "user": "{\"id\": 70, \"name\": \"Samuier\", \"login\": \"Samuier\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我使用postman发送数据来测试时发现ParseForm没有解析到数据。配置文件中copyrequestbody = true\n定义的struct：\n\n\ttype Demomodel struct {\n\t\tId   int64  `orm:&quot;auto&quot;`\n\t\tObjectId   string `orm:&quot;size(128)&quot; valid:&quot;Required&quot; form:&quot;objid&quot;`\n\t\tScore      int64 `orm:&quot;default(0)&quot; valid:&quot;Required&quot; form:&quot;sc&quot;`\n\t\tPlayerName string `orm:&quot;size(128)&quot; valid:&quot;Required&quot; form:&quot;pn&quot;`\n\t\tCreate_time time.Time `orm:&quot;auto_now_add;type(datetime)&quot;`\n\t\tData string `orm:&quot;type(jsonb)&quot;`\n\t\t}\n\n在controllers中\n\n\t\td := models.Demomodel{}\n\t\tif err := o.ParseForm(&amp;d); err != nil {\n\t\t\tfmt.Println(err)\n\t\t} else {\n\t\t\tfmt.Println(d)\n\t\t}\n发现打印出来的d是空的 {0  0  0001-01-01 00:00:00 +0000 UTC }\n追踪ParseForm函数到github.com/astaxie/beego/templatefunc.go 的函数func ParseForm(form url.Values, obj interface{})中，第一个参数form经过打印，是\n\n\tmap[{\n\t\t&quot;objid&quot; : &quot;aaaaaaaaaaaaaaaaaaa&quot;,\n\t\t&quot;Score&quot;: 999,\n\t\t&quot;PlayerName&quot;: &quot;anc&quot;,\n\t\t&quot;Data&quot;: &quot;{\\&quot;t1\\&quot;: 12, \\&quot;ee\\&quot;:  \\&quot;ddd\\&quot;}&quot;\n\t}:[]]\n它的key是发送的内容，value是空，所以后面没有解析到数据。\n\n使用\n\n\tvar mm interface{}\n\tjson.Unmarshal(this.Ctx.Input.RequestBody, &amp;mm)\n\tif mm != nil {\n\t\tvar m1 map[string]interface{}\n\t\tm1 = mm.(map[string]interface{})\n\t\tfmt.Println(m1)\n\t\tfor k, v := range m1 {\n\t\t\trequestBody[k] = v\n\t\t}\n\t}\n这样是可以得到数据的。\n\n是不是使用postman发送的数据的问题啊，还没有试使用页面提交post表单。。。",
    "body_html": "<p>我使用 postman 发送数据来测试时发现 ParseForm 没有解析到数据。配置文件中 copyrequestbody = true\n定义的 struct：</p>\n\n<p>type Demomodel struct {\n        Id   int64  <code>orm:&amp;quot;auto&amp;quot;</code>\n        ObjectId   string <code>orm:&amp;quot;size(128)&amp;quot; valid:&amp;quot;Required&amp;quot; form:&amp;quot;objid&amp;quot;</code>\n        Score      int64 <code>orm:&amp;quot;default(0)&amp;quot; valid:&amp;quot;Required&amp;quot; form:&amp;quot;sc&amp;quot;</code>\n        PlayerName string <code>orm:&amp;quot;size(128)&amp;quot; valid:&amp;quot;Required&amp;quot; form:&amp;quot;pn&amp;quot;</code>\n        Create_time time.Time <code>orm:&amp;quot;auto_now_add;type(datetime)&amp;quot;</code>\n        Data string <code>orm:&amp;quot;type(jsonb)&amp;quot;</code>\n        }</p>\n\n<p>在 controllers 中</p>\n\n<p>d := models.Demomodel{}\n        if err := o.ParseForm(&amp;d); err != nil {\n            fmt.Println(err)\n        } else {\n            fmt.Println(d)\n        }\n发现打印出来的 d 是空的 {0  0  0001-01-01 00:00:00 +0000 UTC }\n追踪 ParseForm 函数到 github.com/astaxie/beego/templatefunc.go 的函数 func ParseForm(form url.Values, obj interface{}) 中，第一个参数 form 经过打印，是</p>\n\n<p>map[{\n        \"objid\" : \"aaaaaaaaaaaaaaaaaaa\",\n        \"Score\": 999,\n        \"PlayerName\": \"anc\",\n        \"Data\": \"{&amp;quot;t1&amp;quot;: 12, &amp;quot;ee&amp;quot;:  &amp;quot;ddd&amp;quot;}\"\n    }:[]]\n它的 key 是发送的内容，value 是空，所以后面没有解析到数据。</p>\n\n<p>使用</p>\n\n<p>var mm interface{}\n    json.Unmarshal(this.Ctx.Input.RequestBody, &amp;mm)\n    if mm != nil {\n        var m1 map[string] interface{}\n        m1 = mm.(map[string] interface{})\n        fmt.Println(m1)\n        for k, v := range m1 {\n            requestBody[k] = v\n        }\n    }\n这样是可以得到数据的。</p>\n\n<p>是不是使用 postman 发送的数据的问题啊，还没有试使用页面提交 post 表单。。。</p>",
    "hits": 682,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 287,
    "title": "如何判断两个slice是相同的？",
    "created_at": "2016-10-31 19:15:33",
    "updated_at": "2016-11-14 22:13:19",
    "replied_at": "2016-11-14 22:13:19",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1005,
    "last_reply_user_login": "insisthzr",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 422,
    "user": "{\"id\": 422, \"name\": \"edwinxie\", \"login\": \"edwinxie\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "只有循环遍历这种方式吗？\n```go\nfunc testEq(a, b []Type) bool {\n\n    if a == nil &amp;&amp; b == nil { \n        return true; \n    }\n\n    if a == nil || b == nil { \n        return false; \n    }\n\n    if len(a) != len(b) {\n        return false\n    }\n\n    for i := range a {\n        if a[i] != b[i] {\n            return false\n        }\n    }\n\n    return true\n}\n```",
    "body_html": "<p>只有循环遍历这种方式吗？</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">testEq</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"p\">[]</span><span class=\"n\">Type</span><span class=\"p\">)</span> <span class=\"kt\">bool</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span> <span class=\"n\">b</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"p\">{</span> \n        <span class=\"k\">return</span> <span class=\"no\">true</span><span class=\"p\">;</span> \n    <span class=\"p\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"o\">||</span> <span class=\"n\">b</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"p\">{</span> \n        <span class=\"k\">return</span> <span class=\"no\">false</span><span class=\"p\">;</span> \n    <span class=\"p\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"no\">false</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">a</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"p\">{</span>\n            <span class=\"k\">return</span> <span class=\"no\">false</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"no\">true</span>\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 518,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 288,
    "title": "说说你经常使用的go标准包里哪些包？",
    "created_at": "2016-10-31 20:48:04",
    "updated_at": "2016-10-31 21:00:07",
    "replied_at": "2016-10-31 20:59:18",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1017,
    "user": "{\"id\": 1017, \"name\": \"云开\", \"login\": \"819664855\", \"avatar\": \"https://gocn.vip/system/letter_avatars/8.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "比如我最近常使用的：net包，strings包，time包，sync包",
    "body_html": "<p>比如我最近常使用的：net 包，strings 包，time 包，sync 包</p>",
    "hits": 299,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 289,
    "title": "Go依赖委员会成立了，起草了一份包管理的草案",
    "created_at": "2016-10-31 21:37:41",
    "updated_at": "2016-11-10 15:21:44",
    "replied_at": "2016-11-10 15:21:36",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 295,
    "last_reply_user_login": "lgn21st",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "目前暂定名字是dep，Go1.9会加入到go的子命令里面。详细的讨论情况：https://groups.google.com/forum/#!topic/go-package-management/g6EZblA1mHU\n\n\n草案：\nhttps://docs.google.com/document/d/1qnmjwfMmvSCDaY4jxPmLAccaaUI5FfySNE90gB0pTKQ/edit",
    "body_html": "<p>目前暂定名字是 dep，Go1.9 会加入到 go 的子命令里面。详细的讨论情况：<a href=\"https://groups.google.com/forum/#!topic/go-package-management/g6EZblA1mHU\" rel=\"nofollow\" target=\"_blank\">https://groups.google.com/forum/#! topic/go-package-management/g6EZblA1mHU</a></p>\n\n<p>草案：\n<a href=\"https://docs.google.com/document/d/1qnmjwfMmvSCDaY4jxPmLAccaaUI5FfySNE90gB0pTKQ/edit\" rel=\"nofollow\" target=\"_blank\">https://docs.google.com/document/d/1qnmjwfMmvSCDaY4jxPmLAccaaUI5FfySNE90gB0pTKQ/edit</a></p>",
    "hits": 482,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 290,
    "title": "怎么分析和理解golang的pprof",
    "created_at": "2016-10-31 21:46:49",
    "updated_at": "2016-11-01 09:11:29",
    "replied_at": "2016-11-01 09:11:03",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 960,
    "last_reply_user_login": "tupunco",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 96,
    "user": "{\"id\": 96, \"name\": \"sheepbao\", \"login\": \"sheepbao\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "golang有`runtime/pprof`,`net/http/pprof`包\n是go程序的分析利器，然而当我研究的时候却是一头雾水，网上找了资料，[profiling-go-programs](https://blog.golang.org/profiling-go-programs),也百度了一下，看到不少博客，但从没一个系统和具体的介绍到底那些参数代表什么？\n如我开启了，`net/http/pprof`\n打开浏览器可以看到这些：\n/debug/pprof/\n\nprofiles:\n0\tblock\n12\tgoroutine\n1\theap\n10\tthreadcreate\n\nfull goroutine stack dump\n\n可以知道：\nblock\t应该代表锁（但不知是什么锁，读写锁？）\ngoroutine\tgo程信息\nheap\t堆信息\nthreadcreate\t线程信息\n\n又比如点击heap，会详细显示堆的信息，如：\n```\nheap profile: 1: 262144 [1: 262144] @ heap/1048576\n1: 262144 [1: 262144] @ 0xf938a 0xf961f 0xf84bc 0xf7c47 0xf9953 0x2a81 0x2fb44 0x5fd01\n#\t0xf9389\tvendor/sewise.com/glog.(*syncBuffer).rotateFile+0x619\t/Users/bao/program/go/sewise_iot/src/vendor/sewise.com/glog/glog.go:858\n#\t0xf961e\tvendor/sewise.com/glog.(*loggingT).createFiles+0xfe\t/Users/bao/program/go/sewise_iot/src/vendor/sewise.com/glog/glog.go:887\n#\t0xf84bb\tvendor/sewise.com/glog.(*loggingT).output+0x4eb\t\t/Users/bao/program/go/sewise_iot/src/vendor/sewise.com/glog/glog.go:706\n#\t0xf7c46\tvendor/sewise.com/glog.(*loggingT).println+0xe6\t\t/Users/bao/program/go/sewise_iot/src/vendor/sewise.com/glog/glog.go:650\n#\t0xf9952\tvendor/sewise.com/glog.Infoln+0x52\t\t\t/Users/bao/program/go/sewise_iot/src/vendor/sewise.com/glog/glog.go:1084\n#\t0x2a80\tmain.main+0x560\t\t\t\t\t\t/Users/bao/program/go/sewise_iot/src/sewise_iot_broker/main.go:132\n#\t0x2fb43\truntime.main+0x1f3\t\t\t\t\t/usr/local/go/src/runtime/proc.go:183\n\n0: 0 [0: 0] @ 0x1fe82f 0xa0157 0xa3de3 0x5fd01\n#\t0x1fe82e\tcontext.WithCancel+0x3e\t\t\t/usr/local/go/src/context/context.go:230\n#\t0xa0156\t\tnet/http.(*conn).readRequest+0x496\t/usr/local/go/src/net/http/server.go:804\n#\t0xa3de2\t\tnet/http.(*conn).serve+0x3d2\t\t/usr/local/go/src/net/http/server.go:1532\n\n0: 0 [0: 0] @ 0x102011 0x10d3bc 0x10c945 0x10eee3 0x5fd01\n#\t0x102010\tvendor/sewise.com/sewisemq/service.newBuffer+0x1e0\t\t\t/Users/bao/program/go/sewise_iot/src/vendor/sewise.com/sewisemq/service/buffer.go:98\n#\t0x10d3bb\tvendor/sewise.com/sewisemq/service.(*service).start+0x3b\t\t/Users/bao/program/go/sewise_iot/src/vendor/sewise.com/sewisemq/service/service.go:138\n#\t0x10c944\tvendor/sewise.com/sewisemq/service.(*Server).handleConnection+0x884\t/Users/bao/program/go/sewise_iot/src/vendor/sewise.com/sewisemq/service/server.go:332\n#\t0x10eee2\tvendor/sewise.com/sewisemq/service.(*Server).ListenAndServe.func1+0x62\t/Users/bao/program/go/sewise_iot/src/vendor/sewise.com/sewisemq/service/server.go:162\n\n\n# runtime.MemStats\n# Alloc = 3090232\n# TotalAlloc = 3090232\n# Sys = 8296696\n# Lookups = 169\n# Mallocs = 15201\n# Frees = 1757\n# HeapAlloc = 3090232\n# HeapSys = 4587520\n# HeapIdle = 753664\n# HeapInuse = 3833856\n# HeapReleased = 0\n# HeapObjects = 13444\n# Stack = 655360 / 655360\n# MSpan = 37120 / 49152\n# MCache = 4800 / 16384\n# BuckHashSys = 1443221\n# NextGC = 4194304\n# PauseNs = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n# NumGC = 0\n# DebugGC = false\n```\n\n看文章介绍可以用go tool pprof，我也试了这个命令：\n` go tool pprof http://localhost:6060/debug/pprof/heap`\n查看了一下help，敲下`tree`\n```\n(pprof) tree\n650.62kB of 650.62kB total (  100%)\nDropped 4 nodes (cum &lt;= 3.25kB)\n----------------------------------------------------------+-------------\n      flat  flat%   sum%        cum   cum%   calls calls% + context \t \t \n----------------------------------------------------------+-------------\n                                          650.62kB   100% |   vendor/sewise.com/glog.(*loggingT).createFiles\n  650.62kB   100%   100%   650.62kB   100%                | vendor/sewise.com/glog.(*syncBuffer).rotateFile\n----------------------------------------------------------+-------------\n                                          650.62kB   100% |   runtime.main\n         0     0%   100%   650.62kB   100%                | main.main\n                                          650.62kB   100% |   vendor/sewise.com/glog.Infoln\n----------------------------------------------------------+-------------\n         0     0%   100%   650.62kB   100%                | runtime.goexit\n                                          650.62kB   100% |   runtime.main\n----------------------------------------------------------+-------------\n                                          650.62kB   100% |   runtime.goexit\n         0     0%   100%   650.62kB   100%                | runtime.main\n                                          650.62kB   100% |   main.main\n----------------------------------------------------------+-------------\n                                          650.62kB   100% |   vendor/sewise.com/glog.(*loggingT).output\n         0     0%   100%   650.62kB   100%                | vendor/sewise.com/glog.(*loggingT).createFiles\n                                          650.62kB   100% |   vendor/sewise.com/glog.(*syncBuffer).rotateFile\n----------------------------------------------------------+-------------\n                                          650.62kB   100% |   vendor/sewise.com/glog.(*loggingT).println\n         0     0%   100%   650.62kB   100%                | vendor/sewise.com/glog.(*loggingT).output\n                                          650.62kB   100% |   vendor/sewise.com/glog.(*loggingT).createFiles\n----------------------------------------------------------+-------------\n                                          650.62kB   100% |   vendor/sewise.com/glog.Infoln\n         0     0%   100%   650.62kB   100%                | vendor/sewise.com/glog.(*loggingT).println\n                                          650.62kB   100% |   vendor/sewise.com/glog.(*loggingT).output\n----------------------------------------------------------+-------------\n                                          650.62kB   100% |   main.main\n         0     0%   100%   650.62kB   100%                | vendor/sewise.com/glog.Infoln\n                                          650.62kB   100% |   vendor/sewise.com/glog.(*loggingT).println\n----------------------------------------------------------+-------------\n```\n用来分析heap，但依然一头雾水。。。\n   flat 不懂     sum%  不懂       cum 不懂  cum% 不懂  calls calls% + context 上下文 ",
    "body_html": "<p>golang 有<code>runtime/pprof</code>,<code>net/http/pprof</code>包\n是 go 程序的分析利器，然而当我研究的时候却是一头雾水，网上找了资料，<a href=\"https://blog.golang.org/profiling-go-programs\" rel=\"nofollow\" target=\"_blank\" title=\"\">profiling-go-programs</a>,也百度了一下，看到不少博客，但从没一个系统和具体的介绍到底那些参数代表什么？\n如我开启了，<code>net/http/pprof</code>\n打开浏览器可以看到这些：\n/debug/pprof/</p>\n\n<p>profiles:\n0   block\n12  goroutine\n1   heap\n10  threadcreate</p>\n\n<p>full goroutine stack dump</p>\n\n<p>可以知道：\nblock   应该代表锁（但不知是什么锁，读写锁？）\ngoroutine   go 程信息\nheap    堆信息\nthreadcreate    线程信息</p>\n\n<p>又比如点击 heap，会详细显示堆的信息，如：</p>\n <pre class=\"highlight plaintext\"><code>heap profile: 1: 262144 [1: 262144] @ heap/1048576\n1: 262144 [1: 262144] @ 0xf938a 0xf961f 0xf84bc 0xf7c47 0xf9953 0x2a81 0x2fb44 0x5fd01\n#   0xf9389 vendor/sewise.com/glog.(*syncBuffer).rotateFile+0x619   /Users/bao/program/go/sewise_iot/src/vendor/sewise.com/glog/glog.go:858\n#   0xf961e vendor/sewise.com/glog.(*loggingT).createFiles+0xfe /Users/bao/program/go/sewise_iot/src/vendor/sewise.com/glog/glog.go:887\n#   0xf84bb vendor/sewise.com/glog.(*loggingT).output+0x4eb     /Users/bao/program/go/sewise_iot/src/vendor/sewise.com/glog/glog.go:706\n#   0xf7c46 vendor/sewise.com/glog.(*loggingT).println+0xe6     /Users/bao/program/go/sewise_iot/src/vendor/sewise.com/glog/glog.go:650\n#   0xf9952 vendor/sewise.com/glog.Infoln+0x52          /Users/bao/program/go/sewise_iot/src/vendor/sewise.com/glog/glog.go:1084\n#   0x2a80  main.main+0x560                     /Users/bao/program/go/sewise_iot/src/sewise_iot_broker/main.go:132\n#   0x2fb43 runtime.main+0x1f3                  /usr/local/go/src/runtime/proc.go:183\n\n0: 0 [0: 0] @ 0x1fe82f 0xa0157 0xa3de3 0x5fd01\n#   0x1fe82e    context.WithCancel+0x3e         /usr/local/go/src/context/context.go:230\n#   0xa0156     net/http.(*conn).readRequest+0x496  /usr/local/go/src/net/http/server.go:804\n#   0xa3de2     net/http.(*conn).serve+0x3d2        /usr/local/go/src/net/http/server.go:1532\n\n0: 0 [0: 0] @ 0x102011 0x10d3bc 0x10c945 0x10eee3 0x5fd01\n#   0x102010    vendor/sewise.com/sewisemq/service.newBuffer+0x1e0          /Users/bao/program/go/sewise_iot/src/vendor/sewise.com/sewisemq/service/buffer.go:98\n#   0x10d3bb    vendor/sewise.com/sewisemq/service.(*service).start+0x3b        /Users/bao/program/go/sewise_iot/src/vendor/sewise.com/sewisemq/service/service.go:138\n#   0x10c944    vendor/sewise.com/sewisemq/service.(*Server).handleConnection+0x884 /Users/bao/program/go/sewise_iot/src/vendor/sewise.com/sewisemq/service/server.go:332\n#   0x10eee2    vendor/sewise.com/sewisemq/service.(*Server).ListenAndServe.func1+0x62  /Users/bao/program/go/sewise_iot/src/vendor/sewise.com/sewisemq/service/server.go:162\n\n\n# runtime.MemStats\n# Alloc = 3090232\n# TotalAlloc = 3090232\n# Sys = 8296696\n# Lookups = 169\n# Mallocs = 15201\n# Frees = 1757\n# HeapAlloc = 3090232\n# HeapSys = 4587520\n# HeapIdle = 753664\n# HeapInuse = 3833856\n# HeapReleased = 0\n# HeapObjects = 13444\n# Stack = 655360 / 655360\n# MSpan = 37120 / 49152\n# MCache = 4800 / 16384\n# BuckHashSys = 1443221\n# NextGC = 4194304\n# PauseNs = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n# NumGC = 0\n# DebugGC = false\n</code></pre> \n<p>看文章介绍可以用 go tool pprof，我也试了这个命令：\n<code>go tool pprof http://localhost:6060/debug/pprof/heap</code>\n查看了一下 help，敲下<code>tree</code></p>\n <pre class=\"highlight plaintext\"><code>(pprof) tree\n650.62kB of 650.62kB total (  100%)\nDropped 4 nodes (cum &amp;lt;= 3.25kB)\n----------------------------------------------------------+-------------\n      flat  flat%   sum%        cum   cum%   calls calls% + context          \n----------------------------------------------------------+-------------\n                                          650.62kB   100% |   vendor/sewise.com/glog.(*loggingT).createFiles\n  650.62kB   100%   100%   650.62kB   100%                | vendor/sewise.com/glog.(*syncBuffer).rotateFile\n----------------------------------------------------------+-------------\n                                          650.62kB   100% |   runtime.main\n         0     0%   100%   650.62kB   100%                | main.main\n                                          650.62kB   100% |   vendor/sewise.com/glog.Infoln\n----------------------------------------------------------+-------------\n         0     0%   100%   650.62kB   100%                | runtime.goexit\n                                          650.62kB   100% |   runtime.main\n----------------------------------------------------------+-------------\n                                          650.62kB   100% |   runtime.goexit\n         0     0%   100%   650.62kB   100%                | runtime.main\n                                          650.62kB   100% |   main.main\n----------------------------------------------------------+-------------\n                                          650.62kB   100% |   vendor/sewise.com/glog.(*loggingT).output\n         0     0%   100%   650.62kB   100%                | vendor/sewise.com/glog.(*loggingT).createFiles\n                                          650.62kB   100% |   vendor/sewise.com/glog.(*syncBuffer).rotateFile\n----------------------------------------------------------+-------------\n                                          650.62kB   100% |   vendor/sewise.com/glog.(*loggingT).println\n         0     0%   100%   650.62kB   100%                | vendor/sewise.com/glog.(*loggingT).output\n                                          650.62kB   100% |   vendor/sewise.com/glog.(*loggingT).createFiles\n----------------------------------------------------------+-------------\n                                          650.62kB   100% |   vendor/sewise.com/glog.Infoln\n         0     0%   100%   650.62kB   100%                | vendor/sewise.com/glog.(*loggingT).println\n                                          650.62kB   100% |   vendor/sewise.com/glog.(*loggingT).output\n----------------------------------------------------------+-------------\n                                          650.62kB   100% |   main.main\n         0     0%   100%   650.62kB   100%                | vendor/sewise.com/glog.Infoln\n                                          650.62kB   100% |   vendor/sewise.com/glog.(*loggingT).println\n----------------------------------------------------------+-------------\n</code></pre> \n<p>用来分析 heap，但依然一头雾水。。。\n   flat 不懂     sum%  不懂       cum 不懂  cum% 不懂  calls calls% + context 上下文 </p>",
    "hits": 414,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 291,
    "title": "如何解析未知结构的xml",
    "created_at": "2016-10-31 22:10:13",
    "updated_at": "2016-10-31 23:41:46",
    "replied_at": "2016-10-31 23:41:46",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 636,
    "last_reply_user_login": "stevewang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 423,
    "user": "{\"id\": 423, \"name\": \"chenqinghe\", \"login\": \"chenqinghe\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "对于已知结构的xml，可以声明一个struct和xml对应，然后使用xml.Unmarshal()方法将xml解析到struct中。可是如果struct是未知的话，该怎么处理？有没有类似PHPjson_decode()这样的函数可以直接解析为可以使用的结构？",
    "body_html": "<p>对于已知结构的 xml，可以声明一个 struct 和 xml 对应，然后使用 xml.Unmarshal() 方法将 xml 解析到 struct 中。可是如果 struct 是未知的话，该怎么处理？有没有类似 PHPjson_decode() 这样的函数可以直接解析为可以使用的结构？</p>",
    "hits": 407,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 292,
    "title": "Syscall疑问",
    "created_at": "2016-10-31 23:00:57",
    "updated_at": "2016-10-31 23:28:43",
    "replied_at": "2016-10-31 23:28:43",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 877,
    "last_reply_user_login": "SuperFashi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 632,
    "user": "{\"id\": 632, \"name\": \"mengzhuo\", \"login\": \"mengzhuo\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "https://github.com/mengzhuo/dirty-cow-golang\n这样调用MMAP难道不对么？\n```go\nMAP, _, _ = syscall.Syscall6(\n\t\tsyscall.SYS_MMAP,\n\t\tuintptr(1),\n\t\tuintptr(stat.Size()),\n\t\tuintptr(syscall.PROT_READ),\n\t\tuintptr(syscall.MAP_PRIVATE),\n\t\tfile.Fd(),\n\t\t0)\n```\n\nhttps://github.com/dirtycow/dirtycow.github.io/blob/master/dirtyc0w.c",
    "body_html": "<p><a href=\"https://github.com/mengzhuo/dirty-cow-golang\" rel=\"nofollow\" target=\"_blank\">https://github.com/mengzhuo/dirty-cow-golang</a>\n这样调用 MMAP 难道不对么？</p>\n <pre class=\"highlight go\"><code><span class=\"n\">MAP</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">syscall</span><span class=\"o\">.</span><span class=\"n\">Syscall6</span><span class=\"p\">(</span>\n        <span class=\"n\">syscall</span><span class=\"o\">.</span><span class=\"n\">SYS_MMAP</span><span class=\"p\">,</span>\n        <span class=\"kt\">uintptr</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">),</span>\n        <span class=\"kt\">uintptr</span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"o\">.</span><span class=\"n\">Size</span><span class=\"p\">()),</span>\n        <span class=\"kt\">uintptr</span><span class=\"p\">(</span><span class=\"n\">syscall</span><span class=\"o\">.</span><span class=\"n\">PROT_READ</span><span class=\"p\">),</span>\n        <span class=\"kt\">uintptr</span><span class=\"p\">(</span><span class=\"n\">syscall</span><span class=\"o\">.</span><span class=\"n\">MAP_PRIVATE</span><span class=\"p\">),</span>\n        <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">Fd</span><span class=\"p\">(),</span>\n        <span class=\"m\">0</span><span class=\"p\">)</span>\n</code></pre> \n<p><a href=\"https://github.com/dirtycow/dirtycow.github.io/blob/master/dirtyc0w.c\" rel=\"nofollow\" target=\"_blank\">https://github.com/dirtycow/dirtycow.github.io/blob/master/dirtyc0w.c</a></p>",
    "hits": 393,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 293,
    "title": "EXCEL 表格导入订单数据 go 怎么接收处理？",
    "created_at": "2016-11-01 09:45:16",
    "updated_at": "2020-10-12 13:52:56",
    "replied_at": "2020-10-12 13:52:56",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 584,
    "last_reply_user_login": "xuri",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 58,
    "user": "{\"id\": 58, \"name\": \"为你上线\", \"login\": \"751891786\", \"avatar\": \"https://gocn.vip/system/letter_avatars/7.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "可能是一个订单对应一个商品（orderlist），可能一个订单里面有多个商品（orderlist），EXCEL格式应该怎么设计，GO应该怎么处理这种一对多的订单EXCEL数据？有案例更好了。",
    "body_html": "<p>可能是一个订单对应一个商品（orderlist），可能一个订单里面有多个商品（orderlist），EXCEL 格式应该怎么设计，GO 应该怎么处理这种一对多的订单 EXCEL 数据？有案例更好了。</p>",
    "hits": 434,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 294,
    "title": "要是用几个关键词/包名来表达go的精髓，你会用什么？？？",
    "created_at": "2016-11-01 10:05:11",
    "updated_at": "2016-11-01 11:39:04",
    "replied_at": "2016-11-01 11:39:04",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 134,
    "last_reply_user_login": "九命猫",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1017,
    "user": "{\"id\": 1017, \"name\": \"云开\", \"login\": \"819664855\", \"avatar\": \"https://gocn.vip/system/letter_avatars/8.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "gopher们，用几个关键词、包来表达你心中的golang的精髓，越精准，越一针见血 越好。",
    "body_html": "<p>gopher 们，用几个关键词、包来表达你心中的 golang 的精髓，越精准，越一针见血 越好。</p>",
    "hits": 464,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 295,
    "title": "Go 有哪些让你相见恨晚的技巧？",
    "created_at": "2016-11-01 11:40:17",
    "updated_at": "2016-11-03 10:24:09",
    "replied_at": "2016-11-03 10:24:09",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 220,
    "last_reply_user_login": "Thomas",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我先来说两个：\n\n1. 错误处理\n\t不需要重复的检测错误，通过最后的error来检测\n\t```\n\tscanner := bufio.NewScanner(input)\n\tfor scanner.Scan() {\n\t\ttoken := scanner.Text()\n\t\t// process token\n\t}\n\tif err := scanner.Err(); err != nil {\n\t\t// process the error\n\t}\n\t```\n2. 测试处理\n增加一个test flag\n```\nvar update = flag.Bool(&quot;update&quot;, false, &quot;Update test fixtures&quot;)\nif *update {\n\tif err := os.MkdirAll(filepath.Dir(f.Path), 0700); err != nil {\n\t\tt.Error(err)\n\t\treturn\n\t} else if err := ioutil.WriteFile(f.Path, f.Got, 0600); err != nil {\n\t\tt.Error(err)\n\t\treturn\n\t}\n}\n```\n\t这样如果你的测试是针对1000个不同数据的测试结果，就可以预想数据，把结果缓存在fixture里面 `go test -update`，后面再次修改逻辑或者测试的时候，只要运行`go test`这样就会比对结果和fixture里面的数据结果，这样就可以保证每次修改逻辑都是正确的。一旦结果不一致了就可以里面看出来。",
    "body_html": "<p>我先来说两个：</p>\n\n<ol>\n<li>错误处理\n不需要重复的检测错误，通过最后的 error 来检测\n<code>\nscanner := bufio.NewScanner(input)\nfor scanner.Scan() {\n    token := scanner.Text()\n    // process token\n}\nif err := scanner.Err(); err != nil {\n    // process the error\n}\n</code>\n</li>\n<li>测试处理\n增加一个 test flag\n<code>\nvar update = flag.Bool(&amp;quot;update&amp;quot;, false, &amp;quot;Update test fixtures&amp;quot;)\nif *update {\nif err := os.MkdirAll(filepath.Dir(f.Path), 0700); err != nil {\n    t.Error(err)\n    return\n} else if err := ioutil.WriteFile(f.Path, f.Got, 0600); err != nil {\n    t.Error(err)\n    return\n}\n}\n</code>\n这样如果你的测试是针对 1000 个不同数据的测试结果，就可以预想数据，把结果缓存在 fixture 里面 <code>go test -update</code>，后面再次修改逻辑或者测试的时候，只要运行<code>go test</code>这样就会比对结果和 fixture 里面的数据结果，这样就可以保证每次修改逻辑都是正确的。一旦结果不一致了就可以里面看出来。</li>\n</ol>",
    "hits": 612,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 296,
    "title": "go语言视屏解决方案",
    "created_at": "2016-11-01 11:58:23",
    "updated_at": "2016-11-02 11:32:49",
    "replied_at": "2016-11-02 11:32:49",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 682,
    "last_reply_user_login": "mintzhao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1230,
    "user": "{\"id\": 1230, \"name\": \"陆崖道君\", \"login\": \"1456887752\", \"avatar\": \"https://gocn.vip/system/letter_avatars/1.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "**go 有视屏直播的解决方案么**",
    "body_html": "<p><strong>go 有视屏直播的解决方案么</strong></p>",
    "hits": 334,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 297,
    "title": "长春招聘，不是标题党，只说实在话。。亲，你来看看嘛",
    "created_at": "2016-11-01 13:50:50",
    "updated_at": "2016-11-23 14:06:56",
    "replied_at": "2016-11-23 14:06:56",
    "replies_count": 3,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 74,
    "last_reply_user_login": "xieyanke",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1227,
    "user": "{\"id\": 1227, \"name\": \"小白求包养\", \"login\": \"501845694\", \"avatar\": \"https://gocn.vip/system/letter_avatars/5.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "招聘岗位：GO工程师\n岗位职责：\n负责公司应用后端服务开发与集成，负责服务端业务实现。\n\n任职要求：\n1、熟练使用Go语言，开发过成熟产品；\n2、了解Go语言最新特性，熟悉Vendor；\n3、了解CGO使用与开发，熟悉大型项目架构；\n4、精通Go语言Socket编程，熟悉TCP/IP协议；\n简历请投501845694@qq.com",
    "body_html": "<p>招聘岗位：GO 工程师\n岗位职责：\n负责公司应用后端服务开发与集成，负责服务端业务实现。</p>\n\n<p>任职要求：\n1、熟练使用 Go 语言，开发过成熟产品；\n2、了解 Go 语言最新特性，熟悉 Vendor；\n3、了解 CGO 使用与开发，熟悉大型项目架构；\n4、精通 Go 语言 Socket 编程，熟悉 TCP/IP 协议；\n简历请投 501845694@qq.com</p>",
    "hits": 528,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 299,
    "title": "大家在 golang 工程中是如何处理配置的？",
    "created_at": "2016-11-01 14:45:07",
    "updated_at": "2016-11-02 11:35:47",
    "replied_at": "2016-11-02 11:35:47",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 682,
    "last_reply_user_login": "mintzhao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 74,
    "user": "{\"id\": 74, \"name\": \"xieyanke\", \"login\": \"xieyanke\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 417,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 300,
    "title": "关于channel的问题",
    "created_at": "2016-11-01 15:59:59",
    "updated_at": "2016-11-01 17:03:57",
    "replied_at": "2016-11-01 17:03:57",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1237,
    "last_reply_user_login": "lake",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1159,
    "user": "{\"id\": 1159, \"name\": \"qingxunxu\", \"login\": \"qingxunxu\", \"avatar\": \"https://gocn.vip/system/letter_avatars/q.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t//\t&quot;time&quot;\n)\n\nfunc sum(a []int, c chan int) {\n\tsum := 0\n\tfor _, v := range a {\n\t\tsum += v\n\t}\n\tc &lt;- sum // 将和送入 c\n}\n\nfunc main() {\n\ta := []int{7, 2, 8, -9, 4, 0}\n\tc := make(chan int)\n\tgo sum(a[:len(a)/2], c)\n\t//\ttime.Sleep(time.Second)\n\tgo sum(a[len(a)/2:], c)\n\tgo sum(a[:5], c)\n\tx, y, z := &lt;-c, &lt;-c, &lt;-c // 从 c 中获取\n\tfmt.Println(x, y, z, x+y)\n}\n\n```打印结果不确定,多运行几次结果形式会有多个,并且后执行的go,结果一般在前...很迷糊,新人学习中,恳请指导,或者资料学习,谢谢",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"c\">//  &amp;quot;time&amp;quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">a</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">,</span> <span class=\"n\">c</span> <span class=\"k\">chan</span> <span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">sum</span> <span class=\"o\">:=</span> <span class=\"m\">0</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">a</span> <span class=\"p\">{</span>\n        <span class=\"n\">sum</span> <span class=\"o\">+=</span> <span class=\"n\">v</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">c</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"n\">sum</span> <span class=\"c\">// 将和送入 c</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">{</span><span class=\"m\">7</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">8</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"m\">9</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">}</span>\n    <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">int</span><span class=\"p\">)</span>\n    <span class=\"k\">go</span> <span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"o\">:</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"m\">2</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"p\">)</span>\n    <span class=\"c\">//  time.Sleep(time.Second)</span>\n    <span class=\"k\">go</span> <span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"m\">2</span><span class=\"o\">:</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"p\">)</span>\n    <span class=\"k\">go</span> <span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"o\">:</span><span class=\"m\">5</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"p\">)</span>\n    <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"c\">// 从 c 中获取</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">+</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"s\">```打印结果不确定,多运行几次结果形式会有多个,并且后执行的go,结果一般在前...很迷糊,新人学习中,恳请指导,或者资料学习,谢谢\n</span></code></pre> ",
    "hits": 521,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 301,
    "title": "orm.Fielder接口问题",
    "created_at": "2016-11-01 16:18:32",
    "updated_at": "2016-11-01 16:18:32",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 348,
    "user": "{\"id\": 348, \"name\": \"eric\", \"login\": \"eric\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\n哪位大神帮我看下，这是我实现的那个orm.Fielder接口，客户端总是返回：&quot;Ctime&quot;: {},\n\n这是模型：Order {\n\t...\n\tCtime            JSONTIME `orm:type(datetime)`\n\t...\n}\ntype JSONTIME time.Time\n\nconst ctLayout = &quot;2006-01-02 15:04:05&quot;\n\nfunc (t JSONTIME) Value() time.Time {\n\treturn time.Time(t)\n}\n\nfunc (t *JSONTIME) Set(v time.Time) {\n\t*t = JSONTIME(v)\n}\n\nfunc (t *JSONTIME) String() string {\n\treturn t.Value().Format(ctLayout)\n}\n\nfunc (t *JSONTIME) FieldType() int {\n\treturn orm.TypeDateTimeField\n}\n\nfunc (t *JSONTIME) SetRaw(value interface{}) error {\n\tswitch d := value.(type) {\n\tcase time.Time:\n\t\tt.Set(d)\n\tcase string:\n\t\t//loc, _ := time.LoadLocation(&quot;Local&quot;)\n\t\ttmp, _ := time.Parse(ctLayout, d)\n\t\tt.Set(tmp)\n\tdefault:\n\t\treturn fmt.Errorf(&quot;&lt;JSONTIME.SetRaw&gt; unknown value `%v`&quot;, value)\n\t}\n\treturn nil\n}\n\nfunc (t *JSONTIME) RawValue() interface{} {\n\treturn t.String()\n}\n\n```",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"n\">哪位大神帮我看下</span><span class=\"err\">，</span><span class=\"n\">这是我实现的那个orm</span><span class=\"o\">.</span><span class=\"n\">Fielder接口</span><span class=\"err\">，</span><span class=\"n\">客户端总是返回</span><span class=\"err\">：</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Ctime</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n\n<span class=\"n\">这是模型</span><span class=\"err\">：</span><span class=\"n\">Order</span> <span class=\"p\">{</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">Ctime</span>            <span class=\"n\">JSONTIME</span> <span class=\"s\">`orm:type(datetime)`</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">}</span>\n<span class=\"k\">type</span> <span class=\"n\">JSONTIME</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Time</span>\n\n<span class=\"k\">const</span> <span class=\"n\">ctLayout</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"m\">2006</span><span class=\"o\">-</span><span class=\"m\">01</span><span class=\"o\">-</span><span class=\"m\">02</span> <span class=\"m\">15</span><span class=\"o\">:</span><span class=\"m\">04</span><span class=\"o\">:</span><span class=\"m\">05</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"n\">JSONTIME</span><span class=\"p\">)</span> <span class=\"n\">Value</span><span class=\"p\">()</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Time</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Time</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">*</span><span class=\"n\">JSONTIME</span><span class=\"p\">)</span> <span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"n\">v</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Time</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"o\">*</span><span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">JSONTIME</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">*</span><span class=\"n\">JSONTIME</span><span class=\"p\">)</span> <span class=\"n\">String</span><span class=\"p\">()</span> <span class=\"kt\">string</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Format</span><span class=\"p\">(</span><span class=\"n\">ctLayout</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">*</span><span class=\"n\">JSONTIME</span><span class=\"p\">)</span> <span class=\"n\">FieldType</span><span class=\"p\">()</span> <span class=\"kt\">int</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">TypeDateTimeField</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">*</span><span class=\"n\">JSONTIME</span><span class=\"p\">)</span> <span class=\"n\">SetRaw</span><span class=\"p\">(</span><span class=\"n\">value</span> <span class=\"k\">interface</span><span class=\"p\">{})</span> <span class=\"kt\">error</span> <span class=\"p\">{</span>\n    <span class=\"k\">switch</span> <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"k\">type</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">case</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Time</span><span class=\"o\">:</span>\n        <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n    <span class=\"k\">case</span> <span class=\"kt\">string</span><span class=\"o\">:</span>\n        <span class=\"c\">//loc, _ := time.LoadLocation(&amp;quot;Local&amp;quot;)</span>\n        <span class=\"n\">tmp</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Parse</span><span class=\"p\">(</span><span class=\"n\">ctLayout</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"p\">)</span>\n        <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">)</span>\n    <span class=\"k\">default</span><span class=\"o\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Errorf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"n\">JSONTIME</span><span class=\"o\">.</span><span class=\"n\">SetRaw</span><span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"n\">unknown</span> <span class=\"n\">value</span> <span class=\"s\">`%v`</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"no\">nil</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">*</span><span class=\"n\">JSONTIME</span><span class=\"p\">)</span> <span class=\"n\">RawValue</span><span class=\"p\">()</span> <span class=\"k\">interface</span><span class=\"p\">{}</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n\n</code></pre> ",
    "hits": 542,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 302,
    "title": "请教大家golang操作mysql问题",
    "created_at": "2016-11-01 16:23:51",
    "updated_at": "2016-11-01 18:04:34",
    "replied_at": "2016-11-01 18:04:34",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 234,
    "last_reply_user_login": "sryan",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1236,
    "user": "{\"id\": 1236, \"name\": \"wzywsk\", \"login\": \"wzywsk\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "现在我需要在一次事务中进行两次select\n```go\ntx, err := mysql.Begin()\nif err != nil {\n\treturn\n}\n\n//进行第一次查询\nrows, err := tx.Query(&quot;select ....&quot;)\nif err != nil {\n\treturn\n}\ndefer rows.Close()\n\n//使用第一次查询结果进行第二次查询\nvar result string\nfor rows.Next{\n\tif err = rows.Scan(&amp;result); err != nil {\n\t\treturn\n\t}\n\t//第二次Query时会报错\n\trows2, err := tx.Query(&quot;select ....&quot;, result)\n}\n\n```\n请问有什么方法可以解决？",
    "body_html": "<p>现在我需要在一次事务中进行两次 select</p>\n <pre class=\"highlight go\"><code><span class=\"n\">tx</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">mysql</span><span class=\"o\">.</span><span class=\"n\">Begin</span><span class=\"p\">()</span>\n<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">//进行第一次查询</span>\n<span class=\"n\">rows</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"k\">select</span> <span class=\"o\">....&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span>\n<span class=\"p\">}</span>\n<span class=\"k\">defer</span> <span class=\"n\">rows</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n\n<span class=\"c\">//使用第一次查询结果进行第二次查询</span>\n<span class=\"k\">var</span> <span class=\"n\">result</span> <span class=\"kt\">string</span>\n<span class=\"k\">for</span> <span class=\"n\">rows</span><span class=\"o\">.</span><span class=\"n\">Next</span><span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">rows</span><span class=\"o\">.</span><span class=\"n\">Scan</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">result</span><span class=\"p\">);</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span>\n    <span class=\"p\">}</span>\n    <span class=\"c\">//第二次Query时会报错</span>\n    <span class=\"n\">rows2</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"k\">select</span> <span class=\"o\">....&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n</code></pre> \n<p>请问有什么方法可以解决？</p>",
    "hits": 374,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 303,
    "title": "liteide使用出现这个问题,怎么解决有人遇到过吗",
    "created_at": "2016-11-01 16:59:01",
    "updated_at": "2016-12-08 09:59:18",
    "replied_at": "2016-12-08 09:59:18",
    "replies_count": 5,
    "node_name": "LiteIDE",
    "node_id": 47,
    "last_reply_user_id": 1155,
    "last_reply_user_login": "visualfc",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1159,
    "user": "{\"id\": 1159, \"name\": \"qingxunxu\", \"login\": \"qingxunxu\", \"avatar\": \"https://gocn.vip/system/letter_avatars/q.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "![](file:///Users/MTJH/Desktop/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-11-01%2016.54.48.png)\n选中某一行或者全选,总是会出现光标,删除只会删除光标的前一个字符",
    "body_html": "<p><img title=\"\" alt=\"\">\n选中某一行或者全选,总是会出现光标,删除只会删除光标的前一个字符</p>",
    "hits": 959,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 304,
    "title": "问个gitlab ci 跑go test的问题",
    "created_at": "2016-11-01 18:35:46",
    "updated_at": "2016-11-02 15:55:59",
    "replied_at": "2016-11-02 15:55:59",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1243,
    "last_reply_user_login": "William",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 568,
    "user": "{\"id\": 568, \"name\": \"logiz\", \"login\": \"logiz\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": " 项目里面有A B 2个包,在2个子文件夹里面，B依赖A, 在gitlab ci里面 项目是被gitlab ci执行git pull拉下来的\n\n没有办法放在gopath里面  这样在跑的时候就出现找不到a的问题  大家有没有遇到",
    "body_html": "<p>项目里面有 A B 2 个包,在 2 个子文件夹里面，B 依赖 A, 在 gitlab ci 里面 项目是被 gitlab ci 执行 git pull 拉下来的</p>\n\n<p>没有办法放在 gopath 里面  这样在跑的时候就出现找不到 a 的问题  大家有没有遇到</p>",
    "hits": 580,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 305,
    "title": "dev模式下的render函数宕机问题",
    "created_at": "2016-11-01 19:34:51",
    "updated_at": "2016-11-01 21:32:27",
    "replied_at": "2016-11-01 21:32:27",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1240,
    "user": "{\"id\": 1240, \"name\": \"luotao39332\", \"login\": \"luotao39332\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "当在dev模式下渲染会把模板重新加入到BeeTemplates这个map里面去。由于用户请求处理都是并发的，所以导致了多个用户同时处理时 同时在对这个map写入。导致宕机。这个原因正确吗？解决方法就是换个模式。或者开发者让这个map变成线程安全的么。确认一下我的判断对不对。",
    "body_html": "<p>当在 dev 模式下渲染会把模板重新加入到 BeeTemplates 这个 map 里面去。由于用户请求处理都是并发的，所以导致了多个用户同时处理时 同时在对这个 map 写入。导致宕机。这个原因正确吗？解决方法就是换个模式。或者开发者让这个 map 变成线程安全的么。确认一下我的判断对不对。</p>",
    "hits": 307,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 306,
    "title": "gopkg.in是什么？",
    "created_at": "2016-11-01 21:20:17",
    "updated_at": "2016-11-01 21:41:34",
    "replied_at": "2016-11-01 21:41:34",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 480,
    "user": "{\"id\": 480, \"name\": \"toukii\", \"login\": \"toukii\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "有些go的代码库地址是`gopkg.in`开头的，比如`gopkg.in/go-playground/validator.v8`，正真的代码是托管在github上的。\n1. 后面这个`v8`是版本吗？\n2. 引用代码库是用`go-playground/validator`还是`gopkg.in/go-playground/validator.v8`？",
    "body_html": "<p>有些 go 的代码库地址是<code>gopkg.in</code>开头的，比如<code>gopkg.in/go-playground/validator.v8</code>，正真的代码是托管在 github 上的。</p>\n\n<ol>\n<li>后面这个<code>v8</code>是版本吗？</li>\n<li>引用代码库是用<code>go-playground/validator</code>还是<code>gopkg.in/go-playground/validator.v8</code>？</li>\n</ol>",
    "hits": 555,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 307,
    "title": "我要找GO社区的管理，聊点事情",
    "created_at": "2016-11-02 11:29:23",
    "updated_at": "2017-03-19 18:29:44",
    "replied_at": "2017-03-19 18:29:44",
    "replies_count": 38,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 408,
    "last_reply_user_login": "seeyoup",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 683,
    "user": "{\"id\": 683, \"name\": \"erbajie\", \"login\": \"erbajie\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "管理进来。",
    "body_html": "<p>管理进来。</p>",
    "hits": 592,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 308,
    "title": "RunC/RKT/Docker 这几个容器工具各有什么优缺点？",
    "created_at": "2016-11-02 11:44:16",
    "updated_at": "2016-11-02 12:09:22",
    "replied_at": "2016-11-02 12:09:22",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 271,
    "user": "{\"id\": 271, \"name\": \"cholerae\", \"login\": \"cholerae\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Docker 现在越来越重，集成的功能越来越多，可是我只需要一个容器功能而已。\n后来查了一下发现有个开放容器标准，RunC 和 RKT 各是一个标准的实现，都是轻量级的工具，不知道有没有什么坑，各有什么优点？有没有哪位之前调研过？",
    "body_html": "<p>Docker 现在越来越重，集成的功能越来越多，可是我只需要一个容器功能而已。\n后来查了一下发现有个开放容器标准，RunC 和 RKT 各是一个标准的实现，都是轻量级的工具，不知道有没有什么坑，各有什么优点？有没有哪位之前调研过？</p>",
    "hits": 398,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 309,
    "title": "Go语法要增加一个alias的功能",
    "created_at": "2016-11-02 12:18:49",
    "updated_at": "2016-11-05 16:27:07",
    "replied_at": "2016-11-05 16:27:07",
    "replies_count": 8,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 904,
    "last_reply_user_login": "boilingbit",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "看上去是为了最小化依赖，以及做到将来包的兼容性问题,例如你的程序依赖了包L，但是后来你重构把L里面的实现X移到了L1里面，那么可以通过下面的代码来兼容，而不需要修改依赖L包的代码。\n\n```\npackage L\nimport &quot;L1&quot;\nconst X = L1.X  // X is effectively an alias for L1.X\n```\n\n更详细的请参考这里：\nhttps://github.com/golang/proposal/blob/master/design/16339-alias-decls.md",
    "body_html": "<p>看上去是为了最小化依赖，以及做到将来包的兼容性问题,例如你的程序依赖了包 L，但是后来你重构把 L 里面的实现 X 移到了 L1 里面，那么可以通过下面的代码来兼容，而不需要修改依赖 L 包的代码。</p>\n <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">L</span>\n<span class=\"n\">import</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">L1</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"n\">const</span> <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"n\">L1</span><span class=\"p\">.</span><span class=\"n\">X</span>  <span class=\"p\">//</span> <span class=\"n\">X</span> <span class=\"n\">is</span> <span class=\"n\">effectively</span> <span class=\"n\">an</span> <span class=\"n\">alias</span> <span class=\"n\">for</span> <span class=\"n\">L1</span><span class=\"p\">.</span><span class=\"n\">X</span>\n</code></pre> \n<p>更详细的请参考这里：\n<a href=\"https://github.com/golang/proposal/blob/master/design/16339-alias-decls.md\" rel=\"nofollow\" target=\"_blank\">https://github.com/golang/proposal/blob/master/design/16339-alias-decls.md</a></p>",
    "hits": 544,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 310,
    "title": "Go GC打印出来的这些信息都是什么含义？",
    "created_at": "2016-11-02 13:17:54",
    "updated_at": "2019-07-08 13:41:31",
    "replied_at": "2019-07-08 13:41:31",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 282,
    "last_reply_user_login": "cbsheng",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```\ngc 87 @2.361s 9%: 0.032+2.6+0.13 ms clock, 0.26+2.7/4.9/4.2+1.1 ms cpu, 19-&gt;19-&gt;9 MB, 20 MB goal, 8 P\ngc 88 @2.375s 9%: 0.006+2.1+0.18 ms clock, 0.051+0.048/3.8/9.0+1.4 ms cpu, 18-&gt;18-&gt;9 MB, 19 MB goal, 8 P\ngc 89 @2.402s 9%: 0.005+1.7+0.11 ms clock, 0.047+0.032/3.1/8.7+0.95 ms cpu, 18-&gt;18-&gt;10 MB, 19 MB goal, 8 P\ngc 90 @2.412s 9%: 0.004+1.7+0.080 ms clock, 0.039+0/3.4/10+0.64 ms cpu, 19-&gt;19-&gt;9 MB, 20 MB goal, 8 P\ngc 91 @2.457s 9%: 0.006+2.4+0.14 ms clock, 0.049+0.53/3.7/0+1.1 ms cpu, 18-&gt;18-&gt;6 MB, 19 MB goal, 8 P\ngc 92 @10.996s 2%: 0.011+2.1+0.33 ms clock, 0.088+0/3.7/10+2.6 ms cpu, 11-&gt;12-&gt;6 MB, 12 MB goal, 8 P\ngc 93 @68.771s 0%: 0.012+1.9+0.089 ms clock, 0.098+0.010/3.2/8.5+0.71 ms cpu, 12-&gt;12-&gt;6 MB, 13 MB goal, 8 P\n```\n\n当我们调试GC打开GODEBUG=gctrace=1打开的时候就会输出如上所示的这些信息，这些都是对应什么意思啊？",
    "body_html": " <pre class=\"highlight plaintext\"><code>gc 87 @2.361s 9%: 0.032+2.6+0.13 ms clock, 0.26+2.7/4.9/4.2+1.1 ms cpu, 19-&amp;gt;19-&amp;gt;9 MB, 20 MB goal, 8 P\ngc 88 @2.375s 9%: 0.006+2.1+0.18 ms clock, 0.051+0.048/3.8/9.0+1.4 ms cpu, 18-&amp;gt;18-&amp;gt;9 MB, 19 MB goal, 8 P\ngc 89 @2.402s 9%: 0.005+1.7+0.11 ms clock, 0.047+0.032/3.1/8.7+0.95 ms cpu, 18-&amp;gt;18-&amp;gt;10 MB, 19 MB goal, 8 P\ngc 90 @2.412s 9%: 0.004+1.7+0.080 ms clock, 0.039+0/3.4/10+0.64 ms cpu, 19-&amp;gt;19-&amp;gt;9 MB, 20 MB goal, 8 P\ngc 91 @2.457s 9%: 0.006+2.4+0.14 ms clock, 0.049+0.53/3.7/0+1.1 ms cpu, 18-&amp;gt;18-&amp;gt;6 MB, 19 MB goal, 8 P\ngc 92 @10.996s 2%: 0.011+2.1+0.33 ms clock, 0.088+0/3.7/10+2.6 ms cpu, 11-&amp;gt;12-&amp;gt;6 MB, 12 MB goal, 8 P\ngc 93 @68.771s 0%: 0.012+1.9+0.089 ms clock, 0.098+0.010/3.2/8.5+0.71 ms cpu, 12-&amp;gt;12-&amp;gt;6 MB, 13 MB goal, 8 P\n</code></pre> \n<p>当我们调试 GC 打开 GODEBUG=gctrace=1 打开的时候就会输出如上所示的这些信息，这些都是对应什么意思啊？</p>",
    "hits": 638,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 311,
    "title": "分布式系统中的agent更新问题",
    "created_at": "2016-11-02 16:11:13",
    "updated_at": "2016-11-08 11:49:24",
    "replied_at": "2016-11-08 11:49:24",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 291,
    "last_reply_user_login": "opsnull",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 30,
    "user": "{\"id\": 30, \"name\": \"wulinlw\", \"login\": \"wulinlw\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "用grpc写了一套通信工具，主要是通过一个或多个proxy向各个服务器上的agent下发命令执行  \n\n为什么不用ansible之类的工具是因为，公司的这套系统有一套专门的web界面整合了许多流程。\n\nagent在服务器上是以这种方式启动的  \n```shell\nnohup xxxagent &amp;\n```\n\n现在碰到一个问题就是随着服务器的增加，每次agent有升级就比较麻烦   \n\n有没有好一点的方法可以批量更新agent到新版本呢\n\n另外做一个守护程序，专门做重启和更新？\n也看了自升级的方案，感觉更复杂了\nhttps://github.com/inconshreveable/go-update\n有没有其他的好方案呢\n\n",
    "body_html": "<p>用 grpc 写了一套通信工具，主要是通过一个或多个 proxy 向各个服务器上的 agent 下发命令执行  </p>\n\n<p>为什么不用 ansible 之类的工具是因为，公司的这套系统有一套专门的 web 界面整合了许多流程。</p>\n\n<p>agent 在服务器上是以这种方式启动的  </p>\n <pre class=\"highlight shell\"><code><span class=\"nb\">nohup </span>xxxagent &amp;amp<span class=\"p\">;</span>\n</code></pre> \n<p>现在碰到一个问题就是随着服务器的增加，每次 agent 有升级就比较麻烦   </p>\n\n<p>有没有好一点的方法可以批量更新 agent 到新版本呢</p>\n\n<p>另外做一个守护程序，专门做重启和更新？\n也看了自升级的方案，感觉更复杂了\n<a href=\"https://github.com/inconshreveable/go-update\" rel=\"nofollow\" target=\"_blank\">https://github.com/inconshreveable/go-update</a>\n有没有其他的好方案呢</p>",
    "hits": 447,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 312,
    "title": "如何获取服务端地址",
    "created_at": "2016-11-02 17:04:17",
    "updated_at": "2016-11-03 16:04:10",
    "replied_at": "2016-11-03 16:04:10",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1261,
    "last_reply_user_login": "cjmxp",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 269,
    "user": "{\"id\": 269, \"name\": \"cz000\", \"login\": \"cz000\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "建立一个UDP连接后，读取数据，需要获取服务端地址\n\t\tn, addr, err := l.ReadFrom(buf)\n\t\tfmt.Println(&quot;------------------remote&quot;, addr)\n\t\tfmt.Println(&quot;------------------local&quot;, l.LocalAddr())\n输出结果为：\n\t\t------------------remote 127.0.0.1:47447\n\t\t------------------local [::]:3478\n服务端地址的输出结果为什么会是这样，使用的是liteide,需要输出的结果类似远端！ 即使加上.String()方法输出的结果还是一样，参数同样都是Addr 接口，如何输出服务端地址？",
    "body_html": "<p>建立一个 UDP 连接后，读取数据，需要获取服务端地址\n        n, addr, err := l.ReadFrom(buf)\n        fmt.Println(\"------------------remote\", addr)\n        fmt.Println(\"------------------local\", l.LocalAddr())\n输出结果为：\n        ------------------remote 127.0.0.1:47447\n        ------------------local [::]:3478\n服务端地址的输出结果为什么会是这样，使用的是 liteide,需要输出的结果类似远端！ 即使加上.String() 方法输出的结果还是一样，参数同样都是 Addr 接口，如何输出服务端地址？</p>",
    "hits": 399,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 313,
    "title": "go如何格式化 自动对齐输出以下格式",
    "created_at": "2016-11-02 22:28:33",
    "updated_at": "2016-11-03 09:42:26",
    "replied_at": "2016-11-03 09:42:26",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 636,
    "last_reply_user_login": "stevewang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 407,
    "user": "{\"id\": 407, \"name\": \"lucyne\", \"login\": \"lucyne\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "以下换行了 可以看图片 谢谢\n\n+--------------------------+----------+\n| Variable_name              | Value      |\n+--------------------------+----------+\n| innodb_lock_wait         | 120         |\n| lock_wait_timeout        | 31536     |\n+--------------------------+----------+",
    "body_html": "<p>以下换行了 可以看图片 谢谢</p>\n\n<p>+--------------------------+----------+\n| Variable_name              | Value      |\n+--------------------------+----------+\n| innodb_lock_wait         | 120         |\n| lock_wait_timeout        | 31536     |\n+--------------------------+----------+</p>",
    "hits": 565,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 314,
    "title": "用beego写入log到elasticsearch失败",
    "created_at": "2016-11-03 00:42:18",
    "updated_at": "2021-01-20 03:07:16",
    "replied_at": "2018-03-18 15:06:46",
    "replies_count": 8,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 5123,
    "last_reply_user_login": "solider_xq",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 915,
    "user": "{\"id\": 915, \"name\": \"alexkkk\", \"login\": \"alexkkk\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "代码如下：\n```go\nfunc init() {\n\tesLogger = logs.NewLogger(100)\n\tesLogger.SetLogger(logs.AdapterConsole)\n\tenableFuncCall(esLogger)\n\tesLogger.SetLogger(logs.AdapterEs, `{&quot;dsn&quot;:&quot;http://192.168.1.31:9200/&quot;}`)\n\tfmt.Println(&quot;set logger successful&quot;)\n}\n\nfunc Elastic(format string, v ...interface{}) {\n\tesLogger.Info(format, v...)\n}\n```\n\n然后用Elastic这个函数写日志，没看到任何报错，但是elasticsearch里也没有日志。\n哪位大神知道原因吗？\n",
    "body_html": "<p>代码如下：</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">init</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">esLogger</span> <span class=\"o\">=</span> <span class=\"n\">logs</span><span class=\"o\">.</span><span class=\"n\">NewLogger</span><span class=\"p\">(</span><span class=\"m\">100</span><span class=\"p\">)</span>\n    <span class=\"n\">esLogger</span><span class=\"o\">.</span><span class=\"n\">SetLogger</span><span class=\"p\">(</span><span class=\"n\">logs</span><span class=\"o\">.</span><span class=\"n\">AdapterConsole</span><span class=\"p\">)</span>\n    <span class=\"n\">enableFuncCall</span><span class=\"p\">(</span><span class=\"n\">esLogger</span><span class=\"p\">)</span>\n    <span class=\"n\">esLogger</span><span class=\"o\">.</span><span class=\"n\">SetLogger</span><span class=\"p\">(</span><span class=\"n\">logs</span><span class=\"o\">.</span><span class=\"n\">AdapterEs</span><span class=\"p\">,</span> <span class=\"s\">`{&amp;quot;dsn&amp;quot;:&amp;quot;http://192.168.1.31:9200/&amp;quot;}`</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">set</span> <span class=\"n\">logger</span> <span class=\"n\">successful</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">Elastic</span><span class=\"p\">(</span><span class=\"n\">format</span> <span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"o\">...</span><span class=\"k\">interface</span><span class=\"p\">{})</span> <span class=\"p\">{</span>\n    <span class=\"n\">esLogger</span><span class=\"o\">.</span><span class=\"n\">Info</span><span class=\"p\">(</span><span class=\"n\">format</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>然后用 Elastic 这个函数写日志，没看到任何报错，但是 elasticsearch 里也没有日志。\n哪位大神知道原因吗？</p>",
    "hits": 773,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 315,
    "title": "想做即时聊天，大家有什么好的即时聊天框架给推荐下",
    "created_at": "2016-11-03 10:49:54",
    "updated_at": "2019-03-20 15:44:01",
    "replied_at": "2019-03-20 15:44:01",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 7296,
    "last_reply_user_login": "semot",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 44,
    "user": "{\"id\": 44, \"name\": \"yubc2006\", \"login\": \"yubc2006\", \"avatar\": \"https://gocn.vip/system/letter_avatars/y.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 492,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 316,
    "title": "代码跳转到方法声明和GOPATH有关吗",
    "created_at": "2016-11-03 11:37:43",
    "updated_at": "2016-11-07 23:53:35",
    "replied_at": "2016-11-07 23:53:35",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 88,
    "last_reply_user_login": "qi19901212",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 999,
    "user": "{\"id\": 999, \"name\": \"ninefive\", \"login\": \"ninefive\", \"avatar\": \"https://gocn.vip/system/letter_avatars/n.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "golang sublime跳转到代码声明。这个和GOPATH有关吗？",
    "body_html": "<p>golang sublime 跳转到代码声明。这个和 GOPATH 有关吗？</p>",
    "hits": 358,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 317,
    "title": "beego orm Using 方法切换 schema 不生效",
    "created_at": "2016-11-03 11:45:32",
    "updated_at": "2021-01-20 13:33:36",
    "replied_at": "2016-11-07 23:41:00",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1258,
    "user": "{\"id\": 1258, \"name\": \"oscarzhaosl\", \"login\": \"oscarzhaosl\", \"avatar\": \"https://gocn.vip/system/letter_avatars/o.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "使用 beego orm 组合 SQL语句时，查询的一直是 default 数据库，使用 Using 并没有切换到非 default 数据库。\n\n[![o.Using 函数的实现](http://obk395c25.bkt.clouddn.com/o.Using.png &quot;o.Using 函数的实现&quot;)](http://obk395c25.bkt.clouddn.com/o.Using.png &quot;o.Using 函数的实现&quot;)\n\n看下图，RAW SQL 可以正常切换，但是 ORM 不行。是我对 Using理解错了，还是 orm 有bug 呢？急，在线等～\n[![代码示例](http://obk395c25.bkt.clouddn.com/problem.png &quot;代码示例&quot;)](http://obk395c25.bkt.clouddn.com/problem.png &quot;代码示例&quot;)",
    "body_html": "<p>使用 beego orm 组合 SQL 语句时，查询的一直是 default 数据库，使用 Using 并没有切换到非 default 数据库。</p>\n\n<p><a href=\"http://obk395c25.bkt.clouddn.com/o.Using.png%20%22o.Using%20%E5%87%BD%E6%95%B0%E7%9A%84%E5%AE%9E%E7%8E%B0%22\" title=\"\"><img src=\"http://obk395c25.bkt.clouddn.com/o.Using.png\" title=\"&quot;o.Using\" alt=\"o.Using 函数的实现\"></a></p>\n\n<p>看下图，RAW SQL 可以正常切换，但是 ORM 不行。是我对 Using 理解错了，还是 orm 有 bug 呢？急，在线等～\n<a href=\"http://obk395c25.bkt.clouddn.com/problem.png%20%22%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B%22\" title=\"\"><img src=\"http://obk395c25.bkt.clouddn.com/problem.png\" title=\"&quot;代码示例&quot;\" alt=\"代码示例\"></a></p>",
    "hits": 420,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 318,
    "title": "数据库问题！！！",
    "created_at": "2016-11-03 11:47:32",
    "updated_at": "2016-11-04 09:04:43",
    "replied_at": "2016-11-04 09:04:43",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1055,
    "last_reply_user_login": "hlj2722",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 58,
    "user": "{\"id\": 58, \"name\": \"为你上线\", \"login\": \"751891786\", \"avatar\": \"https://gocn.vip/system/letter_avatars/7.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "需求是这样的：\n  我现在要从一个txt读取几万条数据写进去mysql数据库。\n  然而这些txt有些行是错误数据，数据库会抛异常。\n  我怎么在执行到这些错误数据（抛异常的时候）跳过这条数据，继续执行下一条读取，而不是直接报错程序停下来。\n  求思路啊。",
    "body_html": "<p>需求是这样的：\n  我现在要从一个 txt 读取几万条数据写进去 mysql 数据库。\n  然而这些 txt 有些行是错误数据，数据库会抛异常。\n  我怎么在执行到这些错误数据（抛异常的时候）跳过这条数据，继续执行下一条读取，而不是直接报错程序停下来。\n  求思路啊。</p>",
    "hits": 589,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 319,
    "title": "GO编码问题",
    "created_at": "2016-11-03 15:38:08",
    "updated_at": "2016-11-03 15:38:08",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 58,
    "user": "{\"id\": 58, \"name\": \"为你上线\", \"login\": \"751891786\", \"avatar\": \"https://gocn.vip/system/letter_avatars/7.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "湖北省武汉市电信ADSL   绂忓缓鐪佹硥宸炲競鍗楀畨甯傛\n有区别吗？  不都一样是字符串？",
    "body_html": "<p>湖北省武汉市电信 ADSL   绂忓缓鐪佹硥宸炲競鍗楀畨甯傛\n有区别吗？ 不都一样是字符串？</p>",
    "hits": 280,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 320,
    "title": "[最贱实战] 24条赞美",
    "created_at": "2016-11-03 20:19:57",
    "updated_at": "2016-11-06 06:49:55",
    "replied_at": "2016-11-06 06:49:55",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 854,
    "last_reply_user_login": "bw57899",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 861,
    "user": "{\"id\": 861, \"name\": \"bozz\", \"login\": \"bozz\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "# [最贱实战] 24条赞美\n老板手下有1千万的员工（别不信，实际超过1千万，并且每年还交费），老板秘书要求每人每天写24条赞美老板的话，每句话不超过90个字。\n请用go写个web服务，将所有的每个人的每句话以行记录到日志中，每天统计出没有完成任务的员工，将对其进行行政记过。\n现在有一台服务器，带宽不限，硬盘不限，路过的小司机老司机求带\n\n\n\n------------\n美丽的分界线\n\n------------\n\n\n问题过去一周了，可以获得@astaxie的沙发感觉好满足啊。  \n我的问题还是蛮好的，战果累累，  \n227浏览",
    "body_html": "<h2 id=\"[最贱实战] 24条赞美\">[最贱实战] 24 条赞美</h2>\n<p>老板手下有 1 千万的员工（别不信，实际超过 1 千万，并且每年还交费），老板秘书要求每人每天写 24 条赞美老板的话，每句话不超过 90 个字。\n请用 go 写个 web 服务，将所有的每个人的每句话以行记录到日志中，每天统计出没有完成任务的员工，将对其进行行政记过。\n现在有一台服务器，带宽不限，硬盘不限，路过的小司机老司机求带</p>\n\n<hr>\n\n<p>美丽的分界线</p>\n\n<hr>\n\n<p>问题过去一周了，可以获得<a href=\"/astaxie\" class=\"user-mention\" title=\"@astaxie\"><i>@</i>astaxie</a>的沙发感觉好满足啊。<br>\n我的问题还是蛮好的，战果累累，<br>\n227 浏览</p>",
    "hits": 551,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 321,
    "title": "新版本Go将会对database/sql进行大量改进",
    "created_at": "2016-11-04 08:51:52",
    "updated_at": "2016-11-05 21:23:36",
    "replied_at": "2016-11-05 21:23:36",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 111,
    "last_reply_user_login": "niugou",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Go1.8将会对database/sql进行大量改进，主要的改进点如下：\n\n- cancelable queries\n- visible database types\n- multiple result sets\n- ping can hit server\n- named parameters\n- transaction isolation levels\n\n\nTip文档: [database/sql](https://tip.golang.org/pkg/database/sql/) [database/sql/driver](https://tip.golang.org/pkg/database/sql/driver)\n\n\n详细讨论\nhttps://docs.google.com/document/d/1F778e7ZSNiSmbju3jsEWzShcb8lIO4kDyfKDNm4PNd8/edit#",
    "body_html": "<p>Go1.8 将会对 database/sql 进行大量改进，主要的改进点如下：</p>\n\n<ul>\n<li>cancelable queries</li>\n<li>visible database types</li>\n<li>multiple result sets</li>\n<li>ping can hit server</li>\n<li>named parameters</li>\n<li>transaction isolation levels</li>\n</ul>\n\n<p>Tip 文档: <a href=\"https://tip.golang.org/pkg/database/sql/\" rel=\"nofollow\" target=\"_blank\" title=\"\">database/sql</a> <a href=\"https://tip.golang.org/pkg/database/sql/driver\" rel=\"nofollow\" target=\"_blank\" title=\"\">database/sql/driver</a></p>\n\n<p>详细讨论\n<a href=\"https://docs.google.com/document/d/1F778e7ZSNiSmbju3jsEWzShcb8lIO4kDyfKDNm4PNd8/edit#\" rel=\"nofollow\" target=\"_blank\">https://docs.google.com/document/d/1F778e7ZSNiSmbju3jsEWzShcb8lIO4kDyfKDNm4PNd8/edit#</a></p>",
    "hits": 509,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 322,
    "title": "每日一问哦",
    "created_at": "2016-11-04 10:17:37",
    "updated_at": "2016-11-04 14:51:36",
    "replied_at": "2016-11-04 14:51:36",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 682,
    "last_reply_user_login": "mintzhao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 58,
    "user": "{\"id\": 58, \"name\": \"为你上线\", \"login\": \"751891786\", \"avatar\": \"https://gocn.vip/system/letter_avatars/7.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "请问要实现这种逻辑要怎么处理？\n    id:=16381\n\tif  type(id/16381) is types.IntType{\n\t\tfmt.Println(&quot;1111111&quot;)\n\t}\n\t在线等哦",
    "body_html": "<p>请问要实现这种逻辑要怎么处理？\n    id:=16381\n    if  type(id/16381) is types.IntType{\n        fmt.Println(\"1111111\")\n    }\n    在线等哦</p>",
    "hits": 303,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 323,
    "title": "求一个高效的Golang MD6加密算法实现",
    "created_at": "2016-11-04 10:43:40",
    "updated_at": "2016-11-08 17:51:19",
    "replied_at": "2016-11-08 17:51:19",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 238,
    "last_reply_user_login": "kevin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 929,
    "user": "{\"id\": 929, \"name\": \"gogoing\", \"login\": \"gogoing\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题\n\n求一个高效的Golang MD6加密算法实现",
    "body_html": "<p>如题</p>\n\n<p>求一个高效的 Golang MD6 加密算法实现</p>",
    "hits": 548,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 324,
    "title": "我会做没有意义的事情？来呀一起搞事情啊！",
    "created_at": "2016-11-04 14:10:03",
    "updated_at": "2016-11-04 14:10:03",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 683,
    "user": "{\"id\": 683, \"name\": \"erbajie\", \"login\": \"erbajie\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "[![猿来就是你](http://ww2.sinaimg.cn/mw690/8db48fb7jw1f9g1ldaqlsj20ku1120z0.jpg &quot;猿来就是你&quot;)](http://ww2.sinaimg.cn/mw690/8db48fb7jw1f9g1ldaqlsj20ku1120z0.jpg &quot;猿来就是你&quot;)",
    "body_html": "<p><a href=\"http://ww2.sinaimg.cn/mw690/8db48fb7jw1f9g1ldaqlsj20ku1120z0.jpg%20%22%E7%8C%BF%E6%9D%A5%E5%B0%B1%E6%98%AF%E4%BD%A0%22\" title=\"\"><img src=\"http://ww2.sinaimg.cn/mw690/8db48fb7jw1f9g1ldaqlsj20ku1120z0.jpg\" title=\"&quot;猿来就是你&quot;\" alt=\"猿来就是你\"></a></p>",
    "hits": 287,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 325,
    "title": "golang能根据日期到了夏令(冬令)时计算夏令(冬令)时的当地时间吗",
    "created_at": "2016-11-04 14:43:02",
    "updated_at": "2016-11-12 16:50:21",
    "replied_at": "2016-11-12 16:31:03",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 256,
    "last_reply_user_login": "robi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 715,
    "user": "{\"id\": 715, \"name\": \"changjixiong\", \"login\": \"changjixiong\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "刚好需要处理相关的问题，标准库的文档里面只看到关于时区相关的处理，对于夏令冬令时没有看到相关的处理。\n\n倒是和朋友交流，发现java里面有处理，并且如果当地法律有修改的话，还能升级相关定义文件，真是事无巨细。-_-!",
    "body_html": "<p>刚好需要处理相关的问题，标准库的文档里面只看到关于时区相关的处理，对于夏令冬令时没有看到相关的处理。</p>\n\n<p>倒是和朋友交流，发现 java 里面有处理，并且如果当地法律有修改的话，还能升级相关定义文件，真是事无巨细。-_-!</p>",
    "hits": 629,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 326,
    "title": "关于Io读写问题",
    "created_at": "2016-11-04 14:49:14",
    "updated_at": "2016-11-05 06:54:55",
    "replied_at": "2016-11-05 06:54:55",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 111,
    "last_reply_user_login": "niugou",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 940,
    "user": "{\"id\": 940, \"name\": \"zradelaide1122\", \"login\": \"zradelaide1122\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "目前的思路是这样，用户上传文件到服务器，A服务器接收文件，然后发送给B C服务器，go 语言能否做到  在A接受文件的同时，将已经接受到的数据，在接收的同时发送给B和C， 具体会用到什么方法，求指点",
    "body_html": "<p>目前的思路是这样，用户上传文件到服务器，A 服务器接收文件，然后发送给 B C 服务器，go 语言能否做到  在 A 接受文件的同时，将已经接受到的数据，在接收的同时发送给 B 和 C， 具体会用到什么方法，求指点</p>",
    "hits": 325,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 327,
    "title": "github.com/go-sql-driver/mysql",
    "created_at": "2016-11-04 15:48:14",
    "updated_at": "2016-12-07 10:32:16",
    "replied_at": "2016-12-07 10:32:16",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1300,
    "last_reply_user_login": "RedMothball",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 58,
    "user": "{\"id\": 58, \"name\": \"为你上线\", \"login\": \"751891786\", \"avatar\": \"https://gocn.vip/system/letter_avatars/7.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "16382\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xc0000005 code=0x0 addr=0x0 pc=0x48b27e]\n\n为什么每次 跑到这个16382数字数据库就断开连接啊。我大概2分钟跑了16328条数据，求解！！！",
    "body_html": "<p>16382\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xc0000005 code=0x0 addr=0x0 pc=0x48b27e]</p>\n\n<p>为什么每次 跑到这个 16382 数字数据库就断开连接啊。我大概 2 分钟跑了 16328 条数据，求解！！！</p>",
    "hits": 408,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 328,
    "title": "如何设计游戏好友列表",
    "created_at": "2016-11-04 20:49:05",
    "updated_at": "2016-11-05 10:24:00",
    "replied_at": "2016-11-05 10:24:00",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 636,
    "last_reply_user_login": "stevewang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1073,
    "user": "{\"id\": 1073, \"name\": \"FancyGo\", \"login\": \"FancyGo\", \"avatar\": \"https://static.gocn.vip/user/avatar/1073/a6d075.jpg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "今天和同事讨论了一下好友列表的设计。\n他的设计是，如果两个玩家（id1和id2）成为好友，那就直接在数据库中存两条数据，主键就是两个id拼接起来，“id1-id2”“id2-id1”这样，然后内存中也不保存，添加删除好友直接操作数据库。他这样设计的主要原因是保证一个玩家删除好友，另一个玩家相应删除的时候保证了原子性。然后也不用把大量的列表数据加载到内存。\n我的想法呢，是每个玩家存一条数据 id:[id1,id2,id3,id4,id5]这样子，然后加载到内存，添加删除直接在内存中加锁操作，数据库就单线程顺序写。\n当玩家数量较小时，这两种方法都行。但如果玩家数量很大，单服十几万的话，哪种方法更好呀。或者有没有其他更好的方法呀。\n",
    "body_html": "<p>今天和同事讨论了一下好友列表的设计。\n他的设计是，如果两个玩家（id1 和 id2）成为好友，那就直接在数据库中存两条数据，主键就是两个 id 拼接起来，“id1-id2”“id2-id1” 这样，然后内存中也不保存，添加删除好友直接操作数据库。他这样设计的主要原因是保证一个玩家删除好友，另一个玩家相应删除的时候保证了原子性。然后也不用把大量的列表数据加载到内存。\n我的想法呢，是每个玩家存一条数据 id:[id1,id2,id3,id4,id5] 这样子，然后加载到内存，添加删除直接在内存中加锁操作，数据库就单线程顺序写。\n当玩家数量较小时，这两种方法都行。但如果玩家数量很大，单服十几万的话，哪种方法更好呀。或者有没有其他更好的方法呀。</p>",
    "hits": 367,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 329,
    "title": "beego 的自动匹配，方法怎么接受post请求呢",
    "created_at": "2016-11-04 21:31:41",
    "updated_at": "2021-01-20 02:22:15",
    "replied_at": "2016-11-04 23:40:16",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1270,
    "user": "{\"id\": 1270, \"name\": \"wuxiaobo2014\", \"login\": \"wuxiaobo2014\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 347,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 330,
    "title": "win下 golang如何调用Dll?参数转换一直是个难题啊",
    "created_at": "2016-11-05 00:26:48",
    "updated_at": "2016-11-07 11:20:22",
    "replied_at": "2016-11-07 11:20:22",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 3,
    "last_reply_user_login": "傅小黑",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "rt\n\n不会c++的表示有点困难\n\n===================================\n出个简单的题吧,\n\n\ndll中函数 abc(a string,b int ) (&lt;--举个例子..)\n\n如何go中调用?",
    "body_html": "<p>rt</p>\n\n<p>不会 c++ 的表示有点困难</p>\n\n<p>===================================\n出个简单的题吧,</p>\n\n<p>dll 中函数 abc(a string,b int ) (&lt;--举个例子..)</p>\n\n<p>如何 go 中调用?</p>",
    "hits": 530,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 331,
    "title": "golang 能调用c# 库吗",
    "created_at": "2016-11-05 16:00:50",
    "updated_at": "2016-11-06 15:40:25",
    "replied_at": "2016-11-06 15:40:25",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 960,
    "last_reply_user_login": "tupunco",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1243,
    "user": "{\"id\": 1243, \"name\": \"William\", \"login\": \"William\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 427,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 332,
    "title": "golang编辑器选择问题",
    "created_at": "2016-11-05 17:00:10",
    "updated_at": "2016-11-12 12:20:14",
    "replied_at": "2016-11-12 12:20:14",
    "replies_count": 9,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1309,
    "last_reply_user_login": "emacsist",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1113,
    "user": "{\"id\": 1113, \"name\": \"dawn\", \"login\": \"dawn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "现在我是用的phpstorm+go插件的形式编写go代码，但是经常弄混，想换个编辑器专门写go。\n\n想了解下用sublime+go插件 或者 atom+go插件。跳转看代码方便吗？比如要看标准库的代码 或者 go get到gopath的代码能直接跳过去吗？还有就是代码的提示。如果体验不如idea+go插件。那就不换了。",
    "body_html": "<p>现在我是用的 phpstorm+go 插件的形式编写 go 代码，但是经常弄混，想换个编辑器专门写 go。</p>\n\n<p>想了解下用 sublime+go 插件 或者 atom+go 插件。跳转看代码方便吗？比如要看标准库的代码 或者 go get 到 gopath 的代码能直接跳过去吗？还有就是代码的提示。如果体验不如 idea+go 插件。那就不换了。</p>",
    "hits": 734,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 333,
    "title": "有什么好的包？能很方便对数组及切片进行交集合集等计算",
    "created_at": "2016-11-06 22:14:59",
    "updated_at": "2016-11-08 00:31:08",
    "replied_at": "2016-11-08 00:31:08",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 846,
    "last_reply_user_login": "andy",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 846,
    "user": "{\"id\": 846, \"name\": \"andy\", \"login\": \"andy\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "包括字符型数组，int型数组等。发现自己写，浪费时间。",
    "body_html": "<p>包括字符型数组，int 型数组等。发现自己写，浪费时间。</p>",
    "hits": 292,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 334,
    "title": "关于 API 合并的问题",
    "created_at": "2016-11-07 09:29:14",
    "updated_at": "2016-11-09 13:52:24",
    "replied_at": "2016-11-09 13:52:24",
    "replies_count": 8,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1130,
    "last_reply_user_login": "zhangxu",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1055,
    "user": "{\"id\": 1055, \"name\": \"hlj2722\", \"login\": \"hlj2722\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如何设计让客户端发出一个API请求后，在服务端分解成多个API并请求数据，然后返回合并的结果数据",
    "body_html": "<p>如何设计让客户端发出一个 API 请求后，在服务端分解成多个 API 并请求数据，然后返回合并的结果数据</p>",
    "hits": 567,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 335,
    "title": "Redis 模块开发的 Hackerearth, 有没有人来玩玩",
    "created_at": "2016-11-07 09:44:19",
    "updated_at": "2016-11-07 10:01:41",
    "replied_at": "2016-11-07 10:01:41",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 900,
    "last_reply_user_login": "wener",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 900,
    "user": "{\"id\": 900, \"name\": \"wener\", \"login\": \"wener\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Redis 模块开发的 Hackerearth, 有没有人来玩玩.\n\nhttps://www.hackerearth.com/sprints/redislabs-hackathon-global \n\n奖金很丰厚哦,我的队名是 Wener, 想要开发的功能为 https://github.com/wenerme/go-rm/issues/2 开发语言为 Golang\n\n\n[![](https://d320jcjashajb2.cloudfront.net/media/uploads/8fc555b.jpg)](https://www.hackerearth.com/sprints/redislabs-hackathon-global)",
    "body_html": "<p>Redis 模块开发的 Hackerearth, 有没有人来玩玩.</p>\n\n<p><a href=\"https://www.hackerearth.com/sprints/redislabs-hackathon-global\" rel=\"nofollow\" target=\"_blank\">https://www.hackerearth.com/sprints/redislabs-hackathon-global</a> </p>\n\n<p>奖金很丰厚哦,我的队名是 Wener, 想要开发的功能为 <a href=\"https://github.com/wenerme/go-rm/issues/2\" rel=\"nofollow\" target=\"_blank\">https://github.com/wenerme/go-rm/issues/2</a> 开发语言为 Golang</p>\n\n<p><a href=\"https://www.hackerearth.com/sprints/redislabs-hackathon-global\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"https://d320jcjashajb2.cloudfront.net/media/uploads/8fc555b.jpg\" title=\"\" alt=\"\"></a></p>",
    "hits": 299,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 336,
    "title": "网站动态模块的设计思路能介绍一下吗？",
    "created_at": "2016-11-07 10:03:37",
    "updated_at": "2016-11-07 23:35:32",
    "replied_at": "2016-11-07 23:35:32",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 249,
    "user": "{\"id\": 249, \"name\": \"nanjishidu\", \"login\": \"nanjishidu\", \"avatar\": \"https://gocn.vip/system/letter_avatars/n.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 241,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 337,
    "title": "Interface的方法的参数需要名称吗",
    "created_at": "2016-11-07 10:54:53",
    "updated_at": "2016-11-07 12:05:01",
    "replied_at": "2016-11-07 12:05:01",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 845,
    "last_reply_user_login": "voidint",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1274,
    "user": "{\"id\": 1274, \"name\": \"Gem\", \"login\": \"Gem\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\ntype Store interface {\n\tGet(ctx *fasthttp.RequestCtx, name string) (*Session, error)\n\n\tNew(ctx *fasthttp.RequestCtx, name string) (*Session, error)\n\n\tSave(*fasthttp.RequestCtx, *Session) error\n}\n```\n\n如上面所示，Get和New的参数有名称，Save的没有，我想知道有什么区别吗？\n\n注：纯属好奇。。。",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">Store</span> <span class=\"k\">interface</span> <span class=\"p\">{</span>\n    <span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"n\">ctx</span> <span class=\"o\">*</span><span class=\"n\">fasthttp</span><span class=\"o\">.</span><span class=\"n\">RequestCtx</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Session</span><span class=\"p\">,</span> <span class=\"kt\">error</span><span class=\"p\">)</span>\n\n    <span class=\"n\">New</span><span class=\"p\">(</span><span class=\"n\">ctx</span> <span class=\"o\">*</span><span class=\"n\">fasthttp</span><span class=\"o\">.</span><span class=\"n\">RequestCtx</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Session</span><span class=\"p\">,</span> <span class=\"kt\">error</span><span class=\"p\">)</span>\n\n    <span class=\"n\">Save</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">fasthttp</span><span class=\"o\">.</span><span class=\"n\">RequestCtx</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">Session</span><span class=\"p\">)</span> <span class=\"kt\">error</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>如上面所示，Get 和 New 的参数有名称，Save 的没有，我想知道有什么区别吗？</p>\n\n<p>注：纯属好奇。。。</p>",
    "hits": 306,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 338,
    "title": "高性能go专题讨论",
    "created_at": "2016-11-07 10:56:54",
    "updated_at": "2016-11-07 23:34:45",
    "replied_at": "2016-11-07 23:34:45",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "写磁盘,内存等等.\n说说各种实际经验\n\n==================\n[实测]\n我先来一发\n0.路径对磁盘操作有一定影响,记得不同路径可以相差到0.1秒(记忆中相差最大的).\n我的经验是,尽量在同目录下.\n也听说,给fullpath会快.\n\n\n\n\n===============================\n[猜测]\n如果进程用完能马上release和kill掉,说不定总体资源占用会少点,以提高性能.",
    "body_html": "<p>写磁盘,内存等等.\n说说各种实际经验</p>\n\n<p>==================\n[实测]\n我先来一发\n0.路径对磁盘操作有一定影响,记得不同路径可以相差到 0.1 秒 (记忆中相差最大的).\n我的经验是,尽量在同目录下.\n也听说,给 fullpath 会快.</p>\n\n<p>===============================\n[猜测]\n如果进程用完能马上 release 和 kill 掉,说不定总体资源占用会少点,以提高性能.</p>",
    "hits": 334,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 339,
    "title": "beego1.8版本功能征集",
    "created_at": "2016-11-07 14:41:25",
    "updated_at": "2021-01-20 03:04:04",
    "replied_at": "2017-03-22 17:58:30",
    "replies_count": 26,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1063,
    "last_reply_user_login": "lkhjlbh",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "beego经过了很长一段时间的开发，功能也已经越来越强大，特性和性能都已经相对稳定。接下来我们还是希望有进一步的拓展。我主要考虑的是这几个方面，欢迎大家都提出自己想要的特性。\n\n1. ORM的进一步完善，目前主要是增加一些特性的支持，例如联合主键\n2. bee支持直接从swagger.json生成API代码\n3. grpc支持模块化，我可能会同时支持grpc和hprose两个RPC框架，这样就可以开发出来一个模块平台，让这些模块可以给大家复用\n4. sqlbuild的进一步加强，ORM里面实际上已经带有SQL自动化代码，之前没有很好的完善好。\n5. beego.me的新官网讲采用pugo(傅小黑开发的工具)来自动化生产静态站点，beego的全部文档将全部重写。\n\n作为beego的社区一份子，希望大家给我提出一些建议",
    "body_html": "<p>beego 经过了很长一段时间的开发，功能也已经越来越强大，特性和性能都已经相对稳定。接下来我们还是希望有进一步的拓展。我主要考虑的是这几个方面，欢迎大家都提出自己想要的特性。</p>\n\n<ol>\n<li>ORM 的进一步完善，目前主要是增加一些特性的支持，例如联合主键</li>\n<li>bee 支持直接从 swagger.json 生成 API 代码</li>\n<li>grpc 支持模块化，我可能会同时支持 grpc 和 hprose 两个 RPC 框架，这样就可以开发出来一个模块平台，让这些模块可以给大家复用</li>\n<li>sqlbuild 的进一步加强，ORM 里面实际上已经带有 SQL 自动化代码，之前没有很好的完善好。</li>\n<li>beego.me 的新官网讲采用 pugo(傅小黑开发的工具) 来自动化生产静态站点，beego 的全部文档将全部重写。</li>\n</ol>\n\n<p>作为 beego 的社区一份子，希望大家给我提出一些建议</p>",
    "hits": 761,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 340,
    "title": "有哪些性价比比较高的主机可以允许golang",
    "created_at": "2016-11-07 15:22:16",
    "updated_at": "2016-11-08 17:54:37",
    "replied_at": "2016-11-08 17:54:37",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 238,
    "last_reply_user_login": "kevin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1025,
    "user": "{\"id\": 1025, \"name\": \"cosysin\", \"login\": \"cosysin\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题，想自己撘一个golang的网站，但是目前木有支持golang的主机，求。\n\n\n谢谢！",
    "body_html": "<p>如题，想自己撘一个 golang 的网站，但是目前木有支持 golang 的主机，求。</p>\n\n<p>谢谢！</p>",
    "hits": 449,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 341,
    "title": "beego orm 关系查询 如何直接获取&quot;外键&quot;的值",
    "created_at": "2016-11-07 17:03:12",
    "updated_at": "2021-01-20 02:22:18",
    "replied_at": "2016-11-08 10:32:13",
    "replies_count": 4,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1259,
    "last_reply_user_login": "gloomyzerg",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1259,
    "user": "{\"id\": 1259, \"name\": \"gloomyzerg\", \"login\": \"gloomyzerg\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "数据库结构如下\n```\nCREATE TABLE `customer` (\n  `id` int(11) ,\n  ...\n  `data_id` int(11) ,\n  PRIMARY KEY (`id`),\n)\n\nCREATE TABLE `customer_data` (\n  `id` int(11) ,\n  `customer_id`,\n  ...\n  PRIMARY KEY (`id`)\n) \n```\n\n```\ntype Customer struct {\n\tId               int                  `orm:&quot;column(id);auto&quot;`\n\tCustomerData     *CustomerData `orm:&quot;column(data_id);rel(one)&quot;`\n}\n\ntype CustomerData struct {\n\tId           int              `orm:&quot;column(id);auto&quot;`\n\tCustomerId   uint             `orm:&quot;column(customer_id)&quot;`\n\tCustomer     *Customer `orm:&quot;reverse(one)&quot;`\n}\n```\n\n此时如果我想但单独查询 Customer表 如下\n\n```\n\tuser := &amp;models.Customer{Id: 232233}\n\to.Read(user)\n```\n此时user.CustomerData 为 type CustomerData的实例\n我怎么直接获取data_id 比如 user.DataId (目前的办法是 user.CustomerData.Id)\n但如果我定义struct\n```\ntype Customer struct {\n\tId               int                  `orm:&quot;column(id);auto&quot;`\n\tDataId           uint                 `orm:&quot;column(data_id)&quot;`\n\tCustomerData     *CustomerData `orm:&quot;column(data_id);rel(one)&quot;`\n}\n```\n会报field: models.Customer.CustomerData, duplicate column name: data_id\n也就是不能重复定义字段名 \n\n\n如果我再单独定义一个struct\n```\ntype CustomerOriginal struct {\n\tId               int                  `orm:&quot;column(id);auto&quot;`\n\tCustomerData     uint                 `orm:&quot;column(data_id)&quot;`\n}\nfunc (t *CustomerOriginal) TableName() string {\n\treturn &quot;customer&quot;\n}\n```\n会返回 &lt;orm.RegisterModel&gt; table name `customer` repeat register, must be unique 错误,这样我只能为customer注册一个 struct\n\n\n有没有一种简便的方法直接通过 user.DataId 获取数据库中的值?\n",
    "body_html": "<p>数据库结构如下</p>\n <pre class=\"highlight plaintext\"><code>CREATE TABLE `customer` (\n  `id` int(11) ,\n  ...\n  `data_id` int(11) ,\n  PRIMARY KEY (`id`),\n)\n\nCREATE TABLE `customer_data` (\n  `id` int(11) ,\n  `customer_id`,\n  ...\n  PRIMARY KEY (`id`)\n) \n</code></pre>  <pre class=\"highlight plaintext\"><code>type Customer struct {\n    Id               int                  `orm:&amp;quot;column(id);auto&amp;quot;`\n    CustomerData     *CustomerData `orm:&amp;quot;column(data_id);rel(one)&amp;quot;`\n}\n\ntype CustomerData struct {\n    Id           int              `orm:&amp;quot;column(id);auto&amp;quot;`\n    CustomerId   uint             `orm:&amp;quot;column(customer_id)&amp;quot;`\n    Customer     *Customer `orm:&amp;quot;reverse(one)&amp;quot;`\n}\n</code></pre> \n<p>此时如果我想但单独查询 Customer 表 如下</p>\n <pre class=\"highlight plaintext\"><code>user := &amp;amp;models.Customer{Id: 232233}\no.Read(user)\n</code></pre> \n<p>此时 user.CustomerData 为 type CustomerData 的实例\n我怎么直接获取 data_id 比如 user.DataId (目前的办法是 user.CustomerData.Id)\n但如果我定义 struct</p>\n <pre class=\"highlight plaintext\"><code>type Customer struct {\n    Id               int                  `orm:&amp;quot;column(id);auto&amp;quot;`\n    DataId           uint                 `orm:&amp;quot;column(data_id)&amp;quot;`\n    CustomerData     *CustomerData `orm:&amp;quot;column(data_id);rel(one)&amp;quot;`\n}\n</code></pre> \n<p>会报 field: models.Customer.CustomerData, duplicate column name: data_id\n也就是不能重复定义字段名 </p>\n\n<p>如果我再单独定义一个 struct</p>\n <pre class=\"highlight plaintext\"><code>type CustomerOriginal struct {\n    Id               int                  `orm:&amp;quot;column(id);auto&amp;quot;`\n    CustomerData     uint                 `orm:&amp;quot;column(data_id)&amp;quot;`\n}\nfunc (t *CustomerOriginal) TableName() string {\n    return &amp;quot;customer&amp;quot;\n}\n</code></pre> \n<p>会返回 &lt;orm.RegisterModel&gt; table name <code>customer</code> repeat register, must be unique 错误,这样我只能为 customer 注册一个 struct</p>\n\n<p>有没有一种简便的方法直接通过 user.DataId 获取数据库中的值?</p>",
    "hits": 658,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 342,
    "title": "实现了一个定时器，但是只能在当天凌晨运行一次，第二天凌晨运行失效，怎么回事呢？",
    "created_at": "2016-11-08 00:42:41",
    "updated_at": "2016-11-09 14:30:57",
    "replied_at": "2016-11-09 14:30:57",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1292,
    "last_reply_user_login": "newer",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 261,
    "user": "{\"id\": 261, \"name\": \"hacpai\", \"login\": \"hacpai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "需求是实现一个定时任务，在每天凌晨执行某个任务。现在的实现如下，在运行过程中，发现当天的凌晨确实执行了任务，但是第二天就失效。\n\n```go\ntype notifyTicker struct {\n\tT *time.Timer\n}\n\nfunc iniMonitor() {\n\tjt := NewMonitorTicker()\n\tfor {\n\t\t&lt;-jt.T.C\n\t\tbeego.Warn(&quot;Is timer active?&quot;, jt.UpdateJobTicker())\n\t}\n}\n\nfunc getNextTickDuration() time.Duration {\n\tnow := time.Now()\n\tnextTick := time.Date(now.Year(), now.Month(), now.Day(),\n\t\tutil.Config.NotifyByEmail.HourToTick, util.Config.NotifyByEmail.MinuteToTick, util.Config.NotifyByEmail.SecondToTick,\n\t\t0, time.Local)\n\tif nextTick.Before(now) {\n\t\tnextTick = nextTick.Add(time.Duration(util.Config.NotifyByEmail.IntervalPeriodHour) * time.Hour)\n\t}\n\tbeego.Warn(&quot;The next tick is&quot;, nextTick)\n\treturn nextTick.Sub(time.Now())\n}\n\nfunc NewEcsExsitTicker() *notifyTicker {\n\tbeego.Warn(&quot;new tick to monitor ecs before dawn&quot;)\n\treturn &amp;notifyTicker{time.NewTimer(getNextTickDuration())}\n}\n\nfunc (jt *notifyTicker) UpdateJobTicker() bool {\n\tips, err := jt.getAllRunningPostPaidEcsInDB()\n\tbeego.Warn(ips)\n\tif err != nil {\n\t\treturn false\n\t}\n\tisActive := jt.T.Reset(getNextTickDuration())\n\treturn isActive\n}\n```",
    "body_html": "<p>需求是实现一个定时任务，在每天凌晨执行某个任务。现在的实现如下，在运行过程中，发现当天的凌晨确实执行了任务，但是第二天就失效。</p>\n <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">notifyTicker</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">T</span> <span class=\"o\">*</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Timer</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">iniMonitor</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">jt</span> <span class=\"o\">:=</span> <span class=\"n\">NewMonitorTicker</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"p\">{</span>\n        <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">jt</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">C</span>\n        <span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">Warn</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Is</span> <span class=\"n\">timer</span> <span class=\"n\">active</span><span class=\"err\">?</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">jt</span><span class=\"o\">.</span><span class=\"n\">UpdateJobTicker</span><span class=\"p\">())</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">getNextTickDuration</span><span class=\"p\">()</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Duration</span> <span class=\"p\">{</span>\n    <span class=\"n\">now</span> <span class=\"o\">:=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Now</span><span class=\"p\">()</span>\n    <span class=\"n\">nextTick</span> <span class=\"o\">:=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Date</span><span class=\"p\">(</span><span class=\"n\">now</span><span class=\"o\">.</span><span class=\"n\">Year</span><span class=\"p\">(),</span> <span class=\"n\">now</span><span class=\"o\">.</span><span class=\"n\">Month</span><span class=\"p\">(),</span> <span class=\"n\">now</span><span class=\"o\">.</span><span class=\"n\">Day</span><span class=\"p\">(),</span>\n        <span class=\"n\">util</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"o\">.</span><span class=\"n\">NotifyByEmail</span><span class=\"o\">.</span><span class=\"n\">HourToTick</span><span class=\"p\">,</span> <span class=\"n\">util</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"o\">.</span><span class=\"n\">NotifyByEmail</span><span class=\"o\">.</span><span class=\"n\">MinuteToTick</span><span class=\"p\">,</span> <span class=\"n\">util</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"o\">.</span><span class=\"n\">NotifyByEmail</span><span class=\"o\">.</span><span class=\"n\">SecondToTick</span><span class=\"p\">,</span>\n        <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Local</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">nextTick</span><span class=\"o\">.</span><span class=\"n\">Before</span><span class=\"p\">(</span><span class=\"n\">now</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">nextTick</span> <span class=\"o\">=</span> <span class=\"n\">nextTick</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Duration</span><span class=\"p\">(</span><span class=\"n\">util</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"o\">.</span><span class=\"n\">NotifyByEmail</span><span class=\"o\">.</span><span class=\"n\">IntervalPeriodHour</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Hour</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">Warn</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">The</span> <span class=\"n\">next</span> <span class=\"n\">tick</span> <span class=\"n\">is</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">nextTick</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">nextTick</span><span class=\"o\">.</span><span class=\"n\">Sub</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Now</span><span class=\"p\">())</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">NewEcsExsitTicker</span><span class=\"p\">()</span> <span class=\"o\">*</span><span class=\"n\">notifyTicker</span> <span class=\"p\">{</span>\n    <span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">Warn</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"nb\">new</span> <span class=\"n\">tick</span> <span class=\"n\">to</span> <span class=\"n\">monitor</span> <span class=\"n\">ecs</span> <span class=\"n\">before</span> <span class=\"n\">dawn</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"k\">return</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">notifyTicker</span><span class=\"p\">{</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">NewTimer</span><span class=\"p\">(</span><span class=\"n\">getNextTickDuration</span><span class=\"p\">())}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">jt</span> <span class=\"o\">*</span><span class=\"n\">notifyTicker</span><span class=\"p\">)</span> <span class=\"n\">UpdateJobTicker</span><span class=\"p\">()</span> <span class=\"kt\">bool</span> <span class=\"p\">{</span>\n    <span class=\"n\">ips</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">jt</span><span class=\"o\">.</span><span class=\"n\">getAllRunningPostPaidEcsInDB</span><span class=\"p\">()</span>\n    <span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">Warn</span><span class=\"p\">(</span><span class=\"n\">ips</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"no\">false</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">isActive</span> <span class=\"o\">:=</span> <span class=\"n\">jt</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">Reset</span><span class=\"p\">(</span><span class=\"n\">getNextTickDuration</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"n\">isActive</span>\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 479,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 343,
    "title": "go vendor 求助",
    "created_at": "2016-11-08 01:31:09",
    "updated_at": "2016-11-08 08:58:15",
    "replied_at": "2016-11-08 08:58:15",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 646,
    "last_reply_user_login": "deepzz",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1281,
    "user": "{\"id\": 1281, \"name\": \"Gg\", \"login\": \"Gg\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GOPATH=&quot;/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/User/xx/svr&quot;\nGO15VENDOREXPERIMENT=&quot;1&quot;\n然而在gopath的目录下执行govendor init 一直command not found: govendor\n已经go get -u github.com/kardianos/govendor ",
    "body_html": "<p>GOPATH=\"/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/User/xx/svr\"\nGO15VENDOREXPERIMENT=\"1\"\n然而在 gopath 的目录下执行 govendor init 一直 command not found: govendor\n已经 go get -u github.com/kardianos/govendor </p>",
    "hits": 318,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 344,
    "title": "[问题]goIDE技巧:go run的进程如何快速删掉?sublime怎么直接获得文件名每次build手打很累",
    "created_at": "2016-11-08 02:05:42",
    "updated_at": "2016-11-08 12:00:02",
    "replied_at": "2016-11-08 12:00:02",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 193,
    "last_reply_user_login": "philosophia14",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "sublimetext下每次手打文件名不是很累么..\n短的还好说,长的吃不消\n\n\n还有一个问题,\ngo build,能指定exe保存的目录么?\n默认是文件同目录,想临时更改一下!!!!!",
    "body_html": "<p>sublimetext 下每次手打文件名不是很累么..\n短的还好说,长的吃不消</p>\n\n<p>还有一个问题,\ngo build,能指定 exe 保存的目录么?\n默认是文件同目录,想临时更改一下!!!!!</p>",
    "hits": 297,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 345,
    "title": "TIOBE 11月编程语言排行榜：Go排13了",
    "created_at": "2016-11-08 10:04:55",
    "updated_at": "2016-12-02 16:02:16",
    "replied_at": "2016-12-02 16:02:16",
    "replies_count": 20,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1379,
    "last_reply_user_login": "bfcaicai",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "![](https://static.oschina.net/uploads/space/2016/1108/071654_Ksqr_2903254.png)\n\n",
    "body_html": "<p><img src=\"https://static.oschina.net/uploads/space/2016/1108/071654_Ksqr_2903254.png\" title=\"\" alt=\"\"></p>",
    "hits": 656,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 346,
    "title": "Go自动化生成test case",
    "created_at": "2016-11-08 10:26:35",
    "updated_at": "2016-11-11 11:14:32",
    "replied_at": "2016-11-11 11:14:32",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 196,
    "last_reply_user_login": "andylau004",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "你想过选择代码，然后右键点击生产测试用例这样的场景吗？现场这个实现来了。\n\n选中代码，然后生成table-driver的test case。好酷\n\n![](https://github.com/cweill/GoTests-Sublime/raw/master/gotests.gif?raw=true)\n\nhttps://github.com/cweill/gotests",
    "body_html": "<p>你想过选择代码，然后右键点击生产测试用例这样的场景吗？现场这个实现来了。</p>\n\n<p>选中代码，然后生成 table-driver 的 test case。好酷</p>\n\n<p><img src=\"https://github.com/cweill/GoTests-Sublime/raw/master/gotests.gif?raw=true\" title=\"\" alt=\"\"></p>\n\n<p><a href=\"https://github.com/cweill/gotests\" rel=\"nofollow\" target=\"_blank\">https://github.com/cweill/gotests</a></p>",
    "hits": 477,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 347,
    "title": "Go发布至今发现的安全漏洞 5 个",
    "created_at": "2016-11-08 15:46:42",
    "updated_at": "2016-11-08 15:46:42",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Go 在安全性方面做得很不错的，至今为止发现的5个安全 bug 基本上和我们平常用的场景没啥影响。当然 Go Team 把安全放在第一位的，只有爆出来安全漏洞就会里面发布版本。\n\nhttps://www.cvedetails.com/vendor/14185/Golang.html",
    "body_html": "<p>Go 在安全性方面做得很不错的，至今为止发现的 5 个安全 bug 基本上和我们平常用的场景没啥影响。当然 Go Team 把安全放在第一位的，只有爆出来安全漏洞就会里面发布版本。</p>\n\n<p><a href=\"https://www.cvedetails.com/vendor/14185/Golang.html\" rel=\"nofollow\" target=\"_blank\">https://www.cvedetails.com/vendor/14185/Golang.html</a></p>",
    "hits": 349,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 348,
    "title": "golang有什么好的纯web路由框架推荐吗？",
    "created_at": "2016-11-08 16:40:20",
    "updated_at": "2017-11-09 21:37:18",
    "replied_at": "2017-11-09 21:37:18",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 155,
    "last_reply_user_login": "ego008",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1286,
    "user": "{\"id\": 1286, \"name\": \"Jacksoncy\", \"login\": \"Jacksoncy\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "RT ",
    "body_html": "<p>RT </p>",
    "hits": 546,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 349,
    "title": "cgo-golang和c的无缝连接",
    "created_at": "2016-11-08 17:37:25",
    "updated_at": "2016-11-08 17:37:25",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 222,
    "user": "{\"id\": 222, \"name\": \"themoonstone\", \"login\": \"themoonstone\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "cgo也是一个Go语言自带的特殊工具。一般情况下，我们使用命令go tool cgo来运行它。这个工具可以使我们创建能够调用C语言代码的Go语言源码文件。这使得我们可以使用Go语言代码去封装一些C语言的代码库，并提供给Go语言代码或项目使用。使用比较简单、而且在golang中的用法也很方便、因为涉及到具体的操作和内容比较多、有兴趣的同学可以直接看一下原始资料\n原文链接：http://wiki.jikexueyuan.com/project/go-command-tutorial/0.13.html",
    "body_html": "<p>cgo 也是一个 Go 语言自带的特殊工具。一般情况下，我们使用命令 go tool cgo 来运行它。这个工具可以使我们创建能够调用 C 语言代码的 Go 语言源码文件。这使得我们可以使用 Go 语言代码去封装一些 C 语言的代码库，并提供给 Go 语言代码或项目使用。使用比较简单、而且在 golang 中的用法也很方便、因为涉及到具体的操作和内容比较多、有兴趣的同学可以直接看一下原始资料\n原文链接：<a href=\"http://wiki.jikexueyuan.com/project/go-command-tutorial/0.13.html\" rel=\"nofollow\" target=\"_blank\">http://wiki.jikexueyuan.com/project/go-command-tutorial/0.13.html</a></p>",
    "hits": 381,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 350,
    "title": "请大神帮忙写个详细的vscode配置，跪谢",
    "created_at": "2016-11-08 17:57:03",
    "updated_at": "2016-11-09 09:43:40",
    "replied_at": "2016-11-09 09:43:40",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 234,
    "last_reply_user_login": "sryan",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1265,
    "user": "{\"id\": 1265, \"name\": \"KCrazy\", \"login\": \"KCrazy\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 349,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 351,
    "title": "请教一下，关于golang常量底层是如何存储的？",
    "created_at": "2016-11-08 18:28:41",
    "updated_at": "2016-11-12 23:30:20",
    "replied_at": "2016-11-12 23:30:20",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 3,
    "last_reply_user_login": "傅小黑",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1013,
    "user": "{\"id\": 1013, \"name\": \"lcp0578\", \"login\": \"lcp0578\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "今早，在看书，提到了查看变量的地址，想到了常量是如何存储的，为什么不能查看其对应的地址，雨痕大神说，\n&gt; 常量在预编译阶段直接展开，作为指令数据使用。\n\n这块的展开，具体的意思是什么？ const TEN int = 10, 转成二进制吗？\n那其他的常量如何处理？比如，字符串常量如何处理的？\n望不吝赐教，=_=",
    "body_html": "<p>今早，在看书，提到了查看变量的地址，想到了常量是如何存储的，为什么不能查看其对应的地址，雨痕大神说，\n&gt; 常量在预编译阶段直接展开，作为指令数据使用。</p>\n\n<p>这块的展开，具体的意思是什么？ const TEN int = 10, 转成二进制吗？\n那其他的常量如何处理？比如，字符串常量如何处理的？\n望不吝赐教，=_=</p>",
    "hits": 384,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 352,
    "title": "go time.Month()之类的,有直接出来两位的办法么?.比如,08 ",
    "created_at": "2016-11-08 22:29:29",
    "updated_at": "2016-11-11 10:50:46",
    "replied_at": "2016-11-11 10:49:09",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1300,
    "last_reply_user_login": "RedMothball",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "time.Month()转换time中的月份,出来是int,是一位的\n不太适合用来继续拼接新的时间,比如2016-08-01\n\n文档中好像没有直接的办法,有什么简单的办法可以输出2位么\n\n\ndayInt:=time.Now().Day() //输出 1,2,3.......9之类的\n\n======================================================\n每次写一遍下面这种,是不是太蛋疼了...\n\nif day&lt;10\n{ \ndayStr := strconv.Itoa(dayInt)\ndayFormatedStr=&quot;0&quot;+dayStr\n\n}\n=======================\n希望有简单的办法,解决输出time类型的数据,为双位数的简单办法\n\n\n\n",
    "body_html": "<p>time.Month() 转换 time 中的月份,出来是 int,是一位的\n不太适合用来继续拼接新的时间,比如 2016-08-01</p>\n\n<p>文档中好像没有直接的办法,有什么简单的办法可以输出 2 位么</p>\n\n<p>dayInt:=time.Now().Day() //输出 1,2,3.......9 之类的</p>\n\n<p>======================================================\n每次写一遍下面这种,是不是太蛋疼了...</p>\n\n<p>if day&lt;10\n{ \ndayStr := strconv.Itoa(dayInt)\ndayFormatedStr=\"0\"+dayStr</p>\n<h2 id=\"}\">}</h2>\n<p>希望有简单的办法,解决输出 time 类型的数据,为双位数的简单办法</p>",
    "hits": 496,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 353,
    "title": "a,b = b,a为什么这样就可以交换变量的值",
    "created_at": "2016-11-09 09:34:11",
    "updated_at": "2016-11-09 12:13:54",
    "replied_at": "2016-11-09 12:13:54",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 96,
    "last_reply_user_login": "sheepbao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 423,
    "user": "{\"id\": 423, \"name\": \"chenqinghe\", \"login\": \"chenqinghe\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "刚开始看到有人这么写，并且自己试了下发现果然可以的时候我是震惊的，为什么可以这么做？难道赋值表达式右边的值是会另外存储或者计算的吗？求解答",
    "body_html": "<p>刚开始看到有人这么写，并且自己试了下发现果然可以的时候我是震惊的，为什么可以这么做？难道赋值表达式右边的值是会另外存储或者计算的吗？求解答</p>",
    "hits": 478,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 354,
    "title": "beego 能不能在LayoutContent中判断LayoutSections是否设置",
    "created_at": "2016-11-09 11:27:40",
    "updated_at": "2021-01-20 02:22:20",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1259,
    "user": "{\"id\": 1259, \"name\": \"gloomyzerg\", \"login\": \"gloomyzerg\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "模版\n```html\n&lt;?.SideBar?&gt;\n&lt;?.LayoutContent?&gt;\n```\n\n在LayoutContent的模版中获取 \n```go\n&lt;?.SideBar?&gt;\n```\n的值为空\n\n后查看源码发现 c.Data[sectionName] 是在LayoutContent的模版渲染之后才设置\n\n有没有一种办法可以在LayoutContent判断有没有设置某个LayoutSections\n\n\n```go\nfunc (c *Controller) RenderBytes() ([]byte, error) {\n\tbuf, err := c.renderTemplate()\n\t//if the controller has set layout, then first get the tplName's content set the content to the layout\n\tif err == nil &amp;&amp; c.Layout != &quot;&quot; {\n\t\tc.Data[&quot;LayoutContent&quot;] = template.HTML(buf.String())\n\n\t\tif c.LayoutSections != nil {\n\t\t\tfor sectionName, sectionTpl := range c.LayoutSections {\n\t\t\t\tif sectionTpl == &quot;&quot; {\n\t\t\t\t\tc.Data[sectionName] = &quot;&quot;\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tbuf.Reset()\n\t\t\t\terr = ExecuteTemplate(&amp;buf, sectionTpl, c.Data)\n\t\t\t\tif err != nil {\n\t\t\t\t\treturn nil, err\n\t\t\t\t}\n\t\t\t\tc.Data[sectionName] = template.HTML(buf.String())\n\t\t\t}\n\t\t}\n\n\t\tbuf.Reset()\n\t\tExecuteTemplate(&amp;buf, c.Layout, c.Data)\n\t}\n\treturn buf.Bytes(), err\n}\n```\n",
    "body_html": "<p>模版</p>\n <pre class=\"highlight html\"><code><span class=\"ni\">&amp;lt;</span>?.SideBar?<span class=\"ni\">&amp;gt;</span>\n<span class=\"ni\">&amp;lt;</span>?.LayoutContent?<span class=\"ni\">&amp;gt;</span>\n</code></pre> \n<p>在 LayoutContent 的模版中获取 </p>\n <pre class=\"highlight go\"><code><span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"err\">?</span><span class=\"o\">.</span><span class=\"n\">SideBar</span><span class=\"err\">?</span><span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span>\n</code></pre> \n<p>的值为空</p>\n\n<p>后查看源码发现 c.Data[sectionName] 是在 LayoutContent 的模版渲染之后才设置</p>\n\n<p>有没有一种办法可以在 LayoutContent 判断有没有设置某个 LayoutSections</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"o\">*</span><span class=\"n\">Controller</span><span class=\"p\">)</span> <span class=\"n\">RenderBytes</span><span class=\"p\">()</span> <span class=\"p\">([]</span><span class=\"kt\">byte</span><span class=\"p\">,</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">buf</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">renderTemplate</span><span class=\"p\">()</span>\n    <span class=\"c\">//if the controller has set layout, then first get the tplName's content set the content to the layout</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Layout</span> <span class=\"o\">!=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">{</span>\n        <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Data</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">LayoutContent</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;]</span> <span class=\"o\">=</span> <span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">HTML</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">())</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">LayoutSections</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n            <span class=\"k\">for</span> <span class=\"n\">sectionName</span><span class=\"p\">,</span> <span class=\"n\">sectionTpl</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">LayoutSections</span> <span class=\"p\">{</span>\n                <span class=\"k\">if</span> <span class=\"n\">sectionTpl</span> <span class=\"o\">==</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">{</span>\n                    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Data</span><span class=\"p\">[</span><span class=\"n\">sectionName</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n                    <span class=\"k\">continue</span>\n                <span class=\"p\">}</span>\n                <span class=\"n\">buf</span><span class=\"o\">.</span><span class=\"n\">Reset</span><span class=\"p\">()</span>\n                <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">ExecuteTemplate</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">buf</span><span class=\"p\">,</span> <span class=\"n\">sectionTpl</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Data</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n                    <span class=\"k\">return</span> <span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"n\">err</span>\n                <span class=\"p\">}</span>\n                <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Data</span><span class=\"p\">[</span><span class=\"n\">sectionName</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">HTML</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">())</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"n\">buf</span><span class=\"o\">.</span><span class=\"n\">Reset</span><span class=\"p\">()</span>\n        <span class=\"n\">ExecuteTemplate</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">buf</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Layout</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Data</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">buf</span><span class=\"o\">.</span><span class=\"n\">Bytes</span><span class=\"p\">(),</span> <span class=\"n\">err</span>\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 475,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 355,
    "title": "go channel问题",
    "created_at": "2016-11-09 17:58:10",
    "updated_at": "2016-11-15 15:32:20",
    "replied_at": "2016-11-15 15:30:15",
    "replies_count": 8,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 549,
    "last_reply_user_login": "vr",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 414,
    "user": "{\"id\": 414, \"name\": \"ilmari\", \"login\": \"ilmari\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\npackage main\nimport (\n    &quot;fmt&quot;\n    &quot;time&quot;\n)\n\nfunc  printCount(c chan int){\n    num := 0\n    for num &gt;= 0{\n        num = &lt;-c\n        fmt.Print(num,&quot; &quot;)\n    }\n}\n\nfunc main(){\n    c := make(chan int)\n    a := []int{8,6,7,5,3,0,9,-1}\n\n    go printCount(c)\n    for _,v := range a{\n        c &lt;- v\n    }\n\n   time.Sleep(time.Millisecond * 1)\n   fmt.Println(&quot;End of main&quot;)\n}\n```\n\n上述代码输出8,6,7,5,3,0,9，-1 end of main    ，为什么-1会输出呀\n把time.Sleep()注释后就不会输出-1，这是为啥",
    "body_html": "<pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span>  <span class=\"n\">printCount</span><span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"k\">chan</span> <span class=\"kt\">int</span><span class=\"p\">){</span>\n    <span class=\"n\">num</span> <span class=\"o\">:=</span> <span class=\"m\">0</span>\n    <span class=\"k\">for</span> <span class=\"n\">num</span> <span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span><span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"p\">{</span>\n        <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">c</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">,</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">(){</span>\n    <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">int</span><span class=\"p\">)</span>\n    <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">{</span><span class=\"m\">8</span><span class=\"p\">,</span><span class=\"m\">6</span><span class=\"p\">,</span><span class=\"m\">7</span><span class=\"p\">,</span><span class=\"m\">5</span><span class=\"p\">,</span><span class=\"m\">3</span><span class=\"p\">,</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"m\">9</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"m\">1</span><span class=\"p\">}</span>\n\n    <span class=\"k\">go</span> <span class=\"n\">printCount</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span><span class=\"n\">v</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">a</span><span class=\"p\">{</span>\n        <span class=\"n\">c</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"n\">v</span>\n    <span class=\"p\">}</span>\n\n   <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Millisecond</span> <span class=\"o\">*</span> <span class=\"m\">1</span><span class=\"p\">)</span>\n   <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">End</span> <span class=\"n\">of</span> <span class=\"n\">main</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">}</span>\n</code></pre>\n<p>上述代码输出 8,6,7,5,3,0,9，-1 end of main ，为什么-1 会输出呀\n把 time.Sleep() 注释后就不会输出-1，这是为啥</p>",
    "hits": 564,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 356,
    "title": "文件上传时获取文件大小接口断言怎么理解?",
    "created_at": "2016-11-09 18:39:21",
    "updated_at": "2016-11-10 10:32:22",
    "replied_at": "2016-11-10 10:32:22",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 845,
    "last_reply_user_login": "voidint",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1292,
    "user": "{\"id\": 1292, \"name\": \"newer\", \"login\": \"newer\", \"avatar\": \"https://gocn.vip/system/letter_avatars/n.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```\n// 获取文件大小的接口  \ntype Size interface {  \n    Size() int64  \n}  \n  \n// 获取文件信息的接口  \ntype Stat interface {  \n    Stat() (os.FileInfo, error)  \n}  \nfile, _, err := r.FormFile(&quot;userfile&quot;)  \nif statInterface, ok := file.(Stat); ok {  \n\tfileInfo, _ := statInterface.Stat()  \n\tfmt.Fprintf(w, &quot;上传文件的大小为: %d&quot;, fileInfo.Size())  \n}  \nif sizeInterface, ok := file.(Size); ok {  \n\tfmt.Fprintf(w, &quot;上传文件的大小为: %d&quot;, sizeInterface.Size())  \n}  \n```\n以上代码为获取上传文件大小, 请哪位仁兄帮忙解释下为什么获取文件大小用```file.(Size)```来进行断言后就可以调用```Size()```方法能获取到了?非常感谢!",
    "body_html": " <pre class=\"highlight plaintext\"><code>// 获取文件大小的接口  \ntype Size interface {  \n    Size() int64  \n}  \n\n// 获取文件信息的接口  \ntype Stat interface {  \n    Stat() (os.FileInfo, error)  \n}  \nfile, _, err := r.FormFile(&amp;quot;userfile&amp;quot;)  \nif statInterface, ok := file.(Stat); ok {  \n    fileInfo, _ := statInterface.Stat()  \n    fmt.Fprintf(w, &amp;quot;上传文件的大小为: %d&amp;quot;, fileInfo.Size())  \n}  \nif sizeInterface, ok := file.(Size); ok {  \n    fmt.Fprintf(w, &amp;quot;上传文件的大小为: %d&amp;quot;, sizeInterface.Size())  \n}  \n</code></pre> \n<p>以上代码为获取上传文件大小, 请哪位仁兄帮忙解释下为什么获取文件大小用<code>file.(Size)</code>来进行断言后就可以调用<code>Size()</code>方法能获取到了?非常感谢!</p>",
    "hits": 339,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 357,
    "title": "beego post 用法",
    "created_at": "2016-11-09 21:24:54",
    "updated_at": "2021-01-16 19:10:12",
    "replied_at": "2016-11-10 17:26:56",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 449,
    "user": "{\"id\": 449, \"name\": \"sinuos\", \"login\": \"sinuos\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```\r\nfunc (c *MainController) Post() {\r\n\tbeego.Debug(&quot;hello guy&quot;)\r\n}\r\n```\r\n以上是代码，收到post请求后出现如下错误\r\n```\r\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] the request url is  /exchange\r\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] Handler crashed with error can't find templatefile in the path:maincontroll\r\ner/post.tpl\r\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /usr/local/go/src/runtime/asm_amd64.s:479\r\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /usr/local/go/src/runtime/panic.go:458\r\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /Users/tripp/golang/src/github.com/astaxie/beego/template.go:64\r\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /Users/tripp/golang/src/github.com/astaxie/beego/controller.go:249\r\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /Users/tripp/golang/src/github.com/astaxie/beego/controller.go:200\r\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /Users/tripp/golang/src/github.com/astaxie/beego/controller.go:184\r\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /Users/tripp/golang/src/github.com/astaxie/beego/router.go:801\r\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /usr/local/go/src/net/http/server.go:2202\r\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /usr/local/go/src/net/http/server.go:1579\r\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /usr/local/go/src/runtime/asm_amd64.s:2086\r\n```\r\n求助啊",
    "body_html": " <pre class=\"highlight plaintext\"><code>func (c *MainController) Post() {\n    beego.Debug(&amp;quot;hello guy&amp;quot;)\n}\n</code></pre> \n<p>以上是代码，收到 post 请求后出现如下错误</p>\n <pre class=\"highlight plaintext\"><code>2016/11/09 21:06:24 [C] [asm_amd64.s:479] the request url is  /exchange\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] Handler crashed with error can't find templatefile in the path:maincontroll\ner/post.tpl\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /usr/local/go/src/runtime/asm_amd64.s:479\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /usr/local/go/src/runtime/panic.go:458\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /Users/tripp/golang/src/github.com/astaxie/beego/template.go:64\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /Users/tripp/golang/src/github.com/astaxie/beego/controller.go:249\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /Users/tripp/golang/src/github.com/astaxie/beego/controller.go:200\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /Users/tripp/golang/src/github.com/astaxie/beego/controller.go:184\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /Users/tripp/golang/src/github.com/astaxie/beego/router.go:801\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /usr/local/go/src/net/http/server.go:2202\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /usr/local/go/src/net/http/server.go:1579\n2016/11/09 21:06:24 [C] [asm_amd64.s:479] /usr/local/go/src/runtime/asm_amd64.s:2086\n</code></pre> \n<p>求助啊</p>",
    "hits": 562,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 358,
    "title": "channel的优劣",
    "created_at": "2016-11-10 15:51:31",
    "updated_at": "2016-11-11 10:37:52",
    "replied_at": "2016-11-11 10:37:52",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 494,
    "last_reply_user_login": "jiyinyiyong",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "channel既然可以做buffer，那么当有两个goroutine需要同步的时候，当我block pprof发现block比较多的是在channel的时候，是不是增加channel的size就好了呢？\n\n那么是不是越大越好呢？这个channel的buffer size多少合适，这个有什么衡量的工具吗？",
    "body_html": "<p>channel 既然可以做 buffer，那么当有两个 goroutine 需要同步的时候，当我 block pprof 发现 block 比较多的是在 channel 的时候，是不是增加 channel 的 size 就好了呢？</p>\n\n<p>那么是不是越大越好呢？这个 channel 的 buffer size 多少合适，这个有什么衡量的工具吗？</p>",
    "hits": 428,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 359,
    "title": "为什么wetalk中表单的创建要那么麻烦",
    "created_at": "2016-11-10 17:33:17",
    "updated_at": "2016-11-10 17:33:17",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1055,
    "user": "{\"id\": 1055, \"name\": \"hlj2722\", \"login\": \"hlj2722\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 406,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 360,
    "title": "go 如何进位计算",
    "created_at": "2016-11-10 17:41:41",
    "updated_at": "2016-11-11 10:14:08",
    "replied_at": "2016-11-11 10:14:08",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 407,
    "user": "{\"id\": 407, \"name\": \"lucyne\", \"login\": \"lucyne\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "比如有个变量 netI int64类型\n把这个数据换算为流量大小\n如果 netI =106 结果为 102kb\n如果 netI =2049 结果为 2m\n",
    "body_html": "<p>比如有个变量 netI int64 类型\n把这个数据换算为流量大小\n如果 netI =106 结果为 102kb\n如果 netI =2049 结果为 2m</p>",
    "hits": 369,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 361,
    "title": "RobotGo v0.30.0，Golang跨平台控制鼠标键盘位图屏幕,全局事件监听,增加窗口句柄",
    "created_at": "2016-11-10 20:45:39",
    "updated_at": "2016-11-10 20:45:39",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 183,
    "user": "{\"id\": 183, \"name\": \"veni\", \"login\": \"veni\", \"avatar\": \"https://gocn.vip/system/letter_avatars/v.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "RobotGo v0.30.0 发布了。v0.30.0 是针对RobotGo v0.20.0优化完善的版本,控制鼠标键盘位图屏幕,全局事件监听以及窗口句柄操作,用于自动化测试工具等场景。\n\n主要变更：\n- 增加窗口句柄\n\n例子:\n```go\n  abool := robotgo.ShowAlert(&quot;test&quot;, &quot;robotgo&quot;)\n  if abool == 0 {\n      Println(&quot;ok@@@&quot;, &quot;ok&quot;)\n  }\n\n  title:=robotgo.GetTitle()\n  Println(&quot;title@@@&quot;, &quot;title&quot;)\n```\n\n- 增加弹出窗口\n- 更新Event\n- 更新测试\n- 更新文档\n- 更新window\n\n修复BUG:\n- 修复未知keyname\n- 修复IO Error \n\n\n安装:\n- go get github.com/go-vgo/robotgo\n\n项目地址:\n\nGithub: https://github.com/go-vgo/robotgo",
    "body_html": "<p>RobotGo v0.30.0 发布了。v0.30.0 是针对 RobotGo v0.20.0 优化完善的版本,控制鼠标键盘位图屏幕,全局事件监听以及窗口句柄操作,用于自动化测试工具等场景。</p>\n\n<p>主要变更：</p>\n\n<ul>\n<li>增加窗口句柄</li>\n</ul>\n\n<p>例子:</p>\n <pre class=\"highlight go\"><code><span class=\"n\">abool</span> <span class=\"o\">:=</span> <span class=\"n\">robotgo</span><span class=\"o\">.</span><span class=\"n\">ShowAlert</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">test</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">robotgo</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"k\">if</span> <span class=\"n\">abool</span> <span class=\"o\">==</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n    <span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">ok</span><span class=\"err\">@@@</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">ok</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">title</span><span class=\"o\">:=</span><span class=\"n\">robotgo</span><span class=\"o\">.</span><span class=\"n\">GetTitle</span><span class=\"p\">()</span>\n<span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">title</span><span class=\"err\">@@@</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">title</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n</code></pre> \n<ul>\n<li>增加弹出窗口</li>\n<li>更新 Event</li>\n<li>更新测试</li>\n<li>更新文档</li>\n<li>更新 window</li>\n</ul>\n\n<p>修复 BUG:</p>\n\n<ul>\n<li>修复未知 keyname</li>\n<li>修复 IO Error </li>\n</ul>\n\n<p>安装:</p>\n\n<ul>\n<li>go get github.com/go-vgo/robotgo</li>\n</ul>\n\n<p>项目地址:</p>\n\n<p>Github: <a href=\"https://github.com/go-vgo/robotgo\" rel=\"nofollow\" target=\"_blank\">https://github.com/go-vgo/robotgo</a></p>",
    "hits": 489,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 362,
    "title": "国内下载golang.org的包有什么好办法么？",
    "created_at": "2016-11-10 22:20:02",
    "updated_at": "2016-12-10 16:35:22",
    "replied_at": "2016-12-10 16:34:38",
    "replies_count": 13,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1438,
    "last_reply_user_login": "yang11",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 192,
    "user": "{\"id\": 192, \"name\": \"nino\", \"login\": \"nino\", \"avatar\": \"https://gocn.vip/system/letter_avatars/n.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我在网上找了一下资料，发现了这个\n[https://github.com/northbright/Notes/blob/master/Golang/china/get-golang-packages-on-golang-org-in-china.md](https://github.com/northbright/Notes/blob/master/Golang/china/get-golang-packages-on-golang-org-in-china.md)\n自己用了一下，发现go build这个过程会报错\ncan't load package: package golang.org/x/net: no buildable Go source files in $GOPATH/src/golang.org/x/net\n找了一下，没有找到答案",
    "body_html": "<p>我在网上找了一下资料，发现了这个\n<a href=\"https://github.com/northbright/Notes/blob/master/Golang/china/get-golang-packages-on-golang-org-in-china.md\" rel=\"nofollow\" target=\"_blank\" title=\"\">https://github.com/northbright/Notes/blob/master/Golang/china/get-golang-packages-on-golang-org-in-china.md</a>\n自己用了一下，发现 go build 这个过程会报错\ncan't load package: package golang.org/x/net: no buildable Go source files in $GOPATH/src/golang.org/x/net\n找了一下，没有找到答案</p>",
    "hits": 763,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 363,
    "title": "java端采用DESede/ECB/PKCS5Padding，64位随机向量 进行加密",
    "created_at": "2016-11-11 01:50:39",
    "updated_at": "2016-11-21 01:53:32",
    "replied_at": "2016-11-21 01:53:32",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1365,
    "last_reply_user_login": "mengskysama",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 816,
    "user": "{\"id\": 816, \"name\": \"easonme\", \"login\": \"easonme\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "请教下思路，我在实际应用中，java端采用DESede/ECB/PKCS5Padding，64位随机向量 进行加密，解析问题求教\n\n1:GO解密实现思路\n\n\n2：PKCS5Padding的PKCS5Padding值是多少？\n\nfunc PKCS5Padding(ciphertext []byte, PKCS5Padding int) []byte {\n\tpadding := blockSize - len(ciphertext)%blockSize\n\tpadtext := bytes.Repeat([]byte{byte(padding)}, padding)\n\treturn append(ciphertext, padtext...)\n}\n\nfunc PKCS5UnPadding(origData []byte) []byte {\n\tlength := len(origData)\n\tunpadding := int(origData[length-1])\n\treturn origData[:(length - unpadding)]\n}",
    "body_html": "<p>请教下思路，我在实际应用中，java 端采用 DESede/ECB/PKCS5Padding，64 位随机向量 进行加密，解析问题求教</p>\n\n<p>1:GO 解密实现思路</p>\n\n<p>2：PKCS5Padding 的 PKCS5Padding 值是多少？</p>\n\n<p>func PKCS5Padding(ciphertext [] byte, PKCS5Padding int) [] byte {\n    padding := blockSize - len(ciphertext)%blockSize\n    padtext := bytes.Repeat([] byte{byte(padding)}, padding)\n    return append(ciphertext, padtext...)\n}</p>\n\n<p>func PKCS5UnPadding(origData [] byte) [] byte {\n    length := len(origData)\n    unpadding := int(origData[length-1])\n    return origData[:(length - unpadding)]\n}</p>",
    "hits": 402,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 364,
    "title": "有 Go 语言的微信群吗?",
    "created_at": "2016-11-11 10:43:16",
    "updated_at": "2016-11-11 10:53:58",
    "replied_at": "2016-11-11 10:53:58",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 494,
    "user": "{\"id\": 494, \"name\": \"jiyinyiyong\", \"login\": \"jiyinyiyong\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "聊天室虽然比较水, 但是周边新闻跟紧急求助还是比较合适的, 现在 Go 有建中文区微信群吗? 求加..",
    "body_html": "<p>聊天室虽然比较水, 但是周边新闻跟紧急求助还是比较合适的, 现在 Go 有建中文区微信群吗? 求加..</p>",
    "hits": 247,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 365,
    "title": "golang中分布式文件系统有哪些？",
    "created_at": "2016-11-11 22:36:05",
    "updated_at": "2016-11-29 11:05:58",
    "replied_at": "2016-11-29 11:05:58",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 682,
    "last_reply_user_login": "mintzhao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1306,
    "user": "{\"id\": 1306, \"name\": \"张伯雨\", \"login\": \"zhangjunfang0505\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 619,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 366,
    "title": "使用 HTTP2 协议的APNS（苹果消息推送） ，消息发送超时问题",
    "created_at": "2016-11-12 09:15:18",
    "updated_at": "2016-11-22 16:36:25",
    "replied_at": "2016-11-22 16:36:25",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 883,
    "last_reply_user_login": "bopjiang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 883,
    "user": "{\"id\": 883, \"name\": \"bopjiang\", \"login\": \"bopjiang\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "一个APNS推送的线上问题，困扰两天了，测试环境好好的，上线就出问题。\n\n# 问题现象\n问题是在上线大量推送时才出现的：推送经常超时（30s），大概50%的比例。\n错误原因：\n&gt; Post https://api.push.apple.com/3/device/XXXXXXXXXXXXXXX: net/http: request canceled (Client.Timeout exceeded while awaiting headers) \n\n# 依赖库\ngithub.com/sideshow/apns2， \n它用的HTTP2 Client是\t&quot;golang.org/x/net/http2&quot;\n\n网上也有人反馈有类似问题，但他们主要集中在TLS建立连接超时\nhttps://github.com/sideshow/apns2/issues/24\n\n# 思路\n## 1. 数据10s都没有被消费？ 难道发送量太大，被苹果那边拒绝服务？但是本地socket还在啊\n```bash\n[user@BJVPC8-24 ~]$ date &amp;&amp; netstat -an |grep &quot;:443&quot; |grep -v &quot; 0 192.168&quot; |head -3\nSat Nov 12 08:52:07 CST 2016\ntcp        0    398 192.168.8.24:59448      17.188.149.161:443      ESTABLISHED\ntcp        0    183 192.168.8.24:40790      17.188.161.140:443      ESTABLISHED\ntcp        0    407 192.168.8.24:19916      17.188.166.96:443       ESTABLISHED\n[user@BJVPC8-24 ~]$ date &amp;&amp; netstat -an |grep &quot;:443&quot; |grep -v &quot; 0 192.168&quot; |head -3\nSat Nov 12 08:52:16 CST 2016\ntcp        0    398 192.168.8.24:59448      17.188.149.161:443      ESTABLISHED\ntcp        0    183 192.168.8.24:40790      17.188.161.140:443      ESTABLISHED\ntcp        0    407 192.168.8.24:19916      17.188.166.96:443       ESTABLISHED\n```\n\n## 2. 我们部署在阿里云VPC内网的，不知道跟阿里云网络有关系没?\n\n## 3. apple的协议对HTTP2 HPACK有要求，但是github.com/sideshow/apns2实现好像没有严格遵从\n&gt; APNs requires the use of HPACK (header compression for HTTP/2), which prevents repeated header keys and values. APNs maintains a small dynamic table for HPACK. To help avoid filling up the APNs HPACK table and necessitating the discarding of table data, encode headers in the following way—especially when sending a large number of streams:\n\n&gt; The :path value should be encoded as a literal header field without indexing\nThe authorization request header, if present, should be encoded as a literal header field without indexing\nThe appropriate encoding to employ for the apns-id, apns-expiration, and apns-collapse-id request headers differs depending on whether it is part of the initial or a subsequent POST operation, as follows:\nThe first time you send these headers, encode them with incremental indexing to allow the header names to be added to the dynamic table\nSubsequent times you send these headers, encode them as literal header fields without indexingSubsequent times you send these headers, encode them as literal header fields without indexing",
    "body_html": "<p>一个 APNS 推送的线上问题，困扰两天了，测试环境好好的，上线就出问题。</p>\n<h2 id=\"问题现象\">问题现象</h2>\n<p>问题是在上线大量推送时才出现的：推送经常超时（30s），大概 50% 的比例。\n错误原因：\n&gt; Post <a href=\"https://api.push.apple.com/3/device/XXXXXXXXXXXXXXX:\" rel=\"nofollow\" target=\"_blank\">https://api.push.apple.com/3/device/XXXXXXXXXXXXXXX:</a> net/http: request canceled (Client.Timeout exceeded while awaiting headers) </p>\n<h2 id=\"依赖库\">依赖库</h2>\n<p>github.com/sideshow/apns2， \n它用的 HTTP2 Client 是    \"golang.org/x/net/http2\"</p>\n\n<p>网上也有人反馈有类似问题，但他们主要集中在 TLS 建立连接超时\n<a href=\"https://github.com/sideshow/apns2/issues/24\" rel=\"nofollow\" target=\"_blank\">https://github.com/sideshow/apns2/issues/24</a></p>\n<h2 id=\"思路\">思路</h2><h2 id=\"1. 数据10s都没有被消费？ 难道发送量太大，被苹果那边拒绝服务？但是本地socket还在啊\">1. 数据 10s 都没有被消费？ 难道发送量太大，被苹果那边拒绝服务？但是本地 socket 还在啊</h2><pre class=\"highlight shell\"><code><span class=\"o\">[</span>user@BJVPC8-24 ~]<span class=\"nv\">$ </span><span class=\"nb\">date</span> &amp;amp<span class=\"p\">;</span>&amp;amp<span class=\"p\">;</span> netstat <span class=\"nt\">-an</span> |grep &amp;quot<span class=\"p\">;</span>:443&amp;quot<span class=\"p\">;</span> |grep <span class=\"nt\">-v</span> &amp;quot<span class=\"p\">;</span> 0 192.168&amp;quot<span class=\"p\">;</span> |head <span class=\"nt\">-3</span>\nSat Nov 12 08:52:07 CST 2016\ntcp        0    398 192.168.8.24:59448      17.188.149.161:443      ESTABLISHED\ntcp        0    183 192.168.8.24:40790      17.188.161.140:443      ESTABLISHED\ntcp        0    407 192.168.8.24:19916      17.188.166.96:443       ESTABLISHED\n<span class=\"o\">[</span>user@BJVPC8-24 ~]<span class=\"nv\">$ </span><span class=\"nb\">date</span> &amp;amp<span class=\"p\">;</span>&amp;amp<span class=\"p\">;</span> netstat <span class=\"nt\">-an</span> |grep &amp;quot<span class=\"p\">;</span>:443&amp;quot<span class=\"p\">;</span> |grep <span class=\"nt\">-v</span> &amp;quot<span class=\"p\">;</span> 0 192.168&amp;quot<span class=\"p\">;</span> |head <span class=\"nt\">-3</span>\nSat Nov 12 08:52:16 CST 2016\ntcp        0    398 192.168.8.24:59448      17.188.149.161:443      ESTABLISHED\ntcp        0    183 192.168.8.24:40790      17.188.161.140:443      ESTABLISHED\ntcp        0    407 192.168.8.24:19916      17.188.166.96:443       ESTABLISHED\n</code></pre><h2 id=\"2. 我们部署在阿里云VPC内网的，不知道跟阿里云网络有关系没?\">2. 我们部署在阿里云 VPC 内网的，不知道跟阿里云网络有关系没?</h2><h2 id=\"3. apple的协议对HTTP2 HPACK有要求，但是github.com/sideshow/apns2实现好像没有严格遵从\">3. apple 的协议对 HTTP2 HPACK 有要求，但是 github.com/sideshow/apns2 实现好像没有严格遵从</h2>\n<p>&gt; APNs requires the use of HPACK (header compression for HTTP/2), which prevents repeated header keys and values. APNs maintains a small dynamic table for HPACK. To help avoid filling up the APNs HPACK table and necessitating the discarding of table data, encode headers in the following way—especially when sending a large number of streams:</p>\n\n<p>&gt; The :path value should be encoded as a literal header field without indexing\nThe authorization request header, if present, should be encoded as a literal header field without indexing\nThe appropriate encoding to employ for the apns-id, apns-expiration, and apns-collapse-id request headers differs depending on whether it is part of the initial or a subsequent POST operation, as follows:\nThe first time you send these headers, encode them with incremental indexing to allow the header names to be added to the dynamic table\nSubsequent times you send these headers, encode them as literal header fields without indexingSubsequent times you send these headers, encode them as literal header fields without indexing</p>",
    "hits": 840,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 367,
    "title": "关于beego controller的一个疑问",
    "created_at": "2016-11-12 17:41:03",
    "updated_at": "2021-01-16 19:54:08",
    "replied_at": "2016-11-12 23:28:41",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 3,
    "last_reply_user_login": "傅小黑",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1312,
    "user": "{\"id\": 1312, \"name\": \"gowalker\", \"login\": \"gowalker\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在用beego框架的时候，发现在controller里面的直接调用go func()，就算不创建通道什么的，这个goroutine也会执行，这个时间片是怎么被让出来的呢？我bee new一个新项目，试了一下，代码如下：\n\n\n\tpackage controllers\n\n\timport (\n\t\t&quot;fmt&quot;\n\t\t&quot;github.com/astaxie/beego&quot;\n\t)\n\n\ttype MainController struct {\n\t\tbeego.Controller\n\t}\n\n\tfunc (c *MainController) Get() {\n\t\tc.Data[&quot;Website&quot;] = &quot;beego.me&quot;\n\t\tc.Data[&quot;Email&quot;] = &quot;astaxie@gmail.com&quot;\n\t\tc.TplName = &quot;index.tpl&quot;\n\t\tgo hello() //不明白这个时间片是怎么被让出来的？\n\t}\n\n\tfunc hello() {\n\t\tfmt.Println(&quot;hello,hello&quot;)\n\t}",
    "body_html": "<p>在用 beego 框架的时候，发现在 controller 里面的直接调用 go func()，就算不创建通道什么的，这个 goroutine 也会执行，这个时间片是怎么被让出来的呢？我 bee new 一个新项目，试了一下，代码如下：</p>\n\n<p>package controllers</p>\n\n<p>import (\n        \"fmt\"\n        \"github.com/astaxie/beego\"\n    )</p>\n\n<p>type MainController struct {\n        beego.Controller\n    }</p>\n\n<p>func (c *MainController) Get() {\n        c.Data[\"Website\"] = \"beego.me\"\n        c.Data[\"Email\"] = \"astaxie@gmail.com\"\n        c.TplName = \"index.tpl\"\n        go hello() //不明白这个时间片是怎么被让出来的？\n    }</p>\n\n<p>func hello() {\n        fmt.Println(\"hello,hello\")\n    }</p>",
    "hits": 492,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 368,
    "title": "google/gops:一个列出和诊断系统中正在运行Go 进程的命令行工具。",
    "created_at": "2016-11-12 20:45:06",
    "updated_at": "2016-11-12 20:45:06",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "gops 是一个用来列出系统中正在使用的Go程序，同时还可以诊断正在运行的Go程序。\n\n```\n$ gops\n983     uplink-soecks   (/usr/local/bin/uplink-soecks)\n52697   gops    (/Users/jbd/bin/gops)\n51130   gocode  (/Users/jbd/bin/gocode)\n```\n\n## 诊断\n\n### stack \n\n```\n$ gops stack -p=&lt;pid&gt;\ngoroutine 35 [running]:\ngithub.com/google/gops/agent.handle(0x11897a0, 0xc4200d0000, 0xc4200c6000, 0x1, 0x1, 0x0, 0x0)\n    /Users/jbd/src/github.com/google/gops/agent/agent.go:63 +0x182\ngithub.com/google/gops/agent.init.1.func2(0x1189140, 0xc420078450)\n    /Users/jbd/src/github.com/google/gops/agent/agent.go:50 +0x242\ncreated by github.com/google/gops/agent.init.1\n    /Users/jbd/src/github.com/google/gops/agent/agent.go:56 +0x240\n\ngoroutine 1 [sleep]:\ntime.Sleep(0x34630b8a000)\n    /Users/jbd/go/src/runtime/time.go:59 +0xf7\nmain.main()\n    /Users/jbd/src/github.com/google/gops/examples/hello/main.go:14 +0x30\n\ngoroutine 17 [syscall, locked to thread]:\nruntime.goexit()\n    /Users/jbd/go/src/runtime/asm_amd64.s:2184 +0x1\n\ngoroutine 20 [syscall]:\nos/signal.signal_recv(0x0)\n    /Users/jbd/go/src/runtime/sigqueue.go:116 +0xff\nos/signal.loop()\n    /Users/jbd/go/src/os/signal/signal_unix.go:22 +0x22\ncreated by os/signal.init.1\n    /Users/jbd/go/src/os/signal/signal_unix.go:28 +0x41\n\ngoroutine 21 [select, locked to thread]:\nruntime.gopark(0x1114a80, 0x0, 0x110d5ec, 0x6, 0x18, 0x2)\n    /Users/jbd/go/src/runtime/proc.go:261 +0x13a\nruntime.selectgoImpl(0xc42003ff50, 0x0, 0x18)\n    /Users/jbd/go/src/runtime/select.go:423 +0x1307\nruntime.selectgo(0xc42003ff50)\n    /Users/jbd/go/src/runtime/select.go:238 +0x1c\nruntime.ensureSigM.func1()\n    /Users/jbd/go/src/runtime/signal_unix.go:408 +0x265\nruntime.goexit()\n    /Users/jbd/go/src/runtime/asm_amd64.s:2184 +0x1\n\ngoroutine 34 [chan receive]:\ngithub.com/google/gops/agent.init.1.func1(0xc4200740c0, 0xc4200880e0, 0x13)\n    /Users/jbd/src/github.com/google/gops/agent/agent.go:33 +0x40\ncreated by github.com/google/gops/agent.init.1\n    /Users/jbd/src/github.com/google/gops/agent/agent.go:36 +0x214\n```\n\n### gc\n\n```\n$ gops gc -p=&lt;pid&gt;\n\n```\n### memstats\n\n```\n$ gops memstats -p=&lt;pid&gt;\nalloc: 219792\ntotal-alloc: 219792\nsys: 2822144\nlookups: 9\nmallocs: 336\nfrees: 8\nheap-alloc: 219792\nheap-sys: 1605632\nheap-idle: 1015808\nheap-in-use: 589824\nheap-released: 0\nheap-objects: 328\nstack-in-use: 491520\nstack-sys: 491520\nnext-gc: 4473924\nlast-gc: 0 ns ago\ngc-pause: 0 ns\nnum-gc: 0\nenable-gc: true\ndebug-gc: false\n```\n\n### version\n\n```\n$ gops version -p=&lt;pid&gt;\ndevel +4141054 Thu Nov 3 17:42:01 2016 +0000\n```\nhttps://github.com/google/gops",
    "body_html": "<p>gops 是一个用来列出系统中正在使用的 Go 程序，同时还可以诊断正在运行的 Go 程序。</p>\n <pre class=\"highlight plaintext\"><code>$ gops\n983     uplink-soecks   (/usr/local/bin/uplink-soecks)\n52697   gops    (/Users/jbd/bin/gops)\n51130   gocode  (/Users/jbd/bin/gocode)\n</code></pre> <h2 id=\"诊断\">诊断</h2><h3 id=\"stack\">stack</h3> <pre class=\"highlight plaintext\"><code>$ gops stack -p=&amp;lt;pid&amp;gt;\ngoroutine 35 [running]:\ngithub.com/google/gops/agent.handle(0x11897a0, 0xc4200d0000, 0xc4200c6000, 0x1, 0x1, 0x0, 0x0)\n    /Users/jbd/src/github.com/google/gops/agent/agent.go:63 +0x182\ngithub.com/google/gops/agent.init.1.func2(0x1189140, 0xc420078450)\n    /Users/jbd/src/github.com/google/gops/agent/agent.go:50 +0x242\ncreated by github.com/google/gops/agent.init.1\n    /Users/jbd/src/github.com/google/gops/agent/agent.go:56 +0x240\n\ngoroutine 1 [sleep]:\ntime.Sleep(0x34630b8a000)\n    /Users/jbd/go/src/runtime/time.go:59 +0xf7\nmain.main()\n    /Users/jbd/src/github.com/google/gops/examples/hello/main.go:14 +0x30\n\ngoroutine 17 [syscall, locked to thread]:\nruntime.goexit()\n    /Users/jbd/go/src/runtime/asm_amd64.s:2184 +0x1\n\ngoroutine 20 [syscall]:\nos/signal.signal_recv(0x0)\n    /Users/jbd/go/src/runtime/sigqueue.go:116 +0xff\nos/signal.loop()\n    /Users/jbd/go/src/os/signal/signal_unix.go:22 +0x22\ncreated by os/signal.init.1\n    /Users/jbd/go/src/os/signal/signal_unix.go:28 +0x41\n\ngoroutine 21 [select, locked to thread]:\nruntime.gopark(0x1114a80, 0x0, 0x110d5ec, 0x6, 0x18, 0x2)\n    /Users/jbd/go/src/runtime/proc.go:261 +0x13a\nruntime.selectgoImpl(0xc42003ff50, 0x0, 0x18)\n    /Users/jbd/go/src/runtime/select.go:423 +0x1307\nruntime.selectgo(0xc42003ff50)\n    /Users/jbd/go/src/runtime/select.go:238 +0x1c\nruntime.ensureSigM.func1()\n    /Users/jbd/go/src/runtime/signal_unix.go:408 +0x265\nruntime.goexit()\n    /Users/jbd/go/src/runtime/asm_amd64.s:2184 +0x1\n\ngoroutine 34 [chan receive]:\ngithub.com/google/gops/agent.init.1.func1(0xc4200740c0, 0xc4200880e0, 0x13)\n    /Users/jbd/src/github.com/google/gops/agent/agent.go:33 +0x40\ncreated by github.com/google/gops/agent.init.1\n    /Users/jbd/src/github.com/google/gops/agent/agent.go:36 +0x214\n</code></pre> <h3 id=\"gc\">gc</h3> <pre class=\"highlight plaintext\"><code>$ gops gc -p=&amp;lt;pid&amp;gt;\n\n</code></pre> <h3 id=\"memstats\">memstats</h3> <pre class=\"highlight plaintext\"><code>$ gops memstats -p=&amp;lt;pid&amp;gt;\nalloc: 219792\ntotal-alloc: 219792\nsys: 2822144\nlookups: 9\nmallocs: 336\nfrees: 8\nheap-alloc: 219792\nheap-sys: 1605632\nheap-idle: 1015808\nheap-in-use: 589824\nheap-released: 0\nheap-objects: 328\nstack-in-use: 491520\nstack-sys: 491520\nnext-gc: 4473924\nlast-gc: 0 ns ago\ngc-pause: 0 ns\nnum-gc: 0\nenable-gc: true\ndebug-gc: false\n</code></pre> <h3 id=\"version\">version</h3> <pre class=\"highlight plaintext\"><code>$ gops version -p=&amp;lt;pid&amp;gt;\ndevel +4141054 Thu Nov 3 17:42:01 2016 +0000\n</code></pre> \n<p><a href=\"https://github.com/google/gops\" rel=\"nofollow\" target=\"_blank\">https://github.com/google/gops</a></p>",
    "hits": 530,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 369,
    "title": "beego创建多http端口的应用",
    "created_at": "2016-11-12 22:30:38",
    "updated_at": "2021-01-20 01:51:49",
    "replied_at": "2016-11-21 01:28:11",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1365,
    "last_reply_user_login": "mengskysama",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 449,
    "user": "{\"id\": 449, \"name\": \"sinuos\", \"login\": \"sinuos\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```\nfunc handler2(w http.ResponseWriter, r *http.Request) {\n    fmt.Fprintf(w, &quot;Hello, HTTP Server1&quot;)\n}\n\nfunc handler1(w http.ResponseWriter, r *http.Request) {\n    fmt.Fprintf(w, &quot;Hello, HTTP Server2&quot;)\n}\nfunc main() {\n    go func(){\n        mux := http.NewServeMux()\n        mux.HandleFunc(&quot;/&quot;, handler2)\n        http.ListenAndServe(&quot;:1234&quot;, mux)\n    }()\n    mux := http.NewServeMux()\n    mux.HandleFunc(&quot;/&quot;, handler1)\n    http.ListenAndServe(&quot;:12345&quot;, mux)\n}\n```\n如何用beego来实现上面的功能，不同的端口有不同的处理handler",
    "body_html": " <pre class=\"highlight plaintext\"><code>func handler2(w http.ResponseWriter, r *http.Request) {\n    fmt.Fprintf(w, &amp;quot;Hello, HTTP Server1&amp;quot;)\n}\n\nfunc handler1(w http.ResponseWriter, r *http.Request) {\n    fmt.Fprintf(w, &amp;quot;Hello, HTTP Server2&amp;quot;)\n}\nfunc main() {\n    go func(){\n        mux := http.NewServeMux()\n        mux.HandleFunc(&amp;quot;/&amp;quot;, handler2)\n        http.ListenAndServe(&amp;quot;:1234&amp;quot;, mux)\n    }()\n    mux := http.NewServeMux()\n    mux.HandleFunc(&amp;quot;/&amp;quot;, handler1)\n    http.ListenAndServe(&amp;quot;:12345&amp;quot;, mux)\n}\n</code></pre> \n<p>如何用 beego 来实现上面的功能，不同的端口有不同的处理 handler</p>",
    "hits": 543,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 370,
    "title": "beego orm update 操作是事务的吗？",
    "created_at": "2016-11-12 23:49:22",
    "updated_at": "2021-01-16 22:26:32",
    "replied_at": "2016-11-13 13:45:58",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 261,
    "user": "{\"id\": 261, \"name\": \"hacpai\", \"login\": \"hacpai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "今天遇到数据库出现脏数据的现象，排查时，查到这样的代码段。\n\n```\n_, err := s.GetOrm().QueryTable(SOME_TABLE).Filter(&quot;id&quot;, resourceId).Update(orm.Params{\n\t\t&quot;foo&quot;: &quot;bar&quot;,\n\t\t&quot;bar&quot;:    time.Now()})\n```\n\n看到的数据是，&quot;bar&quot; 更新 time.Now() 成功，但是 &quot;foo&quot; 里却不是 &quot;bar&quot;,\n\n是否会出现数据更新一半的情况呢？",
    "body_html": "<p>今天遇到数据库出现脏数据的现象，排查时，查到这样的代码段。</p>\n <pre class=\"highlight plaintext\"><code>_, err := s.GetOrm().QueryTable(SOME_TABLE).Filter(&amp;quot;id&amp;quot;, resourceId).Update(orm.Params{\n        &amp;quot;foo&amp;quot;: &amp;quot;bar&amp;quot;,\n        &amp;quot;bar&amp;quot;:    time.Now()})\n</code></pre> \n<p>看到的数据是，\"bar\" 更新 time.Now() 成功，但是 \"foo\" 里却不是 \"bar\",</p>\n\n<p>是否会出现数据更新一半的情况呢？</p>",
    "hits": 414,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 371,
    "title": "[译]Go里面的unsafe包详解",
    "created_at": "2016-11-13 09:07:01",
    "updated_at": "2016-11-13 09:07:01",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "## The unsafe Package in Golang\n\nGolang的unsafe包是一个很特殊的包。 为什么这样说呢？ 本文将详细解释。\n\n## 来自go语言官方文档的警告\n\nunsafe包的文档是这么说的：\n\n```\n导入unsafe的软件包可能不可移植，并且不受Go 1兼容性指南的保护。\n```\n\nGo 1 兼容性指南这么说：\n\n```\n导入unsafe软件包可能取决于Go实现的内部属性。 我们保留对可能导致程序崩溃的实现进行更改的权利。\n```\n\n当然包名称暗示unsafe包是不安全的。 但这个包有多危险呢？ 让我们先看看unsafe包的作用。\n\n## Unsafe包的作用\n\n直到现在（Go1.7），unsafe包含以下资源：\n\n\n* 三个函数：\n\n    * func Alignof（variable ArbitraryType）uintptr\n    * func Offsetof（selector ArbitraryType）uintptr\n    * func Sizeof（variable ArbitraryType）uintptr\n\n* 和一种类型：\n\n    * 类型Pointer * ArbitraryType\n\n这里，ArbitraryType不是一个真正的类型，它只是一个占位符。\n\n与Golang中的大多数函数不同，上述三个函数的调用将始终在编译时求值，而不是运行时。 这意味着它们的返回结果可以分配给常量。\n\n（BTW，unsafe包中的函数中非唯一调用将在编译时求值。当传递给len和cap的参数是一个数组值时，内置函数和cap函数的调用也可以在编译时被求值。）\n\n除了这三个函数和一个类型外，指针在unsafe包也为编译器服务。\n\n出于安全原因，Golang不允许以下之间的直接转换：\n\n\n* 两个不同指针类型的值，例如* int64和* float64。\n\n* 指针类型和uintptr的值。\n\n但是借助unsafe.Pointer，我们可以打破Go类型和内存安全性，并使上面的转换成为可能。这怎么可能发生？让我们阅读unsafe包文档中列出的规则：\n\n\n* 任何类型的指针值都可以转换为unsafe.Pointer。\n* unsafe.Pointer可以转换为任何类型的指针值。\n* uintptr可以转换为unsafe.Pointer。\n* unsafe.Pointer可以转换为uintptr。\n\n这些规则与Go规范一致：\n\n```\n底层类型uintptr的任何指针或值都可以转换为指针类型，反之亦然。\n```\n\n\n规则表明unsafe.Pointer类似于c语言中的void *。当然，void *在C语言里是危险的！\n\n在上述规则下，对于两种不同类型T1和T2，可以使* T1值与unsafe.Pointer值一致，然后将unsafe.Pointer值转换为* T2值（或uintptr值）。通过这种方式可以绕过Go类型系统和内存安全性。当然，滥用这种方式是很危险的。\n\n举个例子：\n\n```\npackage main\n\nimport (\n    &quot;fmt&quot;\n    &quot;unsafe&quot;\n)\nfunc main() {\n    var n int64 = 5\n    var pn = &amp;n\n    var pf = (*float64)(unsafe.Pointer(pn))\n    // now, pn and pf are pointing at the same memory address\n    fmt.Println(*pf) // 2.5e-323\n    *pf = 3.14159\n    fmt.Println(n) // 4614256650576692846\n}\n```\n\n在这个例子中的转换可能是无意义的，但它是安全和合法的（为什么它是安全的？）。\n\n因此，资源在unsafe包中的作用是为Go编译器服务，unsafe.Pointer类型的作用是绕过Go类型系统和内存安全。\n\n## 再来一点 unsafe.Pointer 和 uintptr\n\n这里有一些关于unsafe.Pointer和uintptr的事实：\n\n\n* uintptr是一个整数类型。\n    * 即使uintptr变量仍然有效，由uintptr变量表示的地址处的数据也可能被GC回收。\n* unsafe.Pointer是一个指针类型。\n    * 但是unsafe.Pointer值不能被取消引用。\n    * 如果unsafe.Pointer变量仍然有效，则由unsafe.Pointer变量表示的地址处的数据不会被GC回收。\n* * unsafe.Pointer是一个通用的指针类型，就像* int等。\n\n由于uintptr是一个整数类型，uintptr值可以进行算术运算。 所以通过使用uintptr和unsafe.Pointer，我们可以绕过限制，* T值不能在Golang中计算偏移量：\n\n```\npackage main\n\nimport (\n    &quot;fmt&quot;\n    &quot;unsafe&quot;\n)\n\nfunc main() {\n    a := [4]int{0, 1, 2, 3}\n    p1 := unsafe.Pointer(&amp;a[1])\n    p3 := unsafe.Pointer(uintptr(p1) + 2 * unsafe.Sizeof(a[0]))\n    *(*int)(p3) = 6\n    fmt.Println(&quot;a =&quot;, a) // a = [0 1 2 6]\n    \n    // ...\n\n    type Person struct {\n        name   string\n        age    int\n        gender bool\n    }\n    \n    who := Person{&quot;John&quot;, 30, true}\n    pp := unsafe.Pointer(&amp;who)\n    pname := (*string)(unsafe.Pointer(uintptr(pp) + unsafe.Offsetof(who.name)))\n    page := (*int)(unsafe.Pointer(uintptr(pp) + unsafe.Offsetof(who.age)))\n    pgender := (*bool)(unsafe.Pointer(uintptr(pp) + unsafe.Offsetof(who.gender)))\n    *pname = &quot;Alice&quot;\n    *page = 28\n    *pgender = false\n    fmt.Println(who) // {Alice 28 false}\n}\n```\n\n## unsafe包有多危险\n\n关于unsafe包，Ian，Go团队的核心成员之一，已经确认：\n\n\n* 在unsafe包中的函数的签名将不会在以后的Go版本中更改，\n\n* 并且unsafe.Pointer类型将在以后的Go版本中始终存在。\n\n所以，unsafe包中的三个函数看起来不危险。 go team leader甚至想把它们放在别的地方。 unsafe包中这几个函数唯一不安全的是它们调用结果可能在后来的版本中返回不同的值。 很难说这种不安全是一种危险。\n\n看起来所有的unsafe包的危险都与使用unsafe.Pointer有关。 unsafe包docs列出了一些使用unsafe.Pointer合法或非法的情况。 这里只列出部分非法使用案例：\n\n```\npackage main\n\nimport (\n    &quot;fmt&quot;\n    &quot;unsafe&quot;\n)\n\n// case A: conversions between unsafe.Pointer and uintptr \n//         don't appear in the same expression\nfunc illegalUseA() {\n    fmt.Println(&quot;===================== illegalUseA&quot;)\n    \n    pa := new([4]int)\n    \n    // split the legal use\n    // p1 := unsafe.Pointer(uintptr(unsafe.Pointer(pa)) + unsafe.Sizeof(pa[0]))\n    // into two expressions (illegal use):\n    ptr := uintptr(unsafe.Pointer(pa))\n    p1 := unsafe.Pointer(ptr + unsafe.Sizeof(pa[0]))\n    // &quot;go vet&quot; will make a warning for the above line:\n    // possible misuse of unsafe.Pointer\n    \n    // the unsafe package docs, https://golang.org/pkg/unsafe/#Pointer,\n    // thinks above splitting is illegal.\n    // but the current Go compiler and runtime (1.7.3) can't detect\n    // this illegal use.\n    // however, to make your program run well for later Go versions,\n    // it is best to comply with the unsafe package docs.\n    \n    *(*int)(p1) = 123\n    fmt.Println(&quot;*(*int)(p1)  :&quot;, *(*int)(p1)) //\n}    \n\n// case B: pointers are pointing at unknown addresses\nfunc illegalUseB() {\n    fmt.Println(&quot;===================== illegalUseB&quot;)\n    \n    a := [4]int{0, 1, 2, 3}\n    p := unsafe.Pointer(&amp;a)\n    p = unsafe.Pointer(uintptr(p) + uintptr(len(a)) * unsafe.Sizeof(a[0]))\n    // now p is pointing at the end of the memory occupied by value a.\n    // up to now, although p is invalid, it is no problem.\n    // but it is illegal if we modify the value pointed by p\n    *(*int)(p) = 123\n    fmt.Println(&quot;*(*int)(p)  :&quot;, *(*int)(p)) // 123 or not 123\n    // the current Go compiler/runtime (1.7.3) and &quot;go vet&quot; \n    // will not detect the illegal use here.\n    \n    // however, the current Go runtime (1.7.3) will \n    // detect the illegal use and panic for the below code.\n    p = unsafe.Pointer(&amp;a)\n    for i := 0; i &lt;= len(a); i++ {\n        *(*int)(p) = 123 // Go runtime (1.7.3) never panic here in the tests\n        \n        fmt.Println(i, &quot;:&quot;, *(*int)(p))\n        // panic at the above line for the last iteration, when i==4.\n        // runtime error: invalid memory address or nil pointer dereference\n        \n        p = unsafe.Pointer(uintptr(p) + unsafe.Sizeof(a[0]))\n    }\n}\n\nfunc main() {\n    illegalUseA()\n    illegalUseB()\n}\n```\n\n编译器很难检测Go程序中非法的unsafe.Pointer使用。 运行“go vet”可以帮助找到一些潜在的错误，但不是所有的都能找到。 同样是Go运行时，也不能检测所有的非法使用。 非法unsafe.Pointer使用可能会使程序崩溃或表现得怪异（有时是正常的，有时是异常的）。 这就是为什么使用不安全的包是危险的。\n\n## 转换*T1 为 *T2\n\n对于将* T1转换为unsafe.Pointer，然后转换为* T2，unsafe包docs说：\n\n```\n如果T2比T1大，并且两者共享等效内存布局，则该转换允许将一种类型的数据重新解释为另一类型的数据。\n```\n\n这种“等效内存布局”的定义是有一些模糊的。 看起来go团队故意如此。 这使得使用unsafe包更危险。\n\n由于Go团队不愿意在这里做出准确的定义，本文也不尝试这样做。 这里，列出了已确认的合法用例的一小部分，\n\n### 合法用例1：在[]T和[]MyT之间转换\n\n在这个例子里，我们用int作为T：\n\n```\ntype MyInt int\n```\n\n在Golang中，[] int和[] MyInt是两种不同的类型，它们的底层类型是自身。 因此，[] int的值不能转换为[] MyInt，反之亦然。 但是在unsafe.Pointer的帮助下，转换是可能的：\n\n```\npackage main\n\nimport (\n    &quot;fmt&quot;\n    &quot;unsafe&quot;\n)\n\nfunc main() {\n    type MyInt int\n    \n    a := []MyInt{0, 1, 2}\n    // b := ([]int)(a) // error: cannot convert a (type []MyInt) to type []int\n    b := *(*[]int)(unsafe.Pointer(&amp;a))\n    \n    b[0]= 3\n    \n    fmt.Println(&quot;a =&quot;, a) // a = [3 1 2]\n    fmt.Println(&quot;b =&quot;, b) // b = [3 1 2]\n    \n    a[2] = 9\n    \n    fmt.Println(&quot;a =&quot;, a) // a = [3 1 9]\n    fmt.Println(&quot;b =&quot;, b) // b = [3 1 9]\n}\n```\n\n### 合法用例2: 调用sync/atomic包中指针相关的函数\n\nsync / atomic包中的以下函数的大多数参数和结果类型都是unsafe.Pointer或*unsafe.Pointer：\n\n\n* func CompareAndSwapPointer（addr * unsafe.Pointer，old，new unsafe.Pointer）（swapped bool）\n* func LoadPointer（addr * unsafe.Pointer）（val unsafe.Pointer）\n* func StorePointer（addr * unsafe.Pointer，val unsafe.Pointer）\n* func SwapPointer（addr * unsafe.Pointer，new unsafe.Pointer）（old unsafe.Pointer）\n\n要使用这些功能，必须导入unsafe包。\n注意：* unsafe.Pointer是一般类型，因此* unsafe.Pointer的值可以转换为unsafe.Pointer，反之亦然。\n\n```\npackage main\n\nimport (\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;time&quot;\n    &quot;unsafe&quot;\n    &quot;sync/atomic&quot;\n    &quot;sync&quot;\n    &quot;math/rand&quot;\n)\n\nvar data *string\n\n// get data atomically\nfunc Data() string {\n    p := (*string)(atomic.LoadPointer(\n            (*unsafe.Pointer)(unsafe.Pointer(&amp;data)),\n        ))\n    if p == nil {\n        return &quot;&quot;\n    } else {\n        return *p\n    }\n}\n\n// set data atomically\nfunc SetData(d string) {\n    atomic.StorePointer(\n            (*unsafe.Pointer)(unsafe.Pointer(&amp;data)), \n            unsafe.Pointer(&amp;d),\n        )\n}\n\nfunc main() {\n    var wg sync.WaitGroup\n    wg.Add(200)\n    \n    for range [100]struct{}{} {\n        go func() {\n            time.Sleep(time.Second * time.Duration(rand.Intn(1000)) / 1000)\n            \n            log.Println(Data())\n            wg.Done()\n        }()\n    }\n    \n    for i := range [100]struct{}{} {\n        go func(i int) {\n            time.Sleep(time.Second * time.Duration(rand.Intn(1000)) / 1000)\n            s := fmt.Sprint(&quot;#&quot;, i)\n            log.Println(&quot;====&quot;, s)\n            \n            SetData(s)\n            wg.Done()\n        }(i)\n    }\n    \n    wg.Wait()\n    \n    fmt.Println(&quot;final data = &quot;, *data)\n}\n```\n\n## 结论\n\n* unsafe包用于Go编译器，而不是Go运行时。\n* 使用unsafe作为程序包名称只是让你在使用此包是更加小心。\n* 使用unsafe.Pointer并不总是一个坏主意，有时我们必须使用它。\n* Golang的类型系统是为了安全和效率而设计的。 但是在Go类型系统中，安全性比效率更重要。 通常Go是高效的，但有时安全真的会导致Go程序效率低下。 unsafe包用于有经验的程序员通过安全地绕过Go类型系统的安全性来消除这些低效。\n* unsafe包可能被滥用并且是危险的。\n\n\n原文：http://www.tapirgames.com/blog/golang-unsafe",
    "body_html": "<h2 id=\"The unsafe Package in Golang\">The unsafe Package in Golang</h2>\n<p>Golang 的 unsafe 包是一个很特殊的包。 为什么这样说呢？ 本文将详细解释。</p>\n<h2 id=\"来自go语言官方文档的警告\">来自 go 语言官方文档的警告</h2>\n<p>unsafe 包的文档是这么说的：</p>\n <pre class=\"highlight plaintext\"><code>导入unsafe的软件包可能不可移植，并且不受Go 1兼容性指南的保护。\n</code></pre> \n<p>Go 1 兼容性指南这么说：</p>\n <pre class=\"highlight plaintext\"><code>导入unsafe软件包可能取决于Go实现的内部属性。 我们保留对可能导致程序崩溃的实现进行更改的权利。\n</code></pre> \n<p>当然包名称暗示 unsafe 包是不安全的。 但这个包有多危险呢？ 让我们先看看 unsafe 包的作用。</p>\n<h2 id=\"Unsafe包的作用\">Unsafe 包的作用</h2>\n<p>直到现在（Go1.7），unsafe 包含以下资源：</p>\n\n<ul>\n<li>\n<p>三个函数：</p>\n\n<ul>\n<li>func Alignof（variable ArbitraryType）uintptr</li>\n<li>func Offsetof（selector ArbitraryType）uintptr</li>\n<li>func Sizeof（variable ArbitraryType）uintptr</li>\n</ul>\n</li>\n<li>\n<p>和一种类型：</p>\n\n<ul>\n<li>类型 Pointer * ArbitraryType</li>\n</ul>\n</li>\n</ul>\n\n<p>这里，ArbitraryType 不是一个真正的类型，它只是一个占位符。</p>\n\n<p>与 Golang 中的大多数函数不同，上述三个函数的调用将始终在编译时求值，而不是运行时。 这意味着它们的返回结果可以分配给常量。</p>\n\n<p>（BTW，unsafe 包中的函数中非唯一调用将在编译时求值。当传递给 len 和 cap 的参数是一个数组值时，内置函数和 cap 函数的调用也可以在编译时被求值。）</p>\n\n<p>除了这三个函数和一个类型外，指针在 unsafe 包也为编译器服务。</p>\n\n<p>出于安全原因，Golang 不允许以下之间的直接转换：</p>\n\n<ul>\n<li><p>两个不同指针类型的值，例如 * int64 和 * float64。</p></li>\n<li><p>指针类型和 uintptr 的值。</p></li>\n</ul>\n\n<p>但是借助 unsafe.Pointer，我们可以打破 Go 类型和内存安全性，并使上面的转换成为可能。这怎么可能发生？让我们阅读 unsafe 包文档中列出的规则：</p>\n\n<ul>\n<li>任何类型的指针值都可以转换为 unsafe.Pointer。</li>\n<li>unsafe.Pointer 可以转换为任何类型的指针值。</li>\n<li>uintptr 可以转换为 unsafe.Pointer。</li>\n<li>unsafe.Pointer 可以转换为 uintptr。</li>\n</ul>\n\n<p>这些规则与 Go 规范一致：</p>\n <pre class=\"highlight plaintext\"><code>底层类型uintptr的任何指针或值都可以转换为指针类型，反之亦然。\n</code></pre> \n<p>规则表明 unsafe.Pointer 类似于 c 语言中的 void *。当然，void * 在 C 语言里是危险的！</p>\n\n<p>在上述规则下，对于两种不同类型 T1 和 T2，可以使 * T1 值与 unsafe.Pointer 值一致，然后将 unsafe.Pointer 值转换为 * T2 值（或 uintptr 值）。通过这种方式可以绕过 Go 类型系统和内存安全性。当然，滥用这种方式是很危险的。</p>\n\n<p>举个例子：</p>\n <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"n\">import</span> <span class=\"p\">(</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">unsafe</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">var</span> <span class=\"n\">n</span> <span class=\"n\">int64</span> <span class=\"p\">=</span> <span class=\"m\">5</span>\n    <span class=\"n\">var</span> <span class=\"n\">pn</span> <span class=\"p\">=</span> <span class=\"p\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">n</span>\n    <span class=\"n\">var</span> <span class=\"n\">pf</span> <span class=\"p\">=</span> <span class=\"p\">(*</span><span class=\"n\">float64</span><span class=\"p\">)(</span><span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(</span><span class=\"n\">pn</span><span class=\"p\">))</span>\n    <span class=\"p\">//</span> <span class=\"n\">now</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"k\">and</span> <span class=\"n\">pf</span> <span class=\"n\">are</span> <span class=\"n\">pointing</span> <span class=\"n\">at</span> <span class=\"n\">the</span> <span class=\"n\">same</span> <span class=\"n\">memory</span> <span class=\"n\">address</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(*</span><span class=\"n\">pf</span><span class=\"p\">)</span> <span class=\"p\">//</span> <span class=\"m\">2.5e-323</span>\n    <span class=\"p\">*</span><span class=\"n\">pf</span> <span class=\"p\">=</span> <span class=\"m\">3.14159</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span> <span class=\"p\">//</span> <span class=\"m\">4614256650576692846</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>在这个例子中的转换可能是无意义的，但它是安全和合法的（为什么它是安全的？）。</p>\n\n<p>因此，资源在 unsafe 包中的作用是为 Go 编译器服务，unsafe.Pointer 类型的作用是绕过 Go 类型系统和内存安全。</p>\n<h2 id=\"再来一点 unsafe.Pointer 和 uintptr\">再来一点 unsafe.Pointer 和 uintptr</h2>\n<p>这里有一些关于 unsafe.Pointer 和 uintptr 的事实：</p>\n\n<ul>\n<li>uintptr 是一个整数类型。\n\n<ul>\n<li>即使 uintptr 变量仍然有效，由 uintptr 变量表示的地址处的数据也可能被 GC 回收。</li>\n</ul>\n</li>\n<li>unsafe.Pointer 是一个指针类型。\n\n<ul>\n<li>但是 unsafe.Pointer 值不能被取消引用。</li>\n<li>如果 unsafe.Pointer 变量仍然有效，则由 unsafe.Pointer 变量表示的地址处的数据不会被 GC 回收。</li>\n</ul>\n</li>\n<li>* unsafe.Pointer 是一个通用的指针类型，就像 * int 等。</li>\n</ul>\n\n<p>由于 uintptr 是一个整数类型，uintptr 值可以进行算术运算。 所以通过使用 uintptr 和 unsafe.Pointer，我们可以绕过限制，* T 值不能在 Golang 中计算偏移量：</p>\n <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"n\">import</span> <span class=\"p\">(</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">unsafe</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">a</span> <span class=\"p\">:=</span> <span class=\"p\">[</span><span class=\"m\">4</span><span class=\"p\">]</span><span class=\"n\">int</span><span class=\"p\">{</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">}</span>\n    <span class=\"n\">p1</span> <span class=\"p\">:=</span> <span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">])</span>\n    <span class=\"n\">p3</span> <span class=\"p\">:=</span> <span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(</span><span class=\"n\">uintptr</span><span class=\"p\">(</span><span class=\"n\">p1</span><span class=\"p\">)</span> <span class=\"p\">+</span> <span class=\"m\">2</span> <span class=\"p\">*</span> <span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Sizeof</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]))</span>\n    <span class=\"p\">*(*</span><span class=\"n\">int</span><span class=\"p\">)(</span><span class=\"n\">p3</span><span class=\"p\">)</span> <span class=\"p\">=</span> <span class=\"m\">6</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">a</span> <span class=\"p\">=&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"p\">//</span> <span class=\"n\">a</span> <span class=\"p\">=</span> <span class=\"p\">[</span><span class=\"m\">0</span> <span class=\"m\">1</span> <span class=\"m\">2</span> <span class=\"m\">6</span><span class=\"p\">]</span>\n\n    <span class=\"p\">//</span> <span class=\"p\">...</span>\n\n    <span class=\"n\">type</span> <span class=\"n\">Person</span> <span class=\"n\">struct</span> <span class=\"p\">{</span>\n        <span class=\"n\">name</span>   <span class=\"k\">string</span>\n        <span class=\"n\">age</span>    <span class=\"n\">int</span>\n        <span class=\"n\">gender</span> <span class=\"n\">bool</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">who</span> <span class=\"p\">:=</span> <span class=\"n\">Person</span><span class=\"p\">{&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">John</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"m\">30</span><span class=\"p\">,</span> <span class=\"nb\">true</span><span class=\"p\">}</span>\n    <span class=\"n\">pp</span> <span class=\"p\">:=</span> <span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">who</span><span class=\"p\">)</span>\n    <span class=\"n\">pname</span> <span class=\"p\">:=</span> <span class=\"p\">(*</span><span class=\"k\">string</span><span class=\"p\">)(</span><span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(</span><span class=\"n\">uintptr</span><span class=\"p\">(</span><span class=\"n\">pp</span><span class=\"p\">)</span> <span class=\"p\">+</span> <span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Offsetof</span><span class=\"p\">(</span><span class=\"n\">who</span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"p\">)))</span>\n    <span class=\"n\">page</span> <span class=\"p\">:=</span> <span class=\"p\">(*</span><span class=\"n\">int</span><span class=\"p\">)(</span><span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(</span><span class=\"n\">uintptr</span><span class=\"p\">(</span><span class=\"n\">pp</span><span class=\"p\">)</span> <span class=\"p\">+</span> <span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Offsetof</span><span class=\"p\">(</span><span class=\"n\">who</span><span class=\"p\">.</span><span class=\"n\">age</span><span class=\"p\">)))</span>\n    <span class=\"n\">pgender</span> <span class=\"p\">:=</span> <span class=\"p\">(*</span><span class=\"n\">bool</span><span class=\"p\">)(</span><span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(</span><span class=\"n\">uintptr</span><span class=\"p\">(</span><span class=\"n\">pp</span><span class=\"p\">)</span> <span class=\"p\">+</span> <span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Offsetof</span><span class=\"p\">(</span><span class=\"n\">who</span><span class=\"p\">.</span><span class=\"n\">gender</span><span class=\"p\">)))</span>\n    <span class=\"p\">*</span><span class=\"n\">pname</span> <span class=\"p\">=</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Alice</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">*</span><span class=\"n\">page</span> <span class=\"p\">=</span> <span class=\"m\">28</span>\n    <span class=\"p\">*</span><span class=\"n\">pgender</span> <span class=\"p\">=</span> <span class=\"nb\">false</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">who</span><span class=\"p\">)</span> <span class=\"p\">//</span> <span class=\"p\">{</span><span class=\"n\">Alice</span> <span class=\"m\">28</span> <span class=\"nb\">false</span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre> <h2 id=\"unsafe包有多危险\">unsafe 包有多危险</h2>\n<p>关于 unsafe 包，Ian，Go 团队的核心成员之一，已经确认：</p>\n\n<ul>\n<li><p>在 unsafe 包中的函数的签名将不会在以后的 Go 版本中更改，</p></li>\n<li><p>并且 unsafe.Pointer 类型将在以后的 Go 版本中始终存在。</p></li>\n</ul>\n\n<p>所以，unsafe 包中的三个函数看起来不危险。 go team leader 甚至想把它们放在别的地方。 unsafe 包中这几个函数唯一不安全的是它们调用结果可能在后来的版本中返回不同的值。 很难说这种不安全是一种危险。</p>\n\n<p>看起来所有的 unsafe 包的危险都与使用 unsafe.Pointer 有关。 unsafe 包 docs 列出了一些使用 unsafe.Pointer 合法或非法的情况。 这里只列出部分非法使用案例：</p>\n <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"n\">import</span> <span class=\"p\">(</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">unsafe</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"p\">//</span> <span class=\"k\">case</span> <span class=\"n\">A</span><span class=\"p\">:</span> <span class=\"n\">conversions</span> <span class=\"n\">between</span> <span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span> <span class=\"k\">and</span> <span class=\"n\">uintptr</span> \n<span class=\"p\">//</span>         <span class=\"n\">don</span><span class=\"s1\">'t appear in the same expression\nfunc illegalUseA() {\n    fmt.Println(&amp;quot;===================== illegalUseA&amp;quot;)\n\n    pa := new([4]int)\n\n    // split the legal use\n    // p1 := unsafe.Pointer(uintptr(unsafe.Pointer(pa)) + unsafe.Sizeof(pa[0]))\n    // into two expressions (illegal use):\n    ptr := uintptr(unsafe.Pointer(pa))\n    p1 := unsafe.Pointer(ptr + unsafe.Sizeof(pa[0]))\n    // &amp;quot;go vet&amp;quot; will make a warning for the above line:\n    // possible misuse of unsafe.Pointer\n\n    // the unsafe package docs, https://golang.org/pkg/unsafe/#Pointer,\n    // thinks above splitting is illegal.\n    // but the current Go compiler and runtime (1.7.3) can'</span><span class=\"n\">t</span> <span class=\"n\">detect</span>\n    <span class=\"p\">//</span> <span class=\"n\">this</span> <span class=\"n\">illegal</span> <span class=\"n\">use</span><span class=\"p\">.</span>\n    <span class=\"p\">//</span> <span class=\"n\">however</span><span class=\"p\">,</span> <span class=\"k\">to</span> <span class=\"n\">make</span> <span class=\"n\">your</span> <span class=\"n\">program</span> <span class=\"nf\">run</span> <span class=\"n\">well</span> <span class=\"n\">for</span> <span class=\"n\">later</span> <span class=\"n\">Go</span> <span class=\"n\">versions</span><span class=\"p\">,</span>\n    <span class=\"p\">//</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">best</span> <span class=\"k\">to</span> <span class=\"n\">comply</span> <span class=\"k\">with</span> <span class=\"n\">the</span> <span class=\"n\">unsafe</span> <span class=\"k\">package</span> <span class=\"n\">docs</span><span class=\"p\">.</span>\n\n    <span class=\"p\">*(*</span><span class=\"n\">int</span><span class=\"p\">)(</span><span class=\"n\">p1</span><span class=\"p\">)</span> <span class=\"p\">=</span> <span class=\"m\">123</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;*(*</span><span class=\"n\">int</span><span class=\"p\">)(</span><span class=\"n\">p1</span><span class=\"p\">)</span>  <span class=\"p\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"p\">*(*</span><span class=\"n\">int</span><span class=\"p\">)(</span><span class=\"n\">p1</span><span class=\"p\">))</span> <span class=\"p\">//</span>\n<span class=\"p\">}</span>    \n\n<span class=\"p\">//</span> <span class=\"k\">case</span> <span class=\"n\">B</span><span class=\"p\">:</span> <span class=\"n\">pointers</span> <span class=\"n\">are</span> <span class=\"n\">pointing</span> <span class=\"n\">at</span> <span class=\"n\">unknown</span> <span class=\"n\">addresses</span>\n<span class=\"n\">func</span> <span class=\"n\">illegalUseB</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;=====================</span> <span class=\"n\">illegalUseB</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n    <span class=\"n\">a</span> <span class=\"p\">:=</span> <span class=\"p\">[</span><span class=\"m\">4</span><span class=\"p\">]</span><span class=\"n\">int</span><span class=\"p\">{</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">}</span>\n    <span class=\"n\">p</span> <span class=\"p\">:=</span> <span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">a</span><span class=\"p\">)</span>\n    <span class=\"n\">p</span> <span class=\"p\">=</span> <span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(</span><span class=\"n\">uintptr</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span> <span class=\"p\">+</span> <span class=\"n\">uintptr</span><span class=\"p\">(</span><span class=\"n\">len</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span> <span class=\"p\">*</span> <span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Sizeof</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]))</span>\n    <span class=\"p\">//</span> <span class=\"n\">now</span> <span class=\"n\">p</span> <span class=\"n\">is</span> <span class=\"n\">pointing</span> <span class=\"n\">at</span> <span class=\"n\">the</span> <span class=\"k\">end</span> <span class=\"k\">of</span> <span class=\"n\">the</span> <span class=\"n\">memory</span> <span class=\"n\">occupied</span> <span class=\"n\">by</span> <span class=\"n\">value</span> <span class=\"n\">a</span><span class=\"p\">.</span>\n    <span class=\"p\">//</span> <span class=\"n\">up</span> <span class=\"k\">to</span> <span class=\"n\">now</span><span class=\"p\">,</span> <span class=\"n\">although</span> <span class=\"n\">p</span> <span class=\"n\">is</span> <span class=\"n\">invalid</span><span class=\"p\">,</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">no</span> <span class=\"n\">problem</span><span class=\"p\">.</span>\n    <span class=\"p\">//</span> <span class=\"n\">but</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">illegal</span> <span class=\"k\">if</span> <span class=\"n\">we</span> <span class=\"n\">modify</span> <span class=\"n\">the</span> <span class=\"n\">value</span> <span class=\"n\">pointed</span> <span class=\"n\">by</span> <span class=\"n\">p</span>\n    <span class=\"p\">*(*</span><span class=\"n\">int</span><span class=\"p\">)(</span><span class=\"n\">p</span><span class=\"p\">)</span> <span class=\"p\">=</span> <span class=\"m\">123</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;*(*</span><span class=\"n\">int</span><span class=\"p\">)(</span><span class=\"n\">p</span><span class=\"p\">)</span>  <span class=\"p\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"p\">*(*</span><span class=\"n\">int</span><span class=\"p\">)(</span><span class=\"n\">p</span><span class=\"p\">))</span> <span class=\"p\">//</span> <span class=\"m\">123</span> <span class=\"k\">or</span> <span class=\"k\">not</span> <span class=\"m\">123</span>\n    <span class=\"p\">//</span> <span class=\"n\">the</span> <span class=\"n\">current</span> <span class=\"n\">Go</span> <span class=\"n\">compiler</span><span class=\"p\">/</span><span class=\"n\">runtime</span> <span class=\"p\">(</span><span class=\"m\">1.7.3</span><span class=\"p\">)</span> <span class=\"k\">and</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">go</span> <span class=\"n\">vet</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> \n    <span class=\"p\">//</span> <span class=\"n\">will</span> <span class=\"k\">not</span> <span class=\"n\">detect</span> <span class=\"n\">the</span> <span class=\"n\">illegal</span> <span class=\"n\">use</span> <span class=\"n\">here</span><span class=\"p\">.</span>\n\n    <span class=\"p\">//</span> <span class=\"n\">however</span><span class=\"p\">,</span> <span class=\"n\">the</span> <span class=\"n\">current</span> <span class=\"n\">Go</span> <span class=\"n\">runtime</span> <span class=\"p\">(</span><span class=\"m\">1.7.3</span><span class=\"p\">)</span> <span class=\"n\">will</span> \n    <span class=\"p\">//</span> <span class=\"n\">detect</span> <span class=\"n\">the</span> <span class=\"n\">illegal</span> <span class=\"n\">use</span> <span class=\"k\">and</span> <span class=\"n\">panic</span> <span class=\"n\">for</span> <span class=\"n\">the</span> <span class=\"n\">below</span> <span class=\"n\">code</span><span class=\"p\">.</span>\n    <span class=\"n\">p</span> <span class=\"p\">=</span> <span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">a</span><span class=\"p\">)</span>\n    <span class=\"n\">for</span> <span class=\"n\">i</span> <span class=\"p\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;=</span> <span class=\"n\">len</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">);</span> <span class=\"n\">i</span><span class=\"p\">++</span> <span class=\"p\">{</span>\n        <span class=\"p\">*(*</span><span class=\"n\">int</span><span class=\"p\">)(</span><span class=\"n\">p</span><span class=\"p\">)</span> <span class=\"p\">=</span> <span class=\"m\">123</span> <span class=\"p\">//</span> <span class=\"n\">Go</span> <span class=\"n\">runtime</span> <span class=\"p\">(</span><span class=\"m\">1.7.3</span><span class=\"p\">)</span> <span class=\"n\">never</span> <span class=\"n\">panic</span> <span class=\"n\">here</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">tests</span>\n\n        <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"p\">*(*</span><span class=\"n\">int</span><span class=\"p\">)(</span><span class=\"n\">p</span><span class=\"p\">))</span>\n        <span class=\"p\">//</span> <span class=\"n\">panic</span> <span class=\"n\">at</span> <span class=\"n\">the</span> <span class=\"n\">above</span> <span class=\"n\">line</span> <span class=\"n\">for</span> <span class=\"n\">the</span> <span class=\"n\">last</span> <span class=\"n\">iteration</span><span class=\"p\">,</span> <span class=\"n\">when</span> <span class=\"n\">i</span><span class=\"p\">==</span><span class=\"m\">4.</span>\n        <span class=\"p\">//</span> <span class=\"n\">runtime</span> <span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">memory</span> <span class=\"n\">address</span> <span class=\"k\">or</span> <span class=\"n\">nil</span> <span class=\"n\">pointer</span> <span class=\"n\">dereference</span>\n\n        <span class=\"n\">p</span> <span class=\"p\">=</span> <span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(</span><span class=\"n\">uintptr</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span> <span class=\"p\">+</span> <span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Sizeof</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]))</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">illegalUseA</span><span class=\"p\">()</span>\n    <span class=\"n\">illegalUseB</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>编译器很难检测 Go 程序中非法的 unsafe.Pointer 使用。 运行 “go vet” 可以帮助找到一些潜在的错误，但不是所有的都能找到。 同样是 Go 运行时，也不能检测所有的非法使用。 非法 unsafe.Pointer 使用可能会使程序崩溃或表现得怪异（有时是正常的，有时是异常的）。 这就是为什么使用不安全的包是危险的。</p>\n<h2 id=\"转换*T1 为 *T2\">转换 *T1 为 *T2</h2>\n<p>对于将 * T1 转换为 unsafe.Pointer，然后转换为 * T2，unsafe 包 docs 说：</p>\n <pre class=\"highlight plaintext\"><code>如果T2比T1大，并且两者共享等效内存布局，则该转换允许将一种类型的数据重新解释为另一类型的数据。\n</code></pre> \n<p>这种 “等效内存布局” 的定义是有一些模糊的。 看起来 go 团队故意如此。 这使得使用 unsafe 包更危险。</p>\n\n<p>由于 Go 团队不愿意在这里做出准确的定义，本文也不尝试这样做。 这里，列出了已确认的合法用例的一小部分，</p>\n<h3 id=\"合法用例1：在[]T和[]MyT之间转换\">合法用例 1：在 [] T 和 [] MyT 之间转换</h3>\n<p>在这个例子里，我们用 int 作为 T：</p>\n <pre class=\"highlight plaintext\"><code>type MyInt int\n</code></pre> \n<p>在 Golang 中，[] int 和 [] MyInt 是两种不同的类型，它们的底层类型是自身。 因此，[] int 的值不能转换为 [] MyInt，反之亦然。 但是在 unsafe.Pointer 的帮助下，转换是可能的：</p>\n <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"n\">import</span> <span class=\"p\">(</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">unsafe</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">type</span> <span class=\"n\">MyInt</span> <span class=\"n\">int</span>\n\n    <span class=\"n\">a</span> <span class=\"p\">:=</span> <span class=\"p\">[]</span><span class=\"n\">MyInt</span><span class=\"p\">{</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">}</span>\n    <span class=\"p\">//</span> <span class=\"n\">b</span> <span class=\"p\">:=</span> <span class=\"p\">([]</span><span class=\"n\">int</span><span class=\"p\">)(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"p\">//</span> <span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"n\">cannot</span> <span class=\"n\">convert</span> <span class=\"n\">a</span> <span class=\"p\">(</span><span class=\"n\">type</span> <span class=\"p\">[]</span><span class=\"n\">MyInt</span><span class=\"p\">)</span> <span class=\"k\">to</span> <span class=\"n\">type</span> <span class=\"p\">[]</span><span class=\"n\">int</span>\n    <span class=\"n\">b</span> <span class=\"p\">:=</span> <span class=\"p\">*(*[]</span><span class=\"n\">int</span><span class=\"p\">)(</span><span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">a</span><span class=\"p\">))</span>\n\n    <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]=</span> <span class=\"m\">3</span>\n\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">a</span> <span class=\"p\">=&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"p\">//</span> <span class=\"n\">a</span> <span class=\"p\">=</span> <span class=\"p\">[</span><span class=\"m\">3</span> <span class=\"m\">1</span> <span class=\"m\">2</span><span class=\"p\">]</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">b</span> <span class=\"p\">=&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"p\">//</span> <span class=\"n\">b</span> <span class=\"p\">=</span> <span class=\"p\">[</span><span class=\"m\">3</span> <span class=\"m\">1</span> <span class=\"m\">2</span><span class=\"p\">]</span>\n\n    <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"m\">9</span>\n\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">a</span> <span class=\"p\">=&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"p\">//</span> <span class=\"n\">a</span> <span class=\"p\">=</span> <span class=\"p\">[</span><span class=\"m\">3</span> <span class=\"m\">1</span> <span class=\"m\">9</span><span class=\"p\">]</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">b</span> <span class=\"p\">=&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"p\">//</span> <span class=\"n\">b</span> <span class=\"p\">=</span> <span class=\"p\">[</span><span class=\"m\">3</span> <span class=\"m\">1</span> <span class=\"m\">9</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre> <h3 id=\"合法用例2: 调用sync/atomic包中指针相关的函数\">合法用例 2: 调用 sync/atomic 包中指针相关的函数</h3>\n<p>sync / atomic 包中的以下函数的大多数参数和结果类型都是 unsafe.Pointer 或 *unsafe.Pointer：</p>\n\n<ul>\n<li>func CompareAndSwapPointer（addr * unsafe.Pointer，old，new unsafe.Pointer）（swapped bool）</li>\n<li>func LoadPointer（addr * unsafe.Pointer）（val unsafe.Pointer）</li>\n<li>func StorePointer（addr * unsafe.Pointer，val unsafe.Pointer）</li>\n<li>func SwapPointer（addr * unsafe.Pointer，new unsafe.Pointer）（old unsafe.Pointer）</li>\n</ul>\n\n<p>要使用这些功能，必须导入 unsafe 包。\n注意：* unsafe.Pointer 是一般类型，因此 * unsafe.Pointer 的值可以转换为 unsafe.Pointer，反之亦然。</p>\n <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"n\">import</span> <span class=\"p\">(</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"nb\">log</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">unsafe</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">sync</span><span class=\"p\">/</span><span class=\"n\">atomic</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">sync</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">math</span><span class=\"p\">/</span><span class=\"n\">rand</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">var</span> <span class=\"n\">data</span> <span class=\"p\">*</span><span class=\"k\">string</span>\n\n<span class=\"p\">//</span> <span class=\"n\">get</span> <span class=\"n\">data</span> <span class=\"n\">atomically</span>\n<span class=\"n\">func</span> <span class=\"n\">Data</span><span class=\"p\">()</span> <span class=\"k\">string</span> <span class=\"p\">{</span>\n    <span class=\"n\">p</span> <span class=\"p\">:=</span> <span class=\"p\">(*</span><span class=\"k\">string</span><span class=\"p\">)(</span><span class=\"n\">atomic</span><span class=\"p\">.</span><span class=\"n\">LoadPointer</span><span class=\"p\">(</span>\n            <span class=\"p\">(*</span><span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span><span class=\"p\">)(</span><span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">data</span><span class=\"p\">)),</span>\n        <span class=\"p\">))</span>\n    <span class=\"k\">if</span> <span class=\"n\">p</span> <span class=\"p\">==</span> <span class=\"n\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">return</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"n\">return</span> <span class=\"p\">*</span><span class=\"n\">p</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">//</span> <span class=\"k\">set</span> <span class=\"n\">data</span> <span class=\"n\">atomically</span>\n<span class=\"n\">func</span> <span class=\"n\">SetData</span><span class=\"p\">(</span><span class=\"n\">d</span> <span class=\"k\">string</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">atomic</span><span class=\"p\">.</span><span class=\"n\">StorePointer</span><span class=\"p\">(</span>\n            <span class=\"p\">(*</span><span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span><span class=\"p\">)(</span><span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">data</span><span class=\"p\">)),</span> \n            <span class=\"n\">unsafe</span><span class=\"p\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">d</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">var</span> <span class=\"n\">wg</span> <span class=\"n\">sync</span><span class=\"p\">.</span><span class=\"n\">WaitGroup</span>\n    <span class=\"n\">wg</span><span class=\"p\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"m\">200</span><span class=\"p\">)</span>\n\n    <span class=\"n\">for</span> <span class=\"k\">range</span> <span class=\"p\">[</span><span class=\"m\">100</span><span class=\"p\">]</span><span class=\"n\">struct</span><span class=\"p\">{}{}</span> <span class=\"p\">{</span>\n        <span class=\"n\">go</span> <span class=\"n\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n            <span class=\"n\">time</span><span class=\"p\">.</span><span class=\"nf\">Sleep</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">.</span><span class=\"n\">Second</span> <span class=\"p\">*</span> <span class=\"n\">time</span><span class=\"p\">.</span><span class=\"n\">Duration</span><span class=\"p\">(</span><span class=\"n\">rand</span><span class=\"p\">.</span><span class=\"n\">Intn</span><span class=\"p\">(</span><span class=\"m\">1000</span><span class=\"p\">))</span> <span class=\"p\">/</span> <span class=\"m\">1000</span><span class=\"p\">)</span>\n\n            <span class=\"nb\">log</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">())</span>\n            <span class=\"n\">wg</span><span class=\"p\">.</span><span class=\"n\">Done</span><span class=\"p\">()</span>\n        <span class=\"p\">}()</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">for</span> <span class=\"n\">i</span> <span class=\"p\">:=</span> <span class=\"k\">range</span> <span class=\"p\">[</span><span class=\"m\">100</span><span class=\"p\">]</span><span class=\"n\">struct</span><span class=\"p\">{}{}</span> <span class=\"p\">{</span>\n        <span class=\"n\">go</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"n\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">time</span><span class=\"p\">.</span><span class=\"nf\">Sleep</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">.</span><span class=\"n\">Second</span> <span class=\"p\">*</span> <span class=\"n\">time</span><span class=\"p\">.</span><span class=\"n\">Duration</span><span class=\"p\">(</span><span class=\"n\">rand</span><span class=\"p\">.</span><span class=\"n\">Intn</span><span class=\"p\">(</span><span class=\"m\">1000</span><span class=\"p\">))</span> <span class=\"p\">/</span> <span class=\"m\">1000</span><span class=\"p\">)</span>\n            <span class=\"n\">s</span> <span class=\"p\">:=</span> <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Sprint</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;#&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n            <span class=\"nb\">log</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;====&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">s</span><span class=\"p\">)</span>\n\n            <span class=\"n\">SetData</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n            <span class=\"n\">wg</span><span class=\"p\">.</span><span class=\"n\">Done</span><span class=\"p\">()</span>\n        <span class=\"p\">}(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">wg</span><span class=\"p\">.</span><span class=\"nf\">Wait</span><span class=\"p\">()</span>\n\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">final</span> <span class=\"n\">data</span> <span class=\"p\">=</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"p\">*</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> <h2 id=\"结论\">结论</h2>\n<ul>\n<li>unsafe 包用于 Go 编译器，而不是 Go 运行时。</li>\n<li>使用 unsafe 作为程序包名称只是让你在使用此包是更加小心。</li>\n<li>使用 unsafe.Pointer 并不总是一个坏主意，有时我们必须使用它。</li>\n<li>Golang 的类型系统是为了安全和效率而设计的。 但是在 Go 类型系统中，安全性比效率更重要。 通常 Go 是高效的，但有时安全真的会导致 Go 程序效率低下。 unsafe 包用于有经验的程序员通过安全地绕过 Go 类型系统的安全性来消除这些低效。</li>\n<li>unsafe 包可能被滥用并且是危险的。</li>\n</ul>\n\n<p>原文：<a href=\"http://www.tapirgames.com/blog/golang-unsafe\" rel=\"nofollow\" target=\"_blank\">http://www.tapirgames.com/blog/golang-unsafe</a></p>",
    "hits": 536,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 372,
    "title": "golang vendor路径问题",
    "created_at": "2016-11-13 12:47:57",
    "updated_at": "2018-05-17 13:11:49",
    "replied_at": "2018-05-17 13:11:49",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 5875,
    "last_reply_user_login": "aeoluswing",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 149,
    "user": "{\"id\": 149, \"name\": \"viktor1992\", \"login\": \"viktor1992\", \"avatar\": \"https://gocn.vip/system/letter_avatars/v.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "请教一下，在gopath（这里和下面提及的gopath都是包含src目录了）下面创建a.go和vendor目录，\n```\ncat a.go \npackage main\n\nimport(\n\t&quot;fmt&quot;\n \t&quot;wer&quot;\n)\n\nfunc main(){\n\tfmt.Println(wer.Echo())\n}\n```\n```\ncat vendor/wer/s.go \npackage wer\n\nfunc Echo() int{\n\treturn 123\n}\n```\n为什么在a.go里会提示找不到这个包，但是在同级目录，可以找到github.com等其他的包\n\n在GOPATH下新建一层目录test，把a.go和vendor都cp到test 在test下go build就完全没问题，即使吧test目录下的vendor删掉，也会自动的找到上一层目录（GOPATH）下的vendor\n\n同属于GOPATH，为什么第二种情况就能找到vendor，第一种情况找不到，真是奇了个怪。。。",
    "body_html": "<p>请教一下，在 gopath（这里和下面提及的 gopath 都是包含 src 目录了）下面创建 a.go 和 vendor 目录，</p>\n <pre class=\"highlight mosel\"><code><span class=\"n\">cat</span> <span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">go</span> \n<span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"n\">import</span><span class=\"p\">(</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">wer</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">(){</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">wer</span><span class=\"p\">.</span><span class=\"n\">Echo</span><span class=\"p\">())</span>\n<span class=\"p\">}</span>\n</code></pre>  <pre class=\"highlight mosel\"><code><span class=\"n\">cat</span> <span class=\"n\">vendor</span><span class=\"p\">/</span><span class=\"n\">wer</span><span class=\"p\">/</span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">go</span> \n<span class=\"k\">package</span> <span class=\"n\">wer</span>\n\n<span class=\"n\">func</span> <span class=\"n\">Echo</span><span class=\"p\">()</span> <span class=\"n\">int</span><span class=\"p\">{</span>\n    <span class=\"n\">return</span> <span class=\"m\">123</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>为什么在 a.go 里会提示找不到这个包，但是在同级目录，可以找到 github.com 等其他的包</p>\n\n<p>在 GOPATH 下新建一层目录 test，把 a.go 和 vendor 都 cp 到 test 在 test 下 go build 就完全没问题，即使吧 test 目录下的 vendor 删掉，也会自动的找到上一层目录（GOPATH）下的 vendor</p>\n\n<p>同属于 GOPATH，为什么第二种情况就能找到 vendor，第一种情况找不到，真是奇了个怪。。。</p>",
    "hits": 589,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 373,
    "title": "监控系统中到底是 pull 还是 push 方案好？",
    "created_at": "2016-11-14 09:45:58",
    "updated_at": "2020-03-22 15:24:15",
    "replied_at": "2020-03-22 14:36:26",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 9384,
    "last_reply_user_login": "UlricQin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "最近在研究各种监控系统，但是发现push和pull的方案都有，我也不知道这个里面到底哪个方案比较好？大家说说两个的利弊？\r\n\r\n这个是网上找到的一个对比优缺点：\r\n\r\n| Push | Pull |\r\n|---|---|\r\n|Discovery|Agent automatically sends metrics as soon as it starts up, ensuring that it is immediately detected and continuously monitored. Speed of discovery is independent of number of agents.|Discovery requires collector to periodically sweep address space to find new agents. Speed of discovery depends on discovery sweep interval and size of address space.|\r\n|Scalability|Polling task fully distributed among agents, resulting in linear scalability. Lightweight central collector listens for updates and stores measurements. Minimal work for agents to periodically send fixed set of measurements. Agents are stateless, exporting data as soon as it is generated.|Workload on central poller increases with the number of devices polled. Additional work on poller to generate requests and maintaining session state in order to match requests and responses. Additional work for agents to parse and process requests. Agents often required to maintain state so that metrics can be retrieved at a later time by the poller.|\r\n|Security|Push agents are inherently secure against remote attacks since they do not listen for network connections.|Polling protocol can potentially open up system to remote access and denial of service attacks.|\r\n|Operational Complexity|Minimal configuration required for agents: polling interval and address of collector. Firewalls need to be configured for unidirectional communication of measurements from agents to collector.|\tPoller needs to be configured with list of devices to poll, security credentials to access the devices and the set of measurements to retrieve. Firewalls need to be configured to allow bi-directional communication between poller and agents.|\r\n|Latency|The low overhead and distributed nature of the push model permits measurement to be sent more frequently, allowing the management system to quickly react to changes. In addition, many push protocols, like sFlow, are implemented on top of UDP, providing non-blocking, low-latency transport of measurements.|The lack of scalability in polling typically means that measurements are retrieved less often, resulting in a delayed view of performance that makes the management system less responsive to changes. The two way communication involved in polling increases latency as connections are established and authenticated before measurements can be retrieved.|\r\n|Flexibility|Relatively inflexible: pre-determined, fixed set of measurements are periodically exported.|Flexible: poller can ask for any metric at any time.|",
    "body_html": "<p>最近在研究各种监控系统，但是发现 push 和 pull 的方案都有，我也不知道这个里面到底哪个方案比较好？大家说说两个的利弊？</p>\n\n<p>这个是网上找到的一个对比优缺点：</p>\n <table class=\"table table-bordered table-striped\">\n<tbody><tr>\n<th>Push</th>\n<th>Pull</th>\n</tr>\n<tr>\n<td>Discovery</td>\n<td>Agent automatically sends metrics as soon as it starts up, ensuring that it is immediately detected and continuously monitored. Speed of discovery is independent of number of agents.</td>\n</tr>\n<tr>\n<td>Scalability</td>\n<td>Polling task fully distributed among agents, resulting in linear scalability. Lightweight central collector listens for updates and stores measurements. Minimal work for agents to periodically send fixed set of measurements. Agents are stateless, exporting data as soon as it is generated.</td>\n</tr>\n<tr>\n<td>Security</td>\n<td>Push agents are inherently secure against remote attacks since they do not listen for network connections.</td>\n</tr>\n<tr>\n<td>Operational Complexity</td>\n<td>Minimal configuration required for agents: polling interval and address of collector. Firewalls need to be configured for unidirectional communication of measurements from agents to collector.</td>\n</tr>\n<tr>\n<td>Latency</td>\n<td>The low overhead and distributed nature of the push model permits measurement to be sent more frequently, allowing the management system to quickly react to changes. In addition, many push protocols, like sFlow, are implemented on top of UDP, providing non-blocking, low-latency transport of measurements.</td>\n</tr>\n<tr>\n<td>Flexibility</td>\n<td>Relatively inflexible: pre-determined, fixed set of measurements are periodically exported.</td>\n</tr>\n</tbody></table> ",
    "hits": 1036,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 374,
    "title": "beego如何指定应用的根名称 默认情况下都是/能否用/oa/作为根路径？",
    "created_at": "2016-11-14 10:37:53",
    "updated_at": "2021-01-16 22:26:30",
    "replied_at": "2016-11-14 12:31:50",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1324,
    "user": "{\"id\": 1324, \"name\": \"yadsun\", \"login\": \"yadsun\", \"avatar\": \"https://gocn.vip/system/letter_avatars/y.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "beego的router可以定义不同路径跳转到不同的Controller,如何定义一个全局的根应用名呢？",
    "body_html": "<p>beego 的 router 可以定义不同路径跳转到不同的 Controller,如何定义一个全局的根应用名呢？</p>",
    "hits": 344,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 375,
    "title": "【南京】【地产】组建自己的研发团队（重度喜欢golang）",
    "created_at": "2016-11-14 23:19:00",
    "updated_at": "2018-09-05 14:29:00",
    "replied_at": "2018-09-05 14:29:00",
    "replies_count": 17,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 255,
    "last_reply_user_login": "haoc7",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1019,
    "user": "{\"id\": 1019, \"name\": \"chenghuama\", \"login\": \"chenghuama\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "地产公司下属营销策划公司，业务涉及营销策划代理，二手房，旅游房产，海外房产。现在筹备自己的研发团队，需要实现的项目：1.房产电商，2.一二手房养老酒店农业等客户数据整合挖掘，3.项目管理，4.等等等等。干不完的活，就差你来一起一点点建团队一点点玩\n\n团队有了，咱们可以借助地产营销的资源在南京大力推广golang。",
    "body_html": "<p>地产公司下属营销策划公司，业务涉及营销策划代理，二手房，旅游房产，海外房产。现在筹备自己的研发团队，需要实现的项目：1.房产电商，2.一二手房养老酒店农业等客户数据整合挖掘，3.项目管理，4.等等等等。干不完的活，就差你来一起一点点建团队一点点玩</p>\n\n<p>团队有了，咱们可以借助地产营销的资源在南京大力推广 golang。</p>",
    "hits": 750,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 376,
    "title": "求http高并发日志处理包",
    "created_at": "2016-11-15 09:57:25",
    "updated_at": "2016-11-16 11:39:44",
    "replied_at": "2016-11-16 11:39:44",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 682,
    "last_reply_user_login": "mintzhao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1331,
    "user": "{\"id\": 1331, \"name\": \"kakashi\", \"login\": \"kakashi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "一个qps 1000的http服务，想把每次请求的参数都记录到 txt中，求一个稳定性、性能都可以的包，或者实现。\n最好可以按小时或者日期分文件，按大小也可以",
    "body_html": "<p>一个 qps 1000 的 http 服务，想把每次请求的参数都记录到 txt 中，求一个稳定性、性能都可以的包，或者实现。\n最好可以按小时或者日期分文件，按大小也可以</p>",
    "hits": 521,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 377,
    "title": "beego 工程可执行文件与资源、模板等文件的路径问题",
    "created_at": "2016-11-15 12:18:11",
    "updated_at": "2021-01-16 21:40:27",
    "replied_at": "2016-11-15 22:51:59",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 460,
    "user": "{\"id\": 460, \"name\": \"cooppor\", \"login\": \"cooppor\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "关于beego编译后的可执行文件与其相关的模板、资源等文件的路径关系，一直让我很头疼。\n\n在linux环境下，想做成放在`/etc/init.d/`下做成服务，但是应用文件执行后，与其相关的配置、资源以及模板文件都找不到了，原先都是相对的。\n\n之前用全路径或用shell文件在`/etc/rc.local`文件中是正常的，但是放在`/etc/init.d`目录下，该怎么弄呢？",
    "body_html": "<p>关于 beego 编译后的可执行文件与其相关的模板、资源等文件的路径关系，一直让我很头疼。</p>\n\n<p>在 linux 环境下，想做成放在<code>/etc/init.d/</code>下做成服务，但是应用文件执行后，与其相关的配置、资源以及模板文件都找不到了，原先都是相对的。</p>\n\n<p>之前用全路径或用 shell 文件在<code>/etc/rc.local</code>文件中是正常的，但是放在<code>/etc/init.d</code>目录下，该怎么弄呢？</p>",
    "hits": 545,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 379,
    "title": "有没有什么好用的golang版本的git客户端(类似python的gittle)",
    "created_at": "2016-11-15 13:33:33",
    "updated_at": "2016-11-15 21:53:05",
    "replied_at": "2016-11-15 21:53:05",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 70,
    "user": "{\"id\": 70, \"name\": \"Samuier\", \"login\": \"Samuier\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "有没有golang版本的git客户端啊。可以实现提交，克隆，下拉等功能的，就像python的gittle。\n看了gopkg.in/src-d/go-git ，但是这个看了半天不知道怎么用。git上的示例参数类型和数目都对不上，看源码上跳来跳去的，实在是麻烦。\n请教下有没有其他的比较好的git客户端啊。",
    "body_html": "<p>有没有 golang 版本的 git 客户端啊。可以实现提交，克隆，下拉等功能的，就像 python 的 gittle。\n看了 gopkg.in/src-d/go-git ，但是这个看了半天不知道怎么用。git 上的示例参数类型和数目都对不上，看源码上跳来跳去的，实在是麻烦。\n请教下有没有其他的比较好的 git 客户端啊。</p>",
    "hits": 388,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 380,
    "title": "瞎改一桶啊",
    "created_at": "2016-11-15 14:10:01",
    "updated_at": "2016-12-08 16:30:20",
    "replied_at": "2016-12-08 16:30:20",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1333,
    "last_reply_user_login": "leaf",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1333,
    "user": "{\"id\": 1333, \"name\": \"leaf\", \"login\": \"leaf\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "\n",
    "body_html": "",
    "hits": 358,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 381,
    "title": "应该如何组织代码结构以将工具代码和业务代码分离？",
    "created_at": "2016-11-15 23:23:47",
    "updated_at": "2018-02-09 14:43:05",
    "replied_at": "2018-02-09 14:43:05",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 3001,
    "last_reply_user_login": "EyesChan",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 423,
    "user": "{\"id\": 423, \"name\": \"chenqinghe\", \"login\": \"chenqinghe\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "有个问题就是使用go get 命令安装第三方包或者第三方工具的时候，源码会混在一起，不太方便管理，有没有什么方案能够把第三方包的源码和第三方工具的源码分开？或者有没有第三方工具安装之后源码就删除了的命令或者工具之类的，麻烦介绍下。",
    "body_html": "<p>有个问题就是使用 go get 命令安装第三方包或者第三方工具的时候，源码会混在一起，不太方便管理，有没有什么方案能够把第三方包的源码和第三方工具的源码分开？或者有没有第三方工具安装之后源码就删除了的命令或者工具之类的，麻烦介绍下。</p>",
    "hits": 498,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 382,
    "title": "网站实现在线用户统计有哪几种方式？",
    "created_at": "2016-11-16 10:57:44",
    "updated_at": "2016-11-17 16:21:55",
    "replied_at": "2016-11-17 16:21:55",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1055,
    "last_reply_user_login": "hlj2722",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1055,
    "user": "{\"id\": 1055, \"name\": \"hlj2722\", \"login\": \"hlj2722\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 597,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 383,
    "title": "【南京】成熟golang团队扩招，公司：孩子王",
    "created_at": "2016-11-16 11:54:19",
    "updated_at": "2016-11-18 09:56:58",
    "replied_at": "2016-11-18 09:56:43",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1339,
    "last_reply_user_login": "tonyjt",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1339,
    "user": "{\"id\": 1339, \"name\": \"tonyjt\", \"login\": \"tonyjt\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "【南京】成熟golang团队扩招，公司：孩子王\n\n要求：聪明，好学。\n\n如果你对高并发高负载有兴趣或者有经验，欢迎加微信: tonyjjt\n\n我们底层框架是自己写的开源项目，主要包括redis,db,还有配置等: github.com/tonyjt/tgo ,有兴趣的可以看一看，欢迎指教。",
    "body_html": "<p>【南京】成熟 golang 团队扩招，公司：孩子王</p>\n\n<p>要求：聪明，好学。</p>\n\n<p>如果你对高并发高负载有兴趣或者有经验，欢迎加微信: tonyjjt</p>\n\n<p>我们底层框架是自己写的开源项目，主要包括 redis,db,还有配置等: github.com/tonyjt/tgo ,有兴趣的可以看一看，欢迎指教。</p>",
    "hits": 528,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 384,
    "title": "好像不能删除问题或者文章？",
    "created_at": "2016-11-16 22:14:52",
    "updated_at": "2016-12-25 14:05:23",
    "replied_at": "2016-12-25 14:05:23",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 73,
    "user": "{\"id\": 73, \"name\": \"qiuyesuifeng\", \"login\": \"qiuyesuifeng\", \"avatar\": \"https://gocn.vip/system/letter_avatars/q.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "用的浏览器是 google chrome，我看 wecenter 之前讨论过老的版本可能确实有点问题，但是新的版本已经修复了。",
    "body_html": "<p>用的浏览器是 google chrome，我看 wecenter 之前讨论过老的版本可能确实有点问题，但是新的版本已经修复了。</p>",
    "hits": 449,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 385,
    "title": "[广州]招聘Go语言工程师",
    "created_at": "2016-11-16 22:45:03",
    "updated_at": "2016-12-01 11:30:13",
    "replied_at": "2016-12-01 11:30:13",
    "replies_count": 1,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 1406,
    "last_reply_user_login": "hunterhug",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 779,
    "user": "{\"id\": 779, \"name\": \"sundyli\", \"login\": \"sundyli\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "公司: 广州 初星科技\n待遇: 10-20k \n\n要求\n1.一年以上后台开发经验, 熟悉go语言优先\n2.熟悉linux系统以及原理, 有扎实的数据结构和算法基础,熟练网络编程,有高并发经验优先\n3.对分布式爬虫框架,实时流处理 storm spark 等数据采集处理优先\n4.沟通能力强,能独立解决问题.\n\n公司在广州大学城, 天使轮, 目前10人以下精简团队, 初创成员来自网易阿里, 数据上都有深厚积累,公司的核心技术方向是数据挖掘,  NLP,机器学习,推荐系统有兴趣者 欢迎加入, wechat:  543950155",
    "body_html": "<p>公司: 广州 初星科技\n待遇: 10-20k </p>\n\n<p>要求\n1.一年以上后台开发经验, 熟悉 go 语言优先\n2.熟悉 linux 系统以及原理, 有扎实的数据结构和算法基础,熟练网络编程,有高并发经验优先\n3.对分布式爬虫框架,实时流处理 storm spark 等数据采集处理优先\n4.沟通能力强,能独立解决问题.</p>\n\n<p>公司在广州大学城, 天使轮, 目前 10 人以下精简团队, 初创成员来自网易阿里, 数据上都有深厚积累,公司的核心技术方向是数据挖掘,  NLP,机器学习,推荐系统有兴趣者 欢迎加入, wechat:  543950155</p>",
    "hits": 485,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 386,
    "title": "关于GORM来获取float32或者64类型的做法",
    "created_at": "2016-11-17 00:24:06",
    "updated_at": "2016-11-17 16:47:41",
    "replied_at": "2016-11-17 16:47:41",
    "replies_count": 1,
    "node_name": "GORM",
    "node_id": 44,
    "last_reply_user_id": 198,
    "last_reply_user_login": "lucky",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 198,
    "user": "{\"id\": 198, \"name\": \"lucky\", \"login\": \"lucky\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Struct里我的字段已经设置为float64\n刚开始在数据库设置float类型没法成功获取 最后拿到的结果还是被四舍五入了,然后google了,也看了下源码,好像在数据库里设置成double类型就可以反射,我也试了\n最终结果是没有效果\n想问下大家有没有遇到过\n发现作者github回答问题不多啊- -特地来这边爱特一发\n@jinzhu ",
    "body_html": "<p>Struct 里我的字段已经设置为 float64\n刚开始在数据库设置 float 类型没法成功获取 最后拿到的结果还是被四舍五入了,然后 google 了,也看了下源码,好像在数据库里设置成 double 类型就可以反射,我也试了\n最终结果是没有效果\n想问下大家有没有遇到过\n发现作者 github 回答问题不多啊- -特地来这边爱特一发\n<a href=\"/jinzhu\" class=\"user-mention\" title=\"@jinzhu\"><i>@</i>jinzhu</a> </p>",
    "hits": 1193,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 387,
    "title": "有一个go编译好的可执行文件，如何知道它是用go的什么版本编译的呢",
    "created_at": "2016-11-17 11:18:13",
    "updated_at": "2016-11-21 11:15:31",
    "replied_at": "2016-11-21 11:15:31",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 962,
    "last_reply_user_login": "codinghxl",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题",
    "body_html": "<p>如题</p>",
    "hits": 368,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 389,
    "title": "go并发实践",
    "created_at": "2016-11-17 11:33:23",
    "updated_at": "2016-11-17 12:22:16",
    "replied_at": "2016-11-17 12:22:16",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 636,
    "last_reply_user_login": "stevewang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 816,
    "user": "{\"id\": 816, \"name\": \"easonme\", \"login\": \"easonme\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在学习go chan的时候有一个想法，希望大家说说整个函数、chan怎么构造？\n\n这是想法：\n1：一个http接口，我请求后拿到JSon 数组数据解析好后存储到数据库，\n\n2：拿到刚刚的list数据的id，再发起一次网络请求，得到一个list json，再次存储到数据库\n\n3：根据2的list数据的id，再次发起网络请求，得到一个list json，再次存储到数据库\n\n这里面有三次数据库存储操作，三次网络请求，\n因为顺序执行的原因，我们如何更好的处理？\n\n",
    "body_html": "<p>在学习 go chan 的时候有一个想法，希望大家说说整个函数、chan 怎么构造？</p>\n\n<p>这是想法：\n1：一个 http 接口，我请求后拿到 JSon 数组数据解析好后存储到数据库，</p>\n\n<p>2：拿到刚刚的 list 数据的 id，再发起一次网络请求，得到一个 list json，再次存储到数据库</p>\n\n<p>3：根据 2 的 list 数据的 id，再次发起网络请求，得到一个 list json，再次存储到数据库</p>\n\n<p>这里面有三次数据库存储操作，三次网络请求，\n因为顺序执行的原因，我们如何更好的处理？</p>",
    "hits": 469,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 390,
    "title": "beego orm 求支持sql注释",
    "created_at": "2016-11-17 12:32:39",
    "updated_at": "2021-01-20 11:16:39",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 256,
    "user": "{\"id\": 256, \"name\": \"robi\", \"login\": \"robi\", \"avatar\": \"https://static.gocn.vip/user/avatar/256/85bb95.jpg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "rt~\n\nhttps://github.com/astaxie/beego/issues/2283",
    "body_html": "<p>rt~</p>\n\n<p><a href=\"https://github.com/astaxie/beego/issues/2283\" rel=\"nofollow\" target=\"_blank\">https://github.com/astaxie/beego/issues/2283</a></p>",
    "hits": 386,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 391,
    "title": "beego 表单验证 validation通过 StructTag 递归验证 组合struct",
    "created_at": "2016-11-17 14:59:33",
    "updated_at": "2021-01-20 02:46:22",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1259,
    "user": "{\"id\": 1259, \"name\": \"gloomyzerg\", \"login\": \"gloomyzerg\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\ntype A struct {\n\tName `valid:&quot;Required&quot;`\n}\n\ntype B struct {\n\tAge `valid:&quot;Numeric&quot;`\n}\n\ntype user struct {\n\tA\n\tB\n}\n\nvalid := validation.Validation{}\nu := user{Name: &quot;Beego&quot;, Age: 2}\nb, err := valid.Valid(&amp;u)\nif err != nil {\n\t// handle error\n}\nif !b {\n\t// validation does not pass\n\t// blabla...\n\tfor _, err := range valid.Errors {\n\t\tlog.Println(err.Key, err.Message)\n\t}\n}\n```\n\n发现 ```Valid()``` 方法无法进行递归验证\n\n查看beego源码后发现在```Valid()``` 下面还定义了 一个 ```RecursiveValid()```方法用于递归验证\n但```RecursiveValid()``` 方法在官网文档中并没有说明,是文档滞后了?还是有什么隐藏的坑并未正式启用?\n\n目前发现递归的struct验证无法使用 Valid 函数进行自定义验证",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">A</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Name</span> <span class=\"s\">`valid:&amp;quot;Required&amp;quot;`</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">type</span> <span class=\"n\">B</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Age</span> <span class=\"s\">`valid:&amp;quot;Numeric&amp;quot;`</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">type</span> <span class=\"n\">user</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">A</span>\n    <span class=\"n\">B</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">valid</span> <span class=\"o\">:=</span> <span class=\"n\">validation</span><span class=\"o\">.</span><span class=\"n\">Validation</span><span class=\"p\">{}</span>\n<span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"n\">user</span><span class=\"p\">{</span><span class=\"n\">Name</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Beego</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">Age</span><span class=\"o\">:</span> <span class=\"m\">2</span><span class=\"p\">}</span>\n<span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">valid</span><span class=\"o\">.</span><span class=\"n\">Valid</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">u</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n    <span class=\"c\">// handle error</span>\n<span class=\"p\">}</span>\n<span class=\"k\">if</span> <span class=\"o\">!</span><span class=\"n\">b</span> <span class=\"p\">{</span>\n    <span class=\"c\">// validation does not pass</span>\n    <span class=\"c\">// blabla...</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">valid</span><span class=\"o\">.</span><span class=\"n\">Errors</span> <span class=\"p\">{</span>\n        <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"o\">.</span><span class=\"n\">Message</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>发现 <code>Valid()</code> 方法无法进行递归验证</p>\n\n<p>查看 beego 源码后发现在<code>Valid()</code> 下面还定义了 一个 <code>RecursiveValid()</code>方法用于递归验证\n但<code>RecursiveValid()</code> 方法在官网文档中并没有说明,是文档滞后了?还是有什么隐藏的坑并未正式启用?</p>\n\n<p>目前发现递归的 struct 验证无法使用 Valid 函数进行自定义验证</p>",
    "hits": 557,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 392,
    "title": "go中的log包",
    "created_at": "2016-11-17 16:16:07",
    "updated_at": "2016-11-17 16:23:19",
    "replied_at": "2016-11-17 16:23:19",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 407,
    "last_reply_user_login": "lucyne",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 407,
    "user": "{\"id\": 407, \"name\": \"lucyne\", \"login\": \"lucyne\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "go 官方的log包\n\n打印都带时间如下：\n2016/11/17 16:14:06 fsdf\n\n\n如何将默认的时间去掉？",
    "body_html": "<p>go 官方的 log 包</p>\n\n<p>打印都带时间如下：\n2016/11/17 16:14:06 fsdf</p>\n\n<p>如何将默认的时间去掉？</p>",
    "hits": 354,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 393,
    "title": "golang tcp连接池",
    "created_at": "2016-11-17 17:10:31",
    "updated_at": "2020-05-02 16:11:35",
    "replied_at": "2016-11-18 10:27:50",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 330,
    "last_reply_user_login": "hubery",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1353,
    "user": "{\"id\": 1353, \"name\": \"songtianyi\", \"login\": \"songtianyi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "有没有推荐的开源实现？",
    "body_html": "<p>有没有推荐的开源实现？</p>",
    "hits": 600,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 394,
    "title": "go写的程序 如何后台运行",
    "created_at": "2016-11-17 17:29:38",
    "updated_at": "2016-11-17 20:41:48",
    "replied_at": "2016-11-17 20:41:48",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2,
    "last_reply_user_login": "itfanr",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 407,
    "user": "{\"id\": 407, \"name\": \"lucyne\", \"login\": \"lucyne\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "别告诉我nohup &amp;\n谢谢！",
    "body_html": "<p>别告诉我 nohup &amp;\n谢谢！</p>",
    "hits": 485,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 395,
    "title": "go中unix域套接字使用，type UnixAddr struct {         Name string         Net  string } 这个结构体中的两个参数应该怎么设置啊",
    "created_at": "2016-11-18 15:38:34",
    "updated_at": "2016-11-21 20:32:37",
    "replied_at": "2016-11-21 20:32:37",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1357,
    "user": "{\"id\": 1357, \"name\": \"Dingding\", \"login\": \"Dingding\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 301,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 396,
    "title": "go get mirror?",
    "created_at": "2016-11-18 17:06:16",
    "updated_at": "2016-11-20 23:01:31",
    "replied_at": "2016-11-20 23:01:30",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1365,
    "last_reply_user_login": "mengskysama",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1353,
    "user": "{\"id\": 1353, \"name\": \"songtianyi\", \"login\": \"songtianyi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "有没有hack方式，在国内搞一个源？",
    "body_html": "<p>有没有 hack 方式，在国内搞一个源？</p>",
    "hits": 320,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 397,
    "title": "不关闭管道会怎么样?",
    "created_at": "2016-11-18 17:41:05",
    "updated_at": "2016-11-18 18:52:11",
    "replied_at": "2016-11-18 18:51:56",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 360,
    "user": "{\"id\": 360, \"name\": \"wy\", \"login\": \"wy\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "主动关闭管道是个好习惯，但是向关闭的管道推送会造成panic，所以我的想法是不关闭管道就行了。那么不关闭管道会引起什么不良的后果吗？",
    "body_html": "<p>主动关闭管道是个好习惯，但是向关闭的管道推送会造成 panic，所以我的想法是不关闭管道就行了。那么不关闭管道会引起什么不良的后果吗？</p>",
    "hits": 308,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 398,
    "title": "怎样优雅的限制瞬时goruntine的个数",
    "created_at": "2016-11-18 19:27:33",
    "updated_at": "2016-11-20 12:53:44",
    "replied_at": "2016-11-20 12:53:44",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 636,
    "last_reply_user_login": "stevewang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1359,
    "user": "{\"id\": 1359, \"name\": \"mozhata\", \"login\": \"mozhata\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "假设有`M`个id，需要对每个id做一系列的操作，希望瞬时启动的`goruntine`只有`N`个（M &gt; N）\n\n怎样优雅的实现？",
    "body_html": "<p>假设有<code>M</code>个 id，需要对每个 id 做一系列的操作，希望瞬时启动的<code>goruntine</code>只有<code>N</code>个（M &gt; N）</p>\n\n<p>怎样优雅的实现？</p>",
    "hits": 748,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 399,
    "title": "golang源码time包里的一点疑惑？",
    "created_at": "2016-11-19 10:41:08",
    "updated_at": "2016-11-19 11:23:39",
    "replied_at": "2016-11-19 11:23:39",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1012,
    "last_reply_user_login": "fengche",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1070,
    "user": "{\"id\": 1070, \"name\": \"jdlau\", \"login\": \"jdlau\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我在阅读golang time包的sleep.go文件时，发现了以下代码\n```go\nfunc startTimer(*runtimeTimer)\nfunc stopTimer(*runtimeTimer) bool\n```\n\n这个为什么不会出现“fmissing function body for &quot;startTimer&quot;”的错误呢？\n求指教。谢谢！\n",
    "body_html": "<p>我在阅读 golang time 包的 sleep.go 文件时，发现了以下代码</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">startTimer</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">runtimeTimer</span><span class=\"p\">)</span>\n<span class=\"k\">func</span> <span class=\"n\">stopTimer</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">runtimeTimer</span><span class=\"p\">)</span> <span class=\"kt\">bool</span>\n</code></pre> \n<p>这个为什么不会出现 “fmissing function body for \"startTimer\"” 的错误呢？\n求指教。谢谢！</p>",
    "hits": 379,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 400,
    "title": "从github上获取的一个项目 go调用c 说缺少库 不会安装",
    "created_at": "2016-11-19 11:51:04",
    "updated_at": "2016-11-19 21:36:07",
    "replied_at": "2016-11-19 21:36:07",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2,
    "last_reply_user_login": "itfanr",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1362,
    "user": "{\"id\": 1362, \"name\": \"undefind\", \"login\": \"undefind\", \"avatar\": \"https://gocn.vip/system/letter_avatars/u.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "github.com\\andelf\\go-curl\\callback.go:6:23: fatal error: curl/curl.h: No such file or directory\n\tcompilation terminated",
    "body_html": "<p>github.com\\andelf\\go-curl\\callback.go:6:23: fatal error: curl/curl.h: No such file or directory\n    compilation terminated</p>",
    "hits": 520,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 401,
    "title": "关于beego orm 的查询",
    "created_at": "2016-11-19 17:06:41",
    "updated_at": "2021-01-20 13:33:16",
    "replied_at": "2017-07-14 21:08:29",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 2250,
    "last_reply_user_login": "romny",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 631,
    "user": "{\"id\": 631, \"name\": \"Xanthus\", \"login\": \"Xanthus\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\ntype User struct {\n    Id int\n    Name string\n}\n\ntype Post struct {\n    Id int\n    Title string\n    User *User `orm:&quot;rel(fk)&quot;`\n}\no := orm.NewOrm()\nqs := o.QueryTable(&quot;post&quot;)\nvar posts []*Post\nqs.Limit(pageSize, page*pageSize).All(&amp;posts)\n```\n这样得到的结果中，每条post数据的user字段只含有id；\n如果想获取该用户的其他数据，只能遍历获取吗？",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">User</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span> <span class=\"kt\">int</span>\n    <span class=\"n\">Name</span> <span class=\"kt\">string</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">type</span> <span class=\"n\">Post</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span> <span class=\"kt\">int</span>\n    <span class=\"n\">Title</span> <span class=\"kt\">string</span>\n    <span class=\"n\">User</span> <span class=\"o\">*</span><span class=\"n\">User</span> <span class=\"s\">`orm:&amp;quot;rel(fk)&amp;quot;`</span>\n<span class=\"p\">}</span>\n<span class=\"n\">o</span> <span class=\"o\">:=</span> <span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">NewOrm</span><span class=\"p\">()</span>\n<span class=\"n\">qs</span> <span class=\"o\">:=</span> <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">QueryTable</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">post</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"k\">var</span> <span class=\"n\">posts</span> <span class=\"p\">[]</span><span class=\"o\">*</span><span class=\"n\">Post</span>\n<span class=\"n\">qs</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">(</span><span class=\"n\">pageSize</span><span class=\"p\">,</span> <span class=\"n\">page</span><span class=\"o\">*</span><span class=\"n\">pageSize</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">All</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">posts</span><span class=\"p\">)</span>\n</code></pre> \n<p>这样得到的结果中，每条 post 数据的 user 字段只含有 id；\n如果想获取该用户的其他数据，只能遍历获取吗？</p>",
    "hits": 522,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 402,
    "title": "beego 直接返回 400 Bad Request",
    "created_at": "2016-11-19 20:36:42",
    "updated_at": "2021-01-20 03:04:08",
    "replied_at": "2016-11-19 22:34:46",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 261,
    "user": "{\"id\": 261, \"name\": \"hacpai\", \"login\": \"hacpai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "遇到一个奇怪的问题，和前端交互，前端调用我的接口直接返回 400 Bad Request. \n\n前端是 PHP 的代码，Web 服务器为apache\n\n排查问题时发现，beego 的日志没记录这个调用的请求，抓包看到的 content length 为 -1\n\n测试了一下接口，直接在前端的服务器用 curl 是可以调通的。",
    "body_html": "<p>遇到一个奇怪的问题，和前端交互，前端调用我的接口直接返回 400 Bad Request. </p>\n\n<p>前端是 PHP 的代码，Web 服务器为 apache</p>\n\n<p>排查问题时发现，beego 的日志没记录这个调用的请求，抓包看到的 content length 为 -1</p>\n\n<p>测试了一下接口，直接在前端的服务器用 curl 是可以调通的。</p>",
    "hits": 581,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 403,
    "title": "一点小问题",
    "created_at": "2016-11-20 08:52:50",
    "updated_at": "2016-11-20 11:40:01",
    "replied_at": "2016-11-20 11:40:01",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 779,
    "last_reply_user_login": "sundyli",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 414,
    "user": "{\"id\": 414, \"name\": \"ilmari\", \"login\": \"ilmari\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\npackage main\nimport &quot;fmt&quot;\n\nfunc sum(values [] int,resultChan chan int) {\n    sum := 0\n    for _,value := range values {\n        sum += value\n    }\n    resultChan &lt;- sum\n}\n\nfunc main() {\n    values := [] int{1,2,3,4,5,6,7,8,9,10}\n    resultChan := make(chan int,2)\n\n    go sum(values[:len(values)/2],resultChan)\n\tgo sum(values[len(values)/2:],resultChan)\n    sum1,sum2 := &lt;-resultChan,&lt;-resultChan\n\n    fmt.Println(&quot;Result:&quot;,sum1,sum2,sum1+sum2)\n}\n\n```\n输出后sum1，sum2分别是40,15，可是按照顺序的话不应该是先计算【：5】的值15然后传给resultChan吗？",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n<span class=\"k\">import</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n<span class=\"k\">func</span> <span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">values</span> <span class=\"p\">[]</span> <span class=\"kt\">int</span><span class=\"p\">,</span><span class=\"n\">resultChan</span> <span class=\"k\">chan</span> <span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">sum</span> <span class=\"o\">:=</span> <span class=\"m\">0</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span><span class=\"n\">value</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">values</span> <span class=\"p\">{</span>\n        <span class=\"n\">sum</span> <span class=\"o\">+=</span> <span class=\"n\">value</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">resultChan</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"n\">sum</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">values</span> <span class=\"o\">:=</span> <span class=\"p\">[]</span> <span class=\"kt\">int</span><span class=\"p\">{</span><span class=\"m\">1</span><span class=\"p\">,</span><span class=\"m\">2</span><span class=\"p\">,</span><span class=\"m\">3</span><span class=\"p\">,</span><span class=\"m\">4</span><span class=\"p\">,</span><span class=\"m\">5</span><span class=\"p\">,</span><span class=\"m\">6</span><span class=\"p\">,</span><span class=\"m\">7</span><span class=\"p\">,</span><span class=\"m\">8</span><span class=\"p\">,</span><span class=\"m\">9</span><span class=\"p\">,</span><span class=\"m\">10</span><span class=\"p\">}</span>\n    <span class=\"n\">resultChan</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">int</span><span class=\"p\">,</span><span class=\"m\">2</span><span class=\"p\">)</span>\n\n    <span class=\"k\">go</span> <span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"o\">:</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"m\">2</span><span class=\"p\">],</span><span class=\"n\">resultChan</span><span class=\"p\">)</span>\n    <span class=\"k\">go</span> <span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"m\">2</span><span class=\"o\">:</span><span class=\"p\">],</span><span class=\"n\">resultChan</span><span class=\"p\">)</span>\n    <span class=\"n\">sum1</span><span class=\"p\">,</span><span class=\"n\">sum2</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">resultChan</span><span class=\"p\">,</span><span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">resultChan</span>\n\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Result</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span><span class=\"n\">sum1</span><span class=\"p\">,</span><span class=\"n\">sum2</span><span class=\"p\">,</span><span class=\"n\">sum1</span><span class=\"o\">+</span><span class=\"n\">sum2</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n</code></pre> \n<p>输出后 sum1，sum2 分别是 40,15，可是按照顺序的话不应该是先计算【：5】的值 15 然后传给 resultChan 吗？</p>",
    "hits": 421,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 404,
    "title": "go发展历史",
    "created_at": "2016-11-20 09:22:58",
    "updated_at": "2016-11-20 13:34:48",
    "replied_at": "2016-11-20 13:34:48",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1364,
    "last_reply_user_login": "lrita",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 414,
    "user": "{\"id\": 414, \"name\": \"ilmari\", \"login\": \"ilmari\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "golang在1.5的时候移除最后的c代码，runtime，编译器，连接器都是go写的，意思是1.5之前都是c写的编译器吗？那go的最底层是什么语言实现的？是汇编还是c？",
    "body_html": "<p>golang 在 1.5 的时候移除最后的 c 代码，runtime，编译器，连接器都是 go 写的，意思是 1.5 之前都是 c 写的编译器吗？那 go 的最底层是什么语言实现的？是汇编还是 c？</p>",
    "hits": 367,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 405,
    "title": "Windows上的 *wchar_t 问题，C.GoString() , issues/1691 现在有最优解么?",
    "created_at": "2016-11-20 11:59:36",
    "updated_at": "2016-11-20 11:59:36",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 643,
    "user": "{\"id\": 643, \"name\": \"fino\", \"login\": \"fino\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Windows上的 *wchar_t 问题， issues/1691 现在有最优解么?\nC.GoString() 的 wchar_t版本， \n用 utf16LE的指针 表示的字符串, \n\n谁填过这个坑? ",
    "body_html": "<p>Windows 上的 *wchar_t 问题， issues/1691 现在有最优解么?\nC.GoString() 的 wchar_t 版本， \n用 utf16LE 的指针 表示的字符串, </p>\n\n<p>谁填过这个坑? </p>",
    "hits": 262,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 406,
    "title": "关于在vim环境下开发go快捷import的问题",
    "created_at": "2016-11-20 16:14:51",
    "updated_at": "2016-12-07 13:05:14",
    "replied_at": "2016-12-07 13:05:14",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1353,
    "last_reply_user_login": "songtianyi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 198,
    "user": "{\"id\": 198, \"name\": \"lucky\", \"login\": \"lucky\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "最近在vim下配置好开发环境后\n感觉写起代码来又快又geek，虽然折腾了点\n唯一美中不足的就是导入package上有点不方便\n\n想问下有经验的朋友，你们如何解决在vim下，导入pkg这个问题的\n\n我现在的方案就是手动输入（觉得很笨拙），或者输入一个类似方法save了等goimports自动导入",
    "body_html": "<p>最近在 vim 下配置好开发环境后\n感觉写起代码来又快又 geek，虽然折腾了点\n唯一美中不足的就是导入 package 上有点不方便</p>\n\n<p>想问下有经验的朋友，你们如何解决在 vim 下，导入 pkg 这个问题的</p>\n\n<p>我现在的方案就是手动输入（觉得很笨拙），或者输入一个类似方法 save 了等 goimports 自动导入</p>",
    "hits": 452,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 407,
    "title": "重复快速声明error对象",
    "created_at": "2016-11-20 21:18:33",
    "updated_at": "2016-11-20 22:33:14",
    "replied_at": "2016-11-20 22:33:14",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 37,
    "last_reply_user_login": "xiayf",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1005,
    "user": "{\"id\": 1005, \"name\": \"insisthzr\", \"login\": \"insisthzr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\ndb, err := sql.Open(&quot;mysql&quot;, &quot;root:root@/test?charset=utf8&quot;)\nstmt, err := db.Prepare(&quot;INSERT INTO userinfo SET\n```\n\n为什么重复声明error可以,声明其他就不行\n",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">mysql</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">root</span><span class=\"o\">:</span><span class=\"n\">root</span><span class=\"err\">@</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"err\">?</span><span class=\"n\">charset</span><span class=\"o\">=</span><span class=\"n\">utf8</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"n\">stmt</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Prepare</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">INSERT</span> <span class=\"n\">INTO</span> <span class=\"n\">userinfo</span> <span class=\"n\">SET</span>\n</code></pre> \n<p>为什么重复声明 error 可以,声明其他就不行</p>",
    "hits": 343,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 408,
    "title": "beego缓存问题",
    "created_at": "2016-11-20 23:21:29",
    "updated_at": "2021-01-16 21:20:21",
    "replied_at": "2016-11-29 22:15:16",
    "replies_count": 4,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1379,
    "last_reply_user_login": "bfcaicai",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1344,
    "user": "{\"id\": 1344, \"name\": \"皇虫\", \"login\": \"1272881215\", \"avatar\": \"https://static.gocn.vip/user/avatar/1344/6acfae.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "使用beego1.7.1做web开发,用到beego的缓存时遇到的一个问题.\n\n我创建了一个TestCache.go的测试文件,代码如下:\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;time&quot;\n\n\t&quot;github.com/astaxie/beego/cache&quot;\n)\n\nfunc main() {\n\tfmt.Println(&quot;==============分割线============&quot;)\n\tfmt.Println(&quot;现在访问的时间戳:&quot;, time.Now().Unix())\n\t//beego cache\n\tbc, _ := cache.NewCache(&quot;file&quot;, `{&quot;CachePath&quot;:&quot;./cache&quot;,&quot;FileSuffix&quot;:&quot;.cache&quot;,&quot;DirectoryLevel&quot;:2,&quot;EmbedExpiry&quot;:20}`)\n\tIsExist := bc.IsExist(&quot;MyCache&quot;)\n\tfmt.Println(&quot;是否存在缓存:&quot;, IsExist)\n\tif IsExist {\n\t\tif bc.Get(&quot;MyCache&quot;) == nil {\n\t\t\tbc.Put(&quot;MyCache&quot;, &quot;hello beego!&quot;, 10*time.Second)\n\t\t}\n\t} else {\n\t\tbc.Put(&quot;MyCache&quot;, &quot;hello world!&quot;, 10*time.Second)\n\t\tfmt.Println(&quot;原本缓存不存在,现在存了一个进去&quot;)\n\t}\n\tfmt.Println(&quot;缓存的值:&quot;, bc.Get(&quot;MyCache&quot;))\n}\n\n```\n\n执行结果如下:\n\nE:\\Go\\workspace\\src\\pratice&gt;go run TestCache.go\n==============分割线============\n现在访问的时间戳: 1479654743\n是否存在缓存: false\n原本缓存不存在,现在存了一个进去\n缓存的值: hello world!\n\nE:\\Go\\workspace\\src\\pratice&gt;go run TestCache.go\n==============分割线============\n现在访问的时间戳: 1479654754\n是否存在缓存: true\n缓存的值:\n\n\n请问10秒后再执行&quot;go run TestCache.go&quot;访问为什么获取不到值了?\n\n\n\n",
    "body_html": "<p>使用 beego1.7.1 做 web 开发,用到 beego 的缓存时遇到的一个问题.</p>\n\n<p>我创建了一个 TestCache.go 的测试文件,代码如下:</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">cache</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">==============</span><span class=\"n\">分割线</span><span class=\"o\">============&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">现在访问的时间戳</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Unix</span><span class=\"p\">())</span>\n    <span class=\"c\">//beego cache</span>\n    <span class=\"n\">bc</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">NewCache</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">file</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"s\">`{&amp;quot;CachePath&amp;quot;:&amp;quot;./cache&amp;quot;,&amp;quot;FileSuffix&amp;quot;:&amp;quot;.cache&amp;quot;,&amp;quot;DirectoryLevel&amp;quot;:2,&amp;quot;EmbedExpiry&amp;quot;:20}`</span><span class=\"p\">)</span>\n    <span class=\"n\">IsExist</span> <span class=\"o\">:=</span> <span class=\"n\">bc</span><span class=\"o\">.</span><span class=\"n\">IsExist</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">MyCache</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">是否存在缓存</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">IsExist</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">IsExist</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"n\">bc</span><span class=\"o\">.</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">MyCache</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n            <span class=\"n\">bc</span><span class=\"o\">.</span><span class=\"n\">Put</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">MyCache</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">hello</span> <span class=\"n\">beego</span><span class=\"o\">!&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"m\">10</span><span class=\"o\">*</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"n\">bc</span><span class=\"o\">.</span><span class=\"n\">Put</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">MyCache</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">hello</span> <span class=\"n\">world</span><span class=\"o\">!&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"m\">10</span><span class=\"o\">*</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"p\">)</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">原本缓存不存在</span><span class=\"p\">,</span><span class=\"n\">现在存了一个进去</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">缓存的值</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">bc</span><span class=\"o\">.</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">MyCache</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;))</span>\n<span class=\"p\">}</span>\n\n</code></pre> \n<p>执行结果如下:</p>\n\n<p>E:\\Go\\workspace\\src\\pratice&gt;go run TestCache.go\n==============分割线============\n现在访问的时间戳: 1479654743\n是否存在缓存: false\n原本缓存不存在,现在存了一个进去\n缓存的值: hello world!</p>\n\n<p>E:\\Go\\workspace\\src\\pratice&gt;go run TestCache.go\n==============分割线============\n现在访问的时间戳: 1479654754\n是否存在缓存: true\n缓存的值:</p>\n\n<p>请问 10 秒后再执行\"go run TestCache.go\"访问为什么获取不到值了?</p>",
    "hits": 689,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 409,
    "title": "beeweb的app.conf设置的监听端口不生效",
    "created_at": "2016-11-21 10:59:40",
    "updated_at": "2016-11-21 12:28:11",
    "replied_at": "2016-11-21 12:28:11",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1038,
    "user": "{\"id\": 1038, \"name\": \"luhuisicnu\", \"login\": \"luhuisicnu\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "使用go get github.com/beego/beeweb下载beeweb项目后，将$(gopath)/bin/beeweb复制到$(gopath)/src/github.com/beego/beeweb下，直接运行，会线下载一些文档，然后提示监听端口8080失败。经过检查，本地的另一个服务已经占用8080端口，但是app.conf中的监听端口却是8090，再检查beego的默认监听端口是8080，所以在这里好奇，为什么监听端口的设置不生效。\n\napp.conf\n```go\n[beego]\napp_name=Beego Web\nrun_mode=dev\nhttp_port_dev=8090\nhttp_port_pro=8090\n\n[lang]\ntypes=en-US|zh-CN|ru-RU\nnames=English|简体中文|Russian\n\n[github]\nclient_id=\nclient_secret=\n\n[app]\n```\n\n版本信息\n```bash\nhanks-Mac-mini:beeweb hank$ bee version\n______\n| ___ \\\n| |_/ /  ___   ___\n| ___ \\ / _ \\ / _ \\\n| |_/ /|  __/|  __/\n\\____/  \\___| \\___| v1.5.2\n\n├── Beego     : 1.7.1\n├── GoVersion : go1.7.3\n├── GOOS      : darwin\n├── GOARCH    : amd64\n├── NumCPU    : 4\n├── GOPATH    : /Users/hank/gopath:/Users/hank/study/go/testpackage:/Users/hank/study/go/sorter\n├── GOROOT    : /usr/local/go\n├── Compiler  : gc\n└── Date      : Monday, 21 Nov 2016\n```\n\n错误提示\n```bash\nhanks-Mac-mini:beeweb hank$ ./beeweb \n2016/11/21 10:50:17 [D] [log.go:106] Checking file updates \n2016/11/21 10:50:19 [D] [log.go:106] Finish check file updates \n2016/11/21 10:50:19 [D] [log.go:106] Loading language: en-US \n2016/11/21 10:50:19 [D] [log.go:106] Loading language: zh-CN \n2016/11/21 10:50:19 [D] [log.go:106] Loading language: ru-RU \n2016/11/21 10:50:19 [I] [beeweb.go:52] beego 1.0.0 \n2016/11/21 10:50:19 [I] [beeweb.go:79] before listen \n2016/11/21 10:50:19 [I] [asm_amd64.s:2086] http server Running on http://:8080\n2016/11/21 10:50:19 [C] [asm_amd64.s:2086] ListenAndServe:  listen tcp :8080: bind: address already in use\n```",
    "body_html": "<p>使用 go get github.com/beego/beeweb 下载 beeweb 项目后，将 $(gopath)/bin/beeweb 复制到 $(gopath)/src/github.com/beego/beeweb 下，直接运行，会线下载一些文档，然后提示监听端口 8080 失败。经过检查，本地的另一个服务已经占用 8080 端口，但是 app.conf 中的监听端口却是 8090，再检查 beego 的默认监听端口是 8080，所以在这里好奇，为什么监听端口的设置不生效。</p>\n\n<p>app.conf</p>\n <pre class=\"highlight go\"><code><span class=\"p\">[</span><span class=\"n\">beego</span><span class=\"p\">]</span>\n<span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"n\">Beego</span> <span class=\"n\">Web</span>\n<span class=\"n\">run_mode</span><span class=\"o\">=</span><span class=\"n\">dev</span>\n<span class=\"n\">http_port_dev</span><span class=\"o\">=</span><span class=\"m\">8090</span>\n<span class=\"n\">http_port_pro</span><span class=\"o\">=</span><span class=\"m\">8090</span>\n\n<span class=\"p\">[</span><span class=\"n\">lang</span><span class=\"p\">]</span>\n<span class=\"n\">types</span><span class=\"o\">=</span><span class=\"n\">en</span><span class=\"o\">-</span><span class=\"n\">US</span><span class=\"o\">|</span><span class=\"n\">zh</span><span class=\"o\">-</span><span class=\"n\">CN</span><span class=\"o\">|</span><span class=\"n\">ru</span><span class=\"o\">-</span><span class=\"n\">RU</span>\n<span class=\"n\">names</span><span class=\"o\">=</span><span class=\"n\">English</span><span class=\"o\">|</span><span class=\"n\">简体中文</span><span class=\"o\">|</span><span class=\"n\">Russian</span>\n\n<span class=\"p\">[</span><span class=\"n\">github</span><span class=\"p\">]</span>\n<span class=\"n\">client_id</span><span class=\"o\">=</span>\n<span class=\"n\">client_secret</span><span class=\"o\">=</span>\n\n<span class=\"p\">[</span><span class=\"n\">app</span><span class=\"p\">]</span>\n</code></pre> \n<p>版本信息</p>\n <pre class=\"highlight shell\"><code>hanks-Mac-mini:beeweb hank<span class=\"nv\">$ </span>bee version\n______\n| ___ <span class=\"se\">\\</span>\n| |_/ /  ___   ___\n| ___ <span class=\"se\">\\ </span>/ _ <span class=\"se\">\\ </span>/ _ <span class=\"se\">\\</span>\n| |_/ /|  __/|  __/\n<span class=\"se\">\\_</span>___/  <span class=\"se\">\\_</span>__| <span class=\"se\">\\_</span>__| v1.5.2\n\n├── Beego     : 1.7.1\n├── GoVersion : go1.7.3\n├── GOOS      : darwin\n├── GOARCH    : amd64\n├── NumCPU    : 4\n├── GOPATH    : /Users/hank/gopath:/Users/hank/study/go/testpackage:/Users/hank/study/go/sorter\n├── GOROOT    : /usr/local/go\n├── Compiler  : gc\n└── Date      : Monday, 21 Nov 2016\n</code></pre> \n<p>错误提示</p>\n <pre class=\"highlight shell\"><code>hanks-Mac-mini:beeweb hank<span class=\"nv\">$ </span>./beeweb \n2016/11/21 10:50:17 <span class=\"o\">[</span>D] <span class=\"o\">[</span>log.go:106] Checking file updates \n2016/11/21 10:50:19 <span class=\"o\">[</span>D] <span class=\"o\">[</span>log.go:106] Finish check file updates \n2016/11/21 10:50:19 <span class=\"o\">[</span>D] <span class=\"o\">[</span>log.go:106] Loading language: en-US \n2016/11/21 10:50:19 <span class=\"o\">[</span>D] <span class=\"o\">[</span>log.go:106] Loading language: zh-CN \n2016/11/21 10:50:19 <span class=\"o\">[</span>D] <span class=\"o\">[</span>log.go:106] Loading language: ru-RU \n2016/11/21 10:50:19 <span class=\"o\">[</span>I] <span class=\"o\">[</span>beeweb.go:52] beego 1.0.0 \n2016/11/21 10:50:19 <span class=\"o\">[</span>I] <span class=\"o\">[</span>beeweb.go:79] before listen \n2016/11/21 10:50:19 <span class=\"o\">[</span>I] <span class=\"o\">[</span>asm_amd64.s:2086] http server Running on http://:8080\n2016/11/21 10:50:19 <span class=\"o\">[</span>C] <span class=\"o\">[</span>asm_amd64.s:2086] ListenAndServe:  listen tcp :8080: <span class=\"nb\">bind</span>: address already <span class=\"k\">in </span>use\n</code></pre> ",
    "hits": 558,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 410,
    "title": "如何搭建像360网盘这样的服务？",
    "created_at": "2016-11-21 19:26:28",
    "updated_at": "2016-11-21 20:31:11",
    "replied_at": "2016-11-21 20:31:11",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 40,
    "user": "{\"id\": 40, \"name\": \"SoloMagic\", \"login\": \"SoloMagic\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "麻烦各位能推荐些例子。谢谢啊。",
    "body_html": "<p>麻烦各位能推荐些例子。谢谢啊。</p>",
    "hits": 372,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 411,
    "title": "go有没有webkit的包?",
    "created_at": "2016-11-22 10:11:33",
    "updated_at": "2016-11-23 14:13:56",
    "replied_at": "2016-11-23 14:13:56",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 74,
    "last_reply_user_login": "xieyanke",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "walk里面编译过一下 不太好用\n其他语言webkit到提挺多的,其实各种版本,功能强弱也参差不齐啊\n",
    "body_html": "<p>walk 里面编译过一下 不太好用\n其他语言 webkit 到提挺多的,其实各种版本,功能强弱也参差不齐啊</p>",
    "hits": 402,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 412,
    "title": "通过哪些方法判断goroutine泄漏？有没有具体的调试步骤的文章？",
    "created_at": "2016-11-22 10:33:39",
    "updated_at": "2016-11-22 15:49:07",
    "replied_at": "2016-11-22 15:49:07",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1097,
    "last_reply_user_login": "guang7night",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 330,
    "user": "{\"id\": 330, \"name\": \"hubery\", \"login\": \"hubery\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 331,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 413,
    "title": "go调用Hadoop的分布式文件系统 (HDFS），可行吗？",
    "created_at": "2016-11-22 10:49:09",
    "updated_at": "2016-11-22 14:57:58",
    "replied_at": "2016-11-22 14:57:58",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 549,
    "last_reply_user_login": "vr",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 549,
    "user": "{\"id\": 549, \"name\": \"vr\", \"login\": \"vr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/v.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "由于现在想要做一个分布式文件系统，存储小文件，调研下来，想用Hadoop的分布式文件系统 (HDFS）,但是Hadoop是java开发的,我肯定不会用java来调用的HDFS的，想问有人用go实现的client直接调用HDFS的经验吗，可行吗？",
    "body_html": "<p>由于现在想要做一个分布式文件系统，存储小文件，调研下来，想用 Hadoop 的分布式文件系统 (HDFS）,但是 Hadoop 是 java 开发的,我肯定不会用 java 来调用的 HDFS 的，想问有人用 go 实现的 client 直接调用 HDFS 的经验吗，可行吗？</p>",
    "hits": 445,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 414,
    "title": "golang.org/x/crypto/ssh 使用问题",
    "created_at": "2016-11-22 11:44:06",
    "updated_at": "2016-11-29 12:01:15",
    "replied_at": "2016-11-29 12:01:15",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1391,
    "last_reply_user_login": "jinti",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 407,
    "user": "{\"id\": 407, \"name\": \"lucyne\", \"login\": \"lucyne\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "golang.org/x/crypto/ssh\n\n使用以上的这个包，如何在连接后调用一个方法，而不是一条命令\nPassWd := []ssh.AuthMethod{ssh.Password(password)}\nConf := ssh.ClientConfig{User: user, Auth: PassWd}\nClient, _ := ssh.Dial(&quot;tcp&quot;, ip_port, &amp;Conf)\ndefer Client.Close()\nsession, err := Client.NewSession()\nsession.~~Run(command)~~",
    "body_html": "<p>golang.org/x/crypto/ssh</p>\n\n<p>使用以上的这个包，如何在连接后调用一个方法，而不是一条命令\nPassWd := [] ssh.AuthMethod{ssh.Password(password)}\nConf := ssh.ClientConfig{User: user, Auth: PassWd}\nClient, _ := ssh.Dial(\"tcp\", ip_port, &amp;Conf)\ndefer Client.Close()\nsession, err := Client.NewSession()\nsession.<del>Run(command)</del></p>",
    "hits": 441,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 415,
    "title": "beego api项目问题求教",
    "created_at": "2016-11-22 13:11:46",
    "updated_at": "2021-01-20 02:04:40",
    "replied_at": "2016-11-22 16:38:50",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 631,
    "last_reply_user_login": "Xanthus",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1367,
    "user": "{\"id\": 1367, \"name\": \"lintBai\", \"login\": \"lintBai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我正在写一个beegoapi项目，根据数据库的表自动化生成后，页面post请求的格式是基于数据库中的表的格式，但是我数据post进来不是这个格式的，要去修改哪里的代码？\n",
    "body_html": "<p>我正在写一个 beegoapi 项目，根据数据库的表自动化生成后，页面 post 请求的格式是基于数据库中的表的格式，但是我数据 post 进来不是这个格式的，要去修改哪里的代码？</p>",
    "hits": 527,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 416,
    "title": "golang调用oracle的问题",
    "created_at": "2016-11-22 17:23:16",
    "updated_at": "2018-08-23 11:28:24",
    "replied_at": "2018-08-23 11:28:24",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 6357,
    "last_reply_user_login": "jangta",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 795,
    "user": "{\"id\": 795, \"name\": \"zhqqqy\", \"login\": \"zhqqqy\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "请问golang有成熟的oracle的驱动包吗，不需要掉c库的，类似mysql的驱动。",
    "body_html": "<p>请问 golang 有成熟的 oracle 的驱动包吗，不需要掉 c 库的，类似 mysql 的驱动。</p>",
    "hits": 415,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 417,
    "title": "如果用golang来写一个一模一样的redis，性能和稳定性表现会如何？",
    "created_at": "2016-11-22 17:25:18",
    "updated_at": "2016-11-29 11:53:49",
    "replied_at": "2016-11-29 11:53:49",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1391,
    "last_reply_user_login": "jinti",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 422,
    "user": "{\"id\": 422, \"name\": \"edwinxie\", \"login\": \"edwinxie\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "##### 所谓一模一样，是指：\n1. 协议一致\n2. 支持的数据结构一致\n3. 持久化机制\n4. 线程模型\n等等",
    "body_html": "<h5 id=\"所谓一模一样，是指：\">所谓一模一样，是指：</h5>\n<ol>\n<li>协议一致</li>\n<li>支持的数据结构一致</li>\n<li>持久化机制</li>\n<li>线程模型\n等等</li>\n</ol>",
    "hits": 547,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 418,
    "title": "golang 内部包引用",
    "created_at": "2016-11-22 17:37:30",
    "updated_at": "2016-11-23 13:07:49",
    "replied_at": "2016-11-23 13:07:49",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 222,
    "user": "{\"id\": 222, \"name\": \"themoonstone\", \"login\": \"themoonstone\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "最近打算学习一下NSQ\n在安装NSQ的时候遇到了两个问题 \n1、godep的安装、按照官方的安装方法、我在装好godep并配置好gopath之后、在gopath下使用godep始终提示bash:command not found.我的解决方案是通过软链接将其链接到/usr/bin下、但感觉原始解决方案应该不是这样子\n2、在使用 go get github.com/bitly/nsq/... 时 出现了“use of internal package not allowed” 这个错误、之前知道golang1.5的版本由于内部包的调用可能会出现这样的问题 、但我的是1.6的  没有查询到具体的原因、希望了解的同学能解一下惑",
    "body_html": "<p>最近打算学习一下 NSQ\n在安装 NSQ 的时候遇到了两个问题 \n1、godep 的安装、按照官方的安装方法、我在装好 godep 并配置好 gopath 之后、在 gopath 下使用 godep 始终提示 bash:command not found.我的解决方案是通过软链接将其链接到/usr/bin 下、但感觉原始解决方案应该不是这样子\n2、在使用 go get github.com/bitly/nsq/... 时 出现了 “use of internal package not allowed” 这个错误、之前知道 golang1.5 的版本由于内部包的调用可能会出现这样的问题 、但我的是 1.6 的  没有查询到具体的原因、希望了解的同学能解一下惑</p>",
    "hits": 425,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 419,
    "title": "sublime text3 下怎么设置夸包补全",
    "created_at": "2016-11-23 09:22:36",
    "updated_at": "2016-11-24 20:00:27",
    "replied_at": "2016-11-24 20:00:27",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1036,
    "last_reply_user_login": "yong27",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1036,
    "user": "{\"id\": 1036, \"name\": \"yong27\", \"login\": \"yong27\", \"avatar\": \"https://gocn.vip/system/letter_avatars/y.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "现在只能自动补全自己包目录下的函数，其他包下的函数就无法识别。\nwindows + sublime text3 + gosublime\n大家有遇到相同的问题吗？之前在mac下就能夸包自动补全，换到windows下就不行了",
    "body_html": "<p>现在只能自动补全自己包目录下的函数，其他包下的函数就无法识别。\nwindows + sublime text3 + gosublime\n大家有遇到相同的问题吗？之前在 mac 下就能夸包自动补全，换到 windows 下就不行了</p>",
    "hits": 465,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 420,
    "title": "go语言工程项目错误找不到路径",
    "created_at": "2016-11-23 15:55:15",
    "updated_at": "2016-11-23 21:52:05",
    "replied_at": "2016-11-23 21:52:05",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 74,
    "last_reply_user_login": "xieyanke",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1350,
    "user": "{\"id\": 1350, \"name\": \"chydn\", \"login\": \"chydn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "本人学习go新手，遇到问题\n~|--goProject\n    |--src\n       |--algorithms\n            |--bubblesort\n                   bubblesort.go\n            |--qsort\n                qsort.go\n       |--sorter\n            sorter.go\n\nsorter.go代码如下：\n  1 package main\n  2 \n  3 import &quot;bufio&quot;\n  4 import &quot;flag&quot;\n  5 import &quot;fmt&quot;\n  6 import &quot;io&quot;\n  7 import &quot;os&quot;\n  8 import &quot;strconv&quot;\n  9 import &quot;time&quot;\n 10 import &quot;algorithms/bubblesort&quot;                                                                 \n 11 import &quot;algorithms/qsort&quot;\n \n 在终端执行如下命令：\n $ echo $GOPATH\n/home/linux/goProject\n$ go build algorithm/qsort \n### 运行此处报错\ncan't load package: package algorithm/qsort: cannot find package &quot;algorithm/qsort&quot; in any of:\n\t/usr/local/go/src/algorithm/qsort (from $GOROOT)\n\t/home/linux/goProject/src/algorithm/qsort (from $GOPATH)\n\n使用的是ubuntu\n$ go env\nGOARCH=&quot;386&quot;\nGOBIN=&quot;&quot;\nGOEXE=&quot;&quot;\nGOHOSTARCH=&quot;386&quot;\nGOHOSTOS=&quot;linux&quot;\nGOOS=&quot;linux&quot;\nGOPATH=&quot;/home/linux/goProject&quot;\nGORACE=&quot;&quot;\nGOROOT=&quot;/usr/local/go&quot;\nGOTOOLDIR=&quot;/usr/local/go/pkg/tool/linux_386&quot;\nCC=&quot;gcc&quot;\nGOGCCFLAGS=&quot;-fPIC -m32 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build547914717=/tmp/go-build&quot;\nCXX=&quot;g++&quot;\nCGO_ENABLED=&quot;1&quot;\n\n环境变量：\n.profile\n添加的\nexport PATH=$PATH:/usr/local/go/bin\nexport GOPATH=/home/linux/goProject  \n\n",
    "body_html": "<p>本人学习 go 新手，遇到问题\n~|--goProject\n    |--src\n       |--algorithms\n            |--bubblesort\n                   bubblesort.go\n            |--qsort\n                qsort.go\n       |--sorter\n            sorter.go</p>\n\n<p>sorter.go 代码如下：\n  1 package main\n  2 \n  3 import \"bufio\"\n  4 import \"flag\"\n  5 import \"fmt\"\n  6 import \"io\"\n  7 import \"os\"\n  8 import \"strconv\"\n  9 import \"time\"\n 10 import \"algorithms/bubblesort\"<br>\n 11 import \"algorithms/qsort\"</p>\n\n<p>在终端执行如下命令：\n $ echo $GOPATH\n/home/linux/goProject\n$ go build algorithm/qsort </p>\n<h3 id=\"运行此处报错\">运行此处报错</h3>\n<p>can't load package: package algorithm/qsort: cannot find package \"algorithm/qsort\" in any of:\n    /usr/local/go/src/algorithm/qsort (from $GOROOT)\n    /home/linux/goProject/src/algorithm/qsort (from $GOPATH)</p>\n\n<p>使用的是 ubuntu\n$ go env\nGOARCH=\"386\"\nGOBIN=\"\"\nGOEXE=\"\"\nGOHOSTARCH=\"386\"\nGOHOSTOS=\"linux\"\nGOOS=\"linux\"\nGOPATH=\"/home/linux/goProject\"\nGORACE=\"\"\nGOROOT=\"/usr/local/go\"\nGOTOOLDIR=\"/usr/local/go/pkg/tool/linux_386\"\nCC=\"gcc\"\nGOGCCFLAGS=\"-fPIC -m32 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build547914717=/tmp/go-build\"\nCXX=\"g++\"\nCGO_ENABLED=\"1\"</p>\n\n<p>环境变量：\n.profile\n添加的\nexport PATH=$PATH:/usr/local/go/bin\nexport GOPATH=/home/linux/goProject  </p>",
    "hits": 723,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 421,
    "title": "go 定时执行",
    "created_at": "2016-11-23 15:57:17",
    "updated_at": "2016-12-07 12:26:39",
    "replied_at": "2016-12-07 12:26:39",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 407,
    "user": "{\"id\": 407, \"name\": \"lucyne\", \"login\": \"lucyne\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "\tsig := make(chan os.Signal, 1)\n\tsignal.Notify(sig, os.Interrupt, syscall.SIGTERM, syscall.SIGQUIT)\n\ttimer := time.Tick(1 * time.Second)\n\tdone := false\n\tfor !done {\n\t\tselect {\n\t\tcase &lt;-sig:\n\t\t\tdone = true\n\t\tcase &lt;-timer:\n\t\t\tfmt.print()\n\t\t}\n\t}\n\t\n\t如上代码我如何在case &lt;-timer:中做一个计数器(for循环中的i如何得到)？ 谢谢\n\t",
    "body_html": "<p>sig := make(chan os.Signal, 1)\n    signal.Notify(sig, os.Interrupt, syscall.SIGTERM, syscall.SIGQUIT)\n    timer := time.Tick(1 * time.Second)\n    done := false\n    for ! done {\n        select {\n        case &lt;-sig:\n            done = true\n        case &lt;-timer:\n            fmt.print()\n        }\n    }</p>\n\n<p>如上代码我如何在 case &lt;-timer:中做一个计数器 (for 循环中的 i 如何得到)？ 谢谢</p>",
    "hits": 383,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 422,
    "title": "go中获取进程id用os.Getpid，怎么获取线程id呢",
    "created_at": "2016-11-23 16:02:46",
    "updated_at": "2020-03-23 12:47:11",
    "replied_at": "2016-11-23 17:49:20",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1357,
    "last_reply_user_login": "Dingding",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1357,
    "user": "{\"id\": 1357, \"name\": \"Dingding\", \"login\": \"Dingding\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 495,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 423,
    "title": "喜欢Go，当然得找一份实习工作或校招工作。可是适合应届毕业生工作机会极少，甚至没有。",
    "created_at": "2016-11-23 16:16:07",
    "updated_at": "2016-12-01 15:57:58",
    "replied_at": "2016-12-01 15:57:58",
    "replies_count": 11,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 568,
    "last_reply_user_login": "logiz",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1370,
    "user": "{\"id\": 1370, \"name\": \"mygolang\", \"login\": \"mygolang\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "非常喜欢golang这门语言。但是不能仅仅限于学习，我更想在实际生产中使用go。\n我是大四的应届毕业生。几乎是没有发现适合应届毕业生的golang工作。\n无奈继续Java的工作。个人最喜欢golang的工作。\n请问该如何调整心态。",
    "body_html": "<p>非常喜欢 golang 这门语言。但是不能仅仅限于学习，我更想在实际生产中使用 go。\n我是大四的应届毕业生。几乎是没有发现适合应届毕业生的 golang 工作。\n无奈继续 Java 的工作。个人最喜欢 golang 的工作。\n请问该如何调整心态。</p>",
    "hits": 491,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 424,
    "title": "哪位大侠用过go-git的包啊，麻烦指点一下。",
    "created_at": "2016-11-23 17:35:05",
    "updated_at": "2016-11-23 17:35:05",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 70,
    "user": "{\"id\": 70, \"name\": \"Samuier\", \"login\": \"Samuier\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "大家有没有用gopkg.in/src-d/go-git.v3 的啊，使用example中的代码一直跑不成功。\n使用ssh和http均无法clone代码下来。\n有没有哪位使用过这个包，到底该怎么用啊。",
    "body_html": "<p>大家有没有用 gopkg.in/src-d/go-git.v3 的啊，使用 example 中的代码一直跑不成功。\n使用 ssh 和 http 均无法 clone 代码下来。\n有没有哪位使用过这个包，到底该怎么用啊。</p>",
    "hits": 316,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 425,
    "title": "go 调用exe，保持连接的方式问题",
    "created_at": "2016-11-24 09:38:43",
    "updated_at": "2016-11-24 15:15:03",
    "replied_at": "2016-11-24 15:15:03",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 636,
    "last_reply_user_login": "stevewang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "1。看上去是一个进程工作，效率不知道是否会比用for反复执行效率高\n\n2。能长时间保持链接exe（通信）？\n3。传递的是stdin还是命令行，\n如果是命令行，是不是就只能在第一次调用传参数，而且如果exe本身没标准输入部分编程，后期等于新数据无法再进去了\n\n",
    "body_html": "<p>1。看上去是一个进程工作，效率不知道是否会比用 for 反复执行效率高</p>\n\n<p>2。能长时间保持链接 exe（通信）？\n3。传递的是 stdin 还是命令行，\n如果是命令行，是不是就只能在第一次调用传参数，而且如果 exe 本身没标准输入部分编程，后期等于新数据无法再进去了</p>",
    "hits": 411,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 426,
    "title": "使用this.Ctx.Output.Header解决跨域问题",
    "created_at": "2016-11-24 16:37:55",
    "updated_at": "2016-11-25 09:18:21",
    "replied_at": "2016-11-25 09:18:21",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 45,
    "last_reply_user_login": "小张的烦恼",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 45,
    "user": "{\"id\": 45, \"name\": \"小张的烦恼\", \"login\": \"zhangyumingtfr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "就是想那种可以在配置文件中间设置不用在每个函数都写一遍，或者封成一个函数在每个函数调用一遍《有了解的吗？？求指导，谢谢！！！！！！！！！！！",
    "body_html": "<p>就是想那种可以在配置文件中间设置不用在每个函数都写一遍，或者封成一个函数在每个函数调用一遍《有了解的吗？？求指导，谢谢！！！！！！！！！！！</p>",
    "hits": 628,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 427,
    "title": "为什么新建文件的modtime小于当前系统时间？",
    "created_at": "2016-11-25 10:44:30",
    "updated_at": "2016-11-26 00:13:04",
    "replied_at": "2016-11-26 00:13:04",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1381,
    "last_reply_user_login": "wangcn",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1381,
    "user": "{\"id\": 1381, \"name\": \"wangcn\", \"login\": \"wangcn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\npackage main\n\nimport (\n   &quot;os&quot;\n   &quot;time&quot;\n   &quot;fmt&quot;\n)\n\n\nfunc main() {\n   t1 := time.Now()\n   fmt.Println(t1)\n   file, _ := os.Create(&quot;test.txt&quot;)\n   stat, _ := file.Stat()\n   t2 := stat.ModTime()\n   fmt.Println(t2)\n}\n```\n这里t2 &lt; t1.　是什么原因？\n环境是go1.7.3+openSUSE42.1, 文件系统是ｘｆｓ．\n\n我现在是通过比较这两个时间来做日志切割．这个现象会导致重复切割，使日志丢失．",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n   <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">os</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n   <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n   <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n   <span class=\"n\">t1</span> <span class=\"o\">:=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Now</span><span class=\"p\">()</span>\n   <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">t1</span><span class=\"p\">)</span>\n   <span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">txt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n   <span class=\"n\">stat</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">Stat</span><span class=\"p\">()</span>\n   <span class=\"n\">t2</span> <span class=\"o\">:=</span> <span class=\"n\">stat</span><span class=\"o\">.</span><span class=\"n\">ModTime</span><span class=\"p\">()</span>\n   <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">t2</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>这里 t2 &lt; t1.　是什么原因？\n环境是 go1.7.3+openSUSE42.1, 文件系统是ｘｆｓ．</p>\n\n<p>我现在是通过比较这两个时间来做日志切割．这个现象会导致重复切割，使日志丢失．</p>",
    "hits": 349,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 428,
    "title": "beego 路由/staticblock/:key，如何传空的值，并且让router能被匹配",
    "created_at": "2016-11-26 17:35:58",
    "updated_at": "2021-01-20 02:33:57",
    "replied_at": "2016-11-26 21:54:00",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 261,
    "user": "{\"id\": 261, \"name\": \"hacpai\", \"login\": \"hacpai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 375,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 429,
    "title": "beego orm 如何维护多对多关系",
    "created_at": "2016-11-27 01:07:28",
    "updated_at": "2021-01-20 11:15:22",
    "replied_at": "2016-12-01 11:55:18",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 70,
    "last_reply_user_login": "Samuier",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1038,
    "user": "{\"id\": 1038, \"name\": \"luhuisicnu\", \"login\": \"luhuisicnu\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\n// User table\t用户表，与用户组表多对多关系\ntype User struct {\n\tId         int\n\tUserName   string `orm:&quot;unique&quot;`\n\tDepartment string\n\tEmail      string\n\tGroups     []*Group `orm:&quot;rel(m2m)&quot;` //多对多\n}\n\n// Group table 用户组表，与用户表多对多关系\ntype Group struct {\n\tId        int\n\tGroupName string `orm:&quot;unique&quot;`\n\tIntroduce string\n\tUsers     []*User `orm:&quot;reverse(many)&quot;` //反向多对多\n}\n```\n表如上，用户和用户组是多对多关系，假如我手上有user1,user2,group1,group2，如何的orm操作，可以让user1属于group1,group2,而user2只属于group2",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"c\">// User table   用户表，与用户组表多对多关系</span>\n<span class=\"k\">type</span> <span class=\"n\">User</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span>         <span class=\"kt\">int</span>\n    <span class=\"n\">UserName</span>   <span class=\"kt\">string</span> <span class=\"s\">`orm:&amp;quot;unique&amp;quot;`</span>\n    <span class=\"n\">Department</span> <span class=\"kt\">string</span>\n    <span class=\"n\">Email</span>      <span class=\"kt\">string</span>\n    <span class=\"n\">Groups</span>     <span class=\"p\">[]</span><span class=\"o\">*</span><span class=\"n\">Group</span> <span class=\"s\">`orm:&amp;quot;rel(m2m)&amp;quot;`</span> <span class=\"c\">//多对多</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">// Group table 用户组表，与用户表多对多关系</span>\n<span class=\"k\">type</span> <span class=\"n\">Group</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span>        <span class=\"kt\">int</span>\n    <span class=\"n\">GroupName</span> <span class=\"kt\">string</span> <span class=\"s\">`orm:&amp;quot;unique&amp;quot;`</span>\n    <span class=\"n\">Introduce</span> <span class=\"kt\">string</span>\n    <span class=\"n\">Users</span>     <span class=\"p\">[]</span><span class=\"o\">*</span><span class=\"n\">User</span> <span class=\"s\">`orm:&amp;quot;reverse(many)&amp;quot;`</span> <span class=\"c\">//反向多对多</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>表如上，用户和用户组是多对多关系，假如我手上有 user1,user2,group1,group2，如何的 orm 操作，可以让 user1 属于 group1,group2,而 user2 只属于 group2</p>",
    "hits": 585,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 430,
    "title": "beego的redis模块是构造的连接池吗",
    "created_at": "2016-11-27 14:05:39",
    "updated_at": "2021-01-16 21:20:15",
    "replied_at": "2016-12-07 12:30:33",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1384,
    "user": "{\"id\": 1384, \"name\": \"xiucai\", \"login\": \"xiucai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "beego官网给出的redis连接是连接池的形式吗？初学go，没有找到连接池的源码。。。求大神分析一下\n\n---\n&gt;beego官网给的示例代码如下：\n```\n// 首先引入包：\nimport (\n    &quot;github.com/astaxie/beego/cache&quot;\n)\n// 然后初始化一个全局变量对象：\nbm, err := cache.NewCache(&quot;memory&quot;, `{&quot;key&quot;:&quot;collectionName&quot;,&quot;conn&quot;:&quot;:6039&quot;,&quot;dbNum&quot;:&quot;0&quot;,&quot;password&quot;:&quot;thePassWord&quot;}`)\n// 然后我们就可以使用bm增删改缓存：\nbm.Put(&quot;astaxie&quot;, 1, 10*time.Second)\nbm.Get(&quot;astaxie&quot;)\nbm.IsExist(&quot;astaxie&quot;)\nbm.Delete(&quot;astaxie&quot;)\n```",
    "body_html": "<p>beego 官网给出的 redis 连接是连接池的形式吗？初学 go，没有找到连接池的源码。。。求大神分析一下</p>\n\n<hr>\n\n<p>&gt;beego 官网给的示例代码如下：</p>\n <pre class=\"highlight plaintext\"><code>// 首先引入包：\nimport (\n    &amp;quot;github.com/astaxie/beego/cache&amp;quot;\n)\n// 然后初始化一个全局变量对象：\nbm, err := cache.NewCache(&amp;quot;memory&amp;quot;, `{&amp;quot;key&amp;quot;:&amp;quot;collectionName&amp;quot;,&amp;quot;conn&amp;quot;:&amp;quot;:6039&amp;quot;,&amp;quot;dbNum&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;thePassWord&amp;quot;}`)\n// 然后我们就可以使用bm增删改缓存：\nbm.Put(&amp;quot;astaxie&amp;quot;, 1, 10*time.Second)\nbm.Get(&amp;quot;astaxie&amp;quot;)\nbm.IsExist(&amp;quot;astaxie&amp;quot;)\nbm.Delete(&amp;quot;astaxie&amp;quot;)\n</code></pre> ",
    "hits": 226,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 431,
    "title": "临近毕业想听听大家的意见",
    "created_at": "2016-11-28 09:37:14",
    "updated_at": "2016-11-28 22:24:06",
    "replied_at": "2016-11-28 22:24:06",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 831,
    "last_reply_user_login": "hackstoic",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1386,
    "user": "{\"id\": 1386, \"name\": \"孵化器\", \"login\": \"345127857\", \"avatar\": \"https://gocn.vip/system/letter_avatars/3.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在学Java，马上进入项目1阶段了，感觉培训机构学到的东西远远不够，因为个人原因(学历，找工作应该也比较困难，所以想问一下大家，我应该掌握哪些在培训机构学不到的东西，能在面试中胜人一筹呢，希望详细，蟹蟹。",
    "body_html": "<p>在学 Java，马上进入项目 1 阶段了，感觉培训机构学到的东西远远不够，因为个人原因 (学历，找工作应该也比较困难，所以想问一下大家，我应该掌握哪些在培训机构学不到的东西，能在面试中胜人一筹呢，希望详细，蟹蟹。</p>",
    "hits": 450,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 432,
    "title": "请问下有golang实现的贝叶斯过滤器吗？",
    "created_at": "2016-11-28 09:38:26",
    "updated_at": "2016-12-07 12:27:43",
    "replied_at": "2016-12-07 12:27:43",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1070,
    "user": "{\"id\": 1070, \"name\": \"jdlau\", \"login\": \"jdlau\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题。",
    "body_html": "<p>如题。</p>",
    "hits": 309,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 433,
    "title": "学习Go书籍推荐 (更新中)",
    "created_at": "2016-11-28 12:17:02",
    "updated_at": "2018-03-13 09:51:39",
    "replied_at": "2018-03-13 09:51:39",
    "replies_count": 9,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 209,
    "last_reply_user_login": "cloverstd",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 132,
    "user": "{\"id\": 132, \"name\": \"田浩浩\", \"login\": \"llitfkitfk\", \"avatar\": \"https://static.gocn.vip/user/avatar/132/3760a8.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "### A) 基础库学习\n\n⭐️⭐️⭐️⭐️⭐️\n[![Programming in Go](https://images-na.ssl-images-amazon.com/images/I/41kHU5jVrXL._SX387_BO1,204,203,200_.jpg &quot;Programming in Go&quot;)](https://www.amazon.com/Programming-Go-Creating-Applications-Developers/dp/0321774639/ref=sr_1_2?ie=UTF8&amp;qid=1480308090&amp;sr=8-2&amp;keywords=programming+in+go &quot;Programming in Go&quot;)\n\n\n\n⭐️⭐️⭐️⭐️\n[![The Go Programming Language Phrasebook](https://images-na.ssl-images-amazon.com/images/I/51kK3vDIdUL._SX326_BO1,204,203,200_.jpg &quot;The Go Programming Language Phrasebook&quot;)](https://www.amazon.com/Programming-Language-Phrasebook-Developers-Library/dp/0321817141/ref=sr_1_7?ie=UTF8&amp;qid=1480308246&amp;sr=8-7&amp;keywords=the+go+programming+language &quot;The Go Programming Language Phrasebook&quot;)\n\n### B) Web编程\n\n⭐️⭐️⭐️⭐️⭐️\n[![Web Development with Go](https://images-na.ssl-images-amazon.com/images/I/41pU9UH-slL._SX348_BO1,204,203,200_.jpg)](https://www.amazon.com/Web-Development-Go-Building-Scalable/dp/1484210530/ref=sr_1_1?ie=UTF8&amp;qid=1480308334&amp;sr=8-1&amp;keywords=Web+Development+with+Go)\n\n⭐️⭐️⭐️\n[![Go Web Programming](https://images-na.ssl-images-amazon.com/images/I/41CHSzebhAL._SX396_BO1,204,203,200_.jpg)](https://www.amazon.com/Web-Programming-Sau-Sheong-Chang/dp/1617292567/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1480308456&amp;sr=1-1&amp;keywords=go+web+programming)\n\n### C) 进阶\n\n⭐️⭐️⭐️⭐️⭐️\n[![Go in Action](https://images-na.ssl-images-amazon.com/images/I/41xsZd9euBL._SX396_BO1,204,203,200_.jpg)](https://www.amazon.com/Go-Action-William-Kennedy/dp/1617291781/ref=sr_1_1?ie=UTF8&amp;qid=1480308379&amp;sr=8-1&amp;keywords=Go+in+Action)\n\n### D) 最佳实践\n\n⭐️⭐️⭐️⭐️⭐️\n[![Go in Practice](https://images-na.ssl-images-amazon.com/images/I/41oiM9rSONL._SX397_BO1,204,203,200_.jpg)](https://www.amazon.com/Go-Practice-Techniques-Matt-Butcher/dp/1633430073/ref=sr_1_1?ie=UTF8&amp;qid=1480308402&amp;sr=8-1&amp;keywords=Go+in+Practice)\n\n⭐️⭐️⭐️⭐️\n\n[![Go Recipes](https://images-na.ssl-images-amazon.com/images/I/41Yv-p9xfFL._SX348_BO1,204,203,200_.jpg)](https://www.amazon.com/Go-Recipes-Problem-Solution-Shiju-Varghese/dp/1484211898/ref=sr_1_1?ie=UTF8&amp;qid=1480308429&amp;sr=8-1&amp;keywords=Go+Recipes)\n\n最佳实践(Go语言编写的Open Source)\n[Docker - the open-source application container engine](https://github.com/docker/docker)\n[Cadvisor - Analyzes resource usage and performance characteristics of running containers.](https://github.com/google/cadvisor)\n[pgweb - Cross-platform client for PostgreSQL databases](https://github.com/sosedoff/pgweb)\n[Httpstat - It's like curl -v, with colours.](https://github.com/davecheney/httpstat)\n\n### E) 线上学习资源\n\n⭐️⭐️⭐️⭐️⭐️\n[Awesome Go](https://github.com/avelino/awesome-go#awesome-go), [Golang Weekly](http://golangweekly.com/issues)\n\n⭐️⭐️⭐️⭐️\n[Go by Example](https://gobyexample.com/)\n\n\n---\n\n### F)网友推荐\n\n[Go语言圣经（中文版）](http://docs.ruanjiadeng.com/gopl-zh/)\n[Go Web编程](https://wizardforcel.gitbooks.io/build-web-application-with-golang/content/preface.html)\n[Go学习笔记](https://github.com/qyuhen/book)",
    "body_html": "<h3 id=\"A) 基础库学习\">A) 基础库学习</h3>\n<p>⭐️⭐️⭐️⭐️⭐️\n<a href=\"https://www.amazon.com/Programming-Go-Creating-Applications-Developers/dp/0321774639/ref=sr_1_2?ie=UTF8&amp;qid=1480308090&amp;sr=8-2&amp;keywords=programming+in+go%20%22Programming%20in%20Go%22\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"https://images-na.ssl-images-amazon.com/images/I/41kHU5jVrXL._SX387_BO1,204,203,200_.jpg\" title=\"&quot;Programming\" alt=\"Programming in Go\"></a></p>\n\n<p>⭐️⭐️⭐️⭐️\n<a href=\"https://www.amazon.com/Programming-Language-Phrasebook-Developers-Library/dp/0321817141/ref=sr_1_7?ie=UTF8&amp;qid=1480308246&amp;sr=8-7&amp;keywords=the+go+programming+language%20%22The%20Go%20Programming%20Language%20Phrasebook%22\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"https://images-na.ssl-images-amazon.com/images/I/51kK3vDIdUL._SX326_BO1,204,203,200_.jpg\" title=\"&quot;The\" alt=\"The Go Programming Language Phrasebook\"></a></p>\n<h3 id=\"B) Web编程\">B) Web 编程</h3>\n<p>⭐️⭐️⭐️⭐️⭐️\n<a href=\"https://www.amazon.com/Web-Development-Go-Building-Scalable/dp/1484210530/ref=sr_1_1?ie=UTF8&amp;qid=1480308334&amp;sr=8-1&amp;keywords=Web+Development+with+Go\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"https://images-na.ssl-images-amazon.com/images/I/41pU9UH-slL._SX348_BO1,204,203,200_.jpg\" title=\"\" alt=\"Web Development with Go\"></a></p>\n\n<p>⭐️⭐️⭐️\n<a href=\"https://www.amazon.com/Web-Programming-Sau-Sheong-Chang/dp/1617292567/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1480308456&amp;sr=1-1&amp;keywords=go+web+programming\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"https://images-na.ssl-images-amazon.com/images/I/41CHSzebhAL._SX396_BO1,204,203,200_.jpg\" title=\"\" alt=\"Go Web Programming\"></a></p>\n<h3 id=\"C) 进阶\">C) 进阶</h3>\n<p>⭐️⭐️⭐️⭐️⭐️\n<a href=\"https://www.amazon.com/Go-Action-William-Kennedy/dp/1617291781/ref=sr_1_1?ie=UTF8&amp;qid=1480308379&amp;sr=8-1&amp;keywords=Go+in+Action\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"https://images-na.ssl-images-amazon.com/images/I/41xsZd9euBL._SX396_BO1,204,203,200_.jpg\" title=\"\" alt=\"Go in Action\"></a></p>\n<h3 id=\"D) 最佳实践\">D) 最佳实践</h3>\n<p>⭐️⭐️⭐️⭐️⭐️\n<a href=\"https://www.amazon.com/Go-Practice-Techniques-Matt-Butcher/dp/1633430073/ref=sr_1_1?ie=UTF8&amp;qid=1480308402&amp;sr=8-1&amp;keywords=Go+in+Practice\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"https://images-na.ssl-images-amazon.com/images/I/41oiM9rSONL._SX397_BO1,204,203,200_.jpg\" title=\"\" alt=\"Go in Practice\"></a></p>\n\n<p>⭐️⭐️⭐️⭐️</p>\n\n<p><a href=\"https://www.amazon.com/Go-Recipes-Problem-Solution-Shiju-Varghese/dp/1484211898/ref=sr_1_1?ie=UTF8&amp;qid=1480308429&amp;sr=8-1&amp;keywords=Go+Recipes\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"https://images-na.ssl-images-amazon.com/images/I/41Yv-p9xfFL._SX348_BO1,204,203,200_.jpg\" title=\"\" alt=\"Go Recipes\"></a></p>\n\n<p>最佳实践 (Go 语言编写的 Open Source)\n<a href=\"https://github.com/docker/docker\" rel=\"nofollow\" target=\"_blank\" title=\"\">Docker - the open-source application container engine</a>\n<a href=\"https://github.com/google/cadvisor\" rel=\"nofollow\" target=\"_blank\" title=\"\">Cadvisor - Analyzes resource usage and performance characteristics of running containers.</a>\n<a href=\"https://github.com/sosedoff/pgweb\" rel=\"nofollow\" target=\"_blank\" title=\"\">pgweb - Cross-platform client for PostgreSQL databases</a>\n<a href=\"https://github.com/davecheney/httpstat\" rel=\"nofollow\" target=\"_blank\" title=\"\">Httpstat - It's like curl -v, with colours.</a></p>\n<h3 id=\"E) 线上学习资源\">E) 线上学习资源</h3>\n<p>⭐️⭐️⭐️⭐️⭐️\n<a href=\"https://github.com/avelino/awesome-go#awesome-go\" rel=\"nofollow\" target=\"_blank\" title=\"\">Awesome Go</a>, <a href=\"http://golangweekly.com/issues\" rel=\"nofollow\" target=\"_blank\" title=\"\">Golang Weekly</a></p>\n\n<p>⭐️⭐️⭐️⭐️\n<a href=\"https://gobyexample.com/\" rel=\"nofollow\" target=\"_blank\" title=\"\">Go by Example</a></p>\n\n<hr>\n<h3 id=\"F)网友推荐\">F) 网友推荐</h3>\n<p><a href=\"http://docs.ruanjiadeng.com/gopl-zh/\" rel=\"nofollow\" target=\"_blank\" title=\"\">Go 语言圣经（中文版）</a>\n<a href=\"https://wizardforcel.gitbooks.io/build-web-application-with-golang/content/preface.html\" rel=\"nofollow\" target=\"_blank\" title=\"\">Go Web 编程</a>\n<a href=\"https://github.com/qyuhen/book\" rel=\"nofollow\" target=\"_blank\" title=\"\">Go 学习笔记</a></p>",
    "hits": 966,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 434,
    "title": "Simple tool to help track vendor branches in a Git repository",
    "created_at": "2016-11-28 23:38:26",
    "updated_at": "2016-11-28 23:38:26",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 961,
    "user": "{\"id\": 961, \"name\": \"有鱼\", \"login\": \"ldshuang\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "https://github.com/cristibalan/braid\n\n感觉可以管理 go 的包",
    "body_html": "<p><a href=\"https://github.com/cristibalan/braid\" rel=\"nofollow\" target=\"_blank\">https://github.com/cristibalan/braid</a></p>\n\n<p>感觉可以管理 go 的包</p>",
    "hits": 293,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 435,
    "title": "nginx 做代理，前端文本数据超过300字，无法保存，服务器报500错误！",
    "created_at": "2016-11-29 09:41:50",
    "updated_at": "2017-01-05 11:44:26",
    "replied_at": "2017-01-05 11:44:26",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 657,
    "last_reply_user_login": "uuapp",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 657,
    "user": "{\"id\": 657, \"name\": \"uuapp\", \"login\": \"uuapp\", \"avatar\": \"https://gocn.vip/system/letter_avatars/u.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "nginx 做服务，前端文本数据超过300字，无法保存，服务器报500错误，数据小于300可以正常保存，是配置哪里不对吗？求各位老司机\n\nnginx 配置\n```go\nproxy_set_header X-Forwarded-For $remote_addr;\nproxy_set_header Host            $http_host;\nproxy_buffer_size 1024k;\nproxy_buffers 32 1024k;\nproxy_busy_buffers_size 1024k;\n```",
    "body_html": "<p>nginx 做服务，前端文本数据超过 300 字，无法保存，服务器报 500 错误，数据小于 300 可以正常保存，是配置哪里不对吗？求各位老司机</p>\n\n<p>nginx 配置</p>\n <pre class=\"highlight go\"><code><span class=\"n\">proxy_set_header</span> <span class=\"n\">X</span><span class=\"o\">-</span><span class=\"n\">Forwarded</span><span class=\"o\">-</span><span class=\"n\">For</span> <span class=\"err\">$</span><span class=\"n\">remote_addr</span><span class=\"p\">;</span>\n<span class=\"n\">proxy_set_header</span> <span class=\"n\">Host</span>            <span class=\"err\">$</span><span class=\"n\">http_host</span><span class=\"p\">;</span>\n<span class=\"n\">proxy_buffer_size</span> <span class=\"m\">1024</span><span class=\"n\">k</span><span class=\"p\">;</span>\n<span class=\"n\">proxy_buffers</span> <span class=\"m\">32</span> <span class=\"m\">1024</span><span class=\"n\">k</span><span class=\"p\">;</span>\n<span class=\"n\">proxy_busy_buffers_size</span> <span class=\"m\">1024</span><span class=\"n\">k</span><span class=\"p\">;</span>\n</code></pre> ",
    "hits": 571,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 436,
    "title": "xorm  一张表，两个字段，关联另外一张表 怎么处理，怎么给字段加别名？",
    "created_at": "2016-11-29 09:50:58",
    "updated_at": "2016-11-29 10:41:36",
    "replied_at": "2016-11-29 10:41:36",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 682,
    "last_reply_user_login": "mintzhao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 657,
    "user": "{\"id\": 657, \"name\": \"uuapp\", \"login\": \"uuapp\", \"avatar\": \"https://gocn.vip/system/letter_avatars/u.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\ntype Question struct {\n\tId           int64\n\tQuestion string\n\tEditor       int64\n\tProofreading int64\n}\n\ntype User struct {\n\tId           int64\n\tUsername\n}\n\ntype Questionquery struct {\n\tId           int64\n\tQuestion string \n\tEditorName string\n\tProofreadingName string\n}\n```\nQuestion 中 Editor 和 Editor 都要关联User, 取得相应的 Username，这个orm 怎么处理的？\n",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">Question</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span>           <span class=\"kt\">int64</span>\n    <span class=\"n\">Question</span> <span class=\"kt\">string</span>\n    <span class=\"n\">Editor</span>       <span class=\"kt\">int64</span>\n    <span class=\"n\">Proofreading</span> <span class=\"kt\">int64</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">type</span> <span class=\"n\">User</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span>           <span class=\"kt\">int64</span>\n    <span class=\"n\">Username</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">type</span> <span class=\"n\">Questionquery</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span>           <span class=\"kt\">int64</span>\n    <span class=\"n\">Question</span> <span class=\"kt\">string</span> \n    <span class=\"n\">EditorName</span> <span class=\"kt\">string</span>\n    <span class=\"n\">ProofreadingName</span> <span class=\"kt\">string</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>Question 中 Editor 和 Editor 都要关联 User, 取得相应的 Username，这个 orm 怎么处理的？</p>",
    "hits": 467,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 437,
    "title": "go 如何监控键盘输入",
    "created_at": "2016-11-29 10:09:48",
    "updated_at": "2016-11-29 15:32:18",
    "replied_at": "2016-11-29 15:21:26",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 183,
    "last_reply_user_login": "veni",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 407,
    "user": "{\"id\": 407, \"name\": \"lucyne\", \"login\": \"lucyne\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "  sig := make(chan os.Signal, 1)\n\tsignal.Notify(sig, os.Interrupt, syscall.SIGTERM, syscall.SIGQUIT)\n\ttimer := time.Tick(mycfg.interval)\n\tdone := false\n\tfor !done {\n\t\tselect {\n\t\tcase &lt;-sig:\n\t\t\tdone = true\n\t\tcase &lt;-timer:\n\t\t\tpt()\n\t\t\t//ps()\n\t\t}\n\t}\n\nfunc pt() {\nfmt.Println(&quot;timer......&quot;)\n}\n\n\nfunc ps() {\nfmt.Println(&quot;sss......&quot;)\n}\n\n那位大神帮忙看下以上代码，我如何 监控键盘输入，例如我输入S，case &lt;-timer:这里将调用ps，不在调用pt方法，谢谢！",
    "body_html": "<p>sig := make(chan os.Signal, 1)\n    signal.Notify(sig, os.Interrupt, syscall.SIGTERM, syscall.SIGQUIT)\n    timer := time.Tick(mycfg.interval)\n    done := false\n    for ! done {\n        select {\n        case &lt;-sig:\n            done = true\n        case &lt;-timer:\n            pt()\n            //ps()\n        }\n    }</p>\n\n<p>func pt() {\nfmt.Println(\"timer......\")\n}</p>\n\n<p>func ps() {\nfmt.Println(\"sss......\")\n}</p>\n\n<p>那位大神帮忙看下以上代码，我如何 监控键盘输入，例如我输入 S，case &lt;-timer:这里将调用 ps，不在调用 pt 方法，谢谢！</p>",
    "hits": 705,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 438,
    "title": "ubuntu tail 日志文件显示颜色的问题",
    "created_at": "2016-11-29 10:29:32",
    "updated_at": "2016-12-07 12:21:46",
    "replied_at": "2016-12-07 12:21:46",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 962,
    "user": "{\"id\": 962, \"name\": \"codinghxl\", \"login\": \"codinghxl\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我用https://github.com/fatih/color 这个库，在输出日志的时候加上颜色。\n 我的程序直接启动，终端可以正常显示颜色\n ```go\n./xxxxx \n```\n但是用nohup启动daemon进程的时候就不能正常显示,tail nohup.out 无颜色显示，vim nohup.out查看日志内容，发现也没自动加上\\e[1;34;41m这样的前缀。\n```go\nnohup ./xxxx &amp;\n```\n\n我手动在打印日志的时候主动加上\\e[ 颜色设置，tail出来依然没颜色，奇怪。",
    "body_html": "<p>我用<a href=\"https://github.com/fatih/color\" rel=\"nofollow\" target=\"_blank\">https://github.com/fatih/color</a> 这个库，在输出日志的时候加上颜色。\n 我的程序直接启动，终端可以正常显示颜色</p>\n <pre class=\"highlight go\"><code><span class=\"o\">./</span><span class=\"n\">xxxxx</span> \n</code></pre> \n<p>但是用 nohup 启动 daemon 进程的时候就不能正常显示,tail nohup.out 无颜色显示，vim nohup.out 查看日志内容，发现也没自动加上\\e[1;34;41m 这样的前缀。</p>\n <pre class=\"highlight go\"><code><span class=\"n\">nohup</span> <span class=\"o\">./</span><span class=\"n\">xxxx</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span>\n</code></pre> \n<p>我手动在打印日志的时候主动加上\\e[ 颜色设置，tail 出来依然没颜色，奇怪。</p>",
    "hits": 323,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 439,
    "title": "beego如何动态水平分表",
    "created_at": "2016-11-29 14:00:13",
    "updated_at": "2021-01-20 13:34:04",
    "replied_at": "2016-11-29 17:19:12",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 234,
    "last_reply_user_login": "sryan",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1344,
    "user": "{\"id\": 1344, \"name\": \"皇虫\", \"login\": \"1272881215\", \"avatar\": \"https://static.gocn.vip/user/avatar/1344/6acfae.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "比如我有一个用户表，表结构如下：\n```go\ntype User struct {\n\tId        int\n\tUname     string `orm:&quot;size(20)&quot;`\n\tPassword string `orm:&quot;size(32)&quot;`\n}\n```\n因为用户量增多，然后需要水平分表，表结构还是跟上面一样。分表后，表有user表，user1,user2表等，请问如何动态实现？",
    "body_html": "<p>比如我有一个用户表，表结构如下：</p>\n <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">User</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span>        <span class=\"kt\">int</span>\n    <span class=\"n\">Uname</span>     <span class=\"kt\">string</span> <span class=\"s\">`orm:&amp;quot;size(20)&amp;quot;`</span>\n    <span class=\"n\">Password</span> <span class=\"kt\">string</span> <span class=\"s\">`orm:&amp;quot;size(32)&amp;quot;`</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>因为用户量增多，然后需要水平分表，表结构还是跟上面一样。分表后，表有 user 表，user1,user2 表等，请问如何动态实现？</p>",
    "hits": 548,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 440,
    "title": "beego post 状态的问题",
    "created_at": "2016-11-29 16:34:45",
    "updated_at": "2021-01-20 02:22:21",
    "replied_at": "2016-11-29 23:20:29",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 657,
    "last_reply_user_login": "uuapp",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 657,
    "user": "{\"id\": 657, \"name\": \"uuapp\", \"login\": \"uuapp\", \"avatar\": \"https://gocn.vip/system/letter_avatars/u.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\ncmstest:can't find templatefile in the path:dictionarycontroller/doadd.tpl\nRequest Method:\tPOST\nRequest URL:\t/dictionary/add\nRemoteAddr:\t127.0.0.1\nStack\n/usr/local/go/src/runtime/asm_amd64.s:479\n/usr/local/go/src/runtime/panic.go:458\n/Users/lixinhua/Desktop/gocode/src/github.com/astaxie/beego/template.go:64\n/Users/lixinhua/Desktop/gocode/src/github.com/astaxie/beego/controller.go:249\n/Users/lixinhua/Desktop/gocode/src/github.com/astaxie/beego/controller.go:200\n/Users/lixinhua/Desktop/gocode/src/github.com/astaxie/beego/controller.go:184\n/Users/lixinhua/Desktop/gocode/src/github.com/astaxie/beego/router.go:801\n/usr/local/go/src/net/http/server.go:2202\n/usr/local/go/src/net/http/server.go:1579\n/usr/local/go/src/runtime/asm_amd64.s:2086\nbeego 1.7.1 (beego framework)\ngolang version: go1.7.3\n```\n路由\n\n```go\nbeego.Router(&quot;/dictionary/add&quot;, &amp;controllers.DictionaryController{}, &quot;get:Add;post:DoAdd&quot;)\n```\n\npost 怎么会去找 doadd.tpl，这个问题是 时好时坏，清空浏览器缓存后就好了，用几次 又会出现，请教老司机\n\n\n",
    "body_html": "<pre class=\"highlight go\"><code><span class=\"n\">cmstest</span><span class=\"o\">:</span><span class=\"n\">can</span><span class=\"err\">'</span><span class=\"n\">t</span> <span class=\"n\">find</span> <span class=\"n\">templatefile</span> <span class=\"n\">in</span> <span class=\"n\">the</span> <span class=\"n\">path</span><span class=\"o\">:</span><span class=\"n\">dictionarycontroller</span><span class=\"o\">/</span><span class=\"n\">doadd</span><span class=\"o\">.</span><span class=\"n\">tpl</span>\n<span class=\"n\">Request</span> <span class=\"n\">Method</span><span class=\"o\">:</span> <span class=\"n\">POST</span>\n<span class=\"n\">Request</span> <span class=\"n\">URL</span><span class=\"o\">:</span>    <span class=\"o\">/</span><span class=\"n\">dictionary</span><span class=\"o\">/</span><span class=\"n\">add</span>\n<span class=\"n\">RemoteAddr</span><span class=\"o\">:</span> <span class=\"m\">127.0.0.1</span>\n<span class=\"n\">Stack</span>\n<span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">479</span>\n<span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"nb\">panic</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">458</span>\n<span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">lixinhua</span><span class=\"o\">/</span><span class=\"n\">Desktop</span><span class=\"o\">/</span><span class=\"n\">gocode</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">64</span>\n<span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">lixinhua</span><span class=\"o\">/</span><span class=\"n\">Desktop</span><span class=\"o\">/</span><span class=\"n\">gocode</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">controller</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">249</span>\n<span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">lixinhua</span><span class=\"o\">/</span><span class=\"n\">Desktop</span><span class=\"o\">/</span><span class=\"n\">gocode</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">controller</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">200</span>\n<span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">lixinhua</span><span class=\"o\">/</span><span class=\"n\">Desktop</span><span class=\"o\">/</span><span class=\"n\">gocode</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">controller</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">184</span>\n<span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">lixinhua</span><span class=\"o\">/</span><span class=\"n\">Desktop</span><span class=\"o\">/</span><span class=\"n\">gocode</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">router</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">801</span>\n<span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">2202</span>\n<span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1579</span>\n<span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">2086</span>\n<span class=\"n\">beego</span> <span class=\"m\">1.7.1</span> <span class=\"p\">(</span><span class=\"n\">beego</span> <span class=\"n\">framework</span><span class=\"p\">)</span>\n<span class=\"n\">golang</span> <span class=\"n\">version</span><span class=\"o\">:</span> <span class=\"n\">go1</span><span class=\"m\">.7.3</span>\n</code></pre>\n<p>路由</p>\n<pre class=\"highlight go\"><code><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">Router</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">dictionary</span><span class=\"o\">/</span><span class=\"n\">add</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">controllers</span><span class=\"o\">.</span><span class=\"n\">DictionaryController</span><span class=\"p\">{},</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">get</span><span class=\"o\">:</span><span class=\"n\">Add</span><span class=\"p\">;</span><span class=\"n\">post</span><span class=\"o\">:</span><span class=\"n\">DoAdd</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n</code></pre>\n<p>post 怎么会去找 doadd.tpl，这个问题是 时好时坏，清空浏览器缓存后就好了，用几次 又会出现，请教老司机</p>",
    "hits": 575,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 441,
    "title": "beego 文件上传demo",
    "created_at": "2016-11-29 16:43:47",
    "updated_at": "2021-01-20 02:22:23",
    "replied_at": "2016-12-01 11:23:10",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1406,
    "last_reply_user_login": "hunterhug",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1353,
    "user": "{\"id\": 1353, \"name\": \"songtianyi\", \"login\": \"songtianyi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "谁有包含文件和普通数据的表单上传demo？\n自己写的总是无法正常解析。",
    "body_html": "<p>谁有包含文件和普通数据的表单上传 demo？\n自己写的总是无法正常解析。</p>",
    "hits": 587,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 442,
    "title": "Golang微服务框架有什么推荐的嘛？",
    "created_at": "2016-11-29 19:26:16",
    "updated_at": "2018-12-30 23:36:04",
    "replied_at": "2018-12-30 23:36:04",
    "replies_count": 9,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 5634,
    "last_reply_user_login": "gosky",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 238,
    "user": "{\"id\": 238, \"name\": \"Kevin\", \"login\": \"kevin\", \"avatar\": \"https://static.gocn.vip/user/avatar/238/32f2aa.jpg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "最近在考察一些相关框架，之前自己简单做了一个轮子，随着发展越来越不满足需求。那么大家都是用哪种呢？如果附上推荐理由和优缺点对比更是感激不尽。手机发帖不打太多了…",
    "body_html": "<p>最近在考察一些相关框架，之前自己简单做了一个轮子，随着发展越来越不满足需求。那么大家都是用哪种呢？如果附上推荐理由和优缺点对比更是感激不尽。手机发帖不打太多了…</p>",
    "hits": 652,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 443,
    "title": "《go语言圣经》中一个关于Channel的问题？",
    "created_at": "2016-11-29 20:58:15",
    "updated_at": "2016-11-30 09:28:18",
    "replied_at": "2016-11-30 09:28:18",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 569,
    "last_reply_user_login": "philc",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 382,
    "user": "{\"id\": 382, \"name\": \"simeon\", \"login\": \"simeon\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\n// Copyright © 2016 Alan A. A. Donovan &amp; Brian W. Kernighan.\n// License: https://creativecommons.org/licenses/by-nc-sa/4.0/\n\n// See page 251.\n\n// The du4 command computes the disk usage of the files in a directory.\npackage main\n\n// The du4 variant includes cancellation:\n// it terminates quickly when the user hits return.\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;os&quot;\n\t&quot;path/filepath&quot;\n\t&quot;sync&quot;\n\t&quot;time&quot;\n)\n\n//!+1\nvar done = make(chan struct{})\n\nfunc cancelled() bool {\n\tselect {\n\tcase &lt;-done:\n\t\treturn true\n\tdefault:\n\t\treturn false\n\t}\n}\n\n//!-1\n\nfunc main() {\n\t// Determine the initial directories.\n\troots := os.Args[1:]\n\tif len(roots) == 0 {\n\t\troots = []string{&quot;.&quot;}\n\t}\n\n\t//!+2\n\t// Cancel traversal when input is detected.\n\tgo func() {\n\t\tos.Stdin.Read(make([]byte, 1)) // read a single byte\n\t\tclose(done)\n\t}()\n\t//!-2\n\n\t// Traverse each root of the file tree in parallel.\n\tfileSizes := make(chan int64)\n\tvar n sync.WaitGroup\n\tfor _, root := range roots {\n\t\tn.Add(1)\n\t\tgo walkDir(root, &amp;n, fileSizes)\n\t}\n\tgo func() {\n\t\tn.Wait()\n\t\tclose(fileSizes)\n\t}()\n\n\t// Print the results periodically.\n\ttick := time.Tick(500 * time.Millisecond)\n\tvar nfiles, nbytes int64\nloop:\n\t//!+3\n\tfor {\n\t\tselect {\n\t\tcase &lt;-done:\n\t\t\t// Drain fileSizes to allow existing goroutines to finish.\n\t\t\tfor range fileSizes {\n\t\t\t\t// Do nothing.\n\t\t\t}\n\t\t\treturn\n\t\tcase size, ok := &lt;-fileSizes:\n\t\t\t// ...\n\t\t\t//!-3\n\t\t\tif !ok {\n\t\t\t\tbreak loop // fileSizes was closed\n\t\t\t}\n\t\t\tnfiles++\n\t\t\tnbytes += size\n\t\tcase &lt;-tick:\n\t\t\tprintDiskUsage(nfiles, nbytes)\n\t\t}\n\t}\n\tprintDiskUsage(nfiles, nbytes) // final totals\n}\n\nfunc printDiskUsage(nfiles, nbytes int64) {\n\tfmt.Printf(&quot;%d files  %.1f GB\\n&quot;, nfiles, float64(nbytes)/1e9)\n}\n\n// walkDir recursively walks the file tree rooted at dir\n// and sends the size of each found file on fileSizes.\n//!+4\nfunc walkDir(dir string, n *sync.WaitGroup, fileSizes chan&lt;- int64) {\n\tdefer n.Done()\n\tif cancelled() {\n\t\treturn\n\t}\n\tfor _, entry := range dirents(dir) {\n\t\t// ...\n\t\t//!-4\n\t\tif entry.IsDir() {\n\t\t\tn.Add(1)\n\t\t\tsubdir := filepath.Join(dir, entry.Name())\n\t\t\tgo walkDir(subdir, n, fileSizes)\n\t\t} else {\n\t\t\tfileSizes &lt;- entry.Size()\n\t\t}\n\t\t//!+4\n\t}\n}\n\n//!-4\n\nvar sema = make(chan struct{}, 20) // concurrency-limiting counting semaphore\n\n// dirents returns the entries of directory dir.\n//!+5\nfunc dirents(dir string) []os.FileInfo {\n\tselect {\n\tcase sema &lt;- struct{}{}: // acquire token\n\tcase &lt;-done:\n\t\treturn nil // cancelled\n\t}\n\tdefer func() { &lt;-sema }() // release token\n\n\t// ...read directory...\n\t//!-5\n\n\tf, err := os.Open(dir)\n\tif err != nil {\n\t\tfmt.Fprintf(os.Stderr, &quot;du: %v\\n&quot;, err)\n\t\treturn nil\n\t}\n\tdefer f.Close()\n\n\tentries, err := f.Readdir(0) // 0 =&gt; no limit; read all entries\n\tif err != nil {\n\t\tfmt.Fprintf(os.Stderr, &quot;du: %v\\n&quot;, err)\n\t\t// Don't return: Readdir may return partial results.\n\t}\n\treturn entries\n}\n```\n\n文章链接：[gopl](https://docs.hacknode.org/gopl-zh/ch8/ch8-09.html &quot;gopl&quot;)\n源代码：[github](https://github.com/adonovan/gopl.io/blob/master/ch8/du4/main.go &quot;github&quot;)\n\n在`dirents`函数中为什么要增加一个`sema channel`, 并且长度是20？",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"c\">// Copyright © 2016 Alan A. A. Donovan &amp;amp; Brian W. Kernighan.</span>\n<span class=\"c\">// License: https://creativecommons.org/licenses/by-nc-sa/4.0/</span>\n\n<span class=\"c\">// See page 251.</span>\n\n<span class=\"c\">// The du4 command computes the disk usage of the files in a directory.</span>\n<span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"c\">// The du4 variant includes cancellation:</span>\n<span class=\"c\">// it terminates quickly when the user hits return.</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">os</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">filepath</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">sync</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"c\">//!+1</span>\n<span class=\"k\">var</span> <span class=\"n\">done</span> <span class=\"o\">=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"k\">struct</span><span class=\"p\">{})</span>\n\n<span class=\"k\">func</span> <span class=\"n\">cancelled</span><span class=\"p\">()</span> <span class=\"kt\">bool</span> <span class=\"p\">{</span>\n    <span class=\"k\">select</span> <span class=\"p\">{</span>\n    <span class=\"k\">case</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">done</span><span class=\"o\">:</span>\n        <span class=\"k\">return</span> <span class=\"no\">true</span>\n    <span class=\"k\">default</span><span class=\"o\">:</span>\n        <span class=\"k\">return</span> <span class=\"no\">false</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">//!-1</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"c\">// Determine the initial directories.</span>\n    <span class=\"n\">roots</span> <span class=\"o\">:=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Args</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"o\">:</span><span class=\"p\">]</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">roots</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n        <span class=\"n\">roots</span> <span class=\"o\">=</span> <span class=\"p\">[]</span><span class=\"kt\">string</span><span class=\"p\">{</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">.&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c\">//!+2</span>\n    <span class=\"c\">// Cancel traversal when input is detected.</span>\n    <span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Stdin</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"nb\">make</span><span class=\"p\">([]</span><span class=\"kt\">byte</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">))</span> <span class=\"c\">// read a single byte</span>\n        <span class=\"nb\">close</span><span class=\"p\">(</span><span class=\"n\">done</span><span class=\"p\">)</span>\n    <span class=\"p\">}()</span>\n    <span class=\"c\">//!-2</span>\n\n    <span class=\"c\">// Traverse each root of the file tree in parallel.</span>\n    <span class=\"n\">fileSizes</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">int64</span><span class=\"p\">)</span>\n    <span class=\"k\">var</span> <span class=\"n\">n</span> <span class=\"n\">sync</span><span class=\"o\">.</span><span class=\"n\">WaitGroup</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">root</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">roots</span> <span class=\"p\">{</span>\n        <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">go</span> <span class=\"n\">walkDir</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">fileSizes</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">()</span>\n        <span class=\"nb\">close</span><span class=\"p\">(</span><span class=\"n\">fileSizes</span><span class=\"p\">)</span>\n    <span class=\"p\">}()</span>\n\n    <span class=\"c\">// Print the results periodically.</span>\n    <span class=\"n\">tick</span> <span class=\"o\">:=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Tick</span><span class=\"p\">(</span><span class=\"m\">500</span> <span class=\"o\">*</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Millisecond</span><span class=\"p\">)</span>\n    <span class=\"k\">var</span> <span class=\"n\">nfiles</span><span class=\"p\">,</span> <span class=\"n\">nbytes</span> <span class=\"kt\">int64</span>\n<span class=\"n\">loop</span><span class=\"o\">:</span>\n    <span class=\"c\">//!+3</span>\n    <span class=\"k\">for</span> <span class=\"p\">{</span>\n        <span class=\"k\">select</span> <span class=\"p\">{</span>\n        <span class=\"k\">case</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">done</span><span class=\"o\">:</span>\n            <span class=\"c\">// Drain fileSizes to allow existing goroutines to finish.</span>\n            <span class=\"k\">for</span> <span class=\"k\">range</span> <span class=\"n\">fileSizes</span> <span class=\"p\">{</span>\n                <span class=\"c\">// Do nothing.</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">return</span>\n        <span class=\"k\">case</span> <span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"n\">ok</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">fileSizes</span><span class=\"o\">:</span>\n            <span class=\"c\">// ...</span>\n            <span class=\"c\">//!-3</span>\n            <span class=\"k\">if</span> <span class=\"o\">!</span><span class=\"n\">ok</span> <span class=\"p\">{</span>\n                <span class=\"k\">break</span> <span class=\"n\">loop</span> <span class=\"c\">// fileSizes was closed</span>\n            <span class=\"p\">}</span>\n            <span class=\"n\">nfiles</span><span class=\"o\">++</span>\n            <span class=\"n\">nbytes</span> <span class=\"o\">+=</span> <span class=\"n\">size</span>\n        <span class=\"k\">case</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">tick</span><span class=\"o\">:</span>\n            <span class=\"n\">printDiskUsage</span><span class=\"p\">(</span><span class=\"n\">nfiles</span><span class=\"p\">,</span> <span class=\"n\">nbytes</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">printDiskUsage</span><span class=\"p\">(</span><span class=\"n\">nfiles</span><span class=\"p\">,</span> <span class=\"n\">nbytes</span><span class=\"p\">)</span> <span class=\"c\">// final totals</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">printDiskUsage</span><span class=\"p\">(</span><span class=\"n\">nfiles</span><span class=\"p\">,</span> <span class=\"n\">nbytes</span> <span class=\"kt\">int64</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">%</span><span class=\"n\">d</span> <span class=\"n\">files</span>  <span class=\"o\">%</span><span class=\"m\">.1</span><span class=\"n\">f</span> <span class=\"n\">GB</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">nfiles</span><span class=\"p\">,</span> <span class=\"kt\">float64</span><span class=\"p\">(</span><span class=\"n\">nbytes</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"m\">1e9</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">// walkDir recursively walks the file tree rooted at dir</span>\n<span class=\"c\">// and sends the size of each found file on fileSizes.</span>\n<span class=\"c\">//!+4</span>\n<span class=\"k\">func</span> <span class=\"n\">walkDir</span><span class=\"p\">(</span><span class=\"n\">dir</span> <span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"n\">n</span> <span class=\"o\">*</span><span class=\"n\">sync</span><span class=\"o\">.</span><span class=\"n\">WaitGroup</span><span class=\"p\">,</span> <span class=\"n\">fileSizes</span> <span class=\"k\">chan</span><span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"kt\">int64</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">defer</span> <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">Done</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">cancelled</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">entry</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">dirents</span><span class=\"p\">(</span><span class=\"n\">dir</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"c\">// ...</span>\n        <span class=\"c\">//!-4</span>\n        <span class=\"k\">if</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">IsDir</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n            <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)</span>\n            <span class=\"n\">subdir</span> <span class=\"o\">:=</span> <span class=\"n\">filepath</span><span class=\"o\">.</span><span class=\"n\">Join</span><span class=\"p\">(</span><span class=\"n\">dir</span><span class=\"p\">,</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">())</span>\n            <span class=\"k\">go</span> <span class=\"n\">walkDir</span><span class=\"p\">(</span><span class=\"n\">subdir</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">fileSizes</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n            <span class=\"n\">fileSizes</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">Size</span><span class=\"p\">()</span>\n        <span class=\"p\">}</span>\n        <span class=\"c\">//!+4</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">//!-4</span>\n\n<span class=\"k\">var</span> <span class=\"n\">sema</span> <span class=\"o\">=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"k\">struct</span><span class=\"p\">{},</span> <span class=\"m\">20</span><span class=\"p\">)</span> <span class=\"c\">// concurrency-limiting counting semaphore</span>\n\n<span class=\"c\">// dirents returns the entries of directory dir.</span>\n<span class=\"c\">//!+5</span>\n<span class=\"k\">func</span> <span class=\"n\">dirents</span><span class=\"p\">(</span><span class=\"n\">dir</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"p\">[]</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">FileInfo</span> <span class=\"p\">{</span>\n    <span class=\"k\">select</span> <span class=\"p\">{</span>\n    <span class=\"k\">case</span> <span class=\"n\">sema</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"k\">struct</span><span class=\"p\">{}{}</span><span class=\"o\">:</span> <span class=\"c\">// acquire token</span>\n    <span class=\"k\">case</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">done</span><span class=\"o\">:</span>\n        <span class=\"k\">return</span> <span class=\"no\">nil</span> <span class=\"c\">// cancelled</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">defer</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">sema</span> <span class=\"p\">}()</span> <span class=\"c\">// release token</span>\n\n    <span class=\"c\">// ...read directory...</span>\n    <span class=\"c\">//!-5</span>\n\n    <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"n\">dir</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Fprintf</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Stderr</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">du</span><span class=\"o\">:</span> <span class=\"o\">%</span><span class=\"n\">v</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"no\">nil</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">defer</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n\n    <span class=\"n\">entries</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">Readdir</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">)</span> <span class=\"c\">// 0 =&amp;gt; no limit; read all entries</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Fprintf</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Stderr</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">du</span><span class=\"o\">:</span> <span class=\"o\">%</span><span class=\"n\">v</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\n        <span class=\"c\">// Don't return: Readdir may return partial results.</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">entries</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>文章链接：<a href=\"https://docs.hacknode.org/gopl-zh/ch8/ch8-09.html%20%22gopl%22\" title=\"\">gopl</a>\n源代码：<a href=\"https://github.com/adonovan/gopl.io/blob/master/ch8/du4/main.go%20%22github%22\" title=\"\">github</a></p>\n\n<p>在<code>dirents</code>函数中为什么要增加一个<code>sema channel</code>, 并且长度是 20？</p>",
    "hits": 564,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 444,
    "title": "推荐一个golang分享的ppt",
    "created_at": "2016-11-30 10:48:14",
    "updated_at": "2016-11-30 15:25:55",
    "replied_at": "2016-11-30 15:25:55",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1367,
    "last_reply_user_login": "lintBai",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1397,
    "user": "{\"id\": 1397, \"name\": \"embsys\", \"login\": \"embsys\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "部门正在调研要不要迁移golang，所以想做个ptt给部门的人先扫个盲，又不想自己做",
    "body_html": "<p>部门正在调研要不要迁移 golang，所以想做个 ptt 给部门的人先扫个盲，又不想自己做</p>",
    "hits": 431,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 445,
    "title": "升级了macOS后运行beego项目出现fatal error: unexpected signal during runtime execution错误",
    "created_at": "2016-11-30 14:07:51",
    "updated_at": "2021-02-09 04:52:13",
    "replied_at": "2016-12-07 14:10:21",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1197,
    "last_reply_user_login": "nil",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 606,
    "user": "{\"id\": 606, \"name\": \"ivanzhang\", \"login\": \"ivanzhang\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "升级了macOS后运行beego项目经常会出现这样的错误信息。有没有遇到过并解决了的？\n======================================================\ngo version go1.6.2 darwin/amd64\n--------------------------------\nfatal error: unexpected signal during runtime execution\n[signal 0xb code=0x1 addr=0x630cbbb1250 pc=0xf0eb]\n\nruntime stack:\nruntime.throw(0x4971c0, 0x2a)\n\t/usr/local/go/src/runtime/panic.go:547 +0x90\nruntime.sigpanic()\n\t/usr/local/go/src/runtime/sigpanic_unix.go:12 +0x5a\nruntime.unlock(0x982540)\n\t/usr/local/go/src/runtime/lock_sema.go:107 +0x14b\nruntime.(*mheap).alloc_m(0x982540, 0x1, 0xa, 0xbeba88)\n\t/usr/local/go/src/runtime/mheap.go:492 +0x314\nruntime.(*mheap).alloc.func1()\n\t/usr/local/go/src/runtime/mheap.go:502 +0x41\nruntime.systemstack(0xc820037e58)\n\t/usr/local/go/src/runtime/asm_amd64.s:307 +0xab\nruntime.(*mheap).alloc(0x982540, 0x1, 0x1000000000a, 0xed8f)\n\t/usr/local/go/src/runtime/mheap.go:503 +0x63\nruntime.(*mcentral).grow(0x983c70, 0x0)\n\t/usr/local/go/src/runtime/mcentral.go:209 +0x93\nruntime.(*mcentral).cacheSpan(0x983c70, 0xc8200160b0)\n\t/usr/local/go/src/runtime/mcentral.go:89 +0x47d\nruntime.(*mcache).refill(0xaf4e10, 0xa, 0xc820016080)\n\t/usr/local/go/src/runtime/mcache.go:119 +0xcc\nruntime.mallocgc.func2()\n\t/usr/local/go/src/runtime/malloc.go:642 +0x2b\nruntime.systemstack(0xc82001b500)\n\t/usr/local/go/src/runtime/asm_amd64.s:291 +0x79\nruntime.mstart()\n\t/usr/local/go/src/runtime/proc.go:1051\n\ngoroutine 1 [running]:\nruntime.systemstack_switch()\n\t/usr/local/go/src/runtime/asm_amd64.s:245 fp=0xc820aef5c8 sp=0xc820aef5c0\nruntime.mallocgc(0x90, 0x437920, 0x0, 0x19c9fb)\n\t/usr/local/go/src/runtime/malloc.go:643 +0x869 fp=0xc820aef6a0 sp=0xc820aef5c8\nruntime.newobject(0x437920, 0xc8200144e0)\n\t/usr/local/go/src/runtime/malloc.go:781 +0x42 fp=0xc820aef6c8 sp=0xc820aef6a0\ncmd/compile/internal/gc.Nod(0xc820336801, 0x0, 0x0, 0xc820336880)\n\t/usr/local/go/src/cmd/compile/internal/gc/subr.go:337 +0x27 fp=0xc820aef6e8 sp=0xc820aef6c8\ncmd/compile/internal/gc.newname(0xc8207e8900, 0x0)\n\t/usr/local/go/src/cmd/compile/internal/gc/dcl.go:352 +0x68 fp=0xc820aef720 sp=0xc820aef6e8\ncmd/compile/internal/gc.(*parser).hidden_fndcl(0x972b80, 0x0)\n\t/usr/local/go/src/cmd/compile/internal/gc/parser.go:2190 +0x127 fp=0xc820aef800 sp=0xc820aef720\ncmd/compile/internal/gc.(*parser).hidden_import(0x972b80)\n\t/usr/local/go/src/cmd/compile/internal/gc/parser.go:3017 +0x15a fp=0xc820aef928 sp=0xc820aef800\ncmd/compile/internal/gc.(*parser).hidden_import_list(0x972b80)\n\t/usr/local/go/src/cmd/compile/internal/gc/parser.go:3462 +0x28 fp=0xc820aef950 sp=0xc820aef928\ncmd/compile/internal/gc.(*parser).import_there(0x972b80)\n\t/usr/local/go/src/cmd/compile/internal/gc/parser.go:503 +0x26 fp=0xc820aef978 sp=0xc820aef950\ncmd/compile/internal/gc.(*parser).import_stmt(0x972b80)\n\t/usr/local/go/src/cmd/compile/internal/gc/parser.go:369 +0x6b fp=0xc820aefa70 sp=0xc820aef978\ncmd/compile/internal/gc.(*parser).import_(0x972b80)\n\t/usr/local/go/src/cmd/compile/internal/gc/parser.go:350 +0x69 fp=0xc820aefa98 sp=0xc820aefa70\ncmd/compile/internal/gc.(*parser).file(0x972b80)\n\t/usr/local/go/src/cmd/compile/internal/gc/parser.go:316 +0x53 fp=0xc820aefad0 sp=0xc820aefa98\ncmd/compile/internal/gc.parse_file()\n\t/usr/local/go/src/cmd/compile/internal/gc/parser.go:56 +0x5a fp=0xc820aefae0 sp=0xc820aefad0\ncmd/compile/internal/gc.Main()\n\t/usr/local/go/src/cmd/compile/internal/gc/lex.go:345 +0x1d44 fp=0xc820aefe00 sp=0xc820aefae0\ncmd/compile/internal/amd64.Main()\n\t/usr/local/go/src/cmd/compile/internal/amd64/galign.go:127 +0x58d fp=0xc820aefe68 sp=0xc820aefe00\nmain.main()\n\t/usr/local/go/src/cmd/compile/main.go:32 +0x395 fp=0xc820aeff40 sp=0xc820aefe68\nruntime.main()\n\t/usr/local/go/src/runtime/proc.go:188 +0x2b0 fp=0xc820aeff90 sp=0xc820aeff40\nruntime.goexit()\n\t/usr/local/go/src/runtime/asm_amd64.s:1998 +0x1 fp=0xc820aeff98 sp=0xc820aeff90",
    "body_html": "<h2 id=\"升级了macOS后运行beego项目经常会出现这样的错误信息。有没有遇到过并解决了的？\">升级了 macOS 后运行 beego 项目经常会出现这样的错误信息。有没有遇到过并解决了的？</h2><h2 id=\"go version go1.6.2 darwin/amd64\">go version go1.6.2 darwin/amd64</h2>\n<p>fatal error: unexpected signal during runtime execution\n[signal 0xb code=0x1 addr=0x630cbbb1250 pc=0xf0eb]</p>\n\n<p>runtime stack:\nruntime.throw(0x4971c0, 0x2a)\n    /usr/local/go/src/runtime/panic.go:547 +0x90\nruntime.sigpanic()\n    /usr/local/go/src/runtime/sigpanic_unix.go:12 +0x5a\nruntime.unlock(0x982540)\n    /usr/local/go/src/runtime/lock_sema.go:107 +0x14b\nruntime.(*mheap).alloc_m(0x982540, 0x1, 0xa, 0xbeba88)\n    /usr/local/go/src/runtime/mheap.go:492 +0x314\nruntime.(*mheap).alloc.func1()\n    /usr/local/go/src/runtime/mheap.go:502 +0x41\nruntime.systemstack(0xc820037e58)\n    /usr/local/go/src/runtime/asm_amd64.s:307 +0xab\nruntime.(*mheap).alloc(0x982540, 0x1, 0x1000000000a, 0xed8f)\n    /usr/local/go/src/runtime/mheap.go:503 +0x63\nruntime.(*mcentral).grow(0x983c70, 0x0)\n    /usr/local/go/src/runtime/mcentral.go:209 +0x93\nruntime.(*mcentral).cacheSpan(0x983c70, 0xc8200160b0)\n    /usr/local/go/src/runtime/mcentral.go:89 +0x47d\nruntime.(*mcache).refill(0xaf4e10, 0xa, 0xc820016080)\n    /usr/local/go/src/runtime/mcache.go:119 +0xcc\nruntime.mallocgc.func2()\n    /usr/local/go/src/runtime/malloc.go:642 +0x2b\nruntime.systemstack(0xc82001b500)\n    /usr/local/go/src/runtime/asm_amd64.s:291 +0x79\nruntime.mstart()\n    /usr/local/go/src/runtime/proc.go:1051</p>\n\n<p>goroutine 1 [running]:\nruntime.systemstack_switch()\n    /usr/local/go/src/runtime/asm_amd64.s:245 fp=0xc820aef5c8 sp=0xc820aef5c0\nruntime.mallocgc(0x90, 0x437920, 0x0, 0x19c9fb)\n    /usr/local/go/src/runtime/malloc.go:643 +0x869 fp=0xc820aef6a0 sp=0xc820aef5c8\nruntime.newobject(0x437920, 0xc8200144e0)\n    /usr/local/go/src/runtime/malloc.go:781 +0x42 fp=0xc820aef6c8 sp=0xc820aef6a0\ncmd/compile/internal/gc.Nod(0xc820336801, 0x0, 0x0, 0xc820336880)\n    /usr/local/go/src/cmd/compile/internal/gc/subr.go:337 +0x27 fp=0xc820aef6e8 sp=0xc820aef6c8\ncmd/compile/internal/gc.newname(0xc8207e8900, 0x0)\n    /usr/local/go/src/cmd/compile/internal/gc/dcl.go:352 +0x68 fp=0xc820aef720 sp=0xc820aef6e8\ncmd/compile/internal/gc.(*parser).hidden_fndcl(0x972b80, 0x0)\n    /usr/local/go/src/cmd/compile/internal/gc/parser.go:2190 +0x127 fp=0xc820aef800 sp=0xc820aef720\ncmd/compile/internal/gc.(*parser).hidden_import(0x972b80)\n    /usr/local/go/src/cmd/compile/internal/gc/parser.go:3017 +0x15a fp=0xc820aef928 sp=0xc820aef800\ncmd/compile/internal/gc.(*parser).hidden_import_list(0x972b80)\n    /usr/local/go/src/cmd/compile/internal/gc/parser.go:3462 +0x28 fp=0xc820aef950 sp=0xc820aef928\ncmd/compile/internal/gc.(*parser).import_there(0x972b80)\n    /usr/local/go/src/cmd/compile/internal/gc/parser.go:503 +0x26 fp=0xc820aef978 sp=0xc820aef950\ncmd/compile/internal/gc.(*parser).import_stmt(0x972b80)\n    /usr/local/go/src/cmd/compile/internal/gc/parser.go:369 +0x6b fp=0xc820aefa70 sp=0xc820aef978\ncmd/compile/internal/gc.(*parser).import_(0x972b80)\n    /usr/local/go/src/cmd/compile/internal/gc/parser.go:350 +0x69 fp=0xc820aefa98 sp=0xc820aefa70\ncmd/compile/internal/gc.(*parser).file(0x972b80)\n    /usr/local/go/src/cmd/compile/internal/gc/parser.go:316 +0x53 fp=0xc820aefad0 sp=0xc820aefa98\ncmd/compile/internal/gc.parse_file()\n    /usr/local/go/src/cmd/compile/internal/gc/parser.go:56 +0x5a fp=0xc820aefae0 sp=0xc820aefad0\ncmd/compile/internal/gc.Main()\n    /usr/local/go/src/cmd/compile/internal/gc/lex.go:345 +0x1d44 fp=0xc820aefe00 sp=0xc820aefae0\ncmd/compile/internal/amd64.Main()\n    /usr/local/go/src/cmd/compile/internal/amd64/galign.go:127 +0x58d fp=0xc820aefe68 sp=0xc820aefe00\nmain.main()\n    /usr/local/go/src/cmd/compile/main.go:32 +0x395 fp=0xc820aeff40 sp=0xc820aefe68\nruntime.main()\n    /usr/local/go/src/runtime/proc.go:188 +0x2b0 fp=0xc820aeff90 sp=0xc820aeff40\nruntime.goexit()\n    /usr/local/go/src/runtime/asm_amd64.s:1998 +0x1 fp=0xc820aeff98 sp=0xc820aeff90</p>",
    "hits": 671,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 8,
    "collect_count": 0
  },
  {
    "id": 446,
    "title": "go 如何解析没有Key的JsonArray",
    "created_at": "2016-11-30 15:05:29",
    "updated_at": "2016-11-30 16:23:34",
    "replied_at": "2016-11-30 16:23:34",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 480,
    "last_reply_user_login": "toukii",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1401,
    "user": "{\"id\": 1401, \"name\": \"iframe\", \"login\": \"iframe\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "例如如下格式：\n[2,\n &quot;19223201&quot;,\n &quot;Boot&quot;,\n {&quot;Vendor&quot;: &quot;VendorX&quot;, &quot;Model&quot;: &quot;SingleSocket&quot;}\n]\n\n想了很多办法都解析不了～～\n\n这样打印也是空，好郁闷～～\nvar r interface{}\nerr := json.Unmarshal(NewMsg, &amp;r)\nif err != nil {\nreturn err\n}\nm, _ := r.(map[string]interface{})\nfmt.Println(&quot;m:&quot;, m)",
    "body_html": "<p>例如如下格式：\n[2,\n \"19223201\",\n \"Boot\",\n {\"Vendor\": \"VendorX\", \"Model\": \"SingleSocket\"}\n]</p>\n\n<p>想了很多办法都解析不了～～</p>\n\n<p>这样打印也是空，好郁闷～～\nvar r interface{}\nerr := json.Unmarshal(NewMsg, &amp;r)\nif err != nil {\nreturn err\n}\nm, _ := r.(map[string] interface{})\nfmt.Println(\"m:\", m)</p>",
    "hits": 651,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 447,
    "title": "macOS10.12.1 vscode 不能debug？",
    "created_at": "2016-11-30 21:52:06",
    "updated_at": "2016-12-01 10:37:44",
    "replied_at": "2016-12-01 10:37:44",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1405,
    "last_reply_user_login": "w07128597",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 382,
    "user": "{\"id\": 382, \"name\": \"simeon\", \"login\": \"simeon\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "系统升级后就不能`debug`了，在github的issue上也没找到答案\n`2016/11/30 21:21:00 debugger.go:55: launching process with args: [./debug]\ncould not launch process: could not get thread count\n `",
    "body_html": "<p>系统升级后就不能<code>debug</code>了，在 github 的 issue 上也没找到答案\n<code>2016/11/30 21:21:00 debugger.go:55: launching process with args: [./debug]\ncould not launch process: could not get thread count\n</code></p>",
    "hits": 659,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 448,
    "title": "strings.TrimRight的这个问题算不算是坑？",
    "created_at": "2016-12-01 00:37:38",
    "updated_at": "2016-12-01 11:05:19",
    "replied_at": "2016-12-01 11:05:19",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1406,
    "last_reply_user_login": "hunterhug",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1344,
    "user": "{\"id\": 1344, \"name\": \"皇虫\", \"login\": \"1272881215\", \"avatar\": \"https://static.gocn.vip/user/avatar/1344/6acfae.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "今天处理url链接页面的时候，遇到的一个感觉比较坑的问题。。\n\n比如一个url链接：http://www.example.com/album.html\n\n我需要把“.html”这个后缀去掉，然后用下面的第一个方法的时候，居然把“album”中的m也给我去掉了。后来用了第二个办法解决了。\n\n```go\nstrings.TrimRight(url, &quot;.html&quot;)\n```\n\n```go\nstrings.Trim(strings.TrimRight(url, &quot;html&quot;), &quot;.&quot;)\n```\n\n两个代码块看起来处理结果一样，但最后的结果还真不一样，有时候感觉真的挺坑的。一个小小的问题，转不过弯来就能折腾个半天。。",
    "body_html": "<p>今天处理 url 链接页面的时候，遇到的一个感觉比较坑的问题。。</p>\n\n<p>比如一个 url 链接：<a href=\"http://www.example.com/album.html\" rel=\"nofollow\" target=\"_blank\">http://www.example.com/album.html</a></p>\n\n<p>我需要把 “.html” 这个后缀去掉，然后用下面的第一个方法的时候，居然把 “album” 中的 m 也给我去掉了。后来用了第二个办法解决了。</p>\n<pre class=\"highlight go\"><code><span class=\"n\">strings</span><span class=\"o\">.</span><span class=\"n\">TrimRight</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">.</span><span class=\"n\">html</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n</code></pre><pre class=\"highlight go\"><code><span class=\"n\">strings</span><span class=\"o\">.</span><span class=\"n\">Trim</span><span class=\"p\">(</span><span class=\"n\">strings</span><span class=\"o\">.</span><span class=\"n\">TrimRight</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">html</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;),</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">.&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n</code></pre>\n<p>两个代码块看起来处理结果一样，但最后的结果还真不一样，有时候感觉真的挺坑的。一个小小的问题，转不过弯来就能折腾个半天。。</p>",
    "hits": 404,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 449,
    "title": "protobuffer零值的问题",
    "created_at": "2016-12-01 17:29:09",
    "updated_at": "2016-12-01 18:08:03",
    "replied_at": "2016-12-01 18:08:03",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 134,
    "last_reply_user_login": "九命猫",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1073,
    "user": "{\"id\": 1073, \"name\": \"FancyGo\", \"login\": \"FancyGo\", \"avatar\": \"https://static.gocn.vip/user/avatar/1073/a6d075.jpg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "不知道大家有没有遇到过,用protobuffer打包发送消息的时候,如果有字段设置了0值,那接收端就解析报错.不知道什么原因.",
    "body_html": "<p>不知道大家有没有遇到过,用 protobuffer 打包发送消息的时候,如果有字段设置了 0 值,那接收端就解析报错.不知道什么原因.</p>",
    "hits": 412,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 450,
    "title": "关于分页的问题",
    "created_at": "2016-12-01 19:09:19",
    "updated_at": "2016-12-01 19:09:19",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1108,
    "user": "{\"id\": 1108, \"name\": \"liguoqinjim\", \"login\": \"liguoqinjim\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "想请教下大家下面这个分页情况怎么做。\n以前做分页的时候都是mysql里面用limit来实现的。但是这次数据库较多，准备都放在缓存里面。\n需求是这样的。读取游戏中公会信息的时候，会按照公会战力或者公会人数来排列。但是玩家还可以加一些过滤条件，如公会等级，已有人数。\n要是没有过滤条件的话，用一个list排列就可以实现了。但是有过滤条件的话，每个玩家的每次的offset可能不一样。\n想问下大家这个有什么好的解决办法吗？",
    "body_html": "<p>想请教下大家下面这个分页情况怎么做。\n以前做分页的时候都是 mysql 里面用 limit 来实现的。但是这次数据库较多，准备都放在缓存里面。\n需求是这样的。读取游戏中公会信息的时候，会按照公会战力或者公会人数来排列。但是玩家还可以加一些过滤条件，如公会等级，已有人数。\n要是没有过滤条件的话，用一个 list 排列就可以实现了。但是有过滤条件的话，每个玩家的每次的 offset 可能不一样。\n想问下大家这个有什么好的解决办法吗？</p>",
    "hits": 228,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 451,
    "title": "go core如何写入文件",
    "created_at": "2016-12-01 23:17:41",
    "updated_at": "2016-12-05 11:19:03",
    "replied_at": "2016-12-01 23:39:10",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1073,
    "user": "{\"id\": 1073, \"name\": \"FancyGo\", \"login\": \"FancyGo\", \"avatar\": \"https://static.gocn.vip/user/avatar/1073/a6d075.jpg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "使用GOTRACEBACK环境变量能产生coredump输出，但是我怎么把coredump信息写入文件呢",
    "body_html": "<p>使用 GOTRACEBACK 环境变量能产生 coredump 输出，但是我怎么把 coredump 信息写入文件呢</p>",
    "hits": 306,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 452,
    "title": "那种动态调用技术效率最高?",
    "created_at": "2016-12-02 11:36:18",
    "updated_at": "2016-12-07 09:57:45",
    "replied_at": "2016-12-07 09:57:45",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1300,
    "last_reply_user_login": "RedMothball",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1410,
    "user": "{\"id\": 1410, \"name\": \"fanyang\", \"login\": \"fanyang\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```json\n//根据json\n{&quot;name&quot;:&quot;年龄&quot;,&quot;opera&quot;:&quot;==&quot;,&quot;value&quot;:25},\n{&quot;name&quot;:&quot;性别&quot;,&quot;opera&quot;:&quot;==&quot;,&quot;value&quot;:&quot;男性&quot;}\n```\n```go\n//生成代码\nfunc GetResult（data map[string]interface{}）string{\n\tif data[&quot;年龄&quot;]==25&amp;&amp;data[&quot;性别&quot;]==&quot;男性&quot; {\n\t\treturn &quot;小明&quot;\n\t}\n}\n```\n```go\n\n// 前端传递过来的json\ndata:=map[string]interface{}{\n\t&quot;年龄&quot;:25,\n\t&quot;性别&quot;:&quot;男性&quot;,\n}\n\n//在api里动态调用生成的代码\nfunc GetOne(data map[string]interface{})(string,error){\n    return GetResult(data),nil\n}\n\n```\n\n1.使用第三方otto包可以嵌入js代码，不支持动态加载\n```go\n//生成\npackage test\n\nimport (\n\t&quot;github.com/robertkrimen/otto&quot;\n)\n\ntype client struct {\n\tVM *otto.Otto\n}\n\nfunc NewOtto() *client {\n\treturn &amp;client{VM: otto.New()}\n}\nfunc (c *client) Run() string {\n\tc.VM.Run(`\n\t\tif (年龄==25&amp;&amp;性别==&quot;男性&quot;){\n\t\t\tresult=&quot;小明&quot;\n\t\t}\n\t`)\n\tv, err := c.VM.Get(&quot;result&quot;)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tvalue, err := v.ToString()\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn value\n}\n\n//调用\nimport (\n\t&quot;test&quot;\n\t)\nfunc GetOne(data map[string]interface{})(string,error){\n\tjs := test.NewOtto()\n\tfor k, v := range data {\n\t\tjs.VM.Set(k, v)\n\t}\n\treturn js.Run(), nil\n}\n```\n2.使用伪包C可以嵌入c代码\n```c\n// 生成\n\n// foo.h\nchar* getResult(int,char*);\n \n// foo.c\n#include &quot;foo.h&quot;\n\t\nchar* getResult(int age,char* sex) {\n    if (age==25&amp;&amp;sex==&quot;男性&quot;){\n\t\treturn &quot;小明&quot;;\n\t}\n}\n\n// 编译\n$&gt; gcc -c foo.c\n$&gt; ar rv libfoo.a foo.o\n```\n```go\n//调用\n\npackage main\n// #cgo LDFLAGS: -L ./ -lfoo\n// #include &lt;stdio.h&gt;\n// #include &lt;stdlib.h&gt;\n// #include &quot;foo.h&quot;\nimport &quot;C&quot;\n \nfunc main() {\n\tsex:=C.CString(&quot;男性&quot;)\n\tresult:=C.GoString(C.getResult(25,sex))//小明\n}\n```\n3.格式化后编译成包，不支持动态加载\n```go\n// 生成\npackage test\ntype business struct{\n   data map[string]interface{}\n}\nfunc NewData(value map[string]interface{})*business{\n\treturn &amp;business{data:value}\n}\nfunc (b *business) GetResult()string{\n  if b.data[&quot;年龄&quot;]==25&amp;&amp;b.data[&quot;性别&quot;]==&quot;男性&quot;{\n   return &quot;小明&quot;\n  }\n}\n// 编译\nimport &quot;os/exec&quot;\nexec.Command(&quot;gofmt&quot;)\nexec.Command(&quot;go&quot;, &quot;build&quot;,filePath)\n\n// 调用\nimport (\n\t&quot;test&quot;\n\t&quot;reflect&quot;\n\t&quot;errors&quot;\n\t)\nfunc GetOne(data map[string]interface{})(string,error){\n\tobj:=reflect.ValueOf(test.NewData(data))\n\tfun:=obj.MethodByName(&quot;GetResult&quot;)\n\tif !fun.IsValid(){\n\t\treturn &quot;&quot;,errors.New(&quot;GetResult不存在&quot;)\n\t}\n\treturn fun.Call(nil)[0].String(),nil\n}\n```\n还有没有其他动态调用方法？",
    "body_html": " <pre class=\"highlight json\"><code><span class=\"err\">//根据json</span><span class=\"w\">\n</span><span class=\"p\">{</span><span class=\"err\">&amp;quot;name&amp;quot;:&amp;quot;年龄&amp;quot;</span><span class=\"p\">,</span><span class=\"err\">&amp;quot;opera&amp;quot;:&amp;quot;==&amp;quot;</span><span class=\"p\">,</span><span class=\"err\">&amp;quot;value&amp;quot;:</span><span class=\"mi\">25</span><span class=\"p\">}</span><span class=\"err\">,</span><span class=\"w\">\n</span><span class=\"p\">{</span><span class=\"err\">&amp;quot;name&amp;quot;:&amp;quot;性别&amp;quot;</span><span class=\"p\">,</span><span class=\"err\">&amp;quot;opera&amp;quot;:&amp;quot;==&amp;quot;</span><span class=\"p\">,</span><span class=\"err\">&amp;quot;value&amp;quot;:&amp;quot;男性&amp;quot;</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre>  <pre class=\"highlight go\"><code><span class=\"c\">//生成代码</span>\n<span class=\"k\">func</span> <span class=\"n\">GetResult</span><span class=\"err\">（</span><span class=\"n\">data</span> <span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"k\">interface</span><span class=\"p\">{}</span><span class=\"err\">）</span><span class=\"kt\">string</span><span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">年龄</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;]</span><span class=\"o\">==</span><span class=\"m\">25</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">性别</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;]</span><span class=\"o\">==&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">男性</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">小明</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>  <pre class=\"highlight go\"><code>\n<span class=\"c\">// 前端传递过来的json</span>\n<span class=\"n\">data</span><span class=\"o\">:=</span><span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"k\">interface</span><span class=\"p\">{}{</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">年龄</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span><span class=\"m\">25</span><span class=\"p\">,</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">性别</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">男性</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">//在api里动态调用生成的代码</span>\n<span class=\"k\">func</span> <span class=\"n\">GetOne</span><span class=\"p\">(</span><span class=\"n\">data</span> <span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"k\">interface</span><span class=\"p\">{})(</span><span class=\"kt\">string</span><span class=\"p\">,</span><span class=\"kt\">error</span><span class=\"p\">){</span>\n    <span class=\"k\">return</span> <span class=\"n\">GetResult</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">),</span><span class=\"no\">nil</span>\n<span class=\"p\">}</span>\n\n</code></pre> \n<p>1.使用第三方 otto 包可以嵌入 js 代码，不支持动态加载</p>\n <pre class=\"highlight go\"><code><span class=\"c\">//生成</span>\n<span class=\"k\">package</span> <span class=\"n\">test</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">robertkrimen</span><span class=\"o\">/</span><span class=\"n\">otto</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">type</span> <span class=\"n\">client</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">VM</span> <span class=\"o\">*</span><span class=\"n\">otto</span><span class=\"o\">.</span><span class=\"n\">Otto</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">NewOtto</span><span class=\"p\">()</span> <span class=\"o\">*</span><span class=\"n\">client</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">client</span><span class=\"p\">{</span><span class=\"n\">VM</span><span class=\"o\">:</span> <span class=\"n\">otto</span><span class=\"o\">.</span><span class=\"n\">New</span><span class=\"p\">()}</span>\n<span class=\"p\">}</span>\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"o\">*</span><span class=\"n\">client</span><span class=\"p\">)</span> <span class=\"n\">Run</span><span class=\"p\">()</span> <span class=\"kt\">string</span> <span class=\"p\">{</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">VM</span><span class=\"o\">.</span><span class=\"n\">Run</span><span class=\"p\">(</span><span class=\"s\">`\n        if (年龄==25&amp;amp;&amp;amp;性别==&amp;quot;男性&amp;quot;){\n            result=&amp;quot;小明&amp;quot;\n        }\n    `</span><span class=\"p\">)</span>\n    <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">VM</span><span class=\"o\">.</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">result</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"nb\">panic</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"nb\">panic</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">value</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">//调用</span>\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">test</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">)</span>\n<span class=\"k\">func</span> <span class=\"n\">GetOne</span><span class=\"p\">(</span><span class=\"n\">data</span> <span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"k\">interface</span><span class=\"p\">{})(</span><span class=\"kt\">string</span><span class=\"p\">,</span><span class=\"kt\">error</span><span class=\"p\">){</span>\n    <span class=\"n\">js</span> <span class=\"o\">:=</span> <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">NewOtto</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">data</span> <span class=\"p\">{</span>\n        <span class=\"n\">js</span><span class=\"o\">.</span><span class=\"n\">VM</span><span class=\"o\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">js</span><span class=\"o\">.</span><span class=\"n\">Run</span><span class=\"p\">(),</span> <span class=\"no\">nil</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>2.使用伪包 C 可以嵌入 c 代码</p>\n <pre class=\"highlight c\"><code><span class=\"c1\">// 生成</span>\n\n<span class=\"c1\">// foo.h</span>\n<span class=\"kt\">char</span><span class=\"o\">*</span> <span class=\"nf\">getResult</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">,</span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// foo.c</span>\n<span class=\"cp\">#include &amp;quot;foo.h&amp;quot;\n</span>\n<span class=\"kt\">char</span><span class=\"o\">*</span> <span class=\"nf\">getResult</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">age</span><span class=\"p\">,</span><span class=\"kt\">char</span><span class=\"o\">*</span> <span class=\"n\">sex</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">==</span><span class=\"mi\">25</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">sex</span><span class=\"o\">==&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">男性</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;){</span>\n        <span class=\"k\">return</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">小明</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// 编译</span>\n<span class=\"err\">$</span><span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"n\">gcc</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">c</span>\n<span class=\"err\">$</span><span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"n\">ar</span> <span class=\"n\">rv</span> <span class=\"n\">libfoo</span><span class=\"p\">.</span><span class=\"n\">a</span> <span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">o</span>\n</code></pre>  <pre class=\"highlight go\"><code><span class=\"c\">//调用</span>\n\n<span class=\"k\">package</span> <span class=\"n\">main</span>\n<span class=\"c\">// #cgo LDFLAGS: -L ./ -lfoo</span>\n<span class=\"c\">// #include &amp;lt;stdio.h&amp;gt;</span>\n<span class=\"c\">// #include &amp;lt;stdlib.h&amp;gt;</span>\n<span class=\"c\">// #include &amp;quot;foo.h&amp;quot;</span>\n<span class=\"k\">import</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">C</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">sex</span><span class=\"o\">:=</span><span class=\"n\">C</span><span class=\"o\">.</span><span class=\"n\">CString</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">男性</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">result</span><span class=\"o\">:=</span><span class=\"n\">C</span><span class=\"o\">.</span><span class=\"n\">GoString</span><span class=\"p\">(</span><span class=\"n\">C</span><span class=\"o\">.</span><span class=\"n\">getResult</span><span class=\"p\">(</span><span class=\"m\">25</span><span class=\"p\">,</span><span class=\"n\">sex</span><span class=\"p\">))</span><span class=\"c\">//小明</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>3.格式化后编译成包，不支持动态加载</p>\n <pre class=\"highlight go\"><code><span class=\"c\">// 生成</span>\n<span class=\"k\">package</span> <span class=\"n\">test</span>\n<span class=\"k\">type</span> <span class=\"n\">business</span> <span class=\"k\">struct</span><span class=\"p\">{</span>\n   <span class=\"n\">data</span> <span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"k\">interface</span><span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n<span class=\"k\">func</span> <span class=\"n\">NewData</span><span class=\"p\">(</span><span class=\"n\">value</span> <span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"k\">interface</span><span class=\"p\">{})</span><span class=\"o\">*</span><span class=\"n\">business</span><span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">business</span><span class=\"p\">{</span><span class=\"n\">data</span><span class=\"o\">:</span><span class=\"n\">value</span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">b</span> <span class=\"o\">*</span><span class=\"n\">business</span><span class=\"p\">)</span> <span class=\"n\">GetResult</span><span class=\"p\">()</span><span class=\"kt\">string</span><span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">年龄</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;]</span><span class=\"o\">==</span><span class=\"m\">25</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">性别</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;]</span><span class=\"o\">==&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">男性</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;{</span>\n   <span class=\"k\">return</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">小明</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"c\">// 编译</span>\n<span class=\"k\">import</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">os</span><span class=\"o\">/</span><span class=\"n\">exec</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"n\">exec</span><span class=\"o\">.</span><span class=\"n\">Command</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">gofmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"n\">exec</span><span class=\"o\">.</span><span class=\"n\">Command</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"k\">go</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">build</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span><span class=\"n\">filePath</span><span class=\"p\">)</span>\n\n<span class=\"c\">// 调用</span>\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">test</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">reflect</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">errors</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">)</span>\n<span class=\"k\">func</span> <span class=\"n\">GetOne</span><span class=\"p\">(</span><span class=\"n\">data</span> <span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"k\">interface</span><span class=\"p\">{})(</span><span class=\"kt\">string</span><span class=\"p\">,</span><span class=\"kt\">error</span><span class=\"p\">){</span>\n    <span class=\"n\">obj</span><span class=\"o\">:=</span><span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">ValueOf</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">NewData</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">))</span>\n    <span class=\"n\">fun</span><span class=\"o\">:=</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">MethodByName</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">GetResult</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"k\">if</span> <span class=\"o\">!</span><span class=\"n\">fun</span><span class=\"o\">.</span><span class=\"n\">IsValid</span><span class=\"p\">(){</span>\n        <span class=\"k\">return</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span><span class=\"n\">errors</span><span class=\"o\">.</span><span class=\"n\">New</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">GetResult不存在</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">fun</span><span class=\"o\">.</span><span class=\"n\">Call</span><span class=\"p\">(</span><span class=\"no\">nil</span><span class=\"p\">)[</span><span class=\"m\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(),</span><span class=\"no\">nil</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>还有没有其他动态调用方法？</p>",
    "hits": 571,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 453,
    "title": "b := new(a) b := &amp;a{} 此二者之间的区别？",
    "created_at": "2016-12-02 11:58:06",
    "updated_at": "2016-12-02 14:03:04",
    "replied_at": "2016-12-02 13:48:19",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 569,
    "last_reply_user_login": "philc",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 88,
    "user": "{\"id\": 88, \"name\": \"qi19901212\", \"login\": \"qi19901212\", \"avatar\": \"https://static.gocn.vip/user/avatar/88/4a10d7.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "b := new(a)\nb := &amp;a{}\n此二者之间的区别\n",
    "body_html": "<p>b := new(a)\nb := &amp;a{}\n此二者之间的区别</p>",
    "hits": 329,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 454,
    "title": "beego cache 对 redis 的封装感觉不好用啊，求指教",
    "created_at": "2016-12-02 12:16:12",
    "updated_at": "2021-01-16 19:41:22",
    "replied_at": "2018-03-20 16:43:38",
    "replies_count": 4,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 3850,
    "last_reply_user_login": "lide",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 806,
    "user": "{\"id\": 806, \"name\": \"hheedat\", \"login\": \"hheedat\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "楼主新手上路，提出一些疑问\n\n没有不敬的意思，就是想问问，想请老司机指教一下我该怎么办\n\n```go\n\t//Set 的时候，还看不出有什么问题\n\terr := cache.BM.Put(&quot;foo&quot;, &quot;bar&quot;, 10 * time.Second)\n\tif err != nil {\n\t\tfmt.Println(&quot;set value fail&quot;, err)\n\t}\n\n\t//但是 Get 的时候，则有很多问题\n\tresult := cache.BM.Get(&quot;foo&quot;)\n\t//beego cache 的 Get 方法里面，对 error 做了处理，如果取失败了就返回 nil ，成功则返回一个接口类型\n\n\tif result == nil {\n\t\tfmt.Println(&quot;get value fail&quot;)\n\t} else {\n\t\tvalue, err := redis.String(result, nil)\n\t\t//返回的接口类型一般要通过 redigo 的各种方法转换成要用的类型\n\t\t//这里就要手动传一个 nil , 因为 redis.String 需要两个参数\n\t\t//beego 的 cache 在这里是不是过度封装了？\n\t\tif err != nil {\n\t\t\t//error handle\n\t\t} else {\n\t\t\tfmt.Println(&quot;get value is &quot;, value)\n\t\t}\n\t}\n\n\t//用 redigo 原始的方法写，则简单多了\n\tc := redisService.Pool.Get()\n\tdefer c.Close()\n\n\tv, err := redis.String(c.Do(&quot;GET&quot;, &quot;name&quot;))\n\tif err != nil {\n\t\t//error handle\n\t}else{\n\t\tfmt.Println(&quot;get value is &quot;, v)\n\t}\n```\n\n还有常常用到 redis 的 incr 方法\n\n```go\n\t//这个是 beego cache redis 的封装\n\t//rc.do(&quot;INCRBY&quot;, key, 1) 返回的增加后的值被忽略了，也不能设置增加的步长\n\t//业务中常常要获取增加后的值的，比如做一个简单的发号器的时候\n\tfunc (rc *Cache) Incr(key string) error {\n\t\t_, err := redis.Bool(rc.do(&quot;INCRBY&quot;, key, 1))\n\t\treturn err\n\t}\n```\n\n而且 beego cache 中封装的连接池 ，外面没办法取到（非导出的）\n这样如果要用上面的功能，是否就需要自己搞个连接池？\n",
    "body_html": "<p>楼主新手上路，提出一些疑问</p>\n\n<p>没有不敬的意思，就是想问问，想请老司机指教一下我该怎么办</p>\n <pre class=\"highlight go\"><code><span class=\"c\">//Set 的时候，还看不出有什么问题</span>\n<span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">BM</span><span class=\"o\">.</span><span class=\"n\">Put</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">foo</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">bar</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"m\">10</span> <span class=\"o\">*</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">set</span> <span class=\"n\">value</span> <span class=\"n\">fail</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">//但是 Get 的时候，则有很多问题</span>\n<span class=\"n\">result</span> <span class=\"o\">:=</span> <span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">BM</span><span class=\"o\">.</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">foo</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"c\">//beego cache 的 Get 方法里面，对 error 做了处理，如果取失败了就返回 nil ，成功则返回一个接口类型</span>\n\n<span class=\"k\">if</span> <span class=\"n\">result</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">get</span> <span class=\"n\">value</span> <span class=\"n\">fail</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"no\">nil</span><span class=\"p\">)</span>\n    <span class=\"c\">//返回的接口类型一般要通过 redigo 的各种方法转换成要用的类型</span>\n    <span class=\"c\">//这里就要手动传一个 nil , 因为 redis.String 需要两个参数</span>\n    <span class=\"c\">//beego 的 cache 在这里是不是过度封装了？</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"c\">//error handle</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">get</span> <span class=\"n\">value</span> <span class=\"n\">is</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">//用 redigo 原始的方法写，则简单多了</span>\n<span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"n\">redisService</span><span class=\"o\">.</span><span class=\"n\">Pool</span><span class=\"o\">.</span><span class=\"n\">Get</span><span class=\"p\">()</span>\n<span class=\"k\">defer</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n\n<span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Do</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">GET</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">name</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;))</span>\n<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n    <span class=\"c\">//error handle</span>\n<span class=\"p\">}</span><span class=\"k\">else</span><span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">get</span> <span class=\"n\">value</span> <span class=\"n\">is</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">v</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>还有常常用到 redis 的 incr 方法</p>\n <pre class=\"highlight go\"><code><span class=\"c\">//这个是 beego cache redis 的封装</span>\n<span class=\"c\">//rc.do(&amp;quot;INCRBY&amp;quot;, key, 1) 返回的增加后的值被忽略了，也不能设置增加的步长</span>\n<span class=\"c\">//业务中常常要获取增加后的值的，比如做一个简单的发号器的时候</span>\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">rc</span> <span class=\"o\">*</span><span class=\"n\">Cache</span><span class=\"p\">)</span> <span class=\"n\">Incr</span><span class=\"p\">(</span><span class=\"n\">key</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"kt\">error</span> <span class=\"p\">{</span>\n    <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">Bool</span><span class=\"p\">(</span><span class=\"n\">rc</span><span class=\"o\">.</span><span class=\"n\">do</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">INCRBY</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">err</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>而且 beego cache 中封装的连接池 ，外面没办法取到（非导出的）\n这样如果要用上面的功能，是否就需要自己搞个连接池？</p>",
    "hits": 898,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 455,
    "title": "学习beego 中，各位大大有什么好的建议么？",
    "created_at": "2016-12-02 16:52:24",
    "updated_at": "2021-01-20 03:06:53",
    "replied_at": "2016-12-03 09:55:20",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 929,
    "last_reply_user_login": "gogoing",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1367,
    "user": "{\"id\": 1367, \"name\": \"lintBai\", \"login\": \"lintBai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题，学习go不足一月，基础刷过一遍，使用beego写了一个API项目，感觉算是入门了吧，接下来想深入学习研究beego，目标是写一个高并发的web服务器，大致的构想是基于beego框架+redis+mongo来实现这个服务器",
    "body_html": "<p>如题，学习 go 不足一月，基础刷过一遍，使用 beego 写了一个 API 项目，感觉算是入门了吧，接下来想深入学习研究 beego，目标是写一个高并发的 web 服务器，大致的构想是基于 beego 框架 +redis+mongo 来实现这个服务器</p>",
    "hits": 612,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 456,
    "title": "socket连接后一般比较短的信息,从本机到服务器的传递时间是多少?",
    "created_at": "2016-12-04 13:36:57",
    "updated_at": "2016-12-05 13:05:26",
    "replied_at": "2016-12-05 13:05:26",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1337,
    "last_reply_user_login": "caibirdme",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "比如一些游戏的,或者就是http服务器\n\n想知道大型服务器,\n\n\nT1[攻击:pressA]----&gt;T2[服务器收到啦～]\n\n求T2-T1\n\n求T2-T1的区间范围左开右闭～(    ,   ] 单位ms\n\n\n=======\n我了解一个大概的范围.不是绝对的数值和理论数字. 连百度60ms,google150ms.  不知道socket一般大型点的网络环境是多少ms",
    "body_html": "<p>比如一些游戏的,或者就是 http 服务器</p>\n\n<p>想知道大型服务器,</p>\n\n<p>T1[攻击:pressA]----&gt;T2[服务器收到啦～]</p>\n\n<p>求 T2-T1</p>\n\n<p>求 T2-T1 的区间范围左开右闭～(    ,   ] 单位 ms</p>\n\n<p>=======\n我了解一个大概的范围.不是绝对的数值和理论数字. 连百度 60ms,google150ms.  不知道 socket 一般大型点的网络环境是多少 ms</p>",
    "hits": 376,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 457,
    "title": "请问有没有比较实用的go日志分析程序？",
    "created_at": "2016-12-05 10:48:13",
    "updated_at": "2016-12-06 13:52:45",
    "replied_at": "2016-12-06 13:52:45",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 134,
    "last_reply_user_login": "九命猫",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2,
    "user": "{\"id\": 2, \"name\": \"xiemengjun\", \"login\": \"xiemengjun\", \"avatar\": \"https://static.gocn.vip/user/avatar/2/9fa872.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "需求：\n\n1. 可根据指定的文件格式，分析一行行输出的的文件格式。格式可能有多种形式。\n\n2. 可在终端实时刷新各种形式的统计。根据命令显示不同的信息\n\n3. 可以带有颜色的图表。如统计写入请求，可显示流量图形\n\n\n",
    "body_html": "<p>需求：</p>\n\n<ol>\n<li><p>可根据指定的文件格式，分析一行行输出的的文件格式。格式可能有多种形式。</p></li>\n<li><p>可在终端实时刷新各种形式的统计。根据命令显示不同的信息</p></li>\n<li><p>可以带有颜色的图表。如统计写入请求，可显示流量图形</p></li>\n</ol>",
    "hits": 560,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 458,
    "title": "bool 类型存储类型，占几个字节",
    "created_at": "2016-12-05 11:04:34",
    "updated_at": "2016-12-05 12:16:45",
    "replied_at": "2016-12-05 12:13:21",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1412,
    "last_reply_user_login": "shannonlu",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1331,
    "user": "{\"id\": 1331, \"name\": \"kakashi\", \"login\": \"kakashi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "golang中bool类型数据，占几个字节的存储，是 1byte还是 1bit，还是其他",
    "body_html": "<p>golang 中 bool 类型数据，占几个字节的存储，是 1byte 还是 1bit，还是其他</p>",
    "hits": 632,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 459,
    "title": "ajax和beego间的数据如何进行json格式的通信（发送传输）",
    "created_at": "2016-12-05 11:07:38",
    "updated_at": "2021-01-20 03:08:23",
    "replied_at": "2016-12-07 09:49:40",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1300,
    "last_reply_user_login": "RedMothball",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1417,
    "user": "{\"id\": 1417, \"name\": \"W836816673\", \"login\": \"W836816673\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在html中写了个ajax，想实现数据的动态刷新，但在beego中不知如何接收，发送的是post请求，想实现json通讯，请问有模板或例子吗\n``go\n$.ajax({\n\ttype : 'post',\n\turl  : &quot;state.html&quot;,\n         //dataType: &quot;json&quot;,\n\tsuccess:function(date) {\n\n\t}\n}）\n```",
    "body_html": "<p>在 html 中写了个 ajax，想实现数据的动态刷新，但在 beego 中不知如何接收，发送的是 post 请求，想实现 json 通讯，请问有模板或例子吗\n``go\n$.ajax({\n    type : 'post',\n    url  : \"state.html\",\n         //dataType: \"json\",\n    success:function(date) {</p>\n\n<p>}\n}）</p>\n <pre class=\"highlight plaintext\"><code></code></pre> ",
    "hits": 342,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 460,
    "title": "Elixir 会成为明日之星么？似乎是",
    "created_at": "2016-12-06 09:54:23",
    "updated_at": "2016-12-06 10:43:47",
    "replied_at": "2016-12-06 10:43:47",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 622,
    "last_reply_user_login": "akin520",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 961,
    "user": "{\"id\": 961, \"name\": \"有鱼\", \"login\": \"ldshuang\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "https://ruby-china.org/topics/31736",
    "body_html": "<p><a href=\"https://ruby-china.org/topics/31736\" rel=\"nofollow\" target=\"_blank\">https://ruby-china.org/topics/31736</a></p>",
    "hits": 362,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 461,
    "title": "go 在机器学习方面的生态环境如何？",
    "created_at": "2016-12-06 15:20:49",
    "updated_at": "2016-12-07 09:25:01",
    "replied_at": "2016-12-07 09:25:01",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 144,
    "last_reply_user_login": "DQ",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1353,
    "user": "{\"id\": 1353, \"name\": \"songtianyi\", \"login\": \"songtianyi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "论坛里应该还没有用go来做机器学习的吧？",
    "body_html": "<p>论坛里应该还没有用 go 来做机器学习的吧？</p>",
    "hits": 375,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 462,
    "title": "初学到range map部分，为何用range输出的map是无序的？",
    "created_at": "2016-12-06 17:07:56",
    "updated_at": "2016-12-06 18:00:32",
    "replied_at": "2016-12-06 17:49:37",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 960,
    "last_reply_user_login": "tupunco",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1363,
    "user": "{\"id\": 1363, \"name\": \"raindylong\", \"login\": \"raindylong\", \"avatar\": \"https://gocn.vip/system/letter_avatars/r.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "代码就是《The way to go》里面的：\n```go\npackage main\n\nimport &quot;fmt&quot;\n\nfunc main() {\n\tmap1 := make(map[int]float32)\n\tmap1[1] = 1.0\n\tmap1[2] = 2.0\n\tmap1[3] = 3.0\n\tmap1[4] = 4.0\n\tfor key, value := range map1 {\n\t\tfmt.Printf(&quot;key is: %d - value is: %f\\n&quot;, key, value)\n\t}\n}\n```\n运行结果如下：\nraindylong@light:~/learngo$ go run expo_rangemap1.go \nkey is: 1 - value is: 1.000000\nkey is: 2 - value is: 2.000000\nkey is: 3 - value is: 3.000000\nkey is: 4 - value is: 4.000000\nraindylong@light:~/learngo$ go run expo_rangemap1.go \nkey is: 1 - value is: 1.000000\nkey is: 2 - value is: 2.000000\nkey is: 3 - value is: 3.000000\nkey is: 4 - value is: 4.000000\nraindylong@light:~/learngo$ go run expo_rangemap1.go  #乱序\nkey is: 3 - value is: 3.000000\nkey is: 4 - value is: 4.000000\nkey is: 1 - value is: 1.000000\nkey is: 2 - value is: 2.000000\nraindylong@light:~/learngo$ go run expo_rangemap1.go \nkey is: 1 - value is: 1.000000\nkey is: 2 - value is: 2.000000\nkey is: 3 - value is: 3.000000\nkey is: 4 - value is: 4.000000\nraindylong@light:~/learngo$ go run expo_rangemap1.go  #乱序\nkey is: 2 - value is: 2.000000\nkey is: 3 - value is: 3.000000\nkey is: 4 - value is: 4.000000\nkey is: 1 - value is: 1.000000\nraindylong@light:~/learngo$ go version\ngo version go1.7 linux/amd64\n\n问题是：为何range输出的map是无序的，linux+win平台编译环境都试过了，情况相同，WHY？\n\n谢谢。",
    "body_html": "<p>代码就是《The way to go》里面的：</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">map1</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">int</span><span class=\"p\">]</span><span class=\"kt\">float32</span><span class=\"p\">)</span>\n    <span class=\"n\">map1</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">1.0</span>\n    <span class=\"n\">map1</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">2.0</span>\n    <span class=\"n\">map1</span><span class=\"p\">[</span><span class=\"m\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">3.0</span>\n    <span class=\"n\">map1</span><span class=\"p\">[</span><span class=\"m\">4</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">4.0</span>\n    <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">map1</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">key</span> <span class=\"n\">is</span><span class=\"o\">:</span> <span class=\"o\">%</span><span class=\"n\">d</span> <span class=\"o\">-</span> <span class=\"n\">value</span> <span class=\"n\">is</span><span class=\"o\">:</span> <span class=\"o\">%</span><span class=\"n\">f</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>运行结果如下：\nraindylong@light:~/learngo$ go run expo_rangemap1.go \nkey is: 1 - value is: 1.000000\nkey is: 2 - value is: 2.000000\nkey is: 3 - value is: 3.000000\nkey is: 4 - value is: 4.000000\nraindylong@light:~/learngo$ go run expo_rangemap1.go \nkey is: 1 - value is: 1.000000\nkey is: 2 - value is: 2.000000\nkey is: 3 - value is: 3.000000\nkey is: 4 - value is: 4.000000\nraindylong@light:~/learngo$ go run expo_rangemap1.go  # 乱序\nkey is: 3 - value is: 3.000000\nkey is: 4 - value is: 4.000000\nkey is: 1 - value is: 1.000000\nkey is: 2 - value is: 2.000000\nraindylong@light:~/learngo$ go run expo_rangemap1.go \nkey is: 1 - value is: 1.000000\nkey is: 2 - value is: 2.000000\nkey is: 3 - value is: 3.000000\nkey is: 4 - value is: 4.000000\nraindylong@light:~/learngo$ go run expo_rangemap1.go  # 乱序\nkey is: 2 - value is: 2.000000\nkey is: 3 - value is: 3.000000\nkey is: 4 - value is: 4.000000\nkey is: 1 - value is: 1.000000\nraindylong@light:~/learngo$ go version\ngo version go1.7 linux/amd64</p>\n\n<p>问题是：为何 range 输出的 map 是无序的，linux+win 平台编译环境都试过了，情况相同，WHY？</p>\n\n<p>谢谢。</p>",
    "hits": 412,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 463,
    "title": "用匿名变量显式声明类型与接口的实现关系，有什么好处？",
    "created_at": "2016-12-06 18:03:24",
    "updated_at": "2016-12-07 11:09:56",
    "replied_at": "2016-12-07 11:09:56",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 271,
    "user": "{\"id\": 271, \"name\": \"cholerae\", \"login\": \"cholerae\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "最近看了一些代码，发现了这样一种代码风格：\n```\nvar (\n\t_ btreeIndex    = (*memIndex)(nil)\n\t_ btreeIterator = (*memBTreeIterator)(nil)\n\t_ indexIterator = (*xenumerator2)(nil)\n\t_ storage       = (*mem)(nil)\n\t_ temp          = (*memTemp)(nil)\n)\n```\n左边的都是接口类型，右边的都是实现该接口的类型。这种写法除了能让阅读者知道类型与接口的实现关系之外，还有什么好处吗？\n\nhttps://github.com/cznic 他的代码全是这样的风格，看他写的东西也挺厉害的，不像初学者。",
    "body_html": "<p>最近看了一些代码，发现了这样一种代码风格：</p>\n <pre class=\"highlight plaintext\"><code>var (\n    _ btreeIndex    = (*memIndex)(nil)\n    _ btreeIterator = (*memBTreeIterator)(nil)\n    _ indexIterator = (*xenumerator2)(nil)\n    _ storage       = (*mem)(nil)\n    _ temp          = (*memTemp)(nil)\n)\n</code></pre> \n<p>左边的都是接口类型，右边的都是实现该接口的类型。这种写法除了能让阅读者知道类型与接口的实现关系之外，还有什么好处吗？</p>\n\n<p><a href=\"https://github.com/cznic\" rel=\"nofollow\" target=\"_blank\">https://github.com/cznic</a> 他的代码全是这样的风格，看他写的东西也挺厉害的，不像初学者。</p>",
    "hits": 338,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 464,
    "title": "关于go1.7,reflect 的NumMethod，替代方案是什么？",
    "created_at": "2016-12-07 14:21:49",
    "updated_at": "2016-12-07 14:42:29",
    "replied_at": "2016-12-07 14:42:29",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1353,
    "last_reply_user_login": "songtianyi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1013,
    "user": "{\"id\": 1013, \"name\": \"lcp0578\", \"login\": \"lcp0578\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;reflect&quot;\n)\n\ntype Student struct {\n\tName string\n\tAge  int\n}\n\nfunc (s *Student) printName() {\n\tfmt.Println(s.Name)\n}\nfunc (s *Student) getAge() int {\n\treturn s.Age\n}\nfunc main() {\n\ts := Student{Name: &quot;lcpeng&quot;, Age: 25}\n\trt := reflect.TypeOf(s)\n\t// 若是指针，则取指针指向元素\n\tif rt.Kind() == reflect.Ptr {\n\t\trt = rt.Elem()\n\t}\n\tfmt.Println(rt.PkgPath())\n\tfmt.Println(rt.Name())\n\tfmt.Println(rt.NumField())\n\tfmt.Println(rt.NumMethod()) // 1.7为0\n}\n```\n查了下1.7的release notes，看到：\n&gt; The Method and NumMethod methods of Type and Value no longer return or count unexported methods.The Method and NumMethod methods of Type and Value no longer return or count unexported methods.\n\n那1.7版本改怎么获取呢？",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">reflect</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">type</span> <span class=\"n\">Student</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Name</span> <span class=\"kt\">string</span>\n    <span class=\"n\">Age</span>  <span class=\"kt\">int</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">*</span><span class=\"n\">Student</span><span class=\"p\">)</span> <span class=\"n\">printName</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">*</span><span class=\"n\">Student</span><span class=\"p\">)</span> <span class=\"n\">getAge</span><span class=\"p\">()</span> <span class=\"kt\">int</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">Age</span>\n<span class=\"p\">}</span>\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"n\">Student</span><span class=\"p\">{</span><span class=\"n\">Name</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">lcpeng</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">Age</span><span class=\"o\">:</span> <span class=\"m\">25</span><span class=\"p\">}</span>\n    <span class=\"n\">rt</span> <span class=\"o\">:=</span> <span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">TypeOf</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n    <span class=\"c\">// 若是指针，则取指针指向元素</span>\n    <span class=\"k\">if</span> <span class=\"n\">rt</span><span class=\"o\">.</span><span class=\"n\">Kind</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">Ptr</span> <span class=\"p\">{</span>\n        <span class=\"n\">rt</span> <span class=\"o\">=</span> <span class=\"n\">rt</span><span class=\"o\">.</span><span class=\"n\">Elem</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">rt</span><span class=\"o\">.</span><span class=\"n\">PkgPath</span><span class=\"p\">())</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">rt</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">())</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">rt</span><span class=\"o\">.</span><span class=\"n\">NumField</span><span class=\"p\">())</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">rt</span><span class=\"o\">.</span><span class=\"n\">NumMethod</span><span class=\"p\">())</span> <span class=\"c\">// 1.7为0</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>查了下 1.7 的 release notes，看到：\n&gt; The Method and NumMethod methods of Type and Value no longer return or count unexported methods.The Method and NumMethod methods of Type and Value no longer return or count unexported methods.</p>\n\n<p>那 1.7 版本改怎么获取呢？</p>",
    "hits": 496,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 465,
    "title": "select chan 堵塞问题",
    "created_at": "2016-12-07 18:50:45",
    "updated_at": "2016-12-08 11:20:16",
    "replied_at": "2016-12-08 11:19:07",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 605,
    "last_reply_user_login": "ofttryaj",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 407,
    "user": "{\"id\": 407, \"name\": \"lucyne\", \"login\": \"lucyne\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "以下的代码中想在foo方法中当i==10的时候，退出main中的for循环，但是现在一直堵塞，哪位大神给看下，谢谢！\n\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;os&quot;\n\t&quot;os/signal&quot;\n\t&quot;syscall&quot;\n\t&quot;time&quot;\n)\n\nfunc foo(i int, ch chan bool) {\n\tif i == 10 {\n\t\tch &lt;- true\n\t} else {\n\t\tfmt.Printf(&quot;%s&quot;, i)\n\t}\n}\n\nfunc main() {\n\tch := make(chan bool)\n\tsig := make(chan os.Signal, 1)\n\tsignal.Notify(sig, os.Interrupt, syscall.SIGTERM, syscall.SIGQUIT)\n\ttimer := time.Tick(1 * time.Second)\n\tfor i, done := 0, false; !done; i++ {\n\t\tselect {\n\t\tcase &lt;-sig:\n\t\t\tdone = true\n\t\tcase &lt;-ch:\n\t\t\tdone = true\n\t\tcase &lt;-timer:\n\t\t\tfoo(i, ch)\n\t\t}\n\t}\n\n}\n",
    "body_html": "<p>以下的代码中想在 foo 方法中当 i==10 的时候，退出 main 中的 for 循环，但是现在一直堵塞，哪位大神给看下，谢谢！</p>\n\n<p>package main</p>\n\n<p>import (\n    \"fmt\"\n    \"os\"\n    \"os/signal\"\n    \"syscall\"\n    \"time\"\n)</p>\n\n<p>func foo(i int, ch chan bool) {\n    if i == 10 {\n        ch &lt;- true\n    } else {\n        fmt.Printf(\"%s\", i)\n    }\n}</p>\n\n<p>func main() {\n    ch := make(chan bool)\n    sig := make(chan os.Signal, 1)\n    signal.Notify(sig, os.Interrupt, syscall.SIGTERM, syscall.SIGQUIT)\n    timer := time.Tick(1 * time.Second)\n    for i, done := 0, false; ! done; i++ {\n        select {\n        case &lt;-sig:\n            done = true\n        case &lt;-ch:\n            done = true\n        case &lt;-timer:\n            foo(i, ch)\n        }\n    }</p>\n\n<p>}</p>",
    "hits": 484,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 466,
    "title": "[]byte转和[][]string可以互相转换吗？？",
    "created_at": "2016-12-07 20:46:49",
    "updated_at": "2016-12-14 09:25:24",
    "replied_at": "2016-12-14 09:25:24",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1445,
    "last_reply_user_login": "imjj",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 45,
    "user": "{\"id\": 45, \"name\": \"小张的烦恼\", \"login\": \"zhangyumingtfr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "今天写了一个文件上传适配csv的，首先是碰见乱码问题，使用golang.org/x/text 解决了，但是随后又碰见了一个新的问题，那就是我已经写好的方法需要的是[][]string这种格式的，我得到的是string类型的，而且csv格式大家都知道，还需要split等切分，但是这个byte我怎么转换成[][]string呢？\n 序号,客户账号,账户名称,成交单号,商品代码,商品名称,买/卖,委托单号,成交数量,成交价格,成交金额,交易员,成交时间,转让盈亏,手续费,订立价格,订立时间\n&quot;=&quot;&quot;1&quot;&quot;,=&quot;&quot;77660061489&quot;&quot;,=&quot;&quot;彭会武&quot;&quot;,=&quot;&quot;2711612&quot;&quot;,=&quot;&quot;601008&quot;&quot;,=&quot;&quot;保护森林&quot;&quot;,=&quot;&quot;买&quot;&quot;,=&quot;&quot;2786714&quot;&quot;,10.00,16.51,165.10,77660061489,2016-11-28 14:59:46,,0.25,,,&quot;,,,,,,,,,,,,,,,,\n&quot;=&quot;&quot;2&quot;&quot;,=&quot;&quot;77660061755&quot;&quot;,=&quot;&quot;黎海东&quot;&quot;,=&quot;&quot;2711455&quot;&quot;,=&quot;&quot;601002&quot;&quot;,=&quot;&quot;中国鸟-白尾地鸦&quot;&quot;,=&quot;&quot;买&quot;&quot;,=&quot;&quot;2786531&quot;&quot;,7.00,370.30,2592.10,77660061755,2016-11-28 14:59:25,,3.89,,,&quot;,,,,,,,,,,,,,,,,\n&quot;=&quot;&quot;3&quot;&quot;,=&quot;&quot;77660061001&quot;&quot;,=&quot;&quot;苗传宝&quot;&quot;,=&quot;&quot;2711273&quot;&quot;,=&quot;&quot;601004&quot;&quot;,=&quot;&quot;国际老人年&quot;&quot;,=&quot;&quot;买&quot;&quot;,=&quot;&quot;2786375&quot;&quot;,5.00,566.30,2831.50,77660061001,2016-11-28 14:58:55,,4.25,,,&quot;,,,,,,,,,,,,,,,,\n&quot;=&quot;&quot;21&quot;&quot;,=&quot;&quot;77660060678&quot;&quot;,=&quot;&quot;隆于超&quot;&quot;,=&quot;&quot;2710149&quot;&quot;,=&quot;&quot;601032&quot;&quot;,=&quot;&quot;中国梦-民族振兴&quot;&quot;,=&quot;&quot;卖&quot;&quot;,=&quot;&quot;2778002&quot;&quot;,3.00,75.00,225.00,77660060678,2016-11-28 14:54:37,-2.64,0.34,75.88,2016-11-26 13:35:03,&quot;,,,,,,,,,,,,,,,,\n\n\n\n这是我转码之后的数据，\n转换成这种格式\n[\n[&quot;=&quot;&quot;1&quot;&quot;,=&quot;&quot;77660061489&quot;&quot;,=&quot;&quot;彭会武&quot;&quot;,=&quot;&quot;2711612&quot;&quot;,=&quot;&quot;601008&quot;&quot;,=&quot;&quot;保护森林&quot;&quot;,=&quot;&quot;买&quot;&quot;,=&quot;&quot;2786714&quot;&quot;,10.00,16.51,165.10,77660061489,2016-11-28 14:59:46,,0.25,,,&quot;,,,,,,,,,,,,,,,,],\n[&quot;=&quot;&quot;2&quot;&quot;,=&quot;&quot;77660061755&quot;&quot;,=&quot;&quot;黎海东&quot;&quot;,=&quot;&quot;2711455&quot;&quot;,=&quot;&quot;601002&quot;&quot;,=&quot;&quot;中国鸟-白尾地鸦&quot;&quot;,=&quot;&quot;买&quot;&quot;,=&quot;&quot;2786531&quot;&quot;,7.00,370.30,2592.10,77660061755,2016-11-28 14:59:25,,3.89,,,&quot;,,,,,,,,,,,,,,,,],\n]",
    "body_html": "<p>今天写了一个文件上传适配 csv 的，首先是碰见乱码问题，使用 golang.org/x/text 解决了，但是随后又碰见了一个新的问题，那就是我已经写好的方法需要的是 [][] string 这种格式的，我得到的是 string 类型的，而且 csv 格式大家都知道，还需要 split 等切分，但是这个 byte 我怎么转换成 [][] string 呢？\n 序号,客户账号,账户名称,成交单号,商品代码,商品名称,买/卖,委托单号,成交数量,成交价格,成交金额,交易员,成交时间,转让盈亏,手续费,订立价格,订立时间\n\"=\"\"1\"\",=\"\"77660061489\"\",=\"\"彭会武\"\",=\"\"2711612\"\",=\"\"601008\"\",=\"\"保护森林\"\",=\"\"买\"\",=\"\"2786714\"\",10.00,16.51,165.10,77660061489,2016-11-28 14:59:46,,0.25,,,\",,,,,,,,,,,,,,,,\n\"=\"\"2\"\",=\"\"77660061755\"\",=\"\"黎海东\"\",=\"\"2711455\"\",=\"\"601002\"\",=\"\"中国鸟 - 白尾地鸦\"\",=\"\"买\"\",=\"\"2786531\"\",7.00,370.30,2592.10,77660061755,2016-11-28 14:59:25,,3.89,,,\",,,,,,,,,,,,,,,,\n\"=\"\"3\"\",=\"\"77660061001\"\",=\"\"苗传宝\"\",=\"\"2711273\"\",=\"\"601004\"\",=\"\"国际老人年\"\",=\"\"买\"\",=\"\"2786375\"\",5.00,566.30,2831.50,77660061001,2016-11-28 14:58:55,,4.25,,,\",,,,,,,,,,,,,,,,\n\"=\"\"21\"\",=\"\"77660060678\"\",=\"\"隆于超\"\",=\"\"2710149\"\",=\"\"601032\"\",=\"\"中国梦 - 民族振兴\"\",=\"\"卖\"\",=\"\"2778002\"\",3.00,75.00,225.00,77660060678,2016-11-28 14:54:37,-2.64,0.34,75.88,2016-11-26 13:35:03,\",,,,,,,,,,,,,,,,</p>\n\n<p>这是我转码之后的数据，\n转换成这种格式\n[\n[\"=\"\"1\"\",=\"\"77660061489\"\",=\"\"彭会武\"\",=\"\"2711612\"\",=\"\"601008\"\",=\"\"保护森林\"\",=\"\"买\"\",=\"\"2786714\"\",10.00,16.51,165.10,77660061489,2016-11-28 14:59:46,,0.25,,,\",,,,,,,,,,,,,,,,],\n[\"=\"\"2\"\",=\"\"77660061755\"\",=\"\"黎海东\"\",=\"\"2711455\"\",=\"\"601002\"\",=\"\"中国鸟 - 白尾地鸦\"\",=\"\"买\"\",=\"\"2786531\"\",7.00,370.30,2592.10,77660061755,2016-11-28 14:59:25,,3.89,,,\",,,,,,,,,,,,,,,,],\n]</p>",
    "hits": 508,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 467,
    "title": "我想知道怎么在golang源码里找到内置函数的实现和某些运行时的函数实现，比如append 和sync.runtime_Semacquire 函数",
    "created_at": "2016-12-08 10:24:36",
    "updated_at": "2016-12-09 16:27:19",
    "replied_at": "2016-12-09 08:29:00",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1155,
    "last_reply_user_login": "visualfc",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1242,
    "user": "{\"id\": 1242, \"name\": \"cookies\", \"login\": \"cookies\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我想知道怎么在golang源码里找到内置函数的实现和某些运行时的函数实现，比如append 和sync.runtime_Semacquire 函数",
    "body_html": "<p>我想知道怎么在 golang 源码里找到内置函数的实现和某些运行时的函数实现，比如 append 和 sync.runtime_Semacquire 函数</p>",
    "hits": 833,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 468,
    "title": "golang在线培训有吗？我看python大把啊",
    "created_at": "2016-12-08 11:01:00",
    "updated_at": "2016-12-12 16:45:10",
    "replied_at": "2016-12-12 16:45:10",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 271,
    "last_reply_user_login": "cholerae",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1398,
    "user": "{\"id\": 1398, \"name\": \"kkkkk1530\", \"login\": \"kkkkk1530\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "golang有在线培训吗？我看python大把啊",
    "body_html": "<p>golang 有在线培训吗？我看 python 大把啊</p>",
    "hits": 407,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 469,
    "title": "beego graceful 平滑重启，为什么只是重启，而没有平滑",
    "created_at": "2016-12-08 12:09:55",
    "updated_at": "2021-01-20 02:53:33",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1304,
    "user": "{\"id\": 1304, \"name\": \"神圣之云\", \"login\": \"190833714\", \"avatar\": \"https://gocn.vip/system/letter_avatars/1.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题，为什么不是平滑重启，kill -HUP 之后 老的进程都是没有处理，哪位好心人，告知下。是我的打开方式不对，还是beego没有处理好这一块。",
    "body_html": "<p>如题，为什么不是平滑重启，kill -HUP 之后 老的进程都是没有处理，哪位好心人，告知下。是我的打开方式不对，还是 beego 没有处理好这一块。</p>",
    "hits": 196,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 470,
    "title": "go 怎么在编译的时候传入这个参数-L/-I",
    "created_at": "2016-12-08 14:02:48",
    "updated_at": "2016-12-09 09:21:33",
    "replied_at": "2016-12-09 09:21:33",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 423,
    "last_reply_user_login": "chenqinghe",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 962,
    "user": "{\"id\": 962, \"name\": \"codinghxl\", \"login\": \"codinghxl\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "go 怎么在编译的时候传入这个参数?\n-I/usr/local/opt/libressl/include",
    "body_html": "<p>go 怎么在编译的时候传入这个参数?\n-I/usr/local/opt/libressl/include</p>",
    "hits": 374,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 471,
    "title": "bee run时报错 no space left on device",
    "created_at": "2016-12-08 17:58:27",
    "updated_at": "2016-12-08 17:58:27",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 70,
    "user": "{\"id\": 70, \"name\": \"Samuier\", \"login\": \"Samuier\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "bee run报错。\n![报错信息](http://oht3rs1nt.bkt.clouddn.com/a.png &quot;报错信息&quot;)\n这是第二次遇到这个问题啦。上一次是重启机器后解决的。有没有谁知道是什么原因啊",
    "body_html": "<p>bee run 报错。\n<img src=\"http://oht3rs1nt.bkt.clouddn.com/a.png\" title=\"&quot;报错信息&quot;\" alt=\"报错信息\">\n这是第二次遇到这个问题啦。上一次是重启机器后解决的。有没有谁知道是什么原因啊</p>",
    "hits": 339,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 472,
    "title": "chizuru",
    "created_at": "2016-12-08 20:40:52",
    "updated_at": "2016-12-10 00:01:05",
    "replied_at": "2016-12-10 00:01:05",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 816,
    "last_reply_user_login": "easonme",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1100,
    "user": "{\"id\": 1100, \"name\": \"Rg\", \"login\": \"Rg\", \"avatar\": \"https://gocn.vip/system/letter_avatars/r.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "山寨了一个小玩意\n**chizuru** is a distribute twitter snowflake system base on consul.\n\n[chizuru](https://github.com/laohanlinux/chizuru &quot;chizuru&quot;)",
    "body_html": "<p>山寨了一个小玩意\n<strong>chizuru</strong> is a distribute twitter snowflake system base on consul.</p>\n\n<p><a href=\"https://github.com/laohanlinux/chizuru%20%22chizuru%22\" title=\"\">chizuru</a></p>",
    "hits": 336,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 473,
    "title": "Go 语言 Redis 服务端 API 框架",
    "created_at": "2016-12-09 13:10:43",
    "updated_at": "2016-12-09 13:10:43",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 339,
    "user": "{\"id\": 339, \"name\": \"Akagi201\", \"login\": \"Akagi201\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "# RedFace\n\nRepo: &lt;https://github.com/Akagi201/redface&gt;\n\n[![Build Status](https://travis-ci.org/Akagi201/redface.svg)](https://travis-ci.org/Akagi201/redface) [![Coverage Status](https://coveralls.io/repos/github/Akagi201/redface/badge.svg?branch=master)](https://coveralls.io/github/Akagi201/redface?branch=master) [![Go Report Card](https://goreportcard.com/badge/github.com/Akagi201/redface)](https://goreportcard.com/report/github.com/Akagi201/redface) [![GoDoc](https://godoc.org/github.com/Akagi201/redface?status.svg)](https://godoc.org/github.com/Akagi201/redface)\n\nRedFace means redis interface.\n\nIt can be used as a redis server-side api in golang.\n\n## Features\n\n- [x] Suport tcp protocol.\n- [x] Support unix socket protocol.\n- [x] Support net/http like interface.\n- [x] Add benchmarks.\n- [ ] Support pipelining.\n- [ ] Support telnet commands.\n- [ ] Support redis lua script.\n- [ ] Support TLS.\n- [ ] Support net/context.\n\n## Install\n\n* `go get github.com/Akagi201/redface`\n\n## Import\n\n* `import &quot;github.com/Akagi201/redface/resp&quot;`\n* `import &quot;github.com/Akagi201/redface/server&quot;`\n\n## Benchmarks\n\n### redis-benchmark\n\nRedis: Single-threaded, no disk persistence.\n\n```\n❯ redis-server --port 6379  --appendonly no\n```\n\n```\n❯ redis-benchmark -p 6379 -t set,get -n 1000000 -q -P 512 -c 512\nSET: 767459.75 requests per second\nGET: 941619.56 requests per second\n```\n\nRedFace: Single-threaded, no disk persistence.\n\n```\nGOMAXPROCS=1 go run example/clone/main.go\n```\n\n```\n❯ redis-benchmark -p 6389 -t set,get -n 1000000 -q -P 512 -c 512\nSET: 68861.04 requests per second\nGET: 65261.37 requests per second\n```\n\nRedFace: Multi-threaded, no disk persistence.\n\n```\nGOMAXPROCS=0 go run example/clone/main.go\n```\n\n```\n❯ redis-benchmark -p 6389 -t set,get -n 1000000 -q -P 512 -c 512\nSET: 30049.88 requests per second\nGET: 30422.88 requests per second\n```\n\nHardward info\n\n```\n❯ system_profiler SPHardwareDataType\nHardware:\n\n    Hardware Overview:\n\n      Model Name: MacBook Pro\n      Model Identifier: MacBookPro11,3\n      Processor Name: Intel Core i7\n      Processor Speed: 2.3 GHz\n      Number of Processors: 1\n      Total Number of Cores: 4\n      L2 Cache (per Core): 256 KB\n      L3 Cache: 6 MB\n      Memory: 16 GB\n      Boot ROM Version: MBP112.0138.B17\n      SMC Version (system): 2.19f12\n      Serial Number (system): C02MG6L8FD57\n      Hardware UUID: EB84A5CF-F1BA-5604-B1A6-534E30EA95C1\n```",
    "body_html": "<h2 id=\"RedFace\">RedFace</h2>\n<p>Repo: &lt;<a href=\"https://github.com/Akagi201/redface\" rel=\"nofollow\" target=\"_blank\">https://github.com/Akagi201/redface</a>&gt;</p>\n\n<p><a href=\"https://travis-ci.org/Akagi201/redface\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"https://travis-ci.org/Akagi201/redface.svg\" title=\"\" alt=\"Build Status\"></a> <a href=\"https://coveralls.io/github/Akagi201/redface?branch=master\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"https://coveralls.io/repos/github/Akagi201/redface/badge.svg?branch=master\" title=\"\" alt=\"Coverage Status\"></a> <a href=\"https://goreportcard.com/report/github.com/Akagi201/redface\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"https://goreportcard.com/badge/github.com/Akagi201/redface\" title=\"\" alt=\"Go Report Card\"></a> <a href=\"https://godoc.org/github.com/Akagi201/redface\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"https://godoc.org/github.com/Akagi201/redface?status.svg\" title=\"\" alt=\"GoDoc\"></a></p>\n\n<p>RedFace means redis interface.</p>\n\n<p>It can be used as a redis server-side api in golang.</p>\n<h2 id=\"Features\">Features</h2>\n<ul>\n<li>[x] Suport tcp protocol.</li>\n<li>[x] Support unix socket protocol.</li>\n<li>[x] Support net/http like interface.</li>\n<li>[x] Add benchmarks.</li>\n<li>[ ] Support pipelining.</li>\n<li>[ ] Support telnet commands.</li>\n<li>[ ] Support redis lua script.</li>\n<li>[ ] Support TLS.</li>\n<li>[ ] Support net/context.</li>\n</ul>\n<h2 id=\"Install\">Install</h2>\n<ul>\n<li><code>go get github.com/Akagi201/redface</code></li>\n</ul>\n<h2 id=\"Import\">Import</h2>\n<ul>\n<li><code>import &amp;quot;github.com/Akagi201/redface/resp&amp;quot;</code></li>\n<li><code>import &amp;quot;github.com/Akagi201/redface/server&amp;quot;</code></li>\n</ul>\n<h2 id=\"Benchmarks\">Benchmarks</h2><h3 id=\"redis-benchmark\">redis-benchmark</h3>\n<p>Redis: Single-threaded, no disk persistence.</p>\n <pre class=\"highlight plaintext\"><code>❯ redis-server --port 6379  --appendonly no\n</code></pre>  <pre class=\"highlight plaintext\"><code>❯ redis-benchmark -p 6379 -t set,get -n 1000000 -q -P 512 -c 512\nSET: 767459.75 requests per second\nGET: 941619.56 requests per second\n</code></pre> \n<p>RedFace: Single-threaded, no disk persistence.</p>\n <pre class=\"highlight plaintext\"><code>GOMAXPROCS=1 go run example/clone/main.go\n</code></pre>  <pre class=\"highlight plaintext\"><code>❯ redis-benchmark -p 6389 -t set,get -n 1000000 -q -P 512 -c 512\nSET: 68861.04 requests per second\nGET: 65261.37 requests per second\n</code></pre> \n<p>RedFace: Multi-threaded, no disk persistence.</p>\n <pre class=\"highlight plaintext\"><code>GOMAXPROCS=0 go run example/clone/main.go\n</code></pre>  <pre class=\"highlight plaintext\"><code>❯ redis-benchmark -p 6389 -t set,get -n 1000000 -q -P 512 -c 512\nSET: 30049.88 requests per second\nGET: 30422.88 requests per second\n</code></pre> \n<p>Hardward info</p>\n <pre class=\"highlight plaintext\"><code>❯ system_profiler SPHardwareDataType\nHardware:\n\n    Hardware Overview:\n\n      Model Name: MacBook Pro\n      Model Identifier: MacBookPro11,3\n      Processor Name: Intel Core i7\n      Processor Speed: 2.3 GHz\n      Number of Processors: 1\n      Total Number of Cores: 4\n      L2 Cache (per Core): 256 KB\n      L3 Cache: 6 MB\n      Memory: 16 GB\n      Boot ROM Version: MBP112.0138.B17\n      SMC Version (system): 2.19f12\n      Serial Number (system): C02MG6L8FD57\n      Hardware UUID: EB84A5CF-F1BA-5604-B1A6-534E30EA95C1\n</code></pre> ",
    "hits": 479,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 474,
    "title": "Go 语言 WebSocket 调试工具",
    "created_at": "2016-12-09 13:11:57",
    "updated_at": "2016-12-09 13:11:57",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 339,
    "user": "{\"id\": 339, \"name\": \"Akagi201\", \"login\": \"Akagi201\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "# wsutil\n\nRepo: &lt;https://github.com/Akagi201/wsutil&gt;\n\nWebSocket utils to help debug WebSocket applications\n\n## Tools\n* [client](/client) WebSocket client.\n* [dump](/dump) WebSocket client with echo test.\n* [proxy](/proxy) simple single WebSocket proxy.\n\n## Run\n* `./client --ws=ws://echo.websocket.org/`\n* `./client --ws=ws://localhost:8327`\n* `./proxy --upstream=ws://localhost:8328`\n* `./dump --listen=0.0.0.0:8328 --echo`",
    "body_html": "<h2 id=\"wsutil\">wsutil</h2>\n<p>Repo: &lt;<a href=\"https://github.com/Akagi201/wsutil\" rel=\"nofollow\" target=\"_blank\">https://github.com/Akagi201/wsutil</a>&gt;</p>\n\n<p>WebSocket utils to help debug WebSocket applications</p>\n<h2 id=\"Tools\">Tools</h2>\n<ul>\n<li>\n<a href=\"/client\" title=\"\">client</a> WebSocket client.</li>\n<li>\n<a href=\"/dump\" title=\"\">dump</a> WebSocket client with echo test.</li>\n<li>\n<a href=\"/proxy\" title=\"\">proxy</a> simple single WebSocket proxy.</li>\n</ul>\n<h2 id=\"Run\">Run</h2>\n<ul>\n<li><code>./client --ws=ws://echo.websocket.org/</code></li>\n<li><code>./client --ws=ws://localhost:8327</code></li>\n<li><code>./proxy --upstream=ws://localhost:8328</code></li>\n<li><code>./dump --listen=0.0.0.0:8328 --echo</code></li>\n</ul>",
    "hits": 362,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 475,
    "title": "Go 语言 http/https 文件服务器",
    "created_at": "2016-12-09 13:13:02",
    "updated_at": "2016-12-09 13:13:02",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 339,
    "user": "{\"id\": 339, \"name\": \"Akagi201\", \"login\": \"Akagi201\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "# serve\n\nRepo: &lt;https://github.com/Akagi201/serve&gt;\n\nSimple http server for localhost development\n\n## Features\n- [x] Use gohttp as http framework.\n- [x] Static http file server.\n- [x] Support https.\n- [ ] Support http2.\n- [ ] Support WebSocket.\n- [ ] Support browser-sync like features.\n\n## Build\n* docker: `docker build -t serve .`\n* `go build -o serve`\n\n## Install\n* `go get github.com/Akagi201/serve`\n\n## Run\n* `./serve -h`\n* `openssl genrsa -out server.key 2048`\n* `openssl req -new -x509 -key server.key -out server.crt -days 365`\n* `sudo ./serve --http=0.0.0.0:8888 --domains=akagi201.org`",
    "body_html": "<h2 id=\"serve\">serve</h2>\n<p>Repo: &lt;<a href=\"https://github.com/Akagi201/serve\" rel=\"nofollow\" target=\"_blank\">https://github.com/Akagi201/serve</a>&gt;</p>\n\n<p>Simple http server for localhost development</p>\n<h2 id=\"Features\">Features</h2>\n<ul>\n<li>[x] Use gohttp as http framework.</li>\n<li>[x] Static http file server.</li>\n<li>[x] Support https.</li>\n<li>[ ] Support http2.</li>\n<li>[ ] Support WebSocket.</li>\n<li>[ ] Support browser-sync like features.</li>\n</ul>\n<h2 id=\"Build\">Build</h2>\n<ul>\n<li>docker: <code>docker build -t serve .</code>\n</li>\n<li><code>go build -o serve</code></li>\n</ul>\n<h2 id=\"Install\">Install</h2>\n<ul>\n<li><code>go get github.com/Akagi201/serve</code></li>\n</ul>\n<h2 id=\"Run\">Run</h2>\n<ul>\n<li><code>./serve -h</code></li>\n<li><code>openssl genrsa -out server.key 2048</code></li>\n<li><code>openssl req -new -x509 -key server.key -out server.crt -days 365</code></li>\n<li><code>sudo ./serve --http=0.0.0.0:8888 --domains=akagi201.org</code></li>\n</ul>",
    "hits": 370,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 476,
    "title": "Go 语言 udpproxy 调试工具",
    "created_at": "2016-12-09 13:15:35",
    "updated_at": "2016-12-09 19:45:45",
    "replied_at": "2016-12-09 19:45:45",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 238,
    "last_reply_user_login": "kevin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 339,
    "user": "{\"id\": 339, \"name\": \"Akagi201\", \"login\": \"Akagi201\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "# udpproxy\n\nRepo: &lt;https://github.com/Akagi201/udpproxy&gt;\n\nA simple UDP Proxy Server in Golang.\n\n## Features\n- [x] one source, multi target based on copy.\n\n## Build\n* docker: `docker build -t udpproxy .`\n* `go build main.go -o udpproxy`\n\n## Run\n* `--source`: data source, default source is `:2203`.\n* `--target`: data target, e.g. `ip:port`.\n* `--quiet`: whether to print logging info or not.\n* `--buffer`: default is 10240.",
    "body_html": "<h2 id=\"udpproxy\">udpproxy</h2>\n<p>Repo: &lt;<a href=\"https://github.com/Akagi201/udpproxy\" rel=\"nofollow\" target=\"_blank\">https://github.com/Akagi201/udpproxy</a>&gt;</p>\n\n<p>A simple UDP Proxy Server in Golang.</p>\n<h2 id=\"Features\">Features</h2>\n<ul>\n<li>[x] one source, multi target based on copy.</li>\n</ul>\n<h2 id=\"Build\">Build</h2>\n<ul>\n<li>docker: <code>docker build -t udpproxy .</code>\n</li>\n<li><code>go build main.go -o udpproxy</code></li>\n</ul>\n<h2 id=\"Run\">Run</h2>\n<ul>\n<li>\n<code>--source</code>: data source, default source is <code>:2203</code>.</li>\n<li>\n<code>--target</code>: data target, e.g. <code>ip:port</code>.</li>\n<li>\n<code>--quiet</code>: whether to print logging info or not.</li>\n<li>\n<code>--buffer</code>: default is 10240.</li>\n</ul>",
    "hits": 389,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 477,
    "title": "论坛需要支持 Email 通知",
    "created_at": "2016-12-09 16:44:51",
    "updated_at": "2017-08-21 09:28:29",
    "replied_at": "2017-08-21 09:28:29",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2335,
    "last_reply_user_login": "javasgl",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 339,
    "user": "{\"id\": 339, \"name\": \"Akagi201\", \"login\": \"Akagi201\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我完全收不到 Email 通知, 难道是我配置的问题吗?",
    "body_html": "<p>我完全收不到 Email 通知, 难道是我配置的问题吗?</p>",
    "hits": 523,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 478,
    "title": "govendor包管理报错",
    "created_at": "2016-12-09 19:02:47",
    "updated_at": "2016-12-15 13:30:09",
    "replied_at": "2016-12-15 13:30:09",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1140,
    "last_reply_user_login": "xiaofeng211",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1140,
    "user": "{\"id\": 1140, \"name\": \"xiaofeng211\", \"login\": \"xiaofeng211\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "各位好，\n在用govendor做包管理时候报错。错误信息panic: runtime error: slice bounds out of range\n\n发现是在引入github.com/gin-gonic/gin 时候回出这个问题\n\nmain函数代码：\n\nfunc main() {\n\tgin.Default()\n}\n\n\n试了其他第三方包没出现这个问题。\n\n谢谢\n\n",
    "body_html": "<p>各位好，\n在用 govendor 做包管理时候报错。错误信息 panic: runtime error: slice bounds out of range</p>\n\n<p>发现是在引入 github.com/gin-gonic/gin 时候回出这个问题</p>\n\n<p>main 函数代码：</p>\n\n<p>func main() {\n    gin.Default()\n}</p>\n\n<p>试了其他第三方包没出现这个问题。</p>\n\n<p>谢谢</p>",
    "hits": 349,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 479,
    "title": "局域网环境下，udp和tcp传输同样的数据，哪那种方式更快？",
    "created_at": "2016-12-09 20:32:39",
    "updated_at": "2016-12-12 11:29:51",
    "replied_at": "2016-12-12 11:29:51",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 938,
    "last_reply_user_login": "heimonsy",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1434,
    "user": "{\"id\": 1434, \"name\": \"tablecell\", \"login\": \"tablecell\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "一般局域网的网络环境应该是比较好的",
    "body_html": "<p>一般局域网的网络环境应该是比较好的</p>",
    "hits": 325,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 480,
    "title": "使用golang写了个命令行工具，如何判断输入参数中是否有中文？",
    "created_at": "2016-12-10 16:14:55",
    "updated_at": "2016-12-12 11:59:37",
    "replied_at": "2016-12-12 11:59:37",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 96,
    "last_reply_user_login": "sheepbao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1131,
    "user": "{\"id\": 1131, \"name\": \"smhui_007\", \"login\": \"smhui_007\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题",
    "body_html": "<p>如题</p>",
    "hits": 223,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 481,
    "title": "tcp，udp观察工具？",
    "created_at": "2016-12-10 18:53:52",
    "updated_at": "2016-12-10 20:28:22",
    "replied_at": "2016-12-10 20:28:22",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 713,
    "last_reply_user_login": "tonyluj",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "想看看建立链接的时间\n发送消息花的时间\n\n\n不知道用什么工具好。简单好用就好\n如果是wireshark能否给个图片，不太会玩，运行又快",
    "body_html": "<p>想看看建立链接的时间\n发送消息花的时间</p>\n\n<p>不知道用什么工具好。简单好用就好\n如果是 wireshark 能否给个图片，不太会玩，运行又快</p>",
    "hits": 399,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 482,
    "title": "c++如何调用go静态库",
    "created_at": "2016-12-11 15:30:21",
    "updated_at": "2016-12-16 18:01:50",
    "replied_at": "2016-12-16 18:00:09",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 108,
    "last_reply_user_login": "silentred",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 962,
    "user": "{\"id\": 962, \"name\": \"codinghxl\", \"login\": \"codinghxl\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "c++如何调用go静态库",
    "body_html": "<p>c++ 如何调用 go 静态库</p>",
    "hits": 446,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 483,
    "title": "有没有对mxnet go binding感兴趣的？",
    "created_at": "2016-12-12 14:32:46",
    "updated_at": "2016-12-12 14:32:46",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1353,
    "user": "{\"id\": 1353, \"name\": \"songtianyi\", \"login\": \"songtianyi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "rt",
    "body_html": "<p>rt</p>",
    "hits": 262,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 484,
    "title": "请求feedburner下的某个订阅http报错？",
    "created_at": "2016-12-12 23:41:35",
    "updated_at": "2016-12-12 23:41:35",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 192,
    "user": "{\"id\": 192, \"name\": \"nino\", \"login\": \"nino\", \"avatar\": \"https://gocn.vip/system/letter_avatars/n.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "最近在练习golang爬虫，有兴趣把国外的有名的新闻网站都抓下来，在抓time的时候，它的rss订阅是由feedburner提供的，在抓取的时候read tcp 10.170.44.26:59938-&gt;proxy_ip: read: connection reset by peer ,前面是我的内网地址，后面是我使用的代理地址。\n请求代码如下：\n```go\n\tclient := f.httpClientWithProxy(proxyURL)\n\treq, _ := http.NewRequest(&quot;GET&quot;, feedURL, nil)\n\tresp, err := client.Do(req)\n\n\tif err != nil {\n\t\treturn nil, err\n\t}\n```\n确认就是在这一块报错了，Google错误信息也没找到啥答案\n还有就是使用别的语言写的是可以抓下来的，不太懂，有此一问\n麻烦大家了\n\nhttps://github.com/golang/go/issues/11745\n这个人说切换到1.5似乎更好，我现在的go版本是1.6.3",
    "body_html": "<p>最近在练习 golang 爬虫，有兴趣把国外的有名的新闻网站都抓下来，在抓 time 的时候，它的 rss 订阅是由 feedburner 提供的，在抓取的时候 read tcp 10.170.44.26:59938-&gt;proxy_ip: read: connection reset by peer ,前面是我的内网地址，后面是我使用的代理地址。\n请求代码如下：</p>\n <pre class=\"highlight go\"><code><span class=\"n\">client</span> <span class=\"o\">:=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">httpClientWithProxy</span><span class=\"p\">(</span><span class=\"n\">proxyURL</span><span class=\"p\">)</span>\n<span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">NewRequest</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">GET</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">feedURL</span><span class=\"p\">,</span> <span class=\"no\">nil</span><span class=\"p\">)</span>\n<span class=\"n\">resp</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Do</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"n\">err</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>确认就是在这一块报错了，Google 错误信息也没找到啥答案\n还有就是使用别的语言写的是可以抓下来的，不太懂，有此一问\n麻烦大家了</p>\n\n<p><a href=\"https://github.com/golang/go/issues/11745\" rel=\"nofollow\" target=\"_blank\">https://github.com/golang/go/issues/11745</a>\n这个人说切换到 1.5 似乎更好，我现在的 go 版本是 1.6.3</p>",
    "hits": 306,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 485,
    "title": "10亿的md5值，现在来一新的32位的字符串，如何判断该值是否已经存在10亿里，越快越好",
    "created_at": "2016-12-13 19:34:43",
    "updated_at": "2017-07-27 14:58:21",
    "replied_at": "2017-07-27 14:58:21",
    "replies_count": 8,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2441,
    "last_reply_user_login": "lys86_1205",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1331,
    "user": "{\"id\": 1331, \"name\": \"kakashi\", \"login\": \"kakashi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题：\n已经存在10亿的md5值，现在来一新的32位的字符串，如何判断该值是否已经存在10亿里，越快越好",
    "body_html": "<p>如题：\n已经存在 10 亿的 md5 值，现在来一新的 32 位的字符串，如何判断该值是否已经存在 10 亿里，越快越好</p>",
    "hits": 507,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 486,
    "title": "并发取不重复的随机字符串问题",
    "created_at": "2016-12-13 22:32:16",
    "updated_at": "2016-12-14 03:15:19",
    "replied_at": "2016-12-14 03:15:19",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1379,
    "user": "{\"id\": 1379, \"name\": \"bfcaicai\", \"login\": \"bfcaicai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "以纳秒时间戳为种子取随机固定长度且不重复的随机字符串，在并发过程中还是重复，不得不加休眠，但是这样效率太低。。。\n有啥解决方案？",
    "body_html": "<p>以纳秒时间戳为种子取随机固定长度且不重复的随机字符串，在并发过程中还是重复，不得不加休眠，但是这样效率太低。。。\n有啥解决方案？</p>",
    "hits": 334,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 487,
    "title": "如何防止go程序被破解",
    "created_at": "2016-12-14 02:47:28",
    "updated_at": "2016-12-21 21:15:16",
    "replied_at": "2016-12-21 21:15:16",
    "replies_count": 16,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 238,
    "last_reply_user_login": "kevin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1261,
    "user": "{\"id\": 1261, \"name\": \"cjmxp\", \"login\": \"cjmxp\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如何防止go程序被破解\n例如反编译 修改编译后的exe",
    "body_html": "<p>如何防止 go 程序被破解\n例如反编译 修改编译后的 exe</p>",
    "hits": 1147,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 488,
    "title": "RSA加密解密，p12，报错pkcs12: expected exactly two safe bags in the PFX PDU",
    "created_at": "2016-12-14 11:10:46",
    "updated_at": "2016-12-14 11:10:46",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 92,
    "user": "{\"id\": 92, \"name\": \"Richard\", \"login\": \"Richard\", \"avatar\": \"https://gocn.vip/system/letter_avatars/r.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题 \n是不是只有把p12 转换成pem才能用？\n```golang\npackage main\n\nimport (\n\t&quot;golang.org/x/crypto/pkcs12&quot;\n\t&quot;fmt&quot;\n\t&quot;crypto/rsa&quot;\n\t&quot;io/ioutil&quot;\n)\n\nfunc check(e error) {\n\tif e != nil {\n\t\tpanic(e)\n\t}\n}\n\nfunc main() {\n\tdat, err := ioutil.ReadFile(&quot;xxx.p12&quot;)\n\tcheck(err)\n\n\tfmt.Println(len(dat))\n\tvar priKey, cer, e = pkcs12.Decode(dat, &quot;xxx&quot;)\n\n\n\tif e != nil {\n\t\tfmt.Println(e)\n\t}\n\n\tfmt.Println(priKey)\n\tfmt.Println(cer)\n}\n\n\n```",
    "body_html": "<p>如题 \n是不是只有把 p12 转换成 pem 才能用？</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">golang</span><span class=\"o\">.</span><span class=\"n\">org</span><span class=\"o\">/</span><span class=\"n\">x</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">pkcs12</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">rsa</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">ioutil</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">check</span><span class=\"p\">(</span><span class=\"n\">e</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"n\">e</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"nb\">panic</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">dat</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">ioutil</span><span class=\"o\">.</span><span class=\"n\">ReadFile</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">xxx</span><span class=\"o\">.</span><span class=\"n\">p12</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">check</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">dat</span><span class=\"p\">))</span>\n    <span class=\"k\">var</span> <span class=\"n\">priKey</span><span class=\"p\">,</span> <span class=\"n\">cer</span><span class=\"p\">,</span> <span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"n\">pkcs12</span><span class=\"o\">.</span><span class=\"n\">Decode</span><span class=\"p\">(</span><span class=\"n\">dat</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">xxx</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n\n    <span class=\"k\">if</span> <span class=\"n\">e</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">priKey</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">cer</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n\n</code></pre> ",
    "hits": 517,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 489,
    "title": "参加 Go 官方 2016 用户问卷调查，一起来完善推广 Go",
    "created_at": "2016-12-14 11:56:17",
    "updated_at": "2016-12-14 12:40:38",
    "replied_at": "2016-12-14 12:40:38",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1353,
    "last_reply_user_login": "songtianyi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 462,
    "user": "{\"id\": 462, \"name\": \"bingohuang\", \"login\": \"bingohuang\", \"avatar\": \"https://static.gocn.vip/user/avatar/462/afb5d4.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Go官方博客推出 Go 2016 用户问卷调查，快来试试吧。\n\n[Participate in the 2016 Go User Survey and Company Questionnaire](https://blog.golang.org/survey2016 &quot;Participate in the 2016 Go User Survey and Company Questionnaire&quot;)\n- [Go User Survey 2016](https://goo.gl/NJgrHT &quot;Go User Survey 2016&quot;)[Participate in the 2016 Go User Survey and Company Questionnaire](https://blog.golang.org/survey2016 &quot;Participate in the 2016 Go User Survey and Company Questionnaire&quot;)\n- [Go Company Questionnaire 2016](https://goo.gl/Epya2q &quot;Go Company Questionnaire 2016&quot;)",
    "body_html": "<p>Go 官方博客推出 Go 2016 用户问卷调查，快来试试吧。</p>\n\n<p><a href=\"https://blog.golang.org/survey2016%20%22Participate%20in%20the%202016%20Go%20User%20Survey%20and%20Company%20Questionnaire%22\" title=\"\">Participate in the 2016 Go User Survey and Company Questionnaire</a></p>\n\n<ul>\n<li>\n<a href=\"https://goo.gl/NJgrHT%20%22Go%20User%20Survey%202016%22\" title=\"\">Go User Survey 2016</a><a href=\"https://blog.golang.org/survey2016%20%22Participate%20in%20the%202016%20Go%20User%20Survey%20and%20Company%20Questionnaire%22\" title=\"\">Participate in the 2016 Go User Survey and Company Questionnaire</a>\n</li>\n<li><a href=\"https://goo.gl/Epya2q%20%22Go%20Company%20Questionnaire%202016%22\" title=\"\">Go Company Questionnaire 2016</a></li>\n</ul>",
    "hits": 271,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 490,
    "title": "有没有人用过 llvm 的 go binding?",
    "created_at": "2016-12-14 12:53:06",
    "updated_at": "2016-12-14 13:03:32",
    "replied_at": "2016-12-14 13:03:32",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1353,
    "last_reply_user_login": "songtianyi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 271,
    "user": "{\"id\": 271, \"name\": \"cholerae\", \"login\": \"cholerae\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "官方的包是 llvm.org/llvm/bindings/go/llvm , 但是我 go get 了一下提示\n```\npackage llvm.org/llvm/bindings/go/llvm: unrecognized import path &quot;llvm.org/llvm/bindings/go/llvm&quot; (parse https://llvm.org/llvm/bindings/go/llvm?go-get=1: no go-import meta tags ())\n```\n这个包已经没了？",
    "body_html": "<p>官方的包是 llvm.org/llvm/bindings/go/llvm , 但是我 go get 了一下提示</p>\n <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">llvm</span><span class=\"p\">.</span><span class=\"n\">org</span><span class=\"p\">/</span><span class=\"n\">llvm</span><span class=\"p\">/</span><span class=\"n\">bindings</span><span class=\"p\">/</span><span class=\"n\">go</span><span class=\"p\">/</span><span class=\"n\">llvm</span><span class=\"p\">:</span> <span class=\"n\">unrecognized</span> <span class=\"n\">import</span> <span class=\"n\">path</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">llvm</span><span class=\"p\">.</span><span class=\"n\">org</span><span class=\"p\">/</span><span class=\"n\">llvm</span><span class=\"p\">/</span><span class=\"n\">bindings</span><span class=\"p\">/</span><span class=\"n\">go</span><span class=\"p\">/</span><span class=\"n\">llvm</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">(</span><span class=\"n\">parse</span> <span class=\"n\">https</span><span class=\"p\">://</span><span class=\"n\">llvm</span><span class=\"p\">.</span><span class=\"n\">org</span><span class=\"p\">/</span><span class=\"n\">llvm</span><span class=\"p\">/</span><span class=\"n\">bindings</span><span class=\"p\">/</span><span class=\"n\">go</span><span class=\"p\">/</span><span class=\"n\">llvm</span><span class=\"p\">?</span><span class=\"n\">go</span><span class=\"p\">-</span><span class=\"n\">get</span><span class=\"p\">=</span><span class=\"m\">1</span><span class=\"p\">:</span> <span class=\"n\">no</span> <span class=\"n\">go</span><span class=\"p\">-</span><span class=\"n\">import</span> <span class=\"n\">meta</span> <span class=\"n\">tags</span> <span class=\"p\">())</span>\n</code></pre> \n<p>这个包已经没了？</p>",
    "hits": 442,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 491,
    "title": "Go 语言 全局变量命名规范是怎样的?",
    "created_at": "2016-12-14 14:52:11",
    "updated_at": "2016-12-15 11:07:27",
    "replied_at": "2016-12-15 11:07:27",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1237,
    "last_reply_user_login": "lake",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 339,
    "user": "{\"id\": 339, \"name\": \"Akagi201\", \"login\": \"Akagi201\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "g 开头吗?\n还是怎么样的?\n\n我自己是没有好的办法. 很纠结.",
    "body_html": "<p>g 开头吗?\n还是怎么样的?</p>\n\n<p>我自己是没有好的办法. 很纠结.</p>",
    "hits": 418,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 492,
    "title": "beego orm 自动建表如何建立外键",
    "created_at": "2016-12-14 15:02:38",
    "updated_at": "2021-01-16 19:44:17",
    "replied_at": "2016-12-15 14:18:37",
    "replies_count": 5,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 74,
    "last_reply_user_login": "xieyanke",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1447,
    "user": "{\"id\": 1447, \"name\": \"wuyuanbao\", \"login\": \"wuyuanbao\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 569,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 493,
    "title": "有什么比较好的办法判断用户是手机端还是PC端访问站点？",
    "created_at": "2016-12-14 15:13:57",
    "updated_at": "2016-12-16 05:49:33",
    "replied_at": "2016-12-16 05:49:33",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1344,
    "user": "{\"id\": 1344, \"name\": \"皇虫\", \"login\": \"1272881215\", \"avatar\": \"https://static.gocn.vip/user/avatar/1344/6acfae.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "有什么比较好的办法判断用户是手机端还是PC端访问站点？\n\n目前开发的站点需要根据访客的情况，跳转到手机版或者PC版。",
    "body_html": "<p>有什么比较好的办法判断用户是手机端还是 PC 端访问站点？</p>\n\n<p>目前开发的站点需要根据访客的情况，跳转到手机版或者 PC 版。</p>",
    "hits": 387,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 494,
    "title": "能不能开一个灌水区？",
    "created_at": "2016-12-14 15:26:46",
    "updated_at": "2016-12-14 15:26:46",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1353,
    "user": "{\"id\": 1353, \"name\": \"songtianyi\", \"login\": \"songtianyi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "。。rt。。。。\ngo binding弄的我好烦，好想吐槽啊。。。",
    "body_html": "<p>。。rt。。。。\ngo binding 弄的我好烦，好想吐槽啊。。。</p>",
    "hits": 219,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 495,
    "title": "用 beego 实现二级联动",
    "created_at": "2016-12-14 16:11:47",
    "updated_at": "2021-01-20 11:14:36",
    "replied_at": "2016-12-15 10:15:08",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 96,
    "last_reply_user_login": "sheepbao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1055,
    "user": "{\"id\": 1055, \"name\": \"hlj2722\", \"login\": \"hlj2722\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "哪位大神帮我实现一下 beego 实现一个二级联动的例子",
    "body_html": "<p>哪位大神帮我实现一下 beego 实现一个二级联动的例子</p>",
    "hits": 287,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 496,
    "title": "beego session mysql 怎么配置",
    "created_at": "2016-12-14 17:21:41",
    "updated_at": "2021-01-20 02:53:20",
    "replied_at": "2016-12-15 12:55:33",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 960,
    "last_reply_user_login": "tupunco",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1005,
    "user": "{\"id\": 1005, \"name\": \"insisthzr\", \"login\": \"insisthzr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "sessionprovider = mysql\nsessionproviderconfig = root:root@tcp(localhost)/quickstart\n\nconfig是这样配置吗",
    "body_html": "<p>sessionprovider = mysql\nsessionproviderconfig = root:root@tcp(localhost)/quickstart</p>\n\n<p>config 是这样配置吗</p>",
    "hits": 393,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 497,
    "title": "cgo 不支持CXXFLAGS??",
    "created_at": "2016-12-14 17:30:11",
    "updated_at": "2016-12-15 10:12:20",
    "replied_at": "2016-12-15 10:12:20",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 96,
    "last_reply_user_login": "sheepbao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1353,
    "user": "{\"id\": 1353, \"name\": \"songtianyi\", \"login\": \"songtianyi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\n/*\n// go preamble\n#cgo CXXFLAGS: -I/root/MXNet/mxnet/include/\n#cgo LDFLAGS: -L/root/MXNet/mxnet/lib\n#include &lt;mxnet/c_api.h&gt;\n*/\nimport &quot;C&quot;\n```\n```go\nfatal error: mxnet/c_api.h: No such file or directory\n```\n\n用CPPFLAGS能找到头文件，但是编译不通过，go编译器选了gcc而不是g++去编译\n\nupdate：\ncgo不支持不在当前目录的c++ code, 卒",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"c\">/*\n// go preamble\n#cgo CXXFLAGS: -I/root/MXNet/mxnet/include/\n#cgo LDFLAGS: -L/root/MXNet/mxnet/lib\n#include &amp;lt;mxnet/c_api.h&amp;gt;\n*/</span>\n<span class=\"k\">import</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">C</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n</code></pre>  <pre class=\"highlight go\"><code><span class=\"n\">fatal</span> <span class=\"kt\">error</span><span class=\"o\">:</span> <span class=\"n\">mxnet</span><span class=\"o\">/</span><span class=\"n\">c_api</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span>\n</code></pre> \n<p>用 CPPFLAGS 能找到头文件，但是编译不通过，go 编译器选了 gcc 而不是 g++ 去编译</p>\n\n<p>update：\ncgo 不支持不在当前目录的 c++ code, 卒</p>",
    "hits": 363,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 498,
    "title": "有合肥的golang大牛吗?加群一起学习呗:259215395",
    "created_at": "2016-12-15 09:47:56",
    "updated_at": "2016-12-15 09:47:56",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1450,
    "user": "{\"id\": 1450, \"name\": \"kolonse\", \"login\": \"kolonse\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 157,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 499,
    "title": "golang slice的问题",
    "created_at": "2016-12-15 10:41:04",
    "updated_at": "2016-12-15 12:36:25",
    "replied_at": "2016-12-15 12:36:25",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 108,
    "last_reply_user_login": "silentred",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 605,
    "user": "{\"id\": 605, \"name\": \"ofttryaj\", \"login\": \"ofttryaj\", \"avatar\": \"https://gocn.vip/system/letter_avatars/o.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```\nvar s []int = []int{}\nfmt.Printf(&quot;%p, %v \\n&quot;, s, s)\n\ns1 := make([]int, 0)\nfmt.Printf(&quot;%p, %v \\n&quot;, s1, s1)\n```\n以上运行结果:\n```\n0x11b540, []\n0x11b540, []\n```\n运行了很多遍都是这个结果，指向的数组地址怎么都是一样的，而且还是0x11b540这个地址。求解惑？",
    "body_html": " <pre class=\"highlight plaintext\"><code>var s []int = []int{}\nfmt.Printf(&amp;quot;%p, %v \\n&amp;quot;, s, s)\n\ns1 := make([]int, 0)\nfmt.Printf(&amp;quot;%p, %v \\n&amp;quot;, s1, s1)\n</code></pre> \n<p>以上运行结果:</p>\n <pre class=\"highlight plaintext\"><code>0x11b540, []\n0x11b540, []\n</code></pre> \n<p>运行了很多遍都是这个结果，指向的数组地址怎么都是一样的，而且还是 0x11b540 这个地址。求解惑？</p>",
    "hits": 514,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 500,
    "title": "求go命令行参数中文说明",
    "created_at": "2016-12-15 12:28:23",
    "updated_at": "2016-12-15 12:30:26",
    "replied_at": "2016-12-15 12:30:26",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1261,
    "last_reply_user_login": "cjmxp",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1261,
    "user": "{\"id\": 1261, \"name\": \"cjmxp\", \"login\": \"cjmxp\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "求go命令行参数中文说明，先在此谢过*-*\n\n我既然找到了\n\nhttps://github.com/g0hacker/go_command_tutorial",
    "body_html": "<p>求 go 命令行参数中文说明，先在此谢过<em>-</em></p>\n\n<p>我既然找到了</p>\n\n<p><a href=\"https://github.com/g0hacker/go_command_tutorial\" rel=\"nofollow\" target=\"_blank\">https://github.com/g0hacker/go_command_tutorial</a></p>",
    "hits": 408,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 501,
    "title": "beego/golang 日志处理问题",
    "created_at": "2016-12-15 14:14:14",
    "updated_at": "2021-01-20 02:22:35",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 45,
    "user": "{\"id\": 45, \"name\": \"小张的烦恼\", \"login\": \"zhangyumingtfr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我是初学不久，对于golang/beego的日志打印一致比较疑惑，log，beego.Debug,等的区别，还有使用对软件的影响，怎样写才算标准。",
    "body_html": "<p>我是初学不久，对于 golang/beego 的日志打印一致比较疑惑，log，beego.Debug,等的区别，还有使用对软件的影响，怎样写才算标准。</p>",
    "hits": 264,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 502,
    "title": "GIN API Framework是一款专为Go Gin 框架打造的API Framework",
    "created_at": "2016-12-15 14:16:34",
    "updated_at": "2016-12-15 14:16:34",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Gin",
    "node_id": 13,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1452,
    "user": "{\"id\": 1452, \"name\": \"edisonlz\", \"login\": \"edisonlz\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "\n欢迎使用GO Gin API Framework\n\n@(示例笔记本)[马克飞象|帮助|Markdown]\n\nGIN API Framework是一款专为Go Gin 框架打造的API Framework，通过精心的设计与技术实现，集成了大部分稳定开发组件，memcache consistance Hash，redis，nsq，api doc ，mysql 等。特点概述：\n\n功能丰富 ：支持大部分服务器组件，支持API Doc；\n得心应手 ：简单的实例，非常容易上手；\n深度整合 ：深度整合memcache，redis，mysql，beego ，gin 框架。\n性能优先 ：为啥不直接使用beego那，因为gin是目前httprouter性能最高，占用资源最少的框架，而beego orm是目前最接近django的框架，so...。\n\n项目地址\nhttps://github.com/edisonlz/Gin_API_Framework",
    "body_html": "<p>欢迎使用 GO Gin API Framework</p>\n\n<p>@(示例笔记本)[马克飞象 | 帮助 |Markdown]</p>\n\n<p>GIN API Framework 是一款专为 Go Gin 框架打造的 API Framework，通过精心的设计与技术实现，集成了大部分稳定开发组件，memcache consistance Hash，redis，nsq，api doc ，mysql 等。特点概述：</p>\n\n<p>功能丰富 ：支持大部分服务器组件，支持 API Doc；\n得心应手 ：简单的实例，非常容易上手；\n深度整合 ：深度整合 memcache，redis，mysql，beego ，gin 框架。\n性能优先 ：为啥不直接使用 beego 那，因为 gin 是目前 httprouter 性能最高，占用资源最少的框架，而 beego orm 是目前最接近 django 的框架，so...。</p>\n\n<p>项目地址\n<a href=\"https://github.com/edisonlz/Gin_API_Framework\" rel=\"nofollow\" target=\"_blank\">https://github.com/edisonlz/Gin_API_Framework</a></p>",
    "hits": 920,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 503,
    "title": "JetBrains 终于推出了 Golang IDE",
    "created_at": "2016-12-16 07:32:47",
    "updated_at": "2017-07-11 09:59:29",
    "replied_at": "2017-07-11 09:59:29",
    "replies_count": 28,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2232,
    "last_reply_user_login": "qiangmzsx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 277,
    "user": "{\"id\": 277, \"name\": \"haozibi\", \"login\": \"haozibi\", \"avatar\": \"https://static.gocn.vip/user/avatar/277/5e0471.jpg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "哈哈，应该是不错\n\nhttps://www.jetbrains.com/go/\n\n![](https://dn-coding-net-production-pp.qbox.me/f4683d21-13ad-4303-b929-09e7c6761f48.png)",
    "body_html": "<p>哈哈，应该是不错</p>\n\n<p><a href=\"https://www.jetbrains.com/go/\" rel=\"nofollow\" target=\"_blank\">https://www.jetbrains.com/go/</a></p>\n\n<p><img src=\"https://dn-coding-net-production-pp.qbox.me/f4683d21-13ad-4303-b929-09e7c6761f48.png\" title=\"\" alt=\"\"></p>",
    "hits": 758,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 504,
    "title": "slice与interface{}转换问题",
    "created_at": "2016-12-16 15:03:08",
    "updated_at": "2016-12-16 15:11:04",
    "replied_at": "2016-12-16 15:11:04",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1447,
    "last_reply_user_login": "wuyuanbao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1447,
    "user": "{\"id\": 1447, \"name\": \"wuyuanbao\", \"login\": \"wuyuanbao\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n)\n\ntype A struct {\n\tId   int\n\tName string\n}\n\nfunc main() {\n\tvar l = make([]A, 0)\n\ta := A{Id: 1, Name: &quot;wyb&quot;}\n\tb := A{Id: 2, Name: &quot;gwl&quot;}\n\tl = append(l, a, b)\n\tTestOne(l) //输出[{1 wyb} {2 gwl}] 正确\n\tTestTwo(l) //输出 cannot use l (type []A) as type []interface {} in argument to TestTwo\n\tTestThree(l)\n\t//输出invalid argument list (type interface {}) for len\n\t//invalid operation: list[i] (type interface {} does not support indexing)\n\tTestFour(l) //输出[[{1 wyb} {2 gwl}]] 变成二维数据而且一旦循环这个二维数据会跟TestThree这个报一样的错\n}\n\nfunc TestOne(list []A) {\n\tfmt.Println(list)\n}\n\nfunc TestTwo(list []interface{}) {\n\tfmt.Println(list)\n}\n\nfunc TestThree(list interface{}) {\n\tfmt.Println(list) //输出[{1 wyb} {2 gwl}]\n\t//循环\n\tfor i := 0; i &lt; len(list); i++ {\n\t\tfmt.Println(list[i])\n\t}\n}\nfunc TestFour(list ...interface{}) {\n\tfmt.Println(list)\n}\n```\n其实我想写一个方法传入一个slice，这个slice存放任意类型数据（相当于java object）然后去操作这个slice，将slice当做interface{}传入方法后如何在将它转换为slice。求指教，难道需要用反射吗？",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">type</span> <span class=\"n\">A</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span>   <span class=\"kt\">int</span>\n    <span class=\"n\">Name</span> <span class=\"kt\">string</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">var</span> <span class=\"n\">l</span> <span class=\"o\">=</span> <span class=\"nb\">make</span><span class=\"p\">([]</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">A</span><span class=\"p\">{</span><span class=\"n\">Id</span><span class=\"o\">:</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">Name</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">wyb</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}</span>\n    <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">A</span><span class=\"p\">{</span><span class=\"n\">Id</span><span class=\"o\">:</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"n\">Name</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">gwl</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}</span>\n    <span class=\"n\">l</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n    <span class=\"n\">TestOne</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">)</span> <span class=\"c\">//输出[{1 wyb} {2 gwl}] 正确</span>\n    <span class=\"n\">TestTwo</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">)</span> <span class=\"c\">//输出 cannot use l (type []A) as type []interface {} in argument to TestTwo</span>\n    <span class=\"n\">TestThree</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">)</span>\n    <span class=\"c\">//输出invalid argument list (type interface {}) for len</span>\n    <span class=\"c\">//invalid operation: list[i] (type interface {} does not support indexing)</span>\n    <span class=\"n\">TestFour</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">)</span> <span class=\"c\">//输出[[{1 wyb} {2 gwl}]] 变成二维数据而且一旦循环这个二维数据会跟TestThree这个报一样的错</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">TestOne</span><span class=\"p\">(</span><span class=\"n\">list</span> <span class=\"p\">[]</span><span class=\"n\">A</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">list</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">TestTwo</span><span class=\"p\">(</span><span class=\"n\">list</span> <span class=\"p\">[]</span><span class=\"k\">interface</span><span class=\"p\">{})</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">list</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">TestThree</span><span class=\"p\">(</span><span class=\"n\">list</span> <span class=\"k\">interface</span><span class=\"p\">{})</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">list</span><span class=\"p\">)</span> <span class=\"c\">//输出[{1 wyb} {2 gwl}]</span>\n    <span class=\"c\">//循环</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">list</span><span class=\"p\">);</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"k\">func</span> <span class=\"n\">TestFour</span><span class=\"p\">(</span><span class=\"n\">list</span> <span class=\"o\">...</span><span class=\"k\">interface</span><span class=\"p\">{})</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">list</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>其实我想写一个方法传入一个 slice，这个 slice 存放任意类型数据（相当于 java object）然后去操作这个 slice，将 slice 当做 interface{}传入方法后如何在将它转换为 slice。求指教，难道需要用反射吗？</p>",
    "hits": 399,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 505,
    "title": "如何实现使用[]byte作为函数出参？",
    "created_at": "2016-12-16 17:11:47",
    "updated_at": "2016-12-16 23:02:07",
    "replied_at": "2016-12-16 23:02:07",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1364,
    "last_reply_user_login": "lrita",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1131,
    "user": "{\"id\": 1131, \"name\": \"smhui_007\", \"login\": \"smhui_007\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 214,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 506,
    "title": "关于go1.8 plugin.Open的错误",
    "created_at": "2016-12-16 17:28:44",
    "updated_at": "2016-12-16 18:14:40",
    "replied_at": "2016-12-16 18:13:38",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 183,
    "last_reply_user_login": "veni",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1410,
    "user": "{\"id\": 1410, \"name\": \"fanyang\", \"login\": \"fanyang\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\n//构建插件\npackage main\n\t...\ngo build -buildmode=plugin\n//加载插件\npackage test\n\t...\nplugin.Open(&quot;./aplugin.so&quot;)\n\n//出现错误：\nplugin.Open: plugin was built with a different version of package runtime\n\n//修改包名：\npackage main\n\t...\nplugin.Open(&quot;./aplugin.so&quot;)\n\n正常运行，有时想在其他包下加载怎么办，或者怎么向go开发者提出意见?\n```",
    "body_html": "<pre class=\"highlight go\"><code><span class=\"c\">//构建插件</span>\n<span class=\"k\">package</span> <span class=\"n\">main</span>\n    <span class=\"o\">...</span>\n<span class=\"k\">go</span> <span class=\"n\">build</span> <span class=\"o\">-</span><span class=\"n\">buildmode</span><span class=\"o\">=</span><span class=\"n\">plugin</span>\n<span class=\"c\">//加载插件</span>\n<span class=\"k\">package</span> <span class=\"n\">test</span>\n    <span class=\"o\">...</span>\n<span class=\"n\">plugin</span><span class=\"o\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">./</span><span class=\"n\">aplugin</span><span class=\"o\">.</span><span class=\"n\">so</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n<span class=\"c\">//出现错误：</span>\n<span class=\"n\">plugin</span><span class=\"o\">.</span><span class=\"n\">Open</span><span class=\"o\">:</span> <span class=\"n\">plugin</span> <span class=\"n\">was</span> <span class=\"n\">built</span> <span class=\"n\">with</span> <span class=\"n\">a</span> <span class=\"n\">different</span> <span class=\"n\">version</span> <span class=\"n\">of</span> <span class=\"k\">package</span> <span class=\"n\">runtime</span>\n\n<span class=\"c\">//修改包名：</span>\n<span class=\"k\">package</span> <span class=\"n\">main</span>\n    <span class=\"o\">...</span>\n<span class=\"n\">plugin</span><span class=\"o\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">./</span><span class=\"n\">aplugin</span><span class=\"o\">.</span><span class=\"n\">so</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n<span class=\"n\">正常运行</span><span class=\"err\">，</span><span class=\"n\">有时想在其他包下加载怎么办</span><span class=\"err\">，</span><span class=\"n\">或者怎么向go开发者提出意见</span><span class=\"err\">?</span>\n</code></pre>",
    "hits": 421,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 507,
    "title": "beego根目录静态文件访问",
    "created_at": "2016-12-16 22:13:21",
    "updated_at": "2021-01-20 02:22:36",
    "replied_at": "2016-12-19 08:54:12",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 228,
    "last_reply_user_login": "touei",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1344,
    "user": "{\"id\": 1344, \"name\": \"皇虫\", \"login\": \"1272881215\", \"avatar\": \"https://static.gocn.vip/user/avatar/1344/6acfae.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "花了半个月的时间使用beego开发了go语言的第一个web站点，今晚兴冲冲地部署到了服务器上，然后想用阿里云的一个站点性能测试工具小玩一下，提示需要把一个txt文件上传到根目录做验证。。。\n然后上传到了根目录，链接读取不了文件，毕竟根目录不是静态目录。\n但是验证必须要求你把文件放在根目录，至少你的验证链接显示的文件路径是在根目录。。\n在gocn上看到了一个朋友的解决办法==》https://gocn.io/question/172\n然后自己也想了一个解决办法，代码如下：\n//路由\n```go\nbeego.Router(&quot;/*&quot;, &amp;HomeController.IndexController{}, &quot;get:RootStatic&quot;)\n```\n//控制器\n```go\n//可读取的根目录静态文件\nfunc (this *IndexController) RootStatic() {\n\t//root_static_ext根目录静态文件后缀\n\t//允许根目录获取的文件后缀，多个后缀用英文逗号\n\text := strings.ToLower(beego.AppConfig.String(&quot;root_static_ext&quot;))\n\tif len(ext) == 0 {\n\t\t//默认可读取的根目录静态文件后缀\n\t\text = &quot;.txt,.html,.css,.js&quot;\n\t}\n\tfile := this.GetString(&quot;:splat&quot;)\n\t//不能存在斜杠\n\tif !strings.Contains(file, &quot;/&quot;) {\n\t\tfile_slice := strings.Split(file, &quot;.&quot;)\n\t\tl := len(file_slice)\n\t\tif l &gt; 0 {\n\t\t\t//文件后缀\n\t\t\tfiel_ext := strings.ToLower(file_slice[(l - 1)])\n\t\t\tif strings.Contains(ext, &quot;.&quot;+fiel_ext) {\n\t\t\t\t//判断文件是否存在\n\t\t\t\t_, err := os.Stat(file)\n\t\t\t\tif err == nil {\n\t\t\t\t\tb, _ := ioutil.ReadFile(file)\n\t\t\t\t\tthis.Ctx.WriteString(string(b))\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tthis.Abort(&quot;404&quot;)\n}\n```\n我这个办法代码比较多，上面那个朋友的办法可能更好些。哪个gopher有更好的解决办法，麻烦也分享一下。",
    "body_html": "<p>花了半个月的时间使用 beego 开发了 go 语言的第一个 web 站点，今晚兴冲冲地部署到了服务器上，然后想用阿里云的一个站点性能测试工具小玩一下，提示需要把一个 txt 文件上传到根目录做验证。。。\n然后上传到了根目录，链接读取不了文件，毕竟根目录不是静态目录。\n但是验证必须要求你把文件放在根目录，至少你的验证链接显示的文件路径是在根目录。。\n在 gocn 上看到了一个朋友的解决办法==》<a href=\"https://gocn.io/question/172\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/172</a>\n然后自己也想了一个解决办法，代码如下：\n//路由</p>\n <pre class=\"highlight go\"><code><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">Router</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/*&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">HomeController</span><span class=\"o\">.</span><span class=\"n\">IndexController</span><span class=\"p\">{},</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">get</span><span class=\"o\">:</span><span class=\"n\">RootStatic</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n</code></pre> \n<p>//控制器</p>\n <pre class=\"highlight go\"><code><span class=\"c\">//可读取的根目录静态文件</span>\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">this</span> <span class=\"o\">*</span><span class=\"n\">IndexController</span><span class=\"p\">)</span> <span class=\"n\">RootStatic</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"c\">//root_static_ext根目录静态文件后缀</span>\n    <span class=\"c\">//允许根目录获取的文件后缀，多个后缀用英文逗号</span>\n    <span class=\"n\">ext</span> <span class=\"o\">:=</span> <span class=\"n\">strings</span><span class=\"o\">.</span><span class=\"n\">ToLower</span><span class=\"p\">(</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">AppConfig</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">root_static_ext</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;))</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ext</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n        <span class=\"c\">//默认可读取的根目录静态文件后缀</span>\n        <span class=\"n\">ext</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">.</span><span class=\"n\">txt</span><span class=\"p\">,</span><span class=\"o\">.</span><span class=\"n\">html</span><span class=\"p\">,</span><span class=\"o\">.</span><span class=\"n\">css</span><span class=\"p\">,</span><span class=\"o\">.</span><span class=\"n\">js</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">file</span> <span class=\"o\">:=</span> <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"n\">GetString</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span><span class=\"n\">splat</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"c\">//不能存在斜杠</span>\n    <span class=\"k\">if</span> <span class=\"o\">!</span><span class=\"n\">strings</span><span class=\"o\">.</span><span class=\"n\">Contains</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span> <span class=\"p\">{</span>\n        <span class=\"n\">file_slice</span> <span class=\"o\">:=</span> <span class=\"n\">strings</span><span class=\"o\">.</span><span class=\"n\">Split</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">.&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"n\">l</span> <span class=\"o\">:=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">file_slice</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">l</span> <span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n            <span class=\"c\">//文件后缀</span>\n            <span class=\"n\">fiel_ext</span> <span class=\"o\">:=</span> <span class=\"n\">strings</span><span class=\"o\">.</span><span class=\"n\">ToLower</span><span class=\"p\">(</span><span class=\"n\">file_slice</span><span class=\"p\">[(</span><span class=\"n\">l</span> <span class=\"o\">-</span> <span class=\"m\">1</span><span class=\"p\">)])</span>\n            <span class=\"k\">if</span> <span class=\"n\">strings</span><span class=\"o\">.</span><span class=\"n\">Contains</span><span class=\"p\">(</span><span class=\"n\">ext</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">.&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">+</span><span class=\"n\">fiel_ext</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"c\">//判断文件是否存在</span>\n                <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Stat</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n                    <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">ioutil</span><span class=\"o\">.</span><span class=\"n\">ReadFile</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">)</span>\n                    <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"n\">Ctx</span><span class=\"o\">.</span><span class=\"n\">WriteString</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">))</span>\n                    <span class=\"k\">return</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"n\">Abort</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"m\">404</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>我这个办法代码比较多，上面那个朋友的办法可能更好些。哪个 gopher 有更好的解决办法，麻烦也分享一下。</p>",
    "hits": 337,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 508,
    "title": "liteide包导入的问题",
    "created_at": "2016-12-18 14:01:47",
    "updated_at": "2016-12-19 17:16:01",
    "replied_at": "2016-12-19 17:16:01",
    "replies_count": 4,
    "node_name": "LiteIDE",
    "node_id": 47,
    "last_reply_user_id": 1261,
    "last_reply_user_login": "cjmxp",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1344,
    "user": "{\"id\": 1344, \"name\": \"皇虫\", \"login\": \"1272881215\", \"avatar\": \"https://static.gocn.vip/user/avatar/1344/6acfae.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "昨天liteide还好好的，然后不知道怎么搞的，现在没有了包导入提示的功能了。\n\n在昨天之前，我只需输入“time.”然后如果包没有导入，liteide就会提示包没导入，然后enter，liteide就把包导入了进来。然后今天，突然发现这个功能“失踪”了，这个怎么配置回来？",
    "body_html": "<p>昨天 liteide 还好好的，然后不知道怎么搞的，现在没有了包导入提示的功能了。</p>\n\n<p>在昨天之前，我只需输入 “time.” 然后如果包没有导入，liteide 就会提示包没导入，然后 enter，liteide 就把包导入了进来。然后今天，突然发现这个功能 “失踪” 了，这个怎么配置回来？</p>",
    "hits": 851,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 509,
    "title": "golang 中的rc4 算法 加密后解密结果不一致",
    "created_at": "2016-12-18 15:05:51",
    "updated_at": "2016-12-22 11:41:18",
    "replied_at": "2016-12-22 11:41:18",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1261,
    "user": "{\"id\": 1261, \"name\": \"cjmxp\", \"login\": \"cjmxp\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "golang 中的rc4 算法 加密后解密结果不一致\n\nRc4 加密和解密应该是用同一个函数 XORKeyStream(dst, src []byte)\n然后结果却不一样无法还原到明文\n\n求大大指点 go 1.7.3",
    "body_html": "<p>golang 中的 rc4 算法 加密后解密结果不一致</p>\n\n<p>Rc4 加密和解密应该是用同一个函数 XORKeyStream(dst, src [] byte)\n然后结果却不一样无法还原到明文</p>\n\n<p>求大大指点 go 1.7.3</p>",
    "hits": 511,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 510,
    "title": "glide可不可以配置一个公共的仓库里来存放依赖?",
    "created_at": "2016-12-19 10:47:07",
    "updated_at": "2016-12-22 11:39:27",
    "replied_at": "2016-12-22 11:39:27",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 382,
    "user": "{\"id\": 382, \"name\": \"simeon\", \"login\": \"simeon\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "类似`maven`那样\n如果两个项目使用了同一个包，`glide`会分别下载到列两个项目`vendor`目录中\n\n在`github`的`redadMe`上没找到相关的说明",
    "body_html": "<p>类似<code>maven</code>那样\n如果两个项目使用了同一个包，<code>glide</code>会分别下载到列两个项目<code>vendor</code>目录中</p>\n\n<p>在<code>github</code>的<code>redadMe</code>上没找到相关的说明</p>",
    "hits": 360,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 511,
    "title": "有没有什么将office文档转pdf的包或库",
    "created_at": "2016-12-19 11:38:33",
    "updated_at": "2020-02-11 23:58:34",
    "replied_at": "2016-12-21 17:29:10",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1344,
    "user": "{\"id\": 1344, \"name\": \"皇虫\", \"login\": \"1272881215\", \"avatar\": \"https://static.gocn.vip/user/avatar/1344/6acfae.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "问题同标题\n需要给公司做开发，实现文档在线浏览。pdf的好解决，有一个pdf.js的可以实现。网上也找了一些office在先浏览的办法，但是感觉都不怎么理想，想求教下大家有什么好的办法",
    "body_html": "<p>问题同标题\n需要给公司做开发，实现文档在线浏览。pdf 的好解决，有一个 pdf.js 的可以实现。网上也找了一些 office 在先浏览的办法，但是感觉都不怎么理想，想求教下大家有什么好的办法</p>",
    "hits": 378,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 512,
    "title": "beego文件上传使用getFile出错",
    "created_at": "2016-12-20 10:00:07",
    "updated_at": "2021-01-20 02:43:12",
    "replied_at": "2016-12-26 18:10:18",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 45,
    "last_reply_user_login": "小张的烦恼",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 45,
    "user": "{\"id\": 45, \"name\": \"小张的烦恼\", \"login\": \"zhangyumingtfr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\n2016/12/20 09:47:40 [D] [resourceController.go:118] &lt;nil&gt; &lt;nil&gt; multipart: NextPart: EOF\n2016/12/20 09:47:40 [E] [resourceController.go:121] get the file is error: multipart: NextPart: EOF\n2016/12/20 09:47:40 [C] [asm_amd64.s:479] the request url is  /hcloud/resource/upload\n2016/12/20 09:47:40 [C] [asm_amd64.s:479] Handler crashed with error can't find templatefile in the path:resourcecontroller/uploadphoneresource.tpl\n2016/12/20 09:47:40 [C] [asm_amd64.s:479] D:/GO/src/runtime/asm_amd64.s:479\n2016/12/20 09:47:40 [C] [asm_amd64.s:479] D:/GO/src/runtime/panic.go:458\n2016/12/20 09:47:40 [C] [asm_amd64.s:479] D:/GOPATH/src/github.com/astaxie/beego/template.go:64\n2016/12/20 09:47:40 [C] [asm_amd64.s:479] D:/GOPATH/src/github.com/astaxie/beego/controller.go:249\n2016/12/20 09:47:40 [C] [asm_amd64.s:479] D:/GOPATH/src/github.com/astaxie/beego/controller.go:200\n2016/12/20 09:47:40 [C] [asm_amd64.s:479] D:/GOPATH/src/github.com/astaxie/beego/controller.go:184\n2016/12/20 09:47:40 [C] [asm_amd64.s:479] D:/GOPATH/src/github.com/astaxie/beego/router.go:809\n2016/12/20 09:47:40 [C] [asm_amd64.s:479] D:/GO/src/net/http/server.go:2178\n2016/12/20 09:47:40 [C] [asm_amd64.s:479] D:/GO/src/net/http/server.go:1555\n2016/12/20 09:47:40 [C] [asm_amd64.s:479] D:/GO/src/runtime/asm_amd64.s:2059\n\n```\n\n\n\n\n\nbeego使用getFile上传文件报错 multipart: NextPart: EOF\n但是小文件上传没问题，大一点就会出错比如1兆",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"m\">2016</span><span class=\"o\">/</span><span class=\"m\">12</span><span class=\"o\">/</span><span class=\"m\">20</span> <span class=\"m\">09</span><span class=\"o\">:</span><span class=\"m\">47</span><span class=\"o\">:</span><span class=\"m\">40</span> <span class=\"p\">[</span><span class=\"n\">D</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">resourceController</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">118</span><span class=\"p\">]</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"no\">nil</span><span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"no\">nil</span><span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"n\">multipart</span><span class=\"o\">:</span> <span class=\"n\">NextPart</span><span class=\"o\">:</span> <span class=\"n\">EOF</span>\n<span class=\"m\">2016</span><span class=\"o\">/</span><span class=\"m\">12</span><span class=\"o\">/</span><span class=\"m\">20</span> <span class=\"m\">09</span><span class=\"o\">:</span><span class=\"m\">47</span><span class=\"o\">:</span><span class=\"m\">40</span> <span class=\"p\">[</span><span class=\"n\">E</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">resourceController</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">121</span><span class=\"p\">]</span> <span class=\"n\">get</span> <span class=\"n\">the</span> <span class=\"n\">file</span> <span class=\"n\">is</span> <span class=\"kt\">error</span><span class=\"o\">:</span> <span class=\"n\">multipart</span><span class=\"o\">:</span> <span class=\"n\">NextPart</span><span class=\"o\">:</span> <span class=\"n\">EOF</span>\n<span class=\"m\">2016</span><span class=\"o\">/</span><span class=\"m\">12</span><span class=\"o\">/</span><span class=\"m\">20</span> <span class=\"m\">09</span><span class=\"o\">:</span><span class=\"m\">47</span><span class=\"o\">:</span><span class=\"m\">40</span> <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">479</span><span class=\"p\">]</span> <span class=\"n\">the</span> <span class=\"n\">request</span> <span class=\"n\">url</span> <span class=\"n\">is</span>  <span class=\"o\">/</span><span class=\"n\">hcloud</span><span class=\"o\">/</span><span class=\"n\">resource</span><span class=\"o\">/</span><span class=\"n\">upload</span>\n<span class=\"m\">2016</span><span class=\"o\">/</span><span class=\"m\">12</span><span class=\"o\">/</span><span class=\"m\">20</span> <span class=\"m\">09</span><span class=\"o\">:</span><span class=\"m\">47</span><span class=\"o\">:</span><span class=\"m\">40</span> <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">479</span><span class=\"p\">]</span> <span class=\"n\">Handler</span> <span class=\"n\">crashed</span> <span class=\"n\">with</span> <span class=\"kt\">error</span> <span class=\"n\">can</span><span class=\"err\">'</span><span class=\"n\">t</span> <span class=\"n\">find</span> <span class=\"n\">templatefile</span> <span class=\"n\">in</span> <span class=\"n\">the</span> <span class=\"n\">path</span><span class=\"o\">:</span><span class=\"n\">resourcecontroller</span><span class=\"o\">/</span><span class=\"n\">uploadphoneresource</span><span class=\"o\">.</span><span class=\"n\">tpl</span>\n<span class=\"m\">2016</span><span class=\"o\">/</span><span class=\"m\">12</span><span class=\"o\">/</span><span class=\"m\">20</span> <span class=\"m\">09</span><span class=\"o\">:</span><span class=\"m\">47</span><span class=\"o\">:</span><span class=\"m\">40</span> <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">479</span><span class=\"p\">]</span> <span class=\"n\">D</span><span class=\"o\">:/</span><span class=\"n\">GO</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">479</span>\n<span class=\"m\">2016</span><span class=\"o\">/</span><span class=\"m\">12</span><span class=\"o\">/</span><span class=\"m\">20</span> <span class=\"m\">09</span><span class=\"o\">:</span><span class=\"m\">47</span><span class=\"o\">:</span><span class=\"m\">40</span> <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">479</span><span class=\"p\">]</span> <span class=\"n\">D</span><span class=\"o\">:/</span><span class=\"n\">GO</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"nb\">panic</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">458</span>\n<span class=\"m\">2016</span><span class=\"o\">/</span><span class=\"m\">12</span><span class=\"o\">/</span><span class=\"m\">20</span> <span class=\"m\">09</span><span class=\"o\">:</span><span class=\"m\">47</span><span class=\"o\">:</span><span class=\"m\">40</span> <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">479</span><span class=\"p\">]</span> <span class=\"n\">D</span><span class=\"o\">:/</span><span class=\"n\">GOPATH</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">64</span>\n<span class=\"m\">2016</span><span class=\"o\">/</span><span class=\"m\">12</span><span class=\"o\">/</span><span class=\"m\">20</span> <span class=\"m\">09</span><span class=\"o\">:</span><span class=\"m\">47</span><span class=\"o\">:</span><span class=\"m\">40</span> <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">479</span><span class=\"p\">]</span> <span class=\"n\">D</span><span class=\"o\">:/</span><span class=\"n\">GOPATH</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">controller</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">249</span>\n<span class=\"m\">2016</span><span class=\"o\">/</span><span class=\"m\">12</span><span class=\"o\">/</span><span class=\"m\">20</span> <span class=\"m\">09</span><span class=\"o\">:</span><span class=\"m\">47</span><span class=\"o\">:</span><span class=\"m\">40</span> <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">479</span><span class=\"p\">]</span> <span class=\"n\">D</span><span class=\"o\">:/</span><span class=\"n\">GOPATH</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">controller</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">200</span>\n<span class=\"m\">2016</span><span class=\"o\">/</span><span class=\"m\">12</span><span class=\"o\">/</span><span class=\"m\">20</span> <span class=\"m\">09</span><span class=\"o\">:</span><span class=\"m\">47</span><span class=\"o\">:</span><span class=\"m\">40</span> <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">479</span><span class=\"p\">]</span> <span class=\"n\">D</span><span class=\"o\">:/</span><span class=\"n\">GOPATH</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">controller</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">184</span>\n<span class=\"m\">2016</span><span class=\"o\">/</span><span class=\"m\">12</span><span class=\"o\">/</span><span class=\"m\">20</span> <span class=\"m\">09</span><span class=\"o\">:</span><span class=\"m\">47</span><span class=\"o\">:</span><span class=\"m\">40</span> <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">479</span><span class=\"p\">]</span> <span class=\"n\">D</span><span class=\"o\">:/</span><span class=\"n\">GOPATH</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">router</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">809</span>\n<span class=\"m\">2016</span><span class=\"o\">/</span><span class=\"m\">12</span><span class=\"o\">/</span><span class=\"m\">20</span> <span class=\"m\">09</span><span class=\"o\">:</span><span class=\"m\">47</span><span class=\"o\">:</span><span class=\"m\">40</span> <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">479</span><span class=\"p\">]</span> <span class=\"n\">D</span><span class=\"o\">:/</span><span class=\"n\">GO</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">2178</span>\n<span class=\"m\">2016</span><span class=\"o\">/</span><span class=\"m\">12</span><span class=\"o\">/</span><span class=\"m\">20</span> <span class=\"m\">09</span><span class=\"o\">:</span><span class=\"m\">47</span><span class=\"o\">:</span><span class=\"m\">40</span> <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">479</span><span class=\"p\">]</span> <span class=\"n\">D</span><span class=\"o\">:/</span><span class=\"n\">GO</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1555</span>\n<span class=\"m\">2016</span><span class=\"o\">/</span><span class=\"m\">12</span><span class=\"o\">/</span><span class=\"m\">20</span> <span class=\"m\">09</span><span class=\"o\">:</span><span class=\"m\">47</span><span class=\"o\">:</span><span class=\"m\">40</span> <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">479</span><span class=\"p\">]</span> <span class=\"n\">D</span><span class=\"o\">:/</span><span class=\"n\">GO</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">2059</span>\n\n</code></pre> \n<p>beego 使用 getFile 上传文件报错 multipart: NextPart: EOF\n但是小文件上传没问题，大一点就会出错比如 1 兆</p>",
    "hits": 520,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 513,
    "title": "有没有涉及到Golang工作流相关的开源项目？",
    "created_at": "2016-12-20 19:19:48",
    "updated_at": "2016-12-22 01:29:12",
    "replied_at": "2016-12-22 01:29:12",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 159,
    "last_reply_user_login": "Xargin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 418,
    "user": "{\"id\": 418, \"name\": \"flike\", \"login\": \"flike\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "这个工作流系统就是定义第一步做什么，第二步做什么，然后某步失败后可以回滚，然后下一次又可以重入等功能，大家有这方面的开源项目推荐么，或者有做个类似工作兄弟能否分享一下经验？",
    "body_html": "<p>这个工作流系统就是定义第一步做什么，第二步做什么，然后某步失败后可以回滚，然后下一次又可以重入等功能，大家有这方面的开源项目推荐么，或者有做个类似工作兄弟能否分享一下经验？</p>",
    "hits": 488,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 514,
    "title": "go string 相等 遇到的问题",
    "created_at": "2016-12-21 14:32:48",
    "updated_at": "2016-12-26 01:42:48",
    "replied_at": "2016-12-26 01:36:08",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 159,
    "last_reply_user_login": "Xargin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1253,
    "user": "{\"id\": 1253, \"name\": \"liushuchun\", \"login\": \"liushuchun\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "[![](http://oi2fpgdkw.bkt.clouddn.com/A5E9E13A-75D8-4E48-B34E-142AE09511D4.png)](http://oi2fpgdkw.bkt.clouddn.com/A5E9E13A-75D8-4E48-B34E-142AE09511D4.png)\n\n打印出来内容一样，但是死活不相等。\n Google后在一篇博客里发现了这句'String values are compared byte-wise (lexically).' and 'zero value for string is &quot;&quot; '，大概的意思就是，string 的比较实际上是比较对应的byte数组的，之后打印了两个签名的byte值,实际内容并不相等。。\n\n",
    "body_html": "<p><a href=\"http://oi2fpgdkw.bkt.clouddn.com/A5E9E13A-75D8-4E48-B34E-142AE09511D4.png\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"http://oi2fpgdkw.bkt.clouddn.com/A5E9E13A-75D8-4E48-B34E-142AE09511D4.png\" title=\"\" alt=\"\"></a></p>\n\n<p>打印出来内容一样，但是死活不相等。\n Google 后在一篇博客里发现了这句'String values are compared byte-wise (lexically).' and 'zero value for string is \"\" '，大概的意思就是，string 的比较实际上是比较对应的 byte 数组的，之后打印了两个签名的 byte 值,实际内容并不相等。。</p>",
    "hits": 438,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 515,
    "title": "每个小功能写一个服务，服务间的通信，你们用什么方式？",
    "created_at": "2016-12-21 17:59:11",
    "updated_at": "2016-12-22 11:29:15",
    "replied_at": "2016-12-22 11:29:15",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1331,
    "user": "{\"id\": 1331, \"name\": \"kakashi\", \"login\": \"kakashi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "一个系统，由多个服务组合而成，服务之间会有通信，请问你们都是用什么方式通信的。\n\n问题的背景，看gopherchina2015的ppt《2-7 Golang与高性能DSP竞价系统》时，他们的系统是有好多服务组成的，像这种对实时性要求很高的结构的系统，服务和服务之间是通过什么方式通信的，个人用net/rpc做了个测试，tcp的方式，每秒qps大约为500（同步）感觉不是很高，求各位分享一下你们的处理经验，谢谢\n\n附ppt截取内容：\n独 部署  便更新与重启\n./bin\n├── adx_mod\n├── analysis\n├── bid\n├── charge\n├── convrate_import ├── cookie_map ├── dispatch\n├── ip_import\n├── kpicharge\n├── pdmp\n└── whisky\n",
    "body_html": "<p>一个系统，由多个服务组合而成，服务之间会有通信，请问你们都是用什么方式通信的。</p>\n\n<p>问题的背景，看 gopherchina2015 的 ppt《2-7 Golang 与高性能 DSP 竞价系统》时，他们的系统是有好多服务组成的，像这种对实时性要求很高的结构的系统，服务和服务之间是通过什么方式通信的，个人用 net/rpc 做了个测试，tcp 的方式，每秒 qps 大约为 500（同步）感觉不是很高，求各位分享一下你们的处理经验，谢谢</p>\n\n<p>附 ppt 截取内容：\n独 部署  便更新与重启\n./bin\n├── adx_mod\n├── analysis\n├── bid\n├── charge\n├── convrate_import ├── cookie_map ├── dispatch\n├── ip_import\n├── kpicharge\n├── pdmp\n└── whisky</p>",
    "hits": 385,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 516,
    "title": "这是mysql driver的bug吗？",
    "created_at": "2016-12-22 14:43:08",
    "updated_at": "2017-08-26 10:23:19",
    "replied_at": "2017-08-26 10:23:19",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2232,
    "last_reply_user_login": "qiangmzsx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 636,
    "user": "{\"id\": 636, \"name\": \"stevewang\", \"login\": \"stevewang\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\npackage main\n\nimport(\n\t&quot;database/sql&quot;\n\t\n\t_ &quot;github.com/go-sql-driver/mysql&quot;\n)\n\nfunc main() {\n\tdb, err := sql.Open(&quot;mysql&quot;, &quot;:@tcp(:0)/?charset=utf8&quot;)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdb.Close()\n}\n```\n我使用空的参数竟然连接mysql成功了，而且我本机并没有监听3306端口。\n\ngo version: 1.7.4 windows10/amd64\ngo-sql-driver version: 1.3",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span><span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">database</span><span class=\"o\">/</span><span class=\"n\">sql</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n    <span class=\"n\">_</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">-</span><span class=\"n\">sql</span><span class=\"o\">-</span><span class=\"n\">driver</span><span class=\"o\">/</span><span class=\"n\">mysql</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">mysql</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span><span class=\"err\">@</span><span class=\"n\">tcp</span><span class=\"p\">(</span><span class=\"o\">:</span><span class=\"m\">0</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"err\">?</span><span class=\"n\">charset</span><span class=\"o\">=</span><span class=\"n\">utf8</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"nb\">panic</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>我使用空的参数竟然连接 mysql 成功了，而且我本机并没有监听 3306 端口。</p>\n\n<p>go version: 1.7.4 windows10/amd64\ngo-sql-driver version: 1.3</p>",
    "hits": 628,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 517,
    "title": "从大文件查找记录，24核64G服务器上反而比i5 3470慢，懵",
    "created_at": "2016-12-22 17:21:57",
    "updated_at": "2016-12-23 19:14:34",
    "replied_at": "2016-12-23 19:07:47",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1445,
    "last_reply_user_login": "imjj",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 30,
    "user": "{\"id\": 30, \"name\": \"wulinlw\", \"login\": \"wulinlw\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "这个程序是从一个1.07G（315w条）的日志文件中查找指定类型的日志，并将指定类型的日志写到独立文件中\n日志文件中每行一条json日志\n日志样例，隐去了其余字段，实际一条约350字节\n```json\n2016/08/18 11:48:19 {&quot;date&quot;:&quot;2016-08-18 11:48:19&quot;,&quot;log&quot;:&quot;money&quot;,&quot;id&quot;:400}\n```\n在普通公司电脑上跑出来数据i5 3470,8G,5400转硬盘\n```javascript\nD:\\gotest\\special_log&gt;special_log.exe -t collection\nreadall time: 1.8052026\ntotal lines: 3151749\ndeceode time: 1.8062033\n\nD:\\gotest\\special_log&gt;special_log.exe -t collection\nreadall time: 1.7971970000000002\ntotal lines: 3151749\ndeceode time: 1.800198\n\nD:\\gotest\\special_log&gt;special_log.exe -t collection\nreadall time: 1.81621\ntotal lines: 3151749\ndeceode time: 1.81621\n```\n\n在服务器上\n```javascript\n[root@localhost logs]# ./special_log -f 20160831_log_logs.txt -t money\nreadall time: 4.803762707\ntotal lines: 3151749\ndeceode time: 4.803832504\ntotal time 4.803855245\n[root@localhost logs]# ./special_log -f 20160831_log_logs.txt -t money\nreadall time: 4.689143216\ntotal lines: 3151749\ndeceode time: 4.689217291\ntotal time 4.689249867\n[root@localhost logs]# ./special_log -f 20160831_log_logs.txt -t money\nreadall time: 4.821515715\ntotal lines: 3151749\ndeceode time: 4.821584778\ntotal time 4.8216138090000005\n```\n\n服务器上反而更慢了，有点懵逼—_—!\n尝试修改runtime.GOMAXPROCS和协程数，都没什么效果，运行时能看到所有cpu核都在工作\n本地pprof\n```javascript\n(pprof) top 10 \n3110ms of 4170ms total (74.58%)\nDropped 60 nodes (cum &lt;= 20.85ms)\nShowing top 10 nodes out of 76 (cum &gt;= 3600ms)\n      flat  flat%   sum%        cum   cum%\n     680ms 16.31% 16.31%      690ms 16.55%  runtime.cgocall\n     510ms 12.23% 28.54%      860ms 20.62%  bytes.Index\n     450ms 10.79% 39.33%      460ms 11.03%  runtime.gopanic\n     420ms 10.07% 49.40%      420ms 10.07%  runtime.memclr\n     340ms  8.15% 57.55%      340ms  8.15%  unicode.init\n     260ms  6.24% 63.79%      260ms  6.24%  runtime.duffcopy\n     190ms  4.56% 68.35%      530ms 12.71%  bytes.init\n     100ms  2.40% 70.74%      800ms 19.18%  runtime.mallocinit\n      80ms  1.92% 72.66%      570ms 13.67%  runtime.chanrecv\n      80ms  1.92% 74.58%     3600ms 86.33%  runtime.memmove\n```\n\n服务器pprof\n```javascript\n(pprof) top 10        \n17020ms of 24340ms total (69.93%)\nDropped 104 nodes (cum &lt;= 121.70ms)\nShowing top 10 nodes out of 79 (cum &gt;= 1040ms)\n      flat  flat%   sum%        cum   cum%\n    4470ms 18.36% 18.36%     4470ms 18.36%  runtime.futex\n    2760ms 11.34% 29.70%     8280ms 34.02%  runtime.lock\n    2040ms  8.38% 38.09%     2040ms  8.38%  runtime/internal/atomic.Xchg\n    1760ms  7.23% 45.32%     1760ms  7.23%  runtime.procyield\n    1620ms  6.66% 51.97%     3620ms 14.87%  bytes.Index\n    1340ms  5.51% 57.48%     1340ms  5.51%  runtime.indexbytebody\n     880ms  3.62% 61.09%     7350ms 30.20%  runtime.findrunnable\n     750ms  3.08% 64.17%      750ms  3.08%  runtime.osyield\n     710ms  2.92% 67.09%      710ms  2.92%  runtime/internal/atomic.Xadd\n     690ms  2.83% 69.93%     1040ms  4.27%  runtime.runqgrab\n```\n不说其他，bytes.Index字节查找这项都比普通pc慢很多了，很不科学\n大家忙帮看看这是个啥情况\n\n\n\n代码如下：\n```go\npackage main\n\nimport (\n\t&quot;bufio&quot;\n\t&quot;bytes&quot;\n\t&quot;fmt&quot;\n\t&quot;os&quot;\n\t&quot;runtime&quot;\n\t//&quot;runtime/pprof&quot;\n\t&quot;flag&quot;\n\t&quot;time&quot;\n)\n\nvar logsChan chan []byte\nvar workQueue chan []byte\nvar completeDecodeJson chan bool\nvar complete chan bool\n\nvar w *bufio.Writer\nvar wc int = 0           // line num\nvar specialCount int = 0 //以处理行数\nvar concurrency = 9\nvar stime time.Time = time.Now()\nvar keyWord []byte\n\nfunc main() {\n\t//日志样例，隐去了其余字段，实际一条约350字节\t\n\t//2016/08/18 11:48:19 {&quot;date&quot;:&quot;2016-08-18 11:48:19&quot;,&quot;log&quot;:&quot;money&quot;,&quot;id&quot;:400}\n\t//\tf, _ := os.Create(&quot;profile_file&quot;)\n\t//\tpprof.StartCPUProfile(f)                 // 开始cpu profile，结果写到文件f中\n\t//\tdefer pprof.StopCPUProfile()             // 结束profile\n\truntime.GOMAXPROCS(runtime.NumCPU() - 1) //cpu-1效率更高\n\tdefer TimeoutWarning(&quot;total time&quot;, stime)\n\n\tvar logFile = flag.String(&quot;f&quot;, &quot;log.txt&quot;, &quot;log file path&quot;)\n\tvar logTypeP = flag.String(&quot;t&quot;, &quot;money&quot;, &quot;logtype&quot;)\n\tflag.Parse()\n\n\tlogsChan = make(chan []byte, 10000)\n\tworkQueue = make(chan []byte)\n\tcompleteDecodeJson = make(chan bool)\n\tcomplete = make(chan bool)\n\tlogType := *logTypeP\n\tkeyWord = []byte(fmt.Sprintf(`&quot;log&quot;:&quot;%s&quot;`, logType))\n\n\tf, err := os.OpenFile(*logTypeP+&quot;.txt&quot;, os.O_CREATE|os.O_RDWR, 0660)\n\tif err != nil {\n\t\tfmt.Println(&quot;create output file error&quot;)\n\t}\n\tdefer f.Close()\n\tw = bufio.NewWriter(f)\n\n\tlogObj, err := os.Open(*logFile)\n\tcheck(err)\n\tdefer logObj.Close()\n\tscanner := bufio.NewScanner(logObj)\n\n\tgo func() {\n\t\tfor scanner.Scan() {\n\t\t\ts := scanner.Bytes()\n\t\t\tlogsChan &lt;- append([]byte{}, s...) //必须将s拷贝走，否则下次range会改变bytes指针指向\n\t\t\twc++\n\t\t}\n\t\tclose(logsChan)\n\t\tfmt.Println(&quot;readall time:&quot;, time.Now().Sub(stime).Seconds())\n\t\tfmt.Println(&quot;total lines:&quot;, wc)\n\t}()\n\n\tif err := scanner.Err(); err != nil {\n\t\tfmt.Fprintln(os.Stderr, &quot;reading standard input:&quot;, err)\n\t}\n\tgo findSpecial()\n\tgo finishDecode()\n\tgo output()\n\t&lt;-complete\n}\n\nfunc findSpecial() {\n\tfor i := 0; i &lt; concurrency; i++ {\n\t\tgo func() {\n\t\t\tfor log := range logsChan {\n\t\t\t\tif bytes.Index(log, keyWord) != -1 {\n\t\t\t\t\tworkQueue &lt;- log\n\t\t\t\t}\n\t\t\t}\n\t\t\tcompleteDecodeJson &lt;- true\n\t\t}()\n\t}\n}\n\nfunc finishDecode() {\n\tfor i := 0; i &lt; concurrency; i++ {\n\t\t&lt;-completeDecodeJson\n\t}\n\tclose(workQueue) //无长度的channel必须关闭后，workQueue才能结束\n\tfmt.Println(&quot;deceode time:&quot;, time.Now().Sub(stime).Seconds())\n}\n\nfunc output() {\n\tfor line := range workQueue {\n\t\tw.Write(append(line[20:], []byte{0xa}...))\n\t}\n\tw.Flush()\n\tcomplete &lt;- true\n}\n\nfunc check(e error) {\n\tif e != nil {\n\t\tpanic(e)\n\t}\n}\n\nfunc TimeoutWarning(tag string, start time.Time) {\n\tdis := time.Now().Sub(start).Seconds()\n\tfmt.Println(tag, dis)\n}\n```",
    "body_html": "<p>这个程序是从一个 1.07G（315w 条）的日志文件中查找指定类型的日志，并将指定类型的日志写到独立文件中\n日志文件中每行一条 json 日志\n日志样例，隐去了其余字段，实际一条约 350 字节</p>\n <pre class=\"highlight json\"><code><span class=\"mi\">2016</span><span class=\"err\">/</span><span class=\"mi\">08</span><span class=\"err\">/</span><span class=\"mi\">18</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"err\">:</span><span class=\"mi\">48</span><span class=\"err\">:</span><span class=\"mi\">19</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"err\">&amp;quot;date&amp;quot;:&amp;quot;</span><span class=\"mi\">2016-08-18</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"err\">:</span><span class=\"mi\">48</span><span class=\"err\">:</span><span class=\"mi\">19</span><span class=\"err\">&amp;quot;</span><span class=\"p\">,</span><span class=\"err\">&amp;quot;log&amp;quot;:&amp;quot;money&amp;quot;</span><span class=\"p\">,</span><span class=\"err\">&amp;quot;id&amp;quot;:</span><span class=\"mi\">400</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre> \n<p>在普通公司电脑上跑出来数据 i5 3470,8G,5400 转硬盘</p>\n <pre class=\"highlight javascript\"><code><span class=\"nx\">D</span><span class=\"p\">:</span><span class=\"err\">\\</span><span class=\"nx\">gotest</span><span class=\"err\">\\</span><span class=\"nx\">special_log</span><span class=\"o\">&amp;</span><span class=\"nx\">gt</span><span class=\"p\">;</span><span class=\"nx\">special_log</span><span class=\"p\">.</span><span class=\"nx\">exe</span> <span class=\"o\">-</span><span class=\"nx\">t</span> <span class=\"nx\">collection</span>\n<span class=\"nx\">readall</span> <span class=\"nx\">time</span><span class=\"p\">:</span> <span class=\"mf\">1.8052026</span>\n<span class=\"nx\">total</span> <span class=\"nx\">lines</span><span class=\"p\">:</span> <span class=\"mi\">3151749</span>\n<span class=\"nx\">deceode</span> <span class=\"nx\">time</span><span class=\"p\">:</span> <span class=\"mf\">1.8062033</span>\n\n<span class=\"nx\">D</span><span class=\"p\">:</span><span class=\"err\">\\</span><span class=\"nx\">gotest</span><span class=\"err\">\\</span><span class=\"nx\">special_log</span><span class=\"o\">&amp;</span><span class=\"nx\">gt</span><span class=\"p\">;</span><span class=\"nx\">special_log</span><span class=\"p\">.</span><span class=\"nx\">exe</span> <span class=\"o\">-</span><span class=\"nx\">t</span> <span class=\"nx\">collection</span>\n<span class=\"nx\">readall</span> <span class=\"nx\">time</span><span class=\"p\">:</span> <span class=\"mf\">1.7971970000000002</span>\n<span class=\"nx\">total</span> <span class=\"nx\">lines</span><span class=\"p\">:</span> <span class=\"mi\">3151749</span>\n<span class=\"nx\">deceode</span> <span class=\"nx\">time</span><span class=\"p\">:</span> <span class=\"mf\">1.800198</span>\n\n<span class=\"nx\">D</span><span class=\"p\">:</span><span class=\"err\">\\</span><span class=\"nx\">gotest</span><span class=\"err\">\\</span><span class=\"nx\">special_log</span><span class=\"o\">&amp;</span><span class=\"nx\">gt</span><span class=\"p\">;</span><span class=\"nx\">special_log</span><span class=\"p\">.</span><span class=\"nx\">exe</span> <span class=\"o\">-</span><span class=\"nx\">t</span> <span class=\"nx\">collection</span>\n<span class=\"nx\">readall</span> <span class=\"nx\">time</span><span class=\"p\">:</span> <span class=\"mf\">1.81621</span>\n<span class=\"nx\">total</span> <span class=\"nx\">lines</span><span class=\"p\">:</span> <span class=\"mi\">3151749</span>\n<span class=\"nx\">deceode</span> <span class=\"nx\">time</span><span class=\"p\">:</span> <span class=\"mf\">1.81621</span>\n</code></pre> \n<p>在服务器上</p>\n <pre class=\"highlight javascript\"><code><span class=\"p\">[</span><span class=\"nx\">root</span><span class=\"p\">@</span><span class=\"nd\">localhost</span> <span class=\"nx\">logs</span><span class=\"p\">]</span><span class=\"err\">#</span> <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"nx\">special_log</span> <span class=\"o\">-</span><span class=\"nx\">f</span> <span class=\"mi\">20160831</span><span class=\"nx\">_log_logs</span><span class=\"p\">.</span><span class=\"nx\">txt</span> <span class=\"o\">-</span><span class=\"nx\">t</span> <span class=\"nx\">money</span>\n<span class=\"nx\">readall</span> <span class=\"nx\">time</span><span class=\"p\">:</span> <span class=\"mf\">4.803762707</span>\n<span class=\"nx\">total</span> <span class=\"nx\">lines</span><span class=\"p\">:</span> <span class=\"mi\">3151749</span>\n<span class=\"nx\">deceode</span> <span class=\"nx\">time</span><span class=\"p\">:</span> <span class=\"mf\">4.803832504</span>\n<span class=\"nx\">total</span> <span class=\"nx\">time</span> <span class=\"mf\">4.803855245</span>\n<span class=\"p\">[</span><span class=\"nx\">root</span><span class=\"p\">@</span><span class=\"nd\">localhost</span> <span class=\"nx\">logs</span><span class=\"p\">]</span><span class=\"err\">#</span> <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"nx\">special_log</span> <span class=\"o\">-</span><span class=\"nx\">f</span> <span class=\"mi\">20160831</span><span class=\"nx\">_log_logs</span><span class=\"p\">.</span><span class=\"nx\">txt</span> <span class=\"o\">-</span><span class=\"nx\">t</span> <span class=\"nx\">money</span>\n<span class=\"nx\">readall</span> <span class=\"nx\">time</span><span class=\"p\">:</span> <span class=\"mf\">4.689143216</span>\n<span class=\"nx\">total</span> <span class=\"nx\">lines</span><span class=\"p\">:</span> <span class=\"mi\">3151749</span>\n<span class=\"nx\">deceode</span> <span class=\"nx\">time</span><span class=\"p\">:</span> <span class=\"mf\">4.689217291</span>\n<span class=\"nx\">total</span> <span class=\"nx\">time</span> <span class=\"mf\">4.689249867</span>\n<span class=\"p\">[</span><span class=\"nx\">root</span><span class=\"p\">@</span><span class=\"nd\">localhost</span> <span class=\"nx\">logs</span><span class=\"p\">]</span><span class=\"err\">#</span> <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"nx\">special_log</span> <span class=\"o\">-</span><span class=\"nx\">f</span> <span class=\"mi\">20160831</span><span class=\"nx\">_log_logs</span><span class=\"p\">.</span><span class=\"nx\">txt</span> <span class=\"o\">-</span><span class=\"nx\">t</span> <span class=\"nx\">money</span>\n<span class=\"nx\">readall</span> <span class=\"nx\">time</span><span class=\"p\">:</span> <span class=\"mf\">4.821515715</span>\n<span class=\"nx\">total</span> <span class=\"nx\">lines</span><span class=\"p\">:</span> <span class=\"mi\">3151749</span>\n<span class=\"nx\">deceode</span> <span class=\"nx\">time</span><span class=\"p\">:</span> <span class=\"mf\">4.821584778</span>\n<span class=\"nx\">total</span> <span class=\"nx\">time</span> <span class=\"mf\">4.8216138090000005</span>\n</code></pre> \n<p>服务器上反而更慢了，有点懵逼—_—!\n尝试修改 runtime.GOMAXPROCS 和协程数，都没什么效果，运行时能看到所有 cpu 核都在工作\n本地 pprof</p>\n <pre class=\"highlight javascript\"><code><span class=\"p\">(</span><span class=\"nx\">pprof</span><span class=\"p\">)</span> <span class=\"nx\">top</span> <span class=\"mi\">10</span> \n<span class=\"mi\">3110</span><span class=\"nx\">ms</span> <span class=\"k\">of</span> <span class=\"mi\">4170</span><span class=\"nx\">ms</span> <span class=\"nx\">total</span> <span class=\"p\">(</span><span class=\"mf\">74.58</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"nx\">Dropped</span> <span class=\"mi\">60</span> <span class=\"nx\">nodes</span> <span class=\"p\">(</span><span class=\"nx\">cum</span> <span class=\"o\">&amp;</span><span class=\"nx\">lt</span><span class=\"p\">;</span><span class=\"o\">=</span> <span class=\"mf\">20.85</span><span class=\"nx\">ms</span><span class=\"p\">)</span>\n<span class=\"nx\">Showing</span> <span class=\"nx\">top</span> <span class=\"mi\">10</span> <span class=\"nx\">nodes</span> <span class=\"nx\">out</span> <span class=\"k\">of</span> <span class=\"mi\">76</span> <span class=\"p\">(</span><span class=\"nx\">cum</span> <span class=\"o\">&amp;</span><span class=\"nx\">gt</span><span class=\"p\">;</span><span class=\"o\">=</span> <span class=\"mi\">3600</span><span class=\"nx\">ms</span><span class=\"p\">)</span>\n      <span class=\"nx\">flat</span>  <span class=\"nx\">flat</span><span class=\"o\">%</span>   <span class=\"nx\">sum</span><span class=\"o\">%</span>        <span class=\"nx\">cum</span>   <span class=\"nx\">cum</span><span class=\"o\">%</span>\n     <span class=\"mi\">680</span><span class=\"nx\">ms</span> <span class=\"mf\">16.31</span><span class=\"o\">%</span> <span class=\"mf\">16.31</span><span class=\"o\">%</span>      <span class=\"mi\">690</span><span class=\"nx\">ms</span> <span class=\"mf\">16.55</span><span class=\"o\">%</span>  <span class=\"nx\">runtime</span><span class=\"p\">.</span><span class=\"nx\">cgocall</span>\n     <span class=\"mi\">510</span><span class=\"nx\">ms</span> <span class=\"mf\">12.23</span><span class=\"o\">%</span> <span class=\"mf\">28.54</span><span class=\"o\">%</span>      <span class=\"mi\">860</span><span class=\"nx\">ms</span> <span class=\"mf\">20.62</span><span class=\"o\">%</span>  <span class=\"nx\">bytes</span><span class=\"p\">.</span><span class=\"nx\">Index</span>\n     <span class=\"mi\">450</span><span class=\"nx\">ms</span> <span class=\"mf\">10.79</span><span class=\"o\">%</span> <span class=\"mf\">39.33</span><span class=\"o\">%</span>      <span class=\"mi\">460</span><span class=\"nx\">ms</span> <span class=\"mf\">11.03</span><span class=\"o\">%</span>  <span class=\"nx\">runtime</span><span class=\"p\">.</span><span class=\"nx\">gopanic</span>\n     <span class=\"mi\">420</span><span class=\"nx\">ms</span> <span class=\"mf\">10.07</span><span class=\"o\">%</span> <span class=\"mf\">49.40</span><span class=\"o\">%</span>      <span class=\"mi\">420</span><span class=\"nx\">ms</span> <span class=\"mf\">10.07</span><span class=\"o\">%</span>  <span class=\"nx\">runtime</span><span class=\"p\">.</span><span class=\"nx\">memclr</span>\n     <span class=\"mi\">340</span><span class=\"nx\">ms</span>  <span class=\"mf\">8.15</span><span class=\"o\">%</span> <span class=\"mf\">57.55</span><span class=\"o\">%</span>      <span class=\"mi\">340</span><span class=\"nx\">ms</span>  <span class=\"mf\">8.15</span><span class=\"o\">%</span>  <span class=\"nx\">unicode</span><span class=\"p\">.</span><span class=\"nx\">init</span>\n     <span class=\"mi\">260</span><span class=\"nx\">ms</span>  <span class=\"mf\">6.24</span><span class=\"o\">%</span> <span class=\"mf\">63.79</span><span class=\"o\">%</span>      <span class=\"mi\">260</span><span class=\"nx\">ms</span>  <span class=\"mf\">6.24</span><span class=\"o\">%</span>  <span class=\"nx\">runtime</span><span class=\"p\">.</span><span class=\"nx\">duffcopy</span>\n     <span class=\"mi\">190</span><span class=\"nx\">ms</span>  <span class=\"mf\">4.56</span><span class=\"o\">%</span> <span class=\"mf\">68.35</span><span class=\"o\">%</span>      <span class=\"mi\">530</span><span class=\"nx\">ms</span> <span class=\"mf\">12.71</span><span class=\"o\">%</span>  <span class=\"nx\">bytes</span><span class=\"p\">.</span><span class=\"nx\">init</span>\n     <span class=\"mi\">100</span><span class=\"nx\">ms</span>  <span class=\"mf\">2.40</span><span class=\"o\">%</span> <span class=\"mf\">70.74</span><span class=\"o\">%</span>      <span class=\"mi\">800</span><span class=\"nx\">ms</span> <span class=\"mf\">19.18</span><span class=\"o\">%</span>  <span class=\"nx\">runtime</span><span class=\"p\">.</span><span class=\"nx\">mallocinit</span>\n      <span class=\"mi\">80</span><span class=\"nx\">ms</span>  <span class=\"mf\">1.92</span><span class=\"o\">%</span> <span class=\"mf\">72.66</span><span class=\"o\">%</span>      <span class=\"mi\">570</span><span class=\"nx\">ms</span> <span class=\"mf\">13.67</span><span class=\"o\">%</span>  <span class=\"nx\">runtime</span><span class=\"p\">.</span><span class=\"nx\">chanrecv</span>\n      <span class=\"mi\">80</span><span class=\"nx\">ms</span>  <span class=\"mf\">1.92</span><span class=\"o\">%</span> <span class=\"mf\">74.58</span><span class=\"o\">%</span>     <span class=\"mi\">3600</span><span class=\"nx\">ms</span> <span class=\"mf\">86.33</span><span class=\"o\">%</span>  <span class=\"nx\">runtime</span><span class=\"p\">.</span><span class=\"nx\">memmove</span>\n</code></pre> \n<p>服务器 pprof</p>\n <pre class=\"highlight javascript\"><code><span class=\"p\">(</span><span class=\"nx\">pprof</span><span class=\"p\">)</span> <span class=\"nx\">top</span> <span class=\"mi\">10</span>        \n<span class=\"mi\">17020</span><span class=\"nx\">ms</span> <span class=\"k\">of</span> <span class=\"mi\">24340</span><span class=\"nx\">ms</span> <span class=\"nx\">total</span> <span class=\"p\">(</span><span class=\"mf\">69.93</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"nx\">Dropped</span> <span class=\"mi\">104</span> <span class=\"nx\">nodes</span> <span class=\"p\">(</span><span class=\"nx\">cum</span> <span class=\"o\">&amp;</span><span class=\"nx\">lt</span><span class=\"p\">;</span><span class=\"o\">=</span> <span class=\"mf\">121.70</span><span class=\"nx\">ms</span><span class=\"p\">)</span>\n<span class=\"nx\">Showing</span> <span class=\"nx\">top</span> <span class=\"mi\">10</span> <span class=\"nx\">nodes</span> <span class=\"nx\">out</span> <span class=\"k\">of</span> <span class=\"mi\">79</span> <span class=\"p\">(</span><span class=\"nx\">cum</span> <span class=\"o\">&amp;</span><span class=\"nx\">gt</span><span class=\"p\">;</span><span class=\"o\">=</span> <span class=\"mi\">1040</span><span class=\"nx\">ms</span><span class=\"p\">)</span>\n      <span class=\"nx\">flat</span>  <span class=\"nx\">flat</span><span class=\"o\">%</span>   <span class=\"nx\">sum</span><span class=\"o\">%</span>        <span class=\"nx\">cum</span>   <span class=\"nx\">cum</span><span class=\"o\">%</span>\n    <span class=\"mi\">4470</span><span class=\"nx\">ms</span> <span class=\"mf\">18.36</span><span class=\"o\">%</span> <span class=\"mf\">18.36</span><span class=\"o\">%</span>     <span class=\"mi\">4470</span><span class=\"nx\">ms</span> <span class=\"mf\">18.36</span><span class=\"o\">%</span>  <span class=\"nx\">runtime</span><span class=\"p\">.</span><span class=\"nx\">futex</span>\n    <span class=\"mi\">2760</span><span class=\"nx\">ms</span> <span class=\"mf\">11.34</span><span class=\"o\">%</span> <span class=\"mf\">29.70</span><span class=\"o\">%</span>     <span class=\"mi\">8280</span><span class=\"nx\">ms</span> <span class=\"mf\">34.02</span><span class=\"o\">%</span>  <span class=\"nx\">runtime</span><span class=\"p\">.</span><span class=\"nx\">lock</span>\n    <span class=\"mi\">2040</span><span class=\"nx\">ms</span>  <span class=\"mf\">8.38</span><span class=\"o\">%</span> <span class=\"mf\">38.09</span><span class=\"o\">%</span>     <span class=\"mi\">2040</span><span class=\"nx\">ms</span>  <span class=\"mf\">8.38</span><span class=\"o\">%</span>  <span class=\"nx\">runtime</span><span class=\"o\">/</span><span class=\"nx\">internal</span><span class=\"o\">/</span><span class=\"nx\">atomic</span><span class=\"p\">.</span><span class=\"nx\">Xchg</span>\n    <span class=\"mi\">1760</span><span class=\"nx\">ms</span>  <span class=\"mf\">7.23</span><span class=\"o\">%</span> <span class=\"mf\">45.32</span><span class=\"o\">%</span>     <span class=\"mi\">1760</span><span class=\"nx\">ms</span>  <span class=\"mf\">7.23</span><span class=\"o\">%</span>  <span class=\"nx\">runtime</span><span class=\"p\">.</span><span class=\"nx\">procyield</span>\n    <span class=\"mi\">1620</span><span class=\"nx\">ms</span>  <span class=\"mf\">6.66</span><span class=\"o\">%</span> <span class=\"mf\">51.97</span><span class=\"o\">%</span>     <span class=\"mi\">3620</span><span class=\"nx\">ms</span> <span class=\"mf\">14.87</span><span class=\"o\">%</span>  <span class=\"nx\">bytes</span><span class=\"p\">.</span><span class=\"nx\">Index</span>\n    <span class=\"mi\">1340</span><span class=\"nx\">ms</span>  <span class=\"mf\">5.51</span><span class=\"o\">%</span> <span class=\"mf\">57.48</span><span class=\"o\">%</span>     <span class=\"mi\">1340</span><span class=\"nx\">ms</span>  <span class=\"mf\">5.51</span><span class=\"o\">%</span>  <span class=\"nx\">runtime</span><span class=\"p\">.</span><span class=\"nx\">indexbytebody</span>\n     <span class=\"mi\">880</span><span class=\"nx\">ms</span>  <span class=\"mf\">3.62</span><span class=\"o\">%</span> <span class=\"mf\">61.09</span><span class=\"o\">%</span>     <span class=\"mi\">7350</span><span class=\"nx\">ms</span> <span class=\"mf\">30.20</span><span class=\"o\">%</span>  <span class=\"nx\">runtime</span><span class=\"p\">.</span><span class=\"nx\">findrunnable</span>\n     <span class=\"mi\">750</span><span class=\"nx\">ms</span>  <span class=\"mf\">3.08</span><span class=\"o\">%</span> <span class=\"mf\">64.17</span><span class=\"o\">%</span>      <span class=\"mi\">750</span><span class=\"nx\">ms</span>  <span class=\"mf\">3.08</span><span class=\"o\">%</span>  <span class=\"nx\">runtime</span><span class=\"p\">.</span><span class=\"nx\">osyield</span>\n     <span class=\"mi\">710</span><span class=\"nx\">ms</span>  <span class=\"mf\">2.92</span><span class=\"o\">%</span> <span class=\"mf\">67.09</span><span class=\"o\">%</span>      <span class=\"mi\">710</span><span class=\"nx\">ms</span>  <span class=\"mf\">2.92</span><span class=\"o\">%</span>  <span class=\"nx\">runtime</span><span class=\"o\">/</span><span class=\"nx\">internal</span><span class=\"o\">/</span><span class=\"nx\">atomic</span><span class=\"p\">.</span><span class=\"nx\">Xadd</span>\n     <span class=\"mi\">690</span><span class=\"nx\">ms</span>  <span class=\"mf\">2.83</span><span class=\"o\">%</span> <span class=\"mf\">69.93</span><span class=\"o\">%</span>     <span class=\"mi\">1040</span><span class=\"nx\">ms</span>  <span class=\"mf\">4.27</span><span class=\"o\">%</span>  <span class=\"nx\">runtime</span><span class=\"p\">.</span><span class=\"nx\">runqgrab</span>\n</code></pre> \n<p>不说其他，bytes.Index 字节查找这项都比普通 pc 慢很多了，很不科学\n大家忙帮看看这是个啥情况</p>\n\n<p>代码如下：</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">bufio</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">bytes</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">os</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">runtime</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"c\">//&amp;quot;runtime/pprof&amp;quot;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">flag</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">var</span> <span class=\"n\">logsChan</span> <span class=\"k\">chan</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span>\n<span class=\"k\">var</span> <span class=\"n\">workQueue</span> <span class=\"k\">chan</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span>\n<span class=\"k\">var</span> <span class=\"n\">completeDecodeJson</span> <span class=\"k\">chan</span> <span class=\"kt\">bool</span>\n<span class=\"k\">var</span> <span class=\"n\">complete</span> <span class=\"k\">chan</span> <span class=\"kt\">bool</span>\n\n<span class=\"k\">var</span> <span class=\"n\">w</span> <span class=\"o\">*</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"n\">Writer</span>\n<span class=\"k\">var</span> <span class=\"n\">wc</span> <span class=\"kt\">int</span> <span class=\"o\">=</span> <span class=\"m\">0</span>           <span class=\"c\">// line num</span>\n<span class=\"k\">var</span> <span class=\"n\">specialCount</span> <span class=\"kt\">int</span> <span class=\"o\">=</span> <span class=\"m\">0</span> <span class=\"c\">//以处理行数</span>\n<span class=\"k\">var</span> <span class=\"n\">concurrency</span> <span class=\"o\">=</span> <span class=\"m\">9</span>\n<span class=\"k\">var</span> <span class=\"n\">stime</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Time</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Now</span><span class=\"p\">()</span>\n<span class=\"k\">var</span> <span class=\"n\">keyWord</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"c\">//日志样例，隐去了其余字段，实际一条约350字节   </span>\n    <span class=\"c\">//2016/08/18 11:48:19 {&amp;quot;date&amp;quot;:&amp;quot;2016-08-18 11:48:19&amp;quot;,&amp;quot;log&amp;quot;:&amp;quot;money&amp;quot;,&amp;quot;id&amp;quot;:400}</span>\n    <span class=\"c\">//  f, _ := os.Create(&amp;quot;profile_file&amp;quot;)</span>\n    <span class=\"c\">//  pprof.StartCPUProfile(f)                 // 开始cpu profile，结果写到文件f中</span>\n    <span class=\"c\">//  defer pprof.StopCPUProfile()             // 结束profile</span>\n    <span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">GOMAXPROCS</span><span class=\"p\">(</span><span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">NumCPU</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"m\">1</span><span class=\"p\">)</span> <span class=\"c\">//cpu-1效率更高</span>\n    <span class=\"k\">defer</span> <span class=\"n\">TimeoutWarning</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">total</span> <span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">stime</span><span class=\"p\">)</span>\n\n    <span class=\"k\">var</span> <span class=\"n\">logFile</span> <span class=\"o\">=</span> <span class=\"n\">flag</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">f</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">txt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">log</span> <span class=\"n\">file</span> <span class=\"n\">path</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"k\">var</span> <span class=\"n\">logTypeP</span> <span class=\"o\">=</span> <span class=\"n\">flag</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">t</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">money</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">logtype</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">flag</span><span class=\"o\">.</span><span class=\"n\">Parse</span><span class=\"p\">()</span>\n\n    <span class=\"n\">logsChan</span> <span class=\"o\">=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span><span class=\"p\">,</span> <span class=\"m\">10000</span><span class=\"p\">)</span>\n    <span class=\"n\">workQueue</span> <span class=\"o\">=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span><span class=\"p\">)</span>\n    <span class=\"n\">completeDecodeJson</span> <span class=\"o\">=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">bool</span><span class=\"p\">)</span>\n    <span class=\"n\">complete</span> <span class=\"o\">=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">bool</span><span class=\"p\">)</span>\n    <span class=\"n\">logType</span> <span class=\"o\">:=</span> <span class=\"o\">*</span><span class=\"n\">logTypeP</span>\n    <span class=\"n\">keyWord</span> <span class=\"o\">=</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span><span class=\"p\">(</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Sprintf</span><span class=\"p\">(</span><span class=\"s\">`&amp;quot;log&amp;quot;:&amp;quot;%s&amp;quot;`</span><span class=\"p\">,</span> <span class=\"n\">logType</span><span class=\"p\">))</span>\n\n    <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">OpenFile</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">logTypeP</span><span class=\"o\">+&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">.</span><span class=\"n\">txt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">O_CREATE</span><span class=\"o\">|</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">O_RDWR</span><span class=\"p\">,</span> <span class=\"m\">0660</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">create</span> <span class=\"n\">output</span> <span class=\"n\">file</span> <span class=\"kt\">error</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">defer</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n    <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"n\">NewWriter</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n\n    <span class=\"n\">logObj</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">logFile</span><span class=\"p\">)</span>\n    <span class=\"n\">check</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"k\">defer</span> <span class=\"n\">logObj</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n    <span class=\"n\">scanner</span> <span class=\"o\">:=</span> <span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"n\">NewScanner</span><span class=\"p\">(</span><span class=\"n\">logObj</span><span class=\"p\">)</span>\n\n    <span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">for</span> <span class=\"n\">scanner</span><span class=\"o\">.</span><span class=\"n\">Scan</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n            <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"n\">scanner</span><span class=\"o\">.</span><span class=\"n\">Bytes</span><span class=\"p\">()</span>\n            <span class=\"n\">logsChan</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"nb\">append</span><span class=\"p\">([]</span><span class=\"kt\">byte</span><span class=\"p\">{},</span> <span class=\"n\">s</span><span class=\"o\">...</span><span class=\"p\">)</span> <span class=\"c\">//必须将s拷贝走，否则下次range会改变bytes指针指向</span>\n            <span class=\"n\">wc</span><span class=\"o\">++</span>\n        <span class=\"p\">}</span>\n        <span class=\"nb\">close</span><span class=\"p\">(</span><span class=\"n\">logsChan</span><span class=\"p\">)</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">readall</span> <span class=\"n\">time</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Sub</span><span class=\"p\">(</span><span class=\"n\">stime</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Seconds</span><span class=\"p\">())</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">total</span> <span class=\"n\">lines</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">wc</span><span class=\"p\">)</span>\n    <span class=\"p\">}()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">scanner</span><span class=\"o\">.</span><span class=\"n\">Err</span><span class=\"p\">();</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Fprintln</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Stderr</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">reading</span> <span class=\"n\">standard</span> <span class=\"n\">input</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">go</span> <span class=\"n\">findSpecial</span><span class=\"p\">()</span>\n    <span class=\"k\">go</span> <span class=\"n\">finishDecode</span><span class=\"p\">()</span>\n    <span class=\"k\">go</span> <span class=\"n\">output</span><span class=\"p\">()</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">complete</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">findSpecial</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"n\">concurrency</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n        <span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n            <span class=\"k\">for</span> <span class=\"n\">log</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">logsChan</span> <span class=\"p\">{</span>\n                <span class=\"k\">if</span> <span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"n\">Index</span><span class=\"p\">(</span><span class=\"n\">log</span><span class=\"p\">,</span> <span class=\"n\">keyWord</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"o\">-</span><span class=\"m\">1</span> <span class=\"p\">{</span>\n                    <span class=\"n\">workQueue</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"n\">log</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n            <span class=\"n\">completeDecodeJson</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"no\">true</span>\n        <span class=\"p\">}()</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">finishDecode</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"n\">concurrency</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n        <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">completeDecodeJson</span>\n    <span class=\"p\">}</span>\n    <span class=\"nb\">close</span><span class=\"p\">(</span><span class=\"n\">workQueue</span><span class=\"p\">)</span> <span class=\"c\">//无长度的channel必须关闭后，workQueue才能结束</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">deceode</span> <span class=\"n\">time</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Sub</span><span class=\"p\">(</span><span class=\"n\">stime</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Seconds</span><span class=\"p\">())</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">output</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">workQueue</span> <span class=\"p\">{</span>\n        <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">Write</span><span class=\"p\">(</span><span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">[</span><span class=\"m\">20</span><span class=\"o\">:</span><span class=\"p\">],</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span><span class=\"p\">{</span><span class=\"m\">0xa</span><span class=\"p\">}</span><span class=\"o\">...</span><span class=\"p\">))</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">Flush</span><span class=\"p\">()</span>\n    <span class=\"n\">complete</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"no\">true</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">check</span><span class=\"p\">(</span><span class=\"n\">e</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"n\">e</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"nb\">panic</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">TimeoutWarning</span><span class=\"p\">(</span><span class=\"n\">tag</span> <span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"n\">start</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Time</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">dis</span> <span class=\"o\">:=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Sub</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Seconds</span><span class=\"p\">()</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">tag</span><span class=\"p\">,</span> <span class=\"n\">dis</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 649,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 518,
    "title": "程序怎么判断windows的隐藏文件/文件夹？",
    "created_at": "2016-12-22 20:32:02",
    "updated_at": "2016-12-23 10:53:15",
    "replied_at": "2016-12-23 10:48:16",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 636,
    "last_reply_user_login": "stevewang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 845,
    "user": "{\"id\": 845, \"name\": \"voidint\", \"login\": \"voidint\", \"avatar\": \"https://static.gocn.vip/user/avatar/845/a0dbfd.jpg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "拿到一个路径，怎么判断这个路径是不是一个隐藏文件或者文件夹呢？有没有好的办法？",
    "body_html": "<p>拿到一个路径，怎么判断这个路径是不是一个隐藏文件或者文件夹呢？有没有好的办法？</p>",
    "hits": 504,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 519,
    "title": "程序怎么判断一个go源文件中是否有main函数？",
    "created_at": "2016-12-22 20:55:09",
    "updated_at": "2016-12-23 10:58:21",
    "replied_at": "2016-12-23 10:58:21",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 238,
    "last_reply_user_login": "kevin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 845,
    "user": "{\"id\": 845, \"name\": \"voidint\", \"login\": \"voidint\", \"avatar\": \"https://static.gocn.vip/user/avatar/845/a0dbfd.jpg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "程序怎么判断一个go源文件中是否有`main`函数？考虑可能是注释",
    "body_html": "<p>程序怎么判断一个 go 源文件中是否有<code>main</code>函数？考虑可能是注释</p>",
    "hits": 464,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 520,
    "title": "golang写的web application 怎么优雅的更新？",
    "created_at": "2016-12-23 09:56:45",
    "updated_at": "2017-06-29 13:26:30",
    "replied_at": "2017-06-29 13:26:30",
    "replies_count": 8,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 379,
    "last_reply_user_login": "maxwell92",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1484,
    "user": "{\"id\": 1484, \"name\": \"小浩\", \"login\": \"gyln163\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "像php这种解释型语言开发的web application ，更新代码的时候都是直接push就可以了，不会中断服务，但是像golang这种编译型的语言更新完代码还要编译\n\n### 我的问题是怎么在不中断服务的前提下更新golang web application？通常的做法有哪些？还请各位不吝赐教",
    "body_html": "<p>像 php 这种解释型语言开发的 web application ，更新代码的时候都是直接 push 就可以了，不会中断服务，但是像 golang 这种编译型的语言更新完代码还要编译</p>\n<h3 id=\"我的问题是怎么在不中断服务的前提下更新golang web application？通常的做法有哪些？还请各位不吝赐教\">我的问题是怎么在不中断服务的前提下更新 golang web application？通常的做法有哪些？还请各位不吝赐教</h3>",
    "hits": 508,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 521,
    "title": "Machine Learning with go",
    "created_at": "2016-12-23 13:44:32",
    "updated_at": "2016-12-23 13:44:32",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1353,
    "user": "{\"id\": 1353, \"name\": \"songtianyi\", \"login\": \"songtianyi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "介绍下自己刚完成的项目 [go-mxnet-predictor](https://github.com/songtianyi/go-mxnet-predictor &quot;go-mxnet-predictor&quot;)\n\n用go和mxnet来做inference，已被mxnet官方引用。\ngo在机器学习方面的项目非常匮乏，感兴趣的可以联系我，一起做些微小的贡献:)",
    "body_html": "<p>介绍下自己刚完成的项目 <a href=\"https://github.com/songtianyi/go-mxnet-predictor%20%22go-mxnet-predictor%22\" title=\"\">go-mxnet-predictor</a></p>\n\n<p>用 go 和 mxnet 来做 inference，已被 mxnet 官方引用。\ngo 在机器学习方面的项目非常匮乏，感兴趣的可以联系我，一起做些微小的贡献:)</p>",
    "hits": 241,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 522,
    "title": "golang 有哪些库可以做摄像头/视频人脸识别的？",
    "created_at": "2016-12-23 13:54:32",
    "updated_at": "2017-12-01 19:33:25",
    "replied_at": "2017-12-01 19:33:25",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1221,
    "last_reply_user_login": "Anjie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 40,
    "user": "{\"id\": 40, \"name\": \"SoloMagic\", \"login\": \"SoloMagic\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题 麻烦推荐下 谢谢",
    "body_html": "<p>如题 麻烦推荐下 谢谢</p>",
    "hits": 395,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 523,
    "title": "请问这种写法在golang里叫什么设计模式？",
    "created_at": "2016-12-23 15:39:32",
    "updated_at": "2016-12-25 15:19:37",
    "replied_at": "2016-12-25 15:19:37",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 96,
    "last_reply_user_login": "sheepbao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 135,
    "user": "{\"id\": 135, \"name\": \"frank\", \"login\": \"frank\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\npackage main\n\nimport &quot;fmt&quot;\n\ntype TestFunc func(*Bar, string)\n\ntype Bar struct {\n\tName  string\n\tAlias string\n}\n\nfunc (t *Bar) SetName(name string) {\n\tt.Name = name\n\tfmt.Println(&quot;Name:&quot;, t.Name)\n}\n\nfunc (t *Bar) SetAlias(alias string) {\n\tt.Alias = alias\n\tfmt.Println(&quot;Alias:&quot;, t.Alias)\n}\n\ntype Foo struct {\n\tf TestFunc\n}\n\nfunc main() {\n\tfoo := new(Foo)\n\tbar := new(Bar)\n\tfoo.f = (*Bar).SetName\n\tfoo.f(bar, &quot;LeBron Raymone James&quot;)\n\tfoo.f = (*Bar).SetAlias\n\tfoo.f(bar, &quot;King&quot;)\n}\n\n```",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n<span class=\"k\">type</span> <span class=\"n\">TestFunc</span> <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Bar</span><span class=\"p\">,</span> <span class=\"kt\">string</span><span class=\"p\">)</span>\n\n<span class=\"k\">type</span> <span class=\"n\">Bar</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Name</span>  <span class=\"kt\">string</span>\n    <span class=\"n\">Alias</span> <span class=\"kt\">string</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">*</span><span class=\"n\">Bar</span><span class=\"p\">)</span> <span class=\"n\">SetName</span><span class=\"p\">(</span><span class=\"n\">name</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">Name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Name</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">*</span><span class=\"n\">Bar</span><span class=\"p\">)</span> <span class=\"n\">SetAlias</span><span class=\"p\">(</span><span class=\"n\">alias</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">Alias</span> <span class=\"o\">=</span> <span class=\"n\">alias</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Alias</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">Alias</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">type</span> <span class=\"n\">Foo</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">f</span> <span class=\"n\">TestFunc</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">foo</span> <span class=\"o\">:=</span> <span class=\"nb\">new</span><span class=\"p\">(</span><span class=\"n\">Foo</span><span class=\"p\">)</span>\n    <span class=\"n\">bar</span> <span class=\"o\">:=</span> <span class=\"nb\">new</span><span class=\"p\">(</span><span class=\"n\">Bar</span><span class=\"p\">)</span>\n    <span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Bar</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">SetName</span>\n    <span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">bar</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">LeBron</span> <span class=\"n\">Raymone</span> <span class=\"n\">James</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Bar</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">SetAlias</span>\n    <span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">bar</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">King</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">}</span>\n\n</code></pre> ",
    "hits": 511,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 524,
    "title": "glide 如果获取github上最新的代码？",
    "created_at": "2016-12-23 23:24:29",
    "updated_at": "2016-12-24 23:41:53",
    "replied_at": "2016-12-24 23:41:53",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 382,
    "last_reply_user_login": "simeon",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 382,
    "user": "{\"id\": 382, \"name\": \"simeon\", \"login\": \"simeon\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我要依赖`github.com/hoisie/web`, 使用命令 `glide get github.com/hoisie/web`, 这样获取的是`release`的版本，然而`release`版本是在10年发布的，有些代码以不可用，比如`request.go`中引入的`utf8`, `http`",
    "body_html": "<p>我要依赖<code>github.com/hoisie/web</code>, 使用命令 <code>glide get github.com/hoisie/web</code>, 这样获取的是<code>release</code>的版本，然而<code>release</code>版本是在 10 年发布的，有些代码以不可用，比如<code>request.go</code>中引入的<code>utf8</code>, <code>http</code></p>",
    "hits": 314,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 525,
    "title": "go如何抓js渲染的网页",
    "created_at": "2016-12-24 06:47:01",
    "updated_at": "2016-12-24 08:33:03",
    "replied_at": "2016-12-24 08:31:22",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1344,
    "last_reply_user_login": "皇虫",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "rt",
    "body_html": "<p>rt</p>",
    "hits": 410,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 526,
    "title": "go根据字符动态设置结构体字段名--hprose rpc应用",
    "created_at": "2016-12-24 09:21:19",
    "updated_at": "2016-12-24 16:31:13",
    "replied_at": "2016-12-24 16:21:21",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1410,
    "last_reply_user_login": "fanyang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1410,
    "user": "{\"id\": 1410, \"name\": \"fanyang\", \"login\": \"fanyang\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\n问题的由来RPC\n\n//服务端设置\ntype TestServer struct{\n}\nfunc (t *TestServer) Foo (data map[string]interface{})string{\n\t//do thing...\n}\nfunc (t *TestServer) Bar (data map[string]interface{})string{\n\t//do thing...\n}\nvar test *TestServer\nsrv.AddAllMethods(test) //srv type is *rpc.TCPServer\n\n//客户端调用\ntype Test struct{\n   ?? func(map[string]interface{}) string\n}\nvar test *Test\nclient := rpc.NewClient(&quot;ip&quot;)\nclient.UseService(&amp;test)\n\ntest . ?? ( data ) //data type is map\n\n?? 可能是Foo或者Bar，根据前端传递字符而定，如何动态生成这样的结构体字段并调用？\n\n\n\n```",
    "body_html": "<pre class=\"highlight go\"><code><span class=\"n\">问题的由来RPC</span>\n\n<span class=\"c\">//服务端设置</span>\n<span class=\"k\">type</span> <span class=\"n\">TestServer</span> <span class=\"k\">struct</span><span class=\"p\">{</span>\n<span class=\"p\">}</span>\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">*</span><span class=\"n\">TestServer</span><span class=\"p\">)</span> <span class=\"n\">Foo</span> <span class=\"p\">(</span><span class=\"n\">data</span> <span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"k\">interface</span><span class=\"p\">{})</span><span class=\"kt\">string</span><span class=\"p\">{</span>\n    <span class=\"c\">//do thing...</span>\n<span class=\"p\">}</span>\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">*</span><span class=\"n\">TestServer</span><span class=\"p\">)</span> <span class=\"n\">Bar</span> <span class=\"p\">(</span><span class=\"n\">data</span> <span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"k\">interface</span><span class=\"p\">{})</span><span class=\"kt\">string</span><span class=\"p\">{</span>\n    <span class=\"c\">//do thing...</span>\n<span class=\"p\">}</span>\n<span class=\"k\">var</span> <span class=\"n\">test</span> <span class=\"o\">*</span><span class=\"n\">TestServer</span>\n<span class=\"n\">srv</span><span class=\"o\">.</span><span class=\"n\">AddAllMethods</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">)</span> <span class=\"c\">//srv type is *rpc.TCPServer</span>\n\n<span class=\"c\">//客户端调用</span>\n<span class=\"k\">type</span> <span class=\"n\">Test</span> <span class=\"k\">struct</span><span class=\"p\">{</span>\n   <span class=\"err\">??</span> <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"k\">interface</span><span class=\"p\">{})</span> <span class=\"kt\">string</span>\n<span class=\"p\">}</span>\n<span class=\"k\">var</span> <span class=\"n\">test</span> <span class=\"o\">*</span><span class=\"n\">Test</span>\n<span class=\"n\">client</span> <span class=\"o\">:=</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">NewClient</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">ip</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">UseService</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">test</span><span class=\"p\">)</span>\n\n<span class=\"n\">test</span> <span class=\"o\">.</span> <span class=\"err\">??</span> <span class=\"p\">(</span> <span class=\"n\">data</span> <span class=\"p\">)</span> <span class=\"c\">//data type is map</span>\n\n<span class=\"err\">??</span> <span class=\"n\">可能是Foo或者Bar</span><span class=\"err\">，</span><span class=\"n\">根据前端传递字符而定</span><span class=\"err\">，</span><span class=\"n\">如何动态生成这样的结构体字段并调用</span><span class=\"err\">？</span>\n\n\n\n</code></pre>",
    "hits": 544,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 527,
    "title": "有人用 go 实现过微信 token 中控服务么？",
    "created_at": "2016-12-24 12:52:33",
    "updated_at": "2016-12-24 12:52:33",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1486,
    "user": "{\"id\": 1486, \"name\": \"slene\", \"login\": \"slene\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140183&amp;token=&amp;lang=zh_CN\n\n高可用，分布式，可授权多个账户的，可授权 ticket（jssdk，card_ticket），支持客户端检测失效到服务端主动刷新...\n懒一下，先到社区问下路 :)\n",
    "body_html": "<p><a href=\"https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;ampid=mp1421140183&amp;amptoken=&amp;amplang=zh_CN\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;ampid=mp1421140183&amp;amptoken=&amp;amplang=zh_CN</a>;</p>\n\n<p>高可用，分布式，可授权多个账户的，可授权 ticket（jssdk，card_ticket），支持客户端检测失效到服务端主动刷新...\n懒一下，先到社区问下路 :)</p>",
    "hits": 166,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 528,
    "title": "Office 文档转 pdf，再通过 pdf.js 实现文档在线浏览",
    "created_at": "2016-12-25 09:16:40",
    "updated_at": "2020-02-11 23:58:34",
    "replied_at": "2016-12-27 18:24:51",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2,
    "last_reply_user_login": "itfanr",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1344,
    "user": "{\"id\": 1344, \"name\": \"皇虫\", \"login\": \"1272881215\", \"avatar\": \"https://static.gocn.vip/user/avatar/1344/6acfae.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "使用LibreOffice或者openoffice进行文档转换\r\n\r\n\r\n转化命令：\r\n\r\n```\r\nsoffice --headless --invisible --convert-to pdf xxOffice文档\r\n```\r\n\r\n上述转化命令，会把你的文档在当前目录下生成一个PDF文件，如你需要转化的文档是hello.txt，则会在当前目录下生成hello.pdf，如需指定生成文件的存放目录，请使用--outdir\r\n\r\nopenoffice的也是差不多的转化命令.\r\n\r\n更多参数，请使用soffice --help或者libreoffice --help进行了解\r\n\r\nUbuntu下libreoffice的安装\r\nhttp://www.hc-cms.com/forum.php?mod=viewthread&amp;tid=11&amp;fromuid=1\r\n\r\n建议使用Ubuntu安装Libreoffice，因为这样可以直接使用apt-get进行安装，方便快捷。起初本人使用centos安装Libreoffice和openoffice，结果很麻烦，各种依赖各种报错，百度和谷歌都找不到什么比较正确的靠谱的解决办法。\r\n\r\n有了命令行转化之后，再调用go语言的exec.Command\r\n\r\n以上是Linux下的解决方案，Windows下的解决方案，请看这个问题下谢大的答案：https://gocn.vip/topics/511\r\n\r\n不过好像有的office文档转成pdf文档之后，文档的文字等布局会有些错乱。\r\n\r\n\r\n",
    "body_html": "<p>使用 LibreOffice 或者 openoffice 进行文档转换</p>\n\n<p>转化命令：</p>\n <pre class=\"highlight plaintext\"><code>soffice --headless --invisible --convert-to pdf xxOffice文档\n</code></pre> \n<p>上述转化命令，会把你的文档在当前目录下生成一个 PDF 文件，如你需要转化的文档是 hello.txt，则会在当前目录下生成 hello.pdf，如需指定生成文件的存放目录，请使用--outdir</p>\n\n<p>openoffice 的也是差不多的转化命令.</p>\n\n<p>更多参数，请使用 soffice --help 或者 libreoffice --help 进行了解</p>\n\n<p>Ubuntu 下 libreoffice 的安装\n<a href=\"http://www.hc-cms.com/forum.php?mod=viewthread&amp;amptid=11&amp;ampfromuid=1\" rel=\"nofollow\" target=\"_blank\">http://www.hc-cms.com/forum.php?mod=viewthread&amp;amptid=11&amp;ampfromuid=1</a>;</p>\n\n<p>建议使用 Ubuntu 安装 Libreoffice，因为这样可以直接使用 apt-get 进行安装，方便快捷。起初本人使用 centos 安装 Libreoffice 和 openoffice，结果很麻烦，各种依赖各种报错，百度和谷歌都找不到什么比较正确的靠谱的解决办法。</p>\n\n<p>有了命令行转化之后，再调用 go 语言的 exec.Command</p>\n\n<p>以上是 Linux 下的解决方案，Windows 下的解决方案，请看这个问题下谢大的答案：<a href=\"https://gocn.vip/topics/511\" rel=\"nofollow\" target=\"_blank\">https://gocn.vip/topics/511</a></p>\n\n<p>不过好像有的 office 文档转成 pdf 文档之后，文档的文字等布局会有些错乱。</p>",
    "hits": 518,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 529,
    "title": "golang如何处理socket消息的超时重发",
    "created_at": "2016-12-26 14:29:58",
    "updated_at": "2016-12-27 16:03:41",
    "replied_at": "2016-12-27 16:03:31",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1401,
    "last_reply_user_login": "iframe",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1401,
    "user": "{\"id\": 1401, \"name\": \"iframe\", \"login\": \"iframe\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "使用go作client端发送消息，如果server端没有及时回应答，过一段时间后就要进行消息重发，重发3次后如果还没有收到应答，则将消息释放或者写入文件。\n\n请问使用golang如何实现？",
    "body_html": "<p>使用 go 作 client 端发送消息，如果 server 端没有及时回应答，过一段时间后就要进行消息重发，重发 3 次后如果还没有收到应答，则将消息释放或者写入文件。</p>\n\n<p>请问使用 golang 如何实现？</p>",
    "hits": 495,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 530,
    "title": "json解析bool",
    "created_at": "2016-12-26 17:06:13",
    "updated_at": "2016-12-27 17:50:07",
    "replied_at": "2016-12-27 17:50:07",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1347,
    "last_reply_user_login": "lotus",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "解析json到struct的对应的bool字段，如果判断json里面这个字段是为空还是false\n\n```\ntype A struct{\n    B Bool   `json:&quot;b&quot;`\n}\n```\n\n定义了上面的结构体，现在要解析下面的两个字符串到A里面：\n\n```\n// 解析字符串\nd1:=`{&quot;b&quot;:false}`\nd2:=`{}`\n```\n\n如果判断d2没有带bool",
    "body_html": "<p>解析 json 到 struct 的对应的 bool 字段，如果判断 json 里面这个字段是为空还是 false</p>\n <pre class=\"highlight plaintext\"><code>type A struct{\n    B Bool   `json:&amp;quot;b&amp;quot;`\n}\n</code></pre> \n<p>定义了上面的结构体，现在要解析下面的两个字符串到 A 里面：</p>\n <pre class=\"highlight plaintext\"><code>// 解析字符串\nd1:=`{&amp;quot;b&amp;quot;:false}`\nd2:=`{}`\n</code></pre> \n<p>如果判断 d2 没有带 bool</p>",
    "hits": 517,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 531,
    "title": "bufio.ReadSlice",
    "created_at": "2016-12-27 11:23:15",
    "updated_at": "2016-12-27 17:58:48",
    "replied_at": "2016-12-27 17:58:48",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 636,
    "last_reply_user_login": "stevewang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1056,
    "user": "{\"id\": 1056, \"name\": \"lifesohard\", \"login\": \"lifesohard\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\n\tfile,_ := os.Open(&quot;a.html&quot;)\n\tdefer file.Close()\n\tbuf := bufio.NewReader(file)\n\tl,_ := buf.ReadSlice('\\n')\n\tfmt.Println(string(l))\n\tbuf.ReadSlice('\\n')\n\tfmt.Println(string(l))\n\t/*\n\t\thi i am lisa\n\t\thi i am lisa\n\t*/\n\n\tbuf2 := bufio.NewReader(strings.NewReader(&quot;hi i am lisa \\r who are you&quot;))\n\tj,_ := buf2.ReadSlice('\\r')\n\tfmt.Println(string(j))\n\tbuf2.ReadSlice('\\r')\n\tfmt.Println(string(j))\n\t/*\n\t\thi i am lisa\n\t\twho are you\n\t*/\n```\n```go\na.html(windows)\nhi i am lisa\nwho are you\n```\n为什么 上面的调用ReadSlice l的值没有改变",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"n\">file</span><span class=\"p\">,</span><span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">html</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"k\">defer</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n<span class=\"n\">buf</span> <span class=\"o\">:=</span> <span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"n\">NewReader</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">)</span>\n<span class=\"n\">l</span><span class=\"p\">,</span><span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">buf</span><span class=\"o\">.</span><span class=\"n\">ReadSlice</span><span class=\"p\">(</span><span class=\"sc\">'\\n'</span><span class=\"p\">)</span>\n<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">))</span>\n<span class=\"n\">buf</span><span class=\"o\">.</span><span class=\"n\">ReadSlice</span><span class=\"p\">(</span><span class=\"sc\">'\\n'</span><span class=\"p\">)</span>\n<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">))</span>\n<span class=\"c\">/*\n    hi i am lisa\n    hi i am lisa\n*/</span>\n\n<span class=\"n\">buf2</span> <span class=\"o\">:=</span> <span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"n\">NewReader</span><span class=\"p\">(</span><span class=\"n\">strings</span><span class=\"o\">.</span><span class=\"n\">NewReader</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">hi</span> <span class=\"n\">i</span> <span class=\"n\">am</span> <span class=\"n\">lisa</span> <span class=\"err\">\\</span><span class=\"n\">r</span> <span class=\"n\">who</span> <span class=\"n\">are</span> <span class=\"n\">you</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;))</span>\n<span class=\"n\">j</span><span class=\"p\">,</span><span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">buf2</span><span class=\"o\">.</span><span class=\"n\">ReadSlice</span><span class=\"p\">(</span><span class=\"sc\">'\\r'</span><span class=\"p\">)</span>\n<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"p\">))</span>\n<span class=\"n\">buf2</span><span class=\"o\">.</span><span class=\"n\">ReadSlice</span><span class=\"p\">(</span><span class=\"sc\">'\\r'</span><span class=\"p\">)</span>\n<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"p\">))</span>\n<span class=\"c\">/*\n    hi i am lisa\n    who are you\n*/</span>\n</code></pre>  <pre class=\"highlight go\"><code><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">html</span><span class=\"p\">(</span><span class=\"n\">windows</span><span class=\"p\">)</span>\n<span class=\"n\">hi</span> <span class=\"n\">i</span> <span class=\"n\">am</span> <span class=\"n\">lisa</span>\n<span class=\"n\">who</span> <span class=\"n\">are</span> <span class=\"n\">you</span>\n</code></pre> \n<p>为什么 上面的调用 ReadSlice l 的值没有改变</p>",
    "hits": 502,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 532,
    "title": "Go能否远程加载一个二进制插件运行？",
    "created_at": "2016-12-27 13:24:37",
    "updated_at": "2016-12-27 13:35:25",
    "replied_at": "2016-12-27 13:35:25",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 636,
    "last_reply_user_login": "stevewang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 962,
    "user": "{\"id\": 962, \"name\": \"codinghxl\", \"login\": \"codinghxl\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Go能否远程加载一个已经编译好的二进制程序到内存运行，类似java的remoteLoadClass功能",
    "body_html": "<p>Go 能否远程加载一个已经编译好的二进制程序到内存运行，类似 java 的 remoteLoadClass 功能</p>",
    "hits": 290,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 533,
    "title": "golang如何处理socket发送和接收？",
    "created_at": "2016-12-27 16:08:15",
    "updated_at": "2016-12-27 17:16:41",
    "replied_at": "2016-12-27 17:16:41",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1401,
    "last_reply_user_login": "iframe",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1401,
    "user": "{\"id\": 1401, \"name\": \"iframe\", \"login\": \"iframe\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "以前用c写，起3个线程，然后分别建立发送和接收线程\n\n一个单独处理发送，一个单独处理接收，一个负责消息过期\n\n请问golang处理发送和接收有没有比较成熟的案例，都是什么套路？\n\n刚开始用go，请各位指教。\n\n",
    "body_html": "<p>以前用 c 写，起 3 个线程，然后分别建立发送和接收线程</p>\n\n<p>一个单独处理发送，一个单独处理接收，一个负责消息过期</p>\n\n<p>请问 golang 处理发送和接收有没有比较成熟的案例，都是什么套路？</p>\n\n<p>刚开始用 go，请各位指教。</p>",
    "hits": 498,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 534,
    "title": "话题主页，“我关注的话题”未显示",
    "created_at": "2016-12-27 19:44:39",
    "updated_at": "2016-12-27 19:44:39",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1495,
    "user": "{\"id\": 1495, \"name\": \"jinnblue\", \"login\": \"jinnblue\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "感觉“我关注的话题”，能像“新增话题”一样列出更好，方便查看。\n否则每次还要点到新页面查找，太过麻烦了。",
    "body_html": "<p>感觉 “我关注的话题”，能像 “新增话题” 一样列出更好，方便查看。\n否则每次还要点到新页面查找，太过麻烦了。</p>",
    "hits": 141,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 535,
    "title": "go有什么代码片段网站么？拿来就用",
    "created_at": "2016-12-28 04:08:46",
    "updated_at": "2017-01-02 12:08:34",
    "replied_at": "2017-01-02 12:08:34",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 193,
    "last_reply_user_login": "philosophia14",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "程序其实都差不多，有片段方便很多",
    "body_html": "<p>程序其实都差不多，有片段方便很多</p>",
    "hits": 355,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 536,
    "title": "go tcp怎么搞",
    "created_at": "2016-12-28 10:39:58",
    "updated_at": "2016-12-29 12:48:02",
    "replied_at": "2016-12-29 12:48:02",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1353,
    "last_reply_user_login": "songtianyi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1494,
    "user": "{\"id\": 1494, \"name\": \"stirlingx\", \"login\": \"stirlingx\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "初步想法是起三个goroutine，一个接收数据，一个处理数据，一个发送数据。\n接收数据和发送数据用ring buffer，这个想法可以吗，有没有好的开源项目参考",
    "body_html": "<p>初步想法是起三个 goroutine，一个接收数据，一个处理数据，一个发送数据。\n接收数据和发送数据用 ring buffer，这个想法可以吗，有没有好的开源项目参考</p>",
    "hits": 331,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 537,
    "title": "大文件上传",
    "created_at": "2016-12-28 16:10:47",
    "updated_at": "2017-01-04 10:51:25",
    "replied_at": "2017-01-04 10:51:25",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1253,
    "last_reply_user_login": "liushuchun",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 45,
    "user": "{\"id\": 45, \"name\": \"小张的烦恼\", \"login\": \"zhangyumingtfr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "那个我现在要上传一个很大的文件，逐行读取，然后记住读取到了哪里，先把读取的内容入库，然后再接着从这里开始读取，以前从来没做过，完全没有头绪，请各位大神指导！！！谢谢？？",
    "body_html": "<p>那个我现在要上传一个很大的文件，逐行读取，然后记住读取到了哪里，先把读取的内容入库，然后再接着从这里开始读取，以前从来没做过，完全没有头绪，请各位大神指导！！！谢谢？？</p>",
    "hits": 474,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 538,
    "title": "beego.me访问还是很慢，经常打不开，通过Shadowsocks",
    "created_at": "2016-12-29 11:25:13",
    "updated_at": "2021-01-16 21:40:42",
    "replied_at": "2017-01-04 11:38:30",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1516,
    "last_reply_user_login": "不灭的焱",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 453,
    "user": "{\"id\": 453, \"name\": \"everwhat\", \"login\": \"everwhat\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 328,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 539,
    "title": "beego有防止页面重复提交的功能吗",
    "created_at": "2016-12-29 14:26:56",
    "updated_at": "2021-01-16 21:40:40",
    "replied_at": "2017-01-04 22:01:19",
    "replies_count": 5,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 817,
    "last_reply_user_login": "pathbox",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 915,
    "user": "{\"id\": 915, \"name\": \"alexkkk\", \"login\": \"alexkkk\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "RT",
    "body_html": "<p>RT</p>",
    "hits": 453,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 540,
    "title": "Golang CPU pprof 生成的文件无法解析",
    "created_at": "2016-12-29 15:36:30",
    "updated_at": "2016-12-30 11:24:06",
    "replied_at": "2016-12-30 11:24:06",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 124,
    "user": "{\"id\": 124, \"name\": \"mnhkahn\", \"login\": \"mnhkahn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "通过beego的admin后台生成的文件，包括自己runtime写的生成的都试了一下，下载下来解析不了，大家遇到过么？\n\n```go\nparsing profile: unrecognized profile format\n```\n\n```go\nfunc Profile(w http.ResponseWriter, r *http.Request) {\n\t// sec, _ := strconv.ParseInt(r.FormValue(&quot;seconds&quot;), 10, 64)\n\tsec, _ := strconv.ParseInt(r.URL.Query().Get(&quot;seconds&quot;), 10, 64)\n\tif sec == 0 {\n\t\tsec = 30\n\t}\n\n\tfilename := &quot;cpu-&quot; + strconv.Itoa(pid) + &quot;.pprof&quot;\n\n\tgo profile(filename, sec)\n\n\tfmt.Fprintf(w, &quot;create cpu profile %s \\n&quot;, filename)\n\t_, fl := path.Split(os.Args[0])\n\tfmt.Fprintf(w, &quot;After %d second you can use this to check it: go tool pprof %s %s\\n&quot;, sec, fl, filename)\n}\n\nfunc profile(filename string, sec int64) {\n\n\tbeego.Info(&quot;Start Pprof CPU&quot;)\n\tf, err := os.Create(filename)\n\tif err != nil {\n\t\tfmt.Fprintf(os.Stderr, &quot;Could not enable CPU profiling: %s\\n&quot;, err)\n\t}\n\n\tif err := pprof.StartCPUProfile(f); err != nil {\n\t\tfmt.Fprintf(os.Stderr, &quot;Could not enable CPU profiling: %s\\n&quot;, err)\n\t\treturn\n\t}\n\ttime.Sleep(time.Duration(sec) * time.Second)\n\tpprof.StopCPUProfile()\n\n\tbeego.Info(&quot;End pprof CPU&quot;)\n}\n\n```\n\n",
    "body_html": "<p>通过 beego 的 admin 后台生成的文件，包括自己 runtime 写的生成的都试了一下，下载下来解析不了，大家遇到过么？</p>\n <pre class=\"highlight go\"><code><span class=\"n\">parsing</span> <span class=\"n\">profile</span><span class=\"o\">:</span> <span class=\"n\">unrecognized</span> <span class=\"n\">profile</span> <span class=\"n\">format</span>\n</code></pre>  <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">Profile</span><span class=\"p\">(</span><span class=\"n\">w</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">ResponseWriter</span><span class=\"p\">,</span> <span class=\"n\">r</span> <span class=\"o\">*</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Request</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c\">// sec, _ := strconv.ParseInt(r.FormValue(&amp;quot;seconds&amp;quot;), 10, 64)</span>\n    <span class=\"n\">sec</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">strconv</span><span class=\"o\">.</span><span class=\"n\">ParseInt</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">URL</span><span class=\"o\">.</span><span class=\"n\">Query</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">seconds</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;),</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"m\">64</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">sec</span> <span class=\"o\">==</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n        <span class=\"n\">sec</span> <span class=\"o\">=</span> <span class=\"m\">30</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">filename</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">cpu</span><span class=\"o\">-&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"o\">+</span> <span class=\"n\">strconv</span><span class=\"o\">.</span><span class=\"n\">Itoa</span><span class=\"p\">(</span><span class=\"n\">pid</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">.</span><span class=\"n\">pprof</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n    <span class=\"k\">go</span> <span class=\"n\">profile</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">sec</span><span class=\"p\">)</span>\n\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Fprintf</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">create</span> <span class=\"n\">cpu</span> <span class=\"n\">profile</span> <span class=\"o\">%</span><span class=\"n\">s</span> <span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">filename</span><span class=\"p\">)</span>\n    <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">fl</span> <span class=\"o\">:=</span> <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">Split</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Args</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">])</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Fprintf</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">After</span> <span class=\"o\">%</span><span class=\"n\">d</span> <span class=\"n\">second</span> <span class=\"n\">you</span> <span class=\"n\">can</span> <span class=\"n\">use</span> <span class=\"n\">this</span> <span class=\"n\">to</span> <span class=\"n\">check</span> <span class=\"n\">it</span><span class=\"o\">:</span> <span class=\"k\">go</span> <span class=\"n\">tool</span> <span class=\"n\">pprof</span> <span class=\"o\">%</span><span class=\"n\">s</span> <span class=\"o\">%</span><span class=\"n\">s</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">sec</span><span class=\"p\">,</span> <span class=\"n\">fl</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">profile</span><span class=\"p\">(</span><span class=\"n\">filename</span> <span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"n\">sec</span> <span class=\"kt\">int64</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n    <span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">Info</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Start</span> <span class=\"n\">Pprof</span> <span class=\"n\">CPU</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Fprintf</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Stderr</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Could</span> <span class=\"n\">not</span> <span class=\"n\">enable</span> <span class=\"n\">CPU</span> <span class=\"n\">profiling</span><span class=\"o\">:</span> <span class=\"o\">%</span><span class=\"n\">s</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">pprof</span><span class=\"o\">.</span><span class=\"n\">StartCPUProfile</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">);</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Fprintf</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Stderr</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Could</span> <span class=\"n\">not</span> <span class=\"n\">enable</span> <span class=\"n\">CPU</span> <span class=\"n\">profiling</span><span class=\"o\">:</span> <span class=\"o\">%</span><span class=\"n\">s</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Duration</span><span class=\"p\">(</span><span class=\"n\">sec</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"p\">)</span>\n    <span class=\"n\">pprof</span><span class=\"o\">.</span><span class=\"n\">StopCPUProfile</span><span class=\"p\">()</span>\n\n    <span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">Info</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">End</span> <span class=\"n\">pprof</span> <span class=\"n\">CPU</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">}</span>\n\n</code></pre> ",
    "hits": 518,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 541,
    "title": "代码编写规范",
    "created_at": "2016-12-29 17:27:46",
    "updated_at": "2016-12-30 08:47:36",
    "replied_at": "2016-12-30 08:47:36",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 45,
    "last_reply_user_login": "小张的烦恼",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 45,
    "user": "{\"id\": 45, \"name\": \"小张的烦恼\", \"login\": \"zhangyumingtfr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "上学时，老师说代码规范很重要，我想求一篇关于golang或者beego的代码书写规范，最好全面一点，（看源码有点抓不住重点），谢谢各位！！",
    "body_html": "<p>上学时，老师说代码规范很重要，我想求一篇关于 golang 或者 beego 的代码书写规范，最好全面一点，（看源码有点抓不住重点），谢谢各位！！</p>",
    "hits": 474,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 542,
    "title": "mgo session 连接返回的不是此节点的信息，为什么？",
    "created_at": "2016-12-29 18:06:43",
    "updated_at": "2016-12-29 19:11:44",
    "replied_at": "2016-12-29 19:11:44",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1497,
    "last_reply_user_login": "marbleble",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1497,
    "user": "{\"id\": 1497, \"name\": \"marbleble\", \"login\": \"marbleble\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "\n就是用serverStatus命令去查询某个mongo节点的角色状态（主，从），但是有的时候返回的并不是这个节点的信息，而是其他节点的信息。\n下面是代码：\n        host := c.String(&quot;host&quot;)\n        port := c.String(&quot;port&quot;)\n        session, err := mgo.Dial(fmt.Sprintf(&quot;mongodb://%s:%s&quot;, host, port))\n        if err != nil {\n                return err\n        }\n        defer session.Close()\n\n        response := bson.M{}\n        session.SetMode(mgo.Eventual, true)\n        session.Run(&quot;serverStatus&quot;, response)\n\n我的session Mode不对吗？还是怎么回事？",
    "body_html": "<p>就是用 serverStatus 命令去查询某个 mongo 节点的角色状态（主，从），但是有的时候返回的并不是这个节点的信息，而是其他节点的信息。\n下面是代码：\n        host := c.String(\"host\")\n        port := c.String(\"port\")\n        session, err := mgo.Dial(fmt.Sprintf(\"mongodb://%s:%s\", host, port))\n        if err != nil {\n                return err\n        }\n        defer session.Close()</p>\n\n<p>response := bson.M{}\n        session.SetMode(mgo.Eventual, true)\n        session.Run(\"serverStatus\", response)</p>\n\n<p>我的 session Mode 不对吗？还是怎么回事？</p>",
    "hits": 168,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 543,
    "title": "如何通过反射获得一个类型的底层类型",
    "created_at": "2016-12-30 19:30:02",
    "updated_at": "2016-12-30 20:01:13",
    "replied_at": "2016-12-30 20:01:13",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 636,
    "last_reply_user_login": "stevewang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1242,
    "user": "{\"id\": 1242, \"name\": \"cookies\", \"login\": \"cookies\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "package main\n\nimport &quot;reflect&quot;\n\ntype Myint int\n\nfunc main(){\n\tvar a Myint\n\ta=1\n\tfmt.Println(reflect.TypeOf(a))//输出main.Myint \n}\n\n如何获得一个a 的底层类型",
    "body_html": "<p>package main</p>\n\n<p>import \"reflect\"</p>\n\n<p>type Myint int</p>\n\n<p>func main(){\n    var a Myint\n    a=1\n    fmt.Println(reflect.TypeOf(a))//输出 main.Myint \n}</p>\n\n<p>如何获得一个 a 的底层类型</p>",
    "hits": 368,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 544,
    "title": "客户端发起post请求，golang服务端总是收不到数据？",
    "created_at": "2016-12-30 22:02:31",
    "updated_at": "2016-12-31 07:42:23",
    "replied_at": "2016-12-31 07:42:23",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1503,
    "last_reply_user_login": "elone",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1503,
    "user": "{\"id\": 1503, \"name\": \"elone\", \"login\": \"elone\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "前端用react ,用的axios发post请求，代码如下：\n```javascript\n\n//http.js\nimport axios from 'axios';\nvar http = axios.create({\n  baseURL: 'http://localhost:8080',\n  timeout: 1000,\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  }\n});\n\nexport default http ;\n//actions.js\nexport function login(data) {\n  return dispatch =&gt; {\n    return http.post('/api/auth', {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n    }).then(res =&gt; {\n\t  //  .........此处省略\n    });\n  }\n}\n```\n\n\n服务器端用的是iris ,代码如下：\n```go\n\nfunc main() {\n\tcrs := cors.New(cors.Options{\n\t\tAllowCredentials: true,\n\t\tAllowedHeaders:   []string{&quot;*&quot;},\n\t\tDebug:            true,\n\t})\n\tiris.Use(crs)\n\tiris.Post(&quot;/api/auth&quot;, AuthHandler)\n\tiris.Listen(&quot;:8080&quot;)\n}\n\n\ntype Response struct {\n\tData  string `json: &quot;text&quot;`\n\tToken string `json: &quot;text&quot;`\n}\n\nfunc AuthHandler(ctx *iris.Context) {\n\tname := ctx.FormValueString(&quot;firstName&quot;)\n\n\tctx.Log(&quot;\\n&quot;, name)\n\tresponse := Response{&quot;All good&quot;, &quot;amyAYwuHCo7IFAgd1oRpSP7nzL7BF5t7ItqpKViM&quot;}\n\tctx.JSON(iris.StatusOK, response)\n}\n\n```\n\n\n但是发现无论怎么样，从浏览器发起的请求（无论是在react中，还是使用chrome的rest插件发起的请求），在服务器总是接收不到数据 ，\n```bash\n####iris打印日志如下\n[cors] 2016/12/30 22:01:05 Serve: Actual request\n[IRIS] 2016/12/30 22:01:05 \n%!(EXTRA string= )  #这是打印为空\n```\n\n而在控制台使用如下命令则可以打印出数据 ：\n```bash\ncurl -X POST  -d  &quot;firstName=frey&quot; -H &quot;Content-Type:application/json&quot; --header &quot;X-Forwarded-For: 127.0.0.1:3000&quot; &quot;http://localhost:8080/api/auth&quot;\n\n####iris打印日志如下\n[cors] 2016/12/30 22:01:05 Serve: Actual request\n[IRIS] 2016/12/30 22:01:05 \n%!(EXTRA string=frey) #可以正常打印出name\n```\n\n请问这是为什么呢？",
    "body_html": "<p>前端用 react ,用的 axios 发 post 请求，代码如下：</p>\n <pre class=\"highlight javascript\"><code>\n<span class=\"c1\">//http.js</span>\n<span class=\"k\">import</span> <span class=\"nx\">axios</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">axios</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"kd\">var</span> <span class=\"nx\">http</span> <span class=\"o\">=</span> <span class=\"nx\">axios</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">({</span>\n  <span class=\"na\">baseURL</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">http://localhost:8080</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n  <span class=\"na\">timeout</span><span class=\"p\">:</span> <span class=\"mi\">1000</span><span class=\"p\">,</span>\n  <span class=\"na\">headers</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"dl\">'</span><span class=\"s1\">Accept</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">application/json</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"dl\">'</span><span class=\"s1\">Content-Type</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">application/json</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">});</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">http</span> <span class=\"p\">;</span>\n<span class=\"c1\">//actions.js</span>\n<span class=\"k\">export</span> <span class=\"kd\">function</span> <span class=\"nx\">login</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"nx\">dispatch</span> <span class=\"o\">=&amp;</span><span class=\"nx\">gt</span><span class=\"p\">;</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"nx\">http</span><span class=\"p\">.</span><span class=\"nx\">post</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">/api/auth</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"na\">firstName</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">Fred</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">lastName</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">Flintstone</span><span class=\"dl\">'</span>\n    <span class=\"p\">}).</span><span class=\"nx\">then</span><span class=\"p\">(</span><span class=\"nx\">res</span> <span class=\"o\">=&amp;</span><span class=\"nx\">gt</span><span class=\"p\">;</span> <span class=\"p\">{</span>\n      <span class=\"c1\">//  .........此处省略</span>\n    <span class=\"p\">});</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>服务器端用的是 iris ,代码如下：</p>\n <pre class=\"highlight go\"><code>\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">crs</span> <span class=\"o\">:=</span> <span class=\"n\">cors</span><span class=\"o\">.</span><span class=\"n\">New</span><span class=\"p\">(</span><span class=\"n\">cors</span><span class=\"o\">.</span><span class=\"n\">Options</span><span class=\"p\">{</span>\n        <span class=\"n\">AllowCredentials</span><span class=\"o\">:</span> <span class=\"no\">true</span><span class=\"p\">,</span>\n        <span class=\"n\">AllowedHeaders</span><span class=\"o\">:</span>   <span class=\"p\">[]</span><span class=\"kt\">string</span><span class=\"p\">{</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">*&amp;</span><span class=\"n\">quot</span><span class=\"p\">;},</span>\n        <span class=\"n\">Debug</span><span class=\"o\">:</span>            <span class=\"no\">true</span><span class=\"p\">,</span>\n    <span class=\"p\">})</span>\n    <span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">Use</span><span class=\"p\">(</span><span class=\"n\">crs</span><span class=\"p\">)</span>\n    <span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">Post</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">api</span><span class=\"o\">/</span><span class=\"n\">auth</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">AuthHandler</span><span class=\"p\">)</span>\n    <span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">Listen</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span><span class=\"m\">8080</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"k\">type</span> <span class=\"n\">Response</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Data</span>  <span class=\"kt\">string</span> <span class=\"s\">`json: &amp;quot;text&amp;quot;`</span>\n    <span class=\"n\">Token</span> <span class=\"kt\">string</span> <span class=\"s\">`json: &amp;quot;text&amp;quot;`</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">AuthHandler</span><span class=\"p\">(</span><span class=\"n\">ctx</span> <span class=\"o\">*</span><span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">FormValueString</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">firstName</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n    <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">Log</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"n\">response</span> <span class=\"o\">:=</span> <span class=\"n\">Response</span><span class=\"p\">{</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">All</span> <span class=\"n\">good</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">amyAYwuHCo7IFAgd1oRpSP7nzL7BF5t7ItqpKViM</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}</span>\n    <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">JSON</span><span class=\"p\">(</span><span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">StatusOK</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n</code></pre> \n<p>但是发现无论怎么样，从浏览器发起的请求（无论是在 react 中，还是使用 chrome 的 rest 插件发起的请求），在服务器总是接收不到数据 ，</p>\n <pre class=\"highlight shell\"><code><span class=\"c\">####iris打印日志如下</span>\n<span class=\"o\">[</span>cors] 2016/12/30 22:01:05 Serve: Actual request\n<span class=\"o\">[</span>IRIS] 2016/12/30 22:01:05 \n%!<span class=\"o\">(</span>EXTRA <span class=\"nv\">string</span><span class=\"o\">=</span> <span class=\"o\">)</span>  <span class=\"c\">#这是打印为空</span>\n</code></pre> \n<p>而在控制台使用如下命令则可以打印出数据 ：</p>\n <pre class=\"highlight shell\"><code>curl <span class=\"nt\">-X</span> POST  <span class=\"nt\">-d</span>  &amp;quot<span class=\"p\">;</span><span class=\"nv\">firstName</span><span class=\"o\">=</span>frey&amp;quot<span class=\"p\">;</span> <span class=\"nt\">-H</span> &amp;quot<span class=\"p\">;</span>Content-Type:application/json&amp;quot<span class=\"p\">;</span> <span class=\"nt\">--header</span> &amp;quot<span class=\"p\">;</span>X-Forwarded-For: 127.0.0.1:3000&amp;quot<span class=\"p\">;</span> &amp;quot<span class=\"p\">;</span>http://localhost:8080/api/auth&amp;quot<span class=\"p\">;</span>\n\n<span class=\"c\">####iris打印日志如下</span>\n<span class=\"o\">[</span>cors] 2016/12/30 22:01:05 Serve: Actual request\n<span class=\"o\">[</span>IRIS] 2016/12/30 22:01:05 \n%!<span class=\"o\">(</span>EXTRA <span class=\"nv\">string</span><span class=\"o\">=</span>frey<span class=\"o\">)</span> <span class=\"c\">#可以正常打印出name</span>\n</code></pre> \n<p>请问这是为什么呢？</p>",
    "hits": 640,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 545,
    "title": "beego的http缓存问题，Last-Modified与If-Modified-Since",
    "created_at": "2016-12-31 16:25:04",
    "updated_at": "2021-01-20 01:51:37",
    "replied_at": "2016-12-31 23:56:55",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1451,
    "last_reply_user_login": "sujunxuan",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1344,
    "user": "{\"id\": 1344, \"name\": \"皇虫\", \"login\": \"1272881215\", \"avatar\": \"https://static.gocn.vip/user/avatar/1344/6acfae.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "自从使用了阿里云的OSS对象存储服务，深刻感受到了OSS图片处理的便利和强大，然后自己尝试使用beego仿照着做一个图片处理的小工具。\n比如有一张图片，http://www.abc.com/1.jpg 然后我使用 http://www.abc.com/1.jpg?w=100&amp;h=100&amp;q=90 的链接访问，图片就会被裁剪成宽100px高100px，相对质量为90%的图片。\n但是有一个问题就是，每次访问图片，都需要重新请求一次图片，浏览器没有把这张图片缓存下来。\n然后网上搜索了很多方法，可以通过Last-Modified与If-Modified-Since实现，但问题是该怎么通过这种方式实现？\n\n我的图片输出的部分代码：\n```go\n//输出图片\nfunc (v *Viewer) Encode(w *context.Response) {\n\tw.Header().Add(&quot;Content-Type&quot;, fmt.Sprintf(&quot;image/%v&quot;, v.Ext))\n\tswitch v.Ext {\n\tcase &quot;png&quot;:\n\t\tpng.Encode(w, v.Img)\n\tcase &quot;gif&quot;:\n\t\tgif.Encode(w, v.Img, nil)\n\tdefault:\n\t\tjpeg.Encode(w, v.Img, nil)\n\t}\n}\n```\nv.Img是image.Image对象\n",
    "body_html": "<p>自从使用了阿里云的 OSS 对象存储服务，深刻感受到了 OSS 图片处理的便利和强大，然后自己尝试使用 beego 仿照着做一个图片处理的小工具。\n比如有一张图片，<a href=\"http://www.abc.com/1.jpg\" rel=\"nofollow\" target=\"_blank\">http://www.abc.com/1.jpg</a> 然后我使用 <a href=\"http://www.abc.com/1.jpg?w=100&amp;amph=100&amp;ampq=90\" rel=\"nofollow\" target=\"_blank\">http://www.abc.com/1.jpg?w=100&amp;amph=100&amp;ampq=90</a>; 的链接访问，图片就会被裁剪成宽 100px 高 100px，相对质量为 90% 的图片。\n但是有一个问题就是，每次访问图片，都需要重新请求一次图片，浏览器没有把这张图片缓存下来。\n然后网上搜索了很多方法，可以通过 Last-Modified 与 If-Modified-Since 实现，但问题是该怎么通过这种方式实现？</p>\n\n<p>我的图片输出的部分代码：</p>\n <pre class=\"highlight go\"><code><span class=\"c\">//输出图片</span>\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">v</span> <span class=\"o\">*</span><span class=\"n\">Viewer</span><span class=\"p\">)</span> <span class=\"n\">Encode</span><span class=\"p\">(</span><span class=\"n\">w</span> <span class=\"o\">*</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">Header</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Content</span><span class=\"o\">-</span><span class=\"n\">Type</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Sprintf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">image</span><span class=\"o\">/%</span><span class=\"n\">v</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">Ext</span><span class=\"p\">))</span>\n    <span class=\"k\">switch</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">Ext</span> <span class=\"p\">{</span>\n    <span class=\"k\">case</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">png</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span>\n        <span class=\"n\">png</span><span class=\"o\">.</span><span class=\"n\">Encode</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">Img</span><span class=\"p\">)</span>\n    <span class=\"k\">case</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">gif</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span>\n        <span class=\"n\">gif</span><span class=\"o\">.</span><span class=\"n\">Encode</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">Img</span><span class=\"p\">,</span> <span class=\"no\">nil</span><span class=\"p\">)</span>\n    <span class=\"k\">default</span><span class=\"o\">:</span>\n        <span class=\"n\">jpeg</span><span class=\"o\">.</span><span class=\"n\">Encode</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">Img</span><span class=\"p\">,</span> <span class=\"no\">nil</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>v.Img 是 image.Image 对象</p>",
    "hits": 493,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 546,
    "title": "RobotGo v0.41.1 发布,祝大家新年快乐",
    "created_at": "2017-01-01 16:27:21",
    "updated_at": "2017-02-05 00:15:23",
    "replied_at": "2017-02-05 00:15:23",
    "replies_count": 11,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 183,
    "last_reply_user_login": "veni",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 183,
    "user": "{\"id\": 183, \"name\": \"veni\", \"login\": \"veni\", \"avatar\": \"https://gocn.vip/system/letter_avatars/v.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "RobotGo v0.41.1 发布了，Golang跨平台控制鼠标、键盘、位图、屏幕、窗口句柄以及全局事件监听;\n\n主要变更：\n- 增加停止全局事件监听api\n- 增加SetHandle\n- 增加代码示例\n- 降级Capture_Screen\n- 增加BCaptureScreen\n- 增加Version\n- 增加Go Report\n- 增加godoc和更新 link\n- 简化部分API\n- 清除打印改为返回\n- 更新文档\n- 更新代码符合golint标准\n- 添加弃用API警告\n\n修复BUG:\n- 修复AddEvent鼠标值为null与键盘冲突问题\n\n\n安装:\n- go get github.com/go-vgo/robotgo\n\n项目地址:\n\nGithub:https://github.com/go-vgo/robotgo\n\n\n\n\n\n\n",
    "body_html": "<p>RobotGo v0.41.1 发布了，Golang 跨平台控制鼠标、键盘、位图、屏幕、窗口句柄以及全局事件监听;</p>\n\n<p>主要变更：</p>\n\n<ul>\n<li>增加停止全局事件监听 api</li>\n<li>增加 SetHandle</li>\n<li>增加代码示例</li>\n<li>降级 Capture_Screen</li>\n<li>增加 BCaptureScreen</li>\n<li>增加 Version</li>\n<li>增加 Go Report</li>\n<li>增加 godoc 和更新 link</li>\n<li>简化部分 API</li>\n<li>清除打印改为返回</li>\n<li>更新文档</li>\n<li>更新代码符合 golint 标准</li>\n<li>添加弃用 API 警告</li>\n</ul>\n\n<p>修复 BUG:</p>\n\n<ul>\n<li>修复 AddEvent 鼠标值为 null 与键盘冲突问题</li>\n</ul>\n\n<p>安装:</p>\n\n<ul>\n<li>go get github.com/go-vgo/robotgo</li>\n</ul>\n\n<p>项目地址:</p>\n\n<p>Github:<a href=\"https://github.com/go-vgo/robotgo\" rel=\"nofollow\" target=\"_blank\">https://github.com/go-vgo/robotgo</a></p>",
    "hits": 838,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 547,
    "title": "sql转es dsl的小工具",
    "created_at": "2017-01-02 12:45:53",
    "updated_at": "2017-01-24 11:00:54",
    "replied_at": "2017-01-24 11:00:54",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1337,
    "last_reply_user_login": "caibirdme",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 159,
    "user": "{\"id\": 159, \"name\": \"Xargin\", \"login\": \"Xargin\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "用go解析sql转成elasticsearch的DSL\n\nhttps://github.com/cch123/elasticsql\n\n业务需要开发的小工具，从我们的业务出发，所以只做了一部分的解析。。\n\n原理么，可以看一下\n\nhttp://elasticsearch.cn/article/114\n\n欢迎吐槽",
    "body_html": "<p>用 go 解析 sql 转成 elasticsearch 的 DSL</p>\n\n<p><a href=\"https://github.com/cch123/elasticsql\" rel=\"nofollow\" target=\"_blank\">https://github.com/cch123/elasticsql</a></p>\n\n<p>业务需要开发的小工具，从我们的业务出发，所以只做了一部分的解析。。</p>\n\n<p>原理么，可以看一下</p>\n\n<p><a href=\"http://elasticsearch.cn/article/114\" rel=\"nofollow\" target=\"_blank\">http://elasticsearch.cn/article/114</a></p>\n\n<p>欢迎吐槽</p>",
    "hits": 965,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 548,
    "title": "解析的JSON里面字段是动态的怎么处理？",
    "created_at": "2017-01-03 10:48:37",
    "updated_at": "2017-01-04 15:28:39",
    "replied_at": "2017-01-04 15:28:39",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1364,
    "last_reply_user_login": "lrita",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "例如有如下的JSON字符串：\n```\n{\n    &quot;id&quot;:&quot;M7DHM98AD2-32E3223F&quot;,\n    &quot;tags&quot;: [\n        {\n            &quot;id&quot;:&quot;9M23X2Z0&quot;,\n            &quot;name&quot;:&quot;History&quot;\n        },\n        {\n            &quot;id&quot;:&quot;123123123&quot;,\n            &quot;name&quot;:&quot;Theory&quot;\n        }\n    ],\n    &quot;fields&quot;: {\n        &quot;title&quot;:&quot;Title of the item&quot;,\n        &quot;description&quot;:&quot;Description of the item&quot;\n    }\n}\n```\n\n`id` 和 `tags` 是固定的，但是 `fields` 里面的字符串经常是动态变化的，可能是 `title` , `description` 或者其他的字段，大家在平常解析中都是怎么处理的呢？\n\n针对上面的JSON，可以定义如下的结构体，但是`Fields`是动态变化的，如何更好的处理呢？\n```\ntype Item struct {\n    ID string `json:&quot;id&quot;`\n    Tags []Tag `json:&quot;tags&quot;`\n    //Fields []Field `json:&quot;fields&quot;`\n}\n\n// Tag data from the call\ntype Tag struct {\n    ID string `json:&quot;id&quot;`\n    Name string `json:&quot;name&quot;`\n}\n\n// AllEntries gets all entries from the session\nfunc AllEntries() {\n    resp, _ := client.Get(APIURL)\n    body, _ := ioutil.ReadAll(resp.Body)\n\n    item := new(Item)\n    _ = json.Unmarshal(body, &amp;item)\n\n    fmt.Println(i, &quot;-&gt;&quot;, item.ID)\n}\n```",
    "body_html": "<p>例如有如下的 JSON 字符串：</p>\n <pre class=\"highlight plaintext\"><code>{\n    &amp;quot;id&amp;quot;:&amp;quot;M7DHM98AD2-32E3223F&amp;quot;,\n    &amp;quot;tags&amp;quot;: [\n        {\n            &amp;quot;id&amp;quot;:&amp;quot;9M23X2Z0&amp;quot;,\n            &amp;quot;name&amp;quot;:&amp;quot;History&amp;quot;\n        },\n        {\n            &amp;quot;id&amp;quot;:&amp;quot;123123123&amp;quot;,\n            &amp;quot;name&amp;quot;:&amp;quot;Theory&amp;quot;\n        }\n    ],\n    &amp;quot;fields&amp;quot;: {\n        &amp;quot;title&amp;quot;:&amp;quot;Title of the item&amp;quot;,\n        &amp;quot;description&amp;quot;:&amp;quot;Description of the item&amp;quot;\n    }\n}\n</code></pre> \n<p><code>id</code> 和 <code>tags</code> 是固定的，但是 <code>fields</code> 里面的字符串经常是动态变化的，可能是 <code>title</code> , <code>description</code> 或者其他的字段，大家在平常解析中都是怎么处理的呢？</p>\n\n<p>针对上面的 JSON，可以定义如下的结构体，但是<code>Fields</code>是动态变化的，如何更好的处理呢？</p>\n <pre class=\"highlight plaintext\"><code>type Item struct {\n    ID string `json:&amp;quot;id&amp;quot;`\n    Tags []Tag `json:&amp;quot;tags&amp;quot;`\n    //Fields []Field `json:&amp;quot;fields&amp;quot;`\n}\n\n// Tag data from the call\ntype Tag struct {\n    ID string `json:&amp;quot;id&amp;quot;`\n    Name string `json:&amp;quot;name&amp;quot;`\n}\n\n// AllEntries gets all entries from the session\nfunc AllEntries() {\n    resp, _ := client.Get(APIURL)\n    body, _ := ioutil.ReadAll(resp.Body)\n\n    item := new(Item)\n    _ = json.Unmarshal(body, &amp;amp;item)\n\n    fmt.Println(i, &amp;quot;-&amp;gt;&amp;quot;, item.ID)\n}\n</code></pre> ",
    "hits": 471,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 549,
    "title": " Go Walk 库  有深入研究的吗？",
    "created_at": "2017-01-03 21:18:14",
    "updated_at": "2017-01-03 21:18:14",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 38,
    "user": "{\"id\": 38, \"name\": \"TianGenglan\", \"login\": \"TianGenglan\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Go walk  库  感觉挺好哪有深入研究的  或者例子",
    "body_html": "<p>Go walk  库  感觉挺好哪有深入研究的  或者例子</p>",
    "hits": 395,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 550,
    "title": "beego orm如何处理分表",
    "created_at": "2017-01-04 12:47:29",
    "updated_at": "2021-01-20 03:03:22",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1312,
    "user": "{\"id\": 1312, \"name\": \"gowalker\", \"login\": \"gowalker\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "现在场景是users表根据手机号运营商移动、联通、电信分为users_y,users_l,users_d，以前建一个Users结构体，可以直接用o.Insert(&amp;u)这类的语句，有了分表以后，难道要根据表名建3个结构体吗？应该有更好的方法吧，求指教",
    "body_html": "<p>现在场景是 users 表根据手机号运营商移动、联通、电信分为 users_y,users_l,users_d，以前建一个 Users 结构体，可以直接用 o.Insert(&amp;u) 这类的语句，有了分表以后，难道要根据表名建 3 个结构体吗？应该有更好的方法吧，求指教</p>",
    "hits": 445,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 551,
    "title": "beego orm 如何进行 check-and-set 操作",
    "created_at": "2017-01-04 13:56:47",
    "updated_at": "2021-01-20 01:51:30",
    "replied_at": "2017-08-14 11:35:56",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1868,
    "last_reply_user_login": "xkey",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 261,
    "user": "{\"id\": 261, \"name\": \"hacpai\", \"login\": \"hacpai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 452,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 552,
    "title": "问什么会挂掉。",
    "created_at": "2017-01-04 18:36:29",
    "updated_at": "2017-01-06 13:06:49",
    "replied_at": "2017-01-06 13:06:49",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 196,
    "last_reply_user_login": "andylau004",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 196,
    "user": "{\"id\": 196, \"name\": \"andylau004\", \"login\": \"andylau004\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "\npackage main\n\n\n\n\nimport (\n    &quot;fmt&quot;\n    &quot;sync&quot;\n    &quot;runtime&quot;\n)\n\nfunc init() {\n\truntime.GOMAXPROCS( runtime.NumCPU() )\n}\nfunc main() {\n\n    var wg sync.WaitGroup\n\n    wg.Add(1000000)\n\tfor i:= 0; i &lt; 1000000; i++ {\n\t\t\n\t\tgo func(num int) {\n\t\t\tfmt.Println(1)\n            wg.Done()\n\t\t}(i)\n\n\t}\n\n\twg.Wait()\n    fmt.Println( &quot;over &quot;)\n}\n\n\n\n\n\n崩溃后的输出\n\n\n\ngoroutine 991060 [syscall]:\nsyscall.Syscall(0x1, 0x1, 0xc4b2940588, 0x2, 0xc4aac9ce18, 0x4595e0, 0xc4b2968cc0)\n\t/usr/local/go/src/syscall/asm_linux_amd64.s:18 +0x5\nsyscall.write(0x1, 0xc4b2940588, 0x2, 0x8, 0xf75371fa0045cd99, 0xc4ac1dc398, 0xc282ffffffff)\n\t/usr/local/go/src/syscall/zsyscall_linux_amd64.go:1064 +0x55\nsyscall.Write(0x1, 0xc4b2940588, 0x2, 0x8, 0x45d48a, 0xc4ac1dc398, 0x4)\n\t/usr/local/go/src/syscall/syscall_unix.go:180 +0x49\nos.(*File).write(0xc42002e010, 0xc4b2940588, 0x2, 0x8, 0x0, 0xc4ac1dc210, 0xc4ac1dc238)\n\t/usr/local/go/src/os/file_unix.go:249 +0x78\nos.(*File).Write(0xc42002e010, 0xc4b2940588, 0x2, 0x8, 0x7f0919831e10, 0xc4aac9e4e0, 0x0)\n\t/usr/local/go/src/os/file.go:142 +0x5f\nfmt.Fprintln(0x4f6140, 0xc42002e010, 0xc4aac9cf90, 0x1, 0x1, 0x48a100, 0xc4ac9f5918, 0xc4aac9cf88)\n\t/usr/local/go/src/fmt/print.go:248 +0x8f\nfmt.Println(0xc4aac9cf90, 0x1, 0x1, 0x48a100, 0xc4ac9f5918, 0x0)\n\t/usr/local/go/src/fmt/print.go:257 +0x57\nmain.main.func1(0xc42000a2f0, 0xf1f2f)\n\t/home/gopath/src/T_Debug/Test.go:24 +0x93\ncreated by main.main\n\t/home/gopath/src/T_Debug/Test.go:26 +0x92\nexit status 2\n\n\n\n\n",
    "body_html": "<p>package main</p>\n\n<p>import (\n    \"fmt\"\n    \"sync\"\n    \"runtime\"\n)</p>\n\n<p>func init() {\n    runtime.GOMAXPROCS( runtime.NumCPU() )\n}\nfunc main() {</p>\n\n<p>var wg sync.WaitGroup</p>\n\n<p>wg.Add(1000000)\n    for i:= 0; i &lt; 1000000; i++ {</p>\n\n<p>go func(num int) {\n            fmt.Println(1)\n            wg.Done()\n        }(i)</p>\n\n<p>}</p>\n\n<p>wg.Wait()\n    fmt.Println( \"over \")\n}</p>\n\n<p>崩溃后的输出</p>\n\n<p>goroutine 991060 [syscall]:\nsyscall.Syscall(0x1, 0x1, 0xc4b2940588, 0x2, 0xc4aac9ce18, 0x4595e0, 0xc4b2968cc0)\n    /usr/local/go/src/syscall/asm_linux_amd64.s:18 +0x5\nsyscall.write(0x1, 0xc4b2940588, 0x2, 0x8, 0xf75371fa0045cd99, 0xc4ac1dc398, 0xc282ffffffff)\n    /usr/local/go/src/syscall/zsyscall_linux_amd64.go:1064 +0x55\nsyscall.Write(0x1, 0xc4b2940588, 0x2, 0x8, 0x45d48a, 0xc4ac1dc398, 0x4)\n    /usr/local/go/src/syscall/syscall_unix.go:180 +0x49\nos.(*File).write(0xc42002e010, 0xc4b2940588, 0x2, 0x8, 0x0, 0xc4ac1dc210, 0xc4ac1dc238)\n    /usr/local/go/src/os/file_unix.go:249 +0x78\nos.(*File).Write(0xc42002e010, 0xc4b2940588, 0x2, 0x8, 0x7f0919831e10, 0xc4aac9e4e0, 0x0)\n    /usr/local/go/src/os/file.go:142 +0x5f\nfmt.Fprintln(0x4f6140, 0xc42002e010, 0xc4aac9cf90, 0x1, 0x1, 0x48a100, 0xc4ac9f5918, 0xc4aac9cf88)\n    /usr/local/go/src/fmt/print.go:248 +0x8f\nfmt.Println(0xc4aac9cf90, 0x1, 0x1, 0x48a100, 0xc4ac9f5918, 0x0)\n    /usr/local/go/src/fmt/print.go:257 +0x57\nmain.main.func1(0xc42000a2f0, 0xf1f2f)\n    /home/gopath/src/T_Debug/Test.go:24 +0x93\ncreated by main.main\n    /home/gopath/src/T_Debug/Test.go:26 +0x92\nexit status 2</p>",
    "hits": 551,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 553,
    "title": "JSON unmarshal float类型怎么保持JSON一样的数据",
    "created_at": "2017-01-05 11:35:16",
    "updated_at": "2017-01-05 14:43:36",
    "replied_at": "2017-01-05 14:43:36",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1364,
    "last_reply_user_login": "lrita",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "有如下的JSON数据:\n```\n{\n  &quot;a&quot;: 0.000,\n  &quot;b&quot;: 0.000\n}\n```\n\n实际上经过`JSON.Unmarshal`之后我们输出的话会变成0.如果保持一模一样的保留三位数？\n\n```\ntype Record map[string]interface{}\n\nfunc main() {\n\tvar record Record\n\terr := json.Unmarshal([]byte(d), &amp;record)\n\tif err != nil {\n\t\tfmt.Println(&quot;json.Unmarshal:&quot;, err)\n\t\treturn\n\t}\n\tfmt.Println(record)\n}\n```",
    "body_html": "<p>有如下的 JSON 数据:</p>\n <pre class=\"highlight plaintext\"><code>{\n  &amp;quot;a&amp;quot;: 0.000,\n  &amp;quot;b&amp;quot;: 0.000\n}\n</code></pre> \n<p>实际上经过<code>JSON.Unmarshal</code>之后我们输出的话会变成 0.如果保持一模一样的保留三位数？</p>\n <pre class=\"highlight plaintext\"><code>type Record map[string]interface{}\n\nfunc main() {\n    var record Record\n    err := json.Unmarshal([]byte(d), &amp;amp;record)\n    if err != nil {\n        fmt.Println(&amp;quot;json.Unmarshal:&amp;quot;, err)\n        return\n    }\n    fmt.Println(record)\n}\n</code></pre> ",
    "hits": 471,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 554,
    "title": "谷歌开源了一个从 Python 到 Go 的编译器 grumpy",
    "created_at": "2017-01-05 12:21:08",
    "updated_at": "2017-01-05 12:21:08",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 271,
    "user": "{\"id\": 271, \"name\": \"cholerae\", \"login\": \"cholerae\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Github: https://github.com/google/grumpy\n博客: https://opensource.googleblog.com/2017/01/grumpy-go-running-python.html\n",
    "body_html": "<p>Github: <a href=\"https://github.com/google/grumpy\" rel=\"nofollow\" target=\"_blank\">https://github.com/google/grumpy</a>\n博客: <a href=\"https://opensource.googleblog.com/2017/01/grumpy-go-running-python.html\" rel=\"nofollow\" target=\"_blank\">https://opensource.googleblog.com/2017/01/grumpy-go-running-python.html</a></p>",
    "hits": 278,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 555,
    "title": "golang如何使用代理,捕获网页?",
    "created_at": "2017-01-05 13:24:14",
    "updated_at": "2017-01-22 01:00:53",
    "replied_at": "2017-01-22 01:00:15",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1406,
    "last_reply_user_login": "hunterhug",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "rt",
    "body_html": "<p>rt</p>",
    "hits": 577,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 556,
    "title": "为什么第二次sendData没有输出",
    "created_at": "2017-01-05 14:33:59",
    "updated_at": "2017-01-05 15:21:40",
    "replied_at": "2017-01-05 15:21:40",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 70,
    "last_reply_user_login": "Samuier",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1523,
    "user": "{\"id\": 1523, \"name\": \"lyb124553153\", \"login\": \"lyb124553153\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "为什么第二次sendData以后没有输出\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;time&quot;\n)\n\nfunc main(){\n\n\tch := make(chan string)\n\tgo sendData(ch)\n\tgo getData(ch)\n\ttime.Sleep(5e9)\n\tgo sendData(ch)\n}\n\nfunc sendData(ch chan string){\n\ttime.Sleep(1e9)\n\tch &lt;- &quot;str0&quot;\n\tch &lt;- &quot;str1&quot;\n\tch &lt;- &quot;str2&quot;\n}\n\nfunc getData(ch chan string){\n\tfor {\n\t\tfmt.Println( &lt;- ch)\n\t}\n}\n```\nRT 控制台只输出了一次\n```go\nstr\nstr1\nstr2\n```\n\n",
    "body_html": "<p>为什么第二次 sendData 以后没有输出</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">(){</span>\n\n    <span class=\"n\">ch</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">string</span><span class=\"p\">)</span>\n    <span class=\"k\">go</span> <span class=\"n\">sendData</span><span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"p\">)</span>\n    <span class=\"k\">go</span> <span class=\"n\">getData</span><span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"p\">)</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"m\">5e9</span><span class=\"p\">)</span>\n    <span class=\"k\">go</span> <span class=\"n\">sendData</span><span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">sendData</span><span class=\"p\">(</span><span class=\"n\">ch</span> <span class=\"k\">chan</span> <span class=\"kt\">string</span><span class=\"p\">){</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"m\">1e9</span><span class=\"p\">)</span>\n    <span class=\"n\">ch</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">str0</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"n\">ch</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">str1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"n\">ch</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">str2</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">getData</span><span class=\"p\">(</span><span class=\"n\">ch</span> <span class=\"k\">chan</span> <span class=\"kt\">string</span><span class=\"p\">){</span>\n    <span class=\"k\">for</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"n\">ch</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>RT 控制台只输出了一次</p>\n <pre class=\"highlight go\"><code><span class=\"n\">str</span>\n<span class=\"n\">str1</span>\n<span class=\"n\">str2</span>\n</code></pre> ",
    "hits": 322,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 557,
    "title": "为什么 golang 的程序在 windows 上运行后，内存占用 virtual size 都特别大， 差不多都是 4G 大小？",
    "created_at": "2017-01-05 14:53:23",
    "updated_at": "2017-01-05 16:41:14",
    "replied_at": "2017-01-05 16:41:14",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 997,
    "last_reply_user_login": "runner_mei",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 997,
    "user": "{\"id\": 997, \"name\": \"runner_mei\", \"login\": \"runner_mei\", \"avatar\": \"https://gocn.vip/system/letter_avatars/r.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如下面的小程序\n\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;os&quot;\n)\n\n\nfunc main() {\n\tvar b = []byte{0, 0}\n\tos.Stdin.Read(b)\n}",
    "body_html": "<p>如下面的小程序</p>\n\n<p>package main</p>\n\n<p>import (\n    \"fmt\"\n    \"os\"\n)</p>\n\n<p>func main() {\n    var b = [] byte{0, 0}\n    os.Stdin.Read(b)\n}</p>",
    "hits": 109,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 558,
    "title": "goroutine leak",
    "created_at": "2017-01-05 22:28:36",
    "updated_at": "2017-01-05 22:28:36",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 292,
    "user": "{\"id\": 292, \"name\": \"AdolphLWQ\", \"login\": \"adolphlwq\", \"avatar\": \"https://static.gocn.vip/user/avatar/292/e947d6.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "## 描述\n需求是开发一个golang binary周期性收集host上docker container的log信息。结果运行的时候使用go pprof查看发现goroutine泄露了。自己试了半天没有解决。\n\n## GitHub repo\n[goroutine-leak](https://github.com/dockerq/goroutine-leak)，使用govendor管理依赖包。\n我把有问题的代码抽离出来放到main.go里，并且维护在了github上，地址[goroutine-leak](https://github.com/dockerq/goroutine-leak)。里面默认集成了pprof功能，感兴趣的小伙伴可以一起debug学习下。\n\n我也会不断尝试各种方法来解决这个问题。",
    "body_html": "<h2 id=\"描述\">描述</h2>\n<p>需求是开发一个 golang binary 周期性收集 host 上 docker container 的 log 信息。结果运行的时候使用 go pprof 查看发现 goroutine 泄露了。自己试了半天没有解决。</p>\n<h2 id=\"GitHub repo\">GitHub repo</h2>\n<p><a href=\"https://github.com/dockerq/goroutine-leak\" rel=\"nofollow\" target=\"_blank\" title=\"\">goroutine-leak</a>，使用 govendor 管理依赖包。\n我把有问题的代码抽离出来放到 main.go 里，并且维护在了 github 上，地址<a href=\"https://github.com/dockerq/goroutine-leak\" rel=\"nofollow\" target=\"_blank\" title=\"\">goroutine-leak</a>。里面默认集成了 pprof 功能，感兴趣的小伙伴可以一起 debug 学习下。</p>\n\n<p>我也会不断尝试各种方法来解决这个问题。</p>",
    "hits": 224,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 559,
    "title": "热升级问题",
    "created_at": "2017-01-06 14:15:45",
    "updated_at": "2017-01-06 14:15:45",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 45,
    "user": "{\"id\": 45, \"name\": \"小张的烦恼\", \"login\": \"zhangyumingtfr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "近来需要做热升级，但是beego那个grace模块，对我这个菜鸟来说有点太飘逸了，哪位大神能提供一个热升级案列让我研究研究啊！！！！！！谢谢",
    "body_html": "<p>近来需要做热升级，但是 beego 那个 grace 模块，对我这个菜鸟来说有点太飘逸了，哪位大神能提供一个热升级案列让我研究研究啊！！！！！！谢谢</p>",
    "hits": 305,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 560,
    "title": "Faygo web框架，自动绑定参数，支持在线API文档",
    "created_at": "2017-01-06 14:36:28",
    "updated_at": "2017-01-06 19:03:15",
    "replied_at": "2017-01-06 19:03:15",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 715,
    "last_reply_user_login": "changjixiong",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 9,
    "user": "{\"id\": 9, \"name\": \"henrylee2cn\", \"login\": \"henrylee2cn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "# Faygo    [![GoDoc](https://godoc.org/github.com/tsuna/gohbase?status.png)](https://godoc.org/github.com/henrylee2cn/faygo)    ![Faygo goreportcard](https://goreportcard.com/badge/github.com/henrylee2cn/faygo)\n\n![Faygo Favicon](https://github.com/henrylee2cn/faygo/raw/master/doc/faygo_96x96.png)\n\n## 概述\n\nFaygo 使用全新架构，是最合适开发API接口的Go Web框架。用户只需定义一个struct Handler，就能自动绑定、验证请求参数并生成在线API文档。\n\n官方QQ群：Go-Web 编程 42730308    [![Go-Web 编程群](http://pub.idqqimg.com/wpa/images/group.png)](http://jq.qq.com/?_wv=1027&amp;k=fzi4p1)\n\n[查看《用户手册》](https://github.com/henrylee2cn/faydoc)\n\n![faygo index](https://github.com/henrylee2cn/faygo/raw/master/doc/index.png)\n\n![faygo apidoc](https://github.com/henrylee2cn/faygo/raw/master/doc/apidoc.png)\n\n![faygo server](https://github.com/henrylee2cn/faygo/raw/master/doc/server.png)\n\n## 最新版本\n\n### 版本号\n\nv1.0\n\n### 安装要求\n\nGo Version ≥1.8\n\n## 快速使用\n\n- 方式一 源码下载\n\n```sh\ngo get -u -v github.com/henrylee2cn/faygo\n```\n\n- 方式二 部署工具 （[Go to fay](https://github.com/henrylee2cn/fay)）\n\n```sh\ngo get -u -v github.com/henrylee2cn/fay\n```\n\n```\n        fay command [arguments]\n\nThe commands are:\n        new        创建、编译和运行（监控文件变化）一个新的faygo项目\n        run        编译和运行（监控文件变化）任意一个已存在的golang项目\n\nfay new appname [apptpl]\n        appname    指定新faygo项目的创建目录\n        apptpl     指定一个faygo项目模板（可选）\n\nfay run [appname]\n        appname    指定待运行的golang项目路径（可选）\n```\n\n## 框架特性\n\n- 一个 `struct Handler` 搞定多件事：\n * 定义 Handler/Middleware\n * 绑定与验证请求参数\n * 生成 Swagger2.0 API 在线文档\n * 数据库 ORM 映射\n\n![faygo struct handler 多重用途合一](https://github.com/henrylee2cn/faygo/raw/master/doc/MultiUsage.png)\n\n- Handler与Middleware完全相同，都是实现Handler接口（`func`或`struct`类型），共同构成路由操作链，只是概念层面的说法不同\n- 支持多种网络类型：\n\n网络类型                                      | 配置`net_types`值\n----------------------------------------------|----------------\nHTTP                                          | `http`\nHTTPS/HTTP2(TLS)                              | `https`\nHTTPS/HTTP2(Let's Encrypt TLS)                | `letsencrypt`\nHTTPS/HTTP2(Let's Encrypt TLS on UNIX socket) | `unix_letsencrypt`\nHTTP(UNIX socket)                             | `unix_http`\nHTTPS/HTTP2(TLS on UNIX socket)               | `unix_https`\n\n- 支持单服务单监听、单服务多监听、多服务多监听等，多个服务的配置信息相互独立\n- 基于 `httprouter` 开发高性能路由，支持链式与树形两种注册风格，支持灵活的静态文件路由（如DirFS、RenderFS、MarkdownFS等）\n- 支持平滑关闭、平滑升级，提供fay工具进行新建项目、热编译、元编程\n- 采用最强大的 `pongo2` 作为HTML渲染引擎\n- 提供近似LRU的文件缓存功能，主要用途是静态文件缓存\n- 跨平台的彩色日志系统，且同时支持console和file两种输出形式（可以同时使用）\n- 提供Session管理功能\n- 支持Gzip全局配置\n- 提供XSRF跨站请求伪造安全过滤\n- 大多数功能尽量使用简洁的ini进行配置来避免不必要的重新编译，并且这些配置文件支持自动补填默认值\n- 提供 `gorm`、`xorm`、`sqlx`、`directSQL`、`Websocket`、`ini` 、`http client` 等很多常用扩展包\n\n## 简单示例\n\n```go\npackage main\n\nimport (\n    // &quot;mime/multipart&quot;\n    &quot;time&quot;\n    &quot;github.com/henrylee2cn/faygo&quot;\n)\n\ntype Index struct {\n    Id        int      `param:&quot;&lt;in:path&gt; &lt;required&gt; &lt;desc:ID&gt; &lt;range: 0:10&gt;&quot;`\n    Title     string   `param:&quot;&lt;in:query&gt; &lt;nonzero&gt;&quot;`\n    Paragraph []string `param:&quot;&lt;in:query&gt; &lt;name:p&gt; &lt;len: 1:10&gt; &lt;regexp: ^[\\\\w]*$&gt;&quot;`\n    Cookie    string   `param:&quot;&lt;in:cookie&gt; &lt;name:faygoID&gt;&quot;`\n    // Picture         *multipart.FileHeader `param:&quot;&lt;in:formData&gt; &lt;name:pic&gt; &lt;maxmb:30&gt;&quot;`\n}\n\nfunc (i *Index) Serve(ctx *faygo.Context) error {\n    if ctx.CookieParam(&quot;faygoID&quot;) == &quot;&quot; {\n        ctx.SetCookie(&quot;faygoID&quot;, time.Now().String())\n    }\n    return ctx.JSON(200, i)\n}\n\nfunc main() {\n    app := faygo.New(&quot;myapp&quot;, &quot;0.1&quot;)\n\n    // Register the route in a chain style\n    app.GET(&quot;/index/:id&quot;, new(Index))\n\n    // Register the route in a tree style\n    // app.Route(\n    //     app.NewGET(&quot;/index/:id&quot;, new(Index)),\n    // )\n\n    // Start the service\n    faygo.Run()\n}\n\n/*\nhttp GET:\n    http://localhost:8080/index/1?title=test&amp;p=abc&amp;p=xyz\nresponse:\n    {\n        &quot;Id&quot;: 1,\n        &quot;Title&quot;: &quot;test&quot;,\n        &quot;Paragraph&quot;: [\n            &quot;abc&quot;,\n            &quot;xyz&quot;\n        ],\n        &quot;Cookie&quot;: &quot;2016-11-13 01:14:40.9038005 +0800 CST&quot;\n    }\n*/\n```\n\n[示例库](https://github.com/henrylee2cn/faygo/raw/master/samples)\n\n## 操作和中间件\n\n操作和中间件是相同的，都是实现了Handler接口！\n\n- 函数类型\n\n```go\n// 不含API文档描述\nfunc Page() faygo.HandlerFunc {\n    return func(ctx *faygo.Context) error {\n        return ctx.String(200, &quot;faygo&quot;)\n    }\n}\n\n// 含API文档描述\nvar Page2 = faygo.WrapDoc(Page(), &quot;测试页2的注意事项&quot;, &quot;文本&quot;)\n```\n\n- 结构体类型\n\n```go\n// Param操作通过Tag绑定并验证请求参数\ntype Param struct {\n    Id    int    `param:&quot;&lt;in:path&gt; &lt;required&gt; &lt;desc:ID&gt; &lt;range: 0:10&gt;&quot;`\n    Title string `param:&quot;&lt;in:query&gt;&quot;`\n}\n\n// Serve实现Handler接口\nfunc (p *Param) Serve(ctx *faygo.Context) error {\n    return ctx.JSON(200,\n        faygo.Map{\n            &quot;Struct Params&quot;:    p,\n            &quot;Additional Param&quot;: ctx.PathParam(&quot;additional&quot;),\n        }, true)\n}\n\n// Doc实现API文档接口（可选）\nfunc (p *Param) Doc() faygo.Doc {\n    return faygo.Doc{\n        // 向API文档声明接口注意事项\n        Note: &quot;param desc&quot;,\n        // 向API文档声明响应内容格式\n        Return: faygo.JSONMsg{\n            Code: 1,\n            Info: &quot;success&quot;,\n        },\n        // 向API文档增加额外的请求参数声明（可选）\n        Params: []faygo.ParamInfo{\n            {\n                Name:  &quot;additional&quot;,\n                In:    &quot;path&quot;,\n                Model: &quot;a&quot;,\n                Desc:  &quot;defined by the `Doc()` method&quot;,\n            },\n        },\n    }\n}\n```\n\n## 过滤函数\n\n过滤函数必须是HandlerFunc类型！\n\n```go\nfunc Root2Index(ctx *faygo.Context) error {\n    // 不允许直接访问`/index`\n    if ctx.Path() == &quot;/index&quot; {\n        ctx.Stop()\n        return nil\n    }\n    if ctx.Path() == &quot;/&quot; {\n        ctx.ModifyPath(&quot;/index&quot;)\n    }\n    return nil\n}\n```\n\n## 路由注册\n\n- 树状\n\n```go\n// 新建应用服务，参数：名称、版本\nvar app1 = faygo.New(&quot;myapp1&quot;, &quot;1.0&quot;)\n\n// 路由\napp1.Filter(Root2Index).\n    Route(\n        app1.NewNamedGET(&quot;测试页1&quot;, &quot;/page&quot;, Page()),\n        app1.NewNamedGET(&quot;测试页2&quot;, &quot;/page2&quot;, Page2),\n        app1.NewGroup(&quot;home&quot;,\n            app1.NewNamedGET(&quot;test param&quot;, &quot;/param&quot;, &amp;Param{\n                // 为绑定的参数设定API文档中缺省值（可选）\n                Id:    1,\n                Title: &quot;test param&quot;,\n            }),\n        ),\n    )\n```\n\n- 链状\n\n```go\n// 新建应用服务，参数：名称、版本\nvar app2 = faygo.New(&quot;myapp2&quot;, &quot;1.0&quot;)\n\n// 路由\napp2.Filter(Root2Index)\napp2.NamedGET(&quot;test page&quot;, &quot;/page&quot;, Page())\napp2.NamedGET(&quot;test page2&quot;, &quot;/page2&quot;, Page2)\napp2.Group(&quot;home&quot;)\n{\n    app2.NamedGET(&quot;test param&quot;, &quot;/param&quot;, &amp;Param{\n        // 为绑定的参数设定API文档中缺省值（可选）\n        Id:    1,\n        Title: &quot;test param&quot;,\n    })\n}\n```\n\n## 平滑关闭与重启\n\n- 平滑关闭\n\n```sh\nkill [pid]\n```\n\n- 平滑重启\n\n```sh\nkill -USR2 [pid]\n```\n\n## 配置文件说明\n\n- 应用的各服务均有单独一份配置，其文件名格式 `config/{appname}[_{version}].ini`，配置详情：\n\n```\nnet_types              = http|https              # 多种网络类型列表，支持 http | https | unix_http | unix_https | letsencrypt | unix_letsencrypt\naddrs                  = 0.0.0.0:80|0.0.0.0:443  # 多个监听地址列表\ntls_certfile           =                         # TLS证书文件路径\ntls_keyfile            =                         # TLS密钥文件路径\nletsencrypt_dir        =                         # Let's Encrypt TLS证书缓存目录\nunix_filemode          = 438                     # UNIX listener的文件权限（438即0666）\nread_timeout           = 0                       # 读取请求数据超时\nwrite_timeout          = 0                       # 写入响应数据超时\nmultipart_maxmemory_mb = 32                      # 接收上传文件时允许使用的最大内存\n\n[router]                                         # 路由配置区\nredirect_trailing_slash   = true                 # 当前请求的URL含`/`后缀如`/foo/`且相应路由不存在时，如存在`/foo`，则自动跳转至`/foo`\nredirect_fixed_path       = true                 # 自动修复URL，如`/FOO` `/..//Foo`均被跳转至`/foo`（依赖redirect_trailing_slash=true）\nhandle_method_not_allowed = true                 # 若开启，当前请求方法不存在时返回405，否则返回404\nhandle_options            = true                 # 若开启，自动应答OPTIONS类请求，可在Faygo中设置默认Handler\n\n[xsrf]                                           # XSRF跨站请求伪造过滤配置区\nenable = false                                   # 是否开启\nkey    = faygoxsrf                             # 加密key\nexpire = 3600                                    # xsrf防伪token有效时长\n\n[session]                                        # Session配置区（详情参考beego session模块）\nenable                 = false                   # 是否开启\nprovider               = memory                  # 数据存储方式\nname                   = faygosessionID        # 客户端存储cookie的名字\ngc_max_lifetime        = 3600                    # 触发GC的时间\nprovider_config        =                         # 配置信息，根据不同的引擎设置不同的配置信息\ncookie_lifetime        = 0                       # 客户端存储的cookie的时间，默认值是0，即浏览器生命周期\nauto_setcookie         = true                    # 是否自动设置关于session的cookie值，一般默认true\ndomain                 =                         # 可以访问此cookie的域名\nenable_sid_in_header   = false                   # 是否将session ID写入Header\nname_in_header         = Faygosessionid        # 将session ID写入Header时的头名称\nenable_sid_in_urlquery = false                   # 是否将session ID写入url的query部分\n\n[apidoc]                                         # API文档\nenable      = true                               # 是否启用\npath        = /apidoc                            # 访问的URL路径\nnolimit     = false                              # 是否不限访问IP\nreal_ip     = false                              # 使用真实客户端的IP进行过滤\nwhitelist   = 192.*|202.122.246.170              # 表示允许带有`192.`前缀或等于`202.122.246.170`的IP访问\ndesc        =                                    # 项目描述\nemail       =                                    # 联系人邮箱\nterms_url   =                                    # 服务条款URL\nlicense     =                                    # 协议类型\nlicense_url =                                    # 协议内容URL\n```\n\n- 应用只有一份全局配置，文件名为 `config/__global__.ini`，配置详情：\n\n```\n[cache]                                          # 文件内存缓存配置区\nenable  = false                                  # 是否开启\nsize_mb = 32                                     # 允许缓存使用的最大内存（单位MB），为0时系统自动设置为512KB\nexpire  = 60                                     # 缓存最大时长\n\n[gzip]                                           # gzip压缩配置区\nenable         = false                           # 是否开启\nmin_length     = 20                              # 进行压缩的最小内容长度\ncompress_level = 1                               # 非文件类响应Body的压缩水平（0-9），注意文件压缩始终为最优压缩比（9）\nmethods        = GET                             # 允许压缩的请求方法，为空时默认为GET\n\n[log]                                            # 日志配置区\nconsole_enable = true                            # 是否启用控制台日志\nconsole_level  = debug                           # 控制台日志打印水平\nfile_enable    = true                            # 是否启用文件日志\nfile_level     = debug                           # 文件日志打印水平\nasync_len      = 0                               # 0表示同步打印，大于0表示异步缓存长度\n```\n\n## Handler结构体字段标签说明\n\ntag   |   key    | required |     value     |   desc\n------|----------|----------|---------------|----------------------------------\nparam |    in    | 有且只有一个 |     path      | （参数位置）为空时自动补全，如URL `http://www.abc.com/a/{path}`\nparam |    in    | 有且只有一个 |     query     | （参数位置）如URL `http://www.abc.com/a?b={query}`\nparam |    in    | 有且只有一个 |     formData  | （参数位置）请求表单，如 `a=123&amp;b={formData}`\nparam |    in    | 有且只有一个 |     body      | （参数位置）请求Body\nparam |    in    | 有且只有一个 |     header    | （参数位置）请求头\nparam |    in    | 有且只有一个 |     cookie    | （参数位置）请求cookie，支持：`*http.Cookie`、`http.Cookie`、`string`、`[]byte`等\nparam |   name   |      否      |     (如`id`)   | 自定义参数名\nparam | required |      否      |   required    | 参数是否必须\nparam |   desc   |      否      |     (如`id`)   | 参数描述\nparam |   len    |      否      |   (如`3:6``3`)  | 字符串类型参数的长度范围\nparam |   range  |      否      |   (如`0:10`)   | 数字类型参数的数值范围\nparam |  nonzero |      否      |    nonzero    | 是否能为零值\nparam |   maxmb  |      否      |    (如`32`)    | 当前`Content-Type`为`multipart/form-data`时，允许使用的最大内存，当设置了多个时使用较大值\nparam |  regexp  |      否      |   (如`^\\w+$`)  | 使用正则验证参数值\nparam |   err    |      否      |(如`密码格式错误`)| 自定义参数绑定或验证的错误信息\n\n**NOTES**:\n* 绑定的对象必须为结构体指针类型\n* 除`*multipart.FileHeader`外，绑定的结构体字段类型不能为指针类型\n* 只有在`param:&quot;type(xxx)&quot;`存在时，`regexp` 和 `param` 标签才有效\n* 若`param`标签不存在，将尝试解析匿名字段\n* 当结构体标签`in`为`formData`且字段类型为`*multipart.FileHeader`、`multipart.FileHeader`、`[]*multipart.FileHeader`或`[]multipart.FileHeader`时，该参数接收文件类型\n* 当结构体标签`in`为`cookie`，字段类型必须为`*http.Cookie`或`http.Cookie`\n* 标签`in(formData)`和`in(body)`不能同时出现在同一结构体\n* 不能存在多个`in(body)`标签\n\n## Handler结构体字段类型说明\n\nbase    |   slice    | special\n--------|------------|-------------------------------------------------------\nstring  |  []string  | [][]byte\nbyte    |  []byte    | [][]uint8\nuint8   |  []uint8   | *multipart.FileHeader (仅`formData`参数使用)\nbool    |  []bool    | []*multipart.FileHeader (仅`formData`参数使用)\nint     |  []int     | *http.Cookie (仅`net/http`下的`cookie`参数使用)\nint8    |  []int8    | http.Cookie (仅`net/http`下的`cookie`参数使用)\nint16   |  []int16   | struct (`body`参数使用或用于匿名字段扩展参数)\nint32   |  []int32   |\nint64   |  []int64   |\nuint8   |  []uint8   |\nuint16  |  []uint16  |\nuint32  |  []uint32  |\nuint64  |  []uint64  |\nfloat32 |  []float32 |\nfloat64 |  []float64 |\n\n## 扩展包\n\n扩展包           |  导入路径\n-----------------|-----------------------------------------------------------------------------------------------------------------\n[各种条码](https://github.com/henrylee2cn/faygo/raw/master/ext/barcode)       | `github.com/henrylee2cn/faygo/ext/barcode`\n[比特单位](https://github.com/henrylee2cn/faygo/raw/master/ext/bitconv)       | `github.com/henrylee2cn/faygo/ext/bitconv`\n[gorm数据库引擎](https://github.com/henrylee2cn/faygo/raw/master/ext/db/gorm) | `github.com/henrylee2cn/faygo/ext/db/gorm`\n[sqlx数据库引擎](https://github.com/henrylee2cn/faygo/raw/master/ext/db/sqlx) | `github.com/henrylee2cn/faygo/ext/db/sqlx`\n[xorm数据库引擎](https://github.com/henrylee2cn/faygo/raw/master/ext/db/xorm) | `github.com/henrylee2cn/faygo/ext/db/xorm`\n[directSQL(配置化SQL引擎)](https://github.com/henrylee2cn/faygo/raw/master/ext/db/directsql) | `github.com/henrylee2cn/faygo/ext/db/directsql`\n[口令算法](https://github.com/henrylee2cn/faygo/raw/master/ext/otp)           | `github.com/henrylee2cn/faygo/ext/otp`\n[UUID](https://github.com/henrylee2cn/faygo/raw/master/ext/uuid)              | `github.com/henrylee2cn/faygo/ext/uuid`\n[Websocket](https://github.com/henrylee2cn/faygo/raw/master/ext/websocket)    | `github.com/henrylee2cn/faygo/ext/websocket`\n[ini配置](https://github.com/henrylee2cn/faygo/raw/master/ini)                | `github.com/henrylee2cn/faygo/ini`\n[定时器](https://github.com/henrylee2cn/faygo/raw/master/ext/cron)            | `github.com/henrylee2cn/faygo/ext/cron`\n[任务工具](https://github.com/henrylee2cn/faygo/raw/master/ext/task)          | `github.com/henrylee2cn/faygo/ext/task`\n[HTTP客户端](https://github.com/henrylee2cn/faygo/raw/master/ext/surfer)      | `github.com/henrylee2cn/faygo/ext/surfer`\n\n\n## 开源协议\n\nFaygo 项目采用商业应用友好的 [Apache2.0](https://github.com/henrylee2cn/faygo/raw/master/LICENSE) 协议发布。",
    "body_html": "<h2 id=\"Faygo        \">Faygo    <a href=\"https://godoc.org/github.com/henrylee2cn/faygo\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"https://godoc.org/github.com/tsuna/gohbase?status.png\" title=\"\" alt=\"GoDoc\"></a>    <img src=\"https://goreportcard.com/badge/github.com/henrylee2cn/faygo\" title=\"\" alt=\"Faygo goreportcard\">\n</h2>\n<p><img src=\"https://github.com/henrylee2cn/faygo/raw/master/doc/faygo_96x96.png\" title=\"\" alt=\"Faygo Favicon\"></p>\n<h2 id=\"概述\">概述</h2>\n<p>Faygo 使用全新架构，是最合适开发 API 接口的 Go Web 框架。用户只需定义一个 struct Handler，就能自动绑定、验证请求参数并生成在线 API 文档。</p>\n\n<p>官方 QQ 群：Go-Web 编程 42730308    <a href=\"http://jq.qq.com/?_wv=1027&amp;k=fzi4p1\" rel=\"nofollow\" target=\"_blank\" title=\"\"><img src=\"http://pub.idqqimg.com/wpa/images/group.png\" title=\"\" alt=\"Go-Web 编程群\"></a></p>\n\n<p><a href=\"https://github.com/henrylee2cn/faydoc\" rel=\"nofollow\" target=\"_blank\" title=\"\">查看《用户手册》</a></p>\n\n<p><img src=\"https://github.com/henrylee2cn/faygo/raw/master/doc/index.png\" title=\"\" alt=\"faygo index\"></p>\n\n<p><img src=\"https://github.com/henrylee2cn/faygo/raw/master/doc/apidoc.png\" title=\"\" alt=\"faygo apidoc\"></p>\n\n<p><img src=\"https://github.com/henrylee2cn/faygo/raw/master/doc/server.png\" title=\"\" alt=\"faygo server\"></p>\n<h2 id=\"最新版本\">最新版本</h2><h3 id=\"版本号\">版本号</h3>\n<p>v1.0</p>\n<h3 id=\"安装要求\">安装要求</h3>\n<p>Go Version ≥1.8</p>\n<h2 id=\"快速使用\">快速使用</h2>\n<ul>\n<li>方式一 源码下载</li>\n</ul>\n <pre class=\"highlight shell\"><code>go get <span class=\"nt\">-u</span> <span class=\"nt\">-v</span> github.com/henrylee2cn/faygo\n</code></pre> \n<ul>\n<li>方式二 部署工具（<a href=\"https://github.com/henrylee2cn/fay\" rel=\"nofollow\" target=\"_blank\" title=\"\">Go to fay</a>）</li>\n</ul>\n <pre class=\"highlight shell\"><code>go get <span class=\"nt\">-u</span> <span class=\"nt\">-v</span> github.com/henrylee2cn/fay\n</code></pre>  <pre class=\"highlight plaintext\"><code>        fay command [arguments]\n\nThe commands are:\n        new        创建、编译和运行（监控文件变化）一个新的faygo项目\n        run        编译和运行（监控文件变化）任意一个已存在的golang项目\n\nfay new appname [apptpl]\n        appname    指定新faygo项目的创建目录\n        apptpl     指定一个faygo项目模板（可选）\n\nfay run [appname]\n        appname    指定待运行的golang项目路径（可选）\n</code></pre> <h2 id=\"框架特性\">框架特性</h2>\n<ul>\n<li>一个 <code>struct Handler</code> 搞定多件事：\n\n<ul>\n<li>定义 Handler/Middleware</li>\n<li>绑定与验证请求参数</li>\n<li>生成 Swagger2.0 API 在线文档</li>\n<li>数据库 ORM 映射</li>\n</ul>\n</li>\n</ul>\n\n<p><img src=\"https://github.com/henrylee2cn/faygo/raw/master/doc/MultiUsage.png\" title=\"\" alt=\"faygo struct handler 多重用途合一\"></p>\n\n<ul>\n<li>Handler 与 Middleware 完全相同，都是实现 Handler 接口（<code>func</code>或<code>struct</code>类型），共同构成路由操作链，只是概念层面的说法不同</li>\n<li>支持多种网络类型：</li>\n</ul>\n <table class=\"table table-bordered table-striped\">\n<tbody><tr>\n<th>网络类型</th>\n<th>配置<code>net_types</code>值</th>\n</tr>\n<tr>\n<td>HTTP</td>\n<td><code>http</code></td>\n</tr>\n<tr>\n<td>HTTPS/HTTP2(TLS)</td>\n<td><code>https</code></td>\n</tr>\n<tr>\n<td>HTTPS/HTTP2(Let's Encrypt TLS)</td>\n<td><code>letsencrypt</code></td>\n</tr>\n<tr>\n<td>HTTPS/HTTP2(Let's Encrypt TLS on UNIX socket)</td>\n<td><code>unix_letsencrypt</code></td>\n</tr>\n<tr>\n<td>HTTP(UNIX socket)</td>\n<td><code>unix_http</code></td>\n</tr>\n<tr>\n<td>HTTPS/HTTP2(TLS on UNIX socket)</td>\n<td><code>unix_https</code></td>\n</tr>\n</tbody></table> \n<ul>\n<li>支持单服务单监听、单服务多监听、多服务多监听等，多个服务的配置信息相互独立</li>\n<li>基于 <code>httprouter</code> 开发高性能路由，支持链式与树形两种注册风格，支持灵活的静态文件路由（如 DirFS、RenderFS、MarkdownFS 等）</li>\n<li>支持平滑关闭、平滑升级，提供 fay 工具进行新建项目、热编译、元编程</li>\n<li>采用最强大的 <code>pongo2</code> 作为 HTML 渲染引擎</li>\n<li>提供近似 LRU 的文件缓存功能，主要用途是静态文件缓存</li>\n<li>跨平台的彩色日志系统，且同时支持 console 和 file 两种输出形式（可以同时使用）</li>\n<li>提供 Session 管理功能</li>\n<li>支持 Gzip 全局配置</li>\n<li>提供 XSRF 跨站请求伪造安全过滤</li>\n<li>大多数功能尽量使用简洁的 ini 进行配置来避免不必要的重新编译，并且这些配置文件支持自动补填默认值</li>\n<li>提供 <code>gorm</code>、<code>xorm</code>、<code>sqlx</code>、<code>directSQL</code>、<code>Websocket</code>、<code>ini</code> 、<code>http client</code> 等很多常用扩展包</li>\n</ul>\n<h2 id=\"简单示例\">简单示例</h2> <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"c\">// &amp;quot;mime/multipart&amp;quot;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">henrylee2cn</span><span class=\"o\">/</span><span class=\"n\">faygo</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">type</span> <span class=\"n\">Index</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span>        <span class=\"kt\">int</span>      <span class=\"s\">`param:&amp;quot;&amp;lt;in:path&amp;gt; &amp;lt;required&amp;gt; &amp;lt;desc:ID&amp;gt; &amp;lt;range: 0:10&amp;gt;&amp;quot;`</span>\n    <span class=\"n\">Title</span>     <span class=\"kt\">string</span>   <span class=\"s\">`param:&amp;quot;&amp;lt;in:query&amp;gt; &amp;lt;nonzero&amp;gt;&amp;quot;`</span>\n    <span class=\"n\">Paragraph</span> <span class=\"p\">[]</span><span class=\"kt\">string</span> <span class=\"s\">`param:&amp;quot;&amp;lt;in:query&amp;gt; &amp;lt;name:p&amp;gt; &amp;lt;len: 1:10&amp;gt; &amp;lt;regexp: ^[\\\\w]*$&amp;gt;&amp;quot;`</span>\n    <span class=\"n\">Cookie</span>    <span class=\"kt\">string</span>   <span class=\"s\">`param:&amp;quot;&amp;lt;in:cookie&amp;gt; &amp;lt;name:faygoID&amp;gt;&amp;quot;`</span>\n    <span class=\"c\">// Picture         *multipart.FileHeader `param:&amp;quot;&amp;lt;in:formData&amp;gt; &amp;lt;name:pic&amp;gt; &amp;lt;maxmb:30&amp;gt;&amp;quot;`</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">*</span><span class=\"n\">Index</span><span class=\"p\">)</span> <span class=\"n\">Serve</span><span class=\"p\">(</span><span class=\"n\">ctx</span> <span class=\"o\">*</span><span class=\"n\">faygo</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"kt\">error</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">CookieParam</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">faygoID</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span> <span class=\"o\">==</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">{</span>\n        <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">SetCookie</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">faygoID</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">())</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">JSON</span><span class=\"p\">(</span><span class=\"m\">200</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">app</span> <span class=\"o\">:=</span> <span class=\"n\">faygo</span><span class=\"o\">.</span><span class=\"n\">New</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">myapp</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"m\">0.1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n    <span class=\"c\">// Register the route in a chain style</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">GET</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"o\">/:</span><span class=\"n\">id</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"nb\">new</span><span class=\"p\">(</span><span class=\"n\">Index</span><span class=\"p\">))</span>\n\n    <span class=\"c\">// Register the route in a tree style</span>\n    <span class=\"c\">// app.Route(</span>\n    <span class=\"c\">//     app.NewGET(&amp;quot;/index/:id&amp;quot;, new(Index)),</span>\n    <span class=\"c\">// )</span>\n\n    <span class=\"c\">// Start the service</span>\n    <span class=\"n\">faygo</span><span class=\"o\">.</span><span class=\"n\">Run</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">/*\nhttp GET:\n    http://localhost:8080/index/1?title=test&amp;amp;p=abc&amp;amp;p=xyz\nresponse:\n    {\n        &amp;quot;Id&amp;quot;: 1,\n        &amp;quot;Title&amp;quot;: &amp;quot;test&amp;quot;,\n        &amp;quot;Paragraph&amp;quot;: [\n            &amp;quot;abc&amp;quot;,\n            &amp;quot;xyz&amp;quot;\n        ],\n        &amp;quot;Cookie&amp;quot;: &amp;quot;2016-11-13 01:14:40.9038005 +0800 CST&amp;quot;\n    }\n*/</span>\n</code></pre> \n<p><a href=\"https://github.com/henrylee2cn/faygo/raw/master/samples\" rel=\"nofollow\" target=\"_blank\" title=\"\">示例库</a></p>\n<h2 id=\"操作和中间件\">操作和中间件</h2>\n<p>操作和中间件是相同的，都是实现了 Handler 接口！</p>\n\n<ul>\n<li>函数类型</li>\n</ul>\n <pre class=\"highlight go\"><code><span class=\"c\">// 不含API文档描述</span>\n<span class=\"k\">func</span> <span class=\"n\">Page</span><span class=\"p\">()</span> <span class=\"n\">faygo</span><span class=\"o\">.</span><span class=\"n\">HandlerFunc</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"n\">ctx</span> <span class=\"o\">*</span><span class=\"n\">faygo</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"kt\">error</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"m\">200</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">faygo</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">// 含API文档描述</span>\n<span class=\"k\">var</span> <span class=\"n\">Page2</span> <span class=\"o\">=</span> <span class=\"n\">faygo</span><span class=\"o\">.</span><span class=\"n\">WrapDoc</span><span class=\"p\">(</span><span class=\"n\">Page</span><span class=\"p\">(),</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">测试页2的注意事项</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">文本</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n</code></pre> \n<ul>\n<li>结构体类型</li>\n</ul>\n <pre class=\"highlight go\"><code><span class=\"c\">// Param操作通过Tag绑定并验证请求参数</span>\n<span class=\"k\">type</span> <span class=\"n\">Param</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span>    <span class=\"kt\">int</span>    <span class=\"s\">`param:&amp;quot;&amp;lt;in:path&amp;gt; &amp;lt;required&amp;gt; &amp;lt;desc:ID&amp;gt; &amp;lt;range: 0:10&amp;gt;&amp;quot;`</span>\n    <span class=\"n\">Title</span> <span class=\"kt\">string</span> <span class=\"s\">`param:&amp;quot;&amp;lt;in:query&amp;gt;&amp;quot;`</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">// Serve实现Handler接口</span>\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">p</span> <span class=\"o\">*</span><span class=\"n\">Param</span><span class=\"p\">)</span> <span class=\"n\">Serve</span><span class=\"p\">(</span><span class=\"n\">ctx</span> <span class=\"o\">*</span><span class=\"n\">faygo</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"kt\">error</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">JSON</span><span class=\"p\">(</span><span class=\"m\">200</span><span class=\"p\">,</span>\n        <span class=\"n\">faygo</span><span class=\"o\">.</span><span class=\"n\">Map</span><span class=\"p\">{</span>\n            <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Struct</span> <span class=\"n\">Params</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span>    <span class=\"n\">p</span><span class=\"p\">,</span>\n            <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Additional</span> <span class=\"n\">Param</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">PathParam</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">additional</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;),</span>\n        <span class=\"p\">},</span> <span class=\"no\">true</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">// Doc实现API文档接口（可选）</span>\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">p</span> <span class=\"o\">*</span><span class=\"n\">Param</span><span class=\"p\">)</span> <span class=\"n\">Doc</span><span class=\"p\">()</span> <span class=\"n\">faygo</span><span class=\"o\">.</span><span class=\"n\">Doc</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">faygo</span><span class=\"o\">.</span><span class=\"n\">Doc</span><span class=\"p\">{</span>\n        <span class=\"c\">// 向API文档声明接口注意事项</span>\n        <span class=\"n\">Note</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">param</span> <span class=\"n\">desc</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n        <span class=\"c\">// 向API文档声明响应内容格式</span>\n        <span class=\"n\">Return</span><span class=\"o\">:</span> <span class=\"n\">faygo</span><span class=\"o\">.</span><span class=\"n\">JSONMsg</span><span class=\"p\">{</span>\n            <span class=\"n\">Code</span><span class=\"o\">:</span> <span class=\"m\">1</span><span class=\"p\">,</span>\n            <span class=\"n\">Info</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">success</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n        <span class=\"p\">},</span>\n        <span class=\"c\">// 向API文档增加额外的请求参数声明（可选）</span>\n        <span class=\"n\">Params</span><span class=\"o\">:</span> <span class=\"p\">[]</span><span class=\"n\">faygo</span><span class=\"o\">.</span><span class=\"n\">ParamInfo</span><span class=\"p\">{</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">Name</span><span class=\"o\">:</span>  <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">additional</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n                <span class=\"n\">In</span><span class=\"o\">:</span>    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">path</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n                <span class=\"n\">Model</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">a</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n                <span class=\"n\">Desc</span><span class=\"o\">:</span>  <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">defined</span> <span class=\"n\">by</span> <span class=\"n\">the</span> <span class=\"s\">`Doc()`</span> <span class=\"n\">method</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre> <h2 id=\"过滤函数\">过滤函数</h2>\n<p>过滤函数必须是 HandlerFunc 类型！</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">Root2Index</span><span class=\"p\">(</span><span class=\"n\">ctx</span> <span class=\"o\">*</span><span class=\"n\">faygo</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"kt\">error</span> <span class=\"p\">{</span>\n    <span class=\"c\">// 不允许直接访问`/index`</span>\n    <span class=\"k\">if</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">{</span>\n        <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">Stop</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"no\">nil</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">if</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">{</span>\n        <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">ModifyPath</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"no\">nil</span>\n<span class=\"p\">}</span>\n</code></pre> <h2 id=\"路由注册\">路由注册</h2>\n<ul>\n<li>树状</li>\n</ul>\n <pre class=\"highlight go\"><code><span class=\"c\">// 新建应用服务，参数：名称、版本</span>\n<span class=\"k\">var</span> <span class=\"n\">app1</span> <span class=\"o\">=</span> <span class=\"n\">faygo</span><span class=\"o\">.</span><span class=\"n\">New</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">myapp1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"m\">1.0</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n<span class=\"c\">// 路由</span>\n<span class=\"n\">app1</span><span class=\"o\">.</span><span class=\"n\">Filter</span><span class=\"p\">(</span><span class=\"n\">Root2Index</span><span class=\"p\">)</span><span class=\"o\">.</span>\n    <span class=\"n\">Route</span><span class=\"p\">(</span>\n        <span class=\"n\">app1</span><span class=\"o\">.</span><span class=\"n\">NewNamedGET</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">测试页1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">page</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">Page</span><span class=\"p\">()),</span>\n        <span class=\"n\">app1</span><span class=\"o\">.</span><span class=\"n\">NewNamedGET</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">测试页2</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">page2</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">Page2</span><span class=\"p\">),</span>\n        <span class=\"n\">app1</span><span class=\"o\">.</span><span class=\"n\">NewGroup</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">home</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n            <span class=\"n\">app1</span><span class=\"o\">.</span><span class=\"n\">NewNamedGET</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">test</span> <span class=\"n\">param</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">param</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">Param</span><span class=\"p\">{</span>\n                <span class=\"c\">// 为绑定的参数设定API文档中缺省值（可选）</span>\n                <span class=\"n\">Id</span><span class=\"o\">:</span>    <span class=\"m\">1</span><span class=\"p\">,</span>\n                <span class=\"n\">Title</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">test</span> <span class=\"n\">param</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n            <span class=\"p\">}),</span>\n        <span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n</code></pre> \n<ul>\n<li>链状</li>\n</ul>\n <pre class=\"highlight go\"><code><span class=\"c\">// 新建应用服务，参数：名称、版本</span>\n<span class=\"k\">var</span> <span class=\"n\">app2</span> <span class=\"o\">=</span> <span class=\"n\">faygo</span><span class=\"o\">.</span><span class=\"n\">New</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">myapp2</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"m\">1.0</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n<span class=\"c\">// 路由</span>\n<span class=\"n\">app2</span><span class=\"o\">.</span><span class=\"n\">Filter</span><span class=\"p\">(</span><span class=\"n\">Root2Index</span><span class=\"p\">)</span>\n<span class=\"n\">app2</span><span class=\"o\">.</span><span class=\"n\">NamedGET</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">test</span> <span class=\"n\">page</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">page</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">Page</span><span class=\"p\">())</span>\n<span class=\"n\">app2</span><span class=\"o\">.</span><span class=\"n\">NamedGET</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">test</span> <span class=\"n\">page2</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">page2</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">Page2</span><span class=\"p\">)</span>\n<span class=\"n\">app2</span><span class=\"o\">.</span><span class=\"n\">Group</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">home</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">app2</span><span class=\"o\">.</span><span class=\"n\">NamedGET</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">test</span> <span class=\"n\">param</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">param</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">Param</span><span class=\"p\">{</span>\n        <span class=\"c\">// 为绑定的参数设定API文档中缺省值（可选）</span>\n        <span class=\"n\">Id</span><span class=\"o\">:</span>    <span class=\"m\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">Title</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">test</span> <span class=\"n\">param</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n    <span class=\"p\">})</span>\n<span class=\"p\">}</span>\n</code></pre> <h2 id=\"平滑关闭与重启\">平滑关闭与重启</h2>\n<ul>\n<li>平滑关闭</li>\n</ul>\n <pre class=\"highlight shell\"><code><span class=\"nb\">kill</span> <span class=\"o\">[</span>pid]\n</code></pre> \n<ul>\n<li>平滑重启</li>\n</ul>\n <pre class=\"highlight shell\"><code><span class=\"nb\">kill</span> <span class=\"nt\">-USR2</span> <span class=\"o\">[</span>pid]\n</code></pre> <h2 id=\"配置文件说明\">配置文件说明</h2>\n<ul>\n<li>应用的各服务均有单独一份配置，其文件名格式 <code>config/{appname}[_{version}].ini</code>，配置详情：</li>\n</ul>\n <pre class=\"highlight plaintext\"><code>net_types              = http|https              # 多种网络类型列表，支持 http | https | unix_http | unix_https | letsencrypt | unix_letsencrypt\naddrs                  = 0.0.0.0:80|0.0.0.0:443  # 多个监听地址列表\ntls_certfile           =                         # TLS证书文件路径\ntls_keyfile            =                         # TLS密钥文件路径\nletsencrypt_dir        =                         # Let's Encrypt TLS证书缓存目录\nunix_filemode          = 438                     # UNIX listener的文件权限（438即0666）\nread_timeout           = 0                       # 读取请求数据超时\nwrite_timeout          = 0                       # 写入响应数据超时\nmultipart_maxmemory_mb = 32                      # 接收上传文件时允许使用的最大内存\n\n[router]                                         # 路由配置区\nredirect_trailing_slash   = true                 # 当前请求的URL含`/`后缀如`/foo/`且相应路由不存在时，如存在`/foo`，则自动跳转至`/foo`\nredirect_fixed_path       = true                 # 自动修复URL，如`/FOO` `/..//Foo`均被跳转至`/foo`（依赖redirect_trailing_slash=true）\nhandle_method_not_allowed = true                 # 若开启，当前请求方法不存在时返回405，否则返回404\nhandle_options            = true                 # 若开启，自动应答OPTIONS类请求，可在Faygo中设置默认Handler\n\n[xsrf]                                           # XSRF跨站请求伪造过滤配置区\nenable = false                                   # 是否开启\nkey    = faygoxsrf                             # 加密key\nexpire = 3600                                    # xsrf防伪token有效时长\n\n[session]                                        # Session配置区（详情参考beego session模块）\nenable                 = false                   # 是否开启\nprovider               = memory                  # 数据存储方式\nname                   = faygosessionID        # 客户端存储cookie的名字\ngc_max_lifetime        = 3600                    # 触发GC的时间\nprovider_config        =                         # 配置信息，根据不同的引擎设置不同的配置信息\ncookie_lifetime        = 0                       # 客户端存储的cookie的时间，默认值是0，即浏览器生命周期\nauto_setcookie         = true                    # 是否自动设置关于session的cookie值，一般默认true\ndomain                 =                         # 可以访问此cookie的域名\nenable_sid_in_header   = false                   # 是否将session ID写入Header\nname_in_header         = Faygosessionid        # 将session ID写入Header时的头名称\nenable_sid_in_urlquery = false                   # 是否将session ID写入url的query部分\n\n[apidoc]                                         # API文档\nenable      = true                               # 是否启用\npath        = /apidoc                            # 访问的URL路径\nnolimit     = false                              # 是否不限访问IP\nreal_ip     = false                              # 使用真实客户端的IP进行过滤\nwhitelist   = 192.*|202.122.246.170              # 表示允许带有`192.`前缀或等于`202.122.246.170`的IP访问\ndesc        =                                    # 项目描述\nemail       =                                    # 联系人邮箱\nterms_url   =                                    # 服务条款URL\nlicense     =                                    # 协议类型\nlicense_url =                                    # 协议内容URL\n</code></pre> \n<ul>\n<li>应用只有一份全局配置，文件名为 <code>config/__global__.ini</code>，配置详情：</li>\n</ul>\n <pre class=\"highlight plaintext\"><code>[cache]                                          # 文件内存缓存配置区\nenable  = false                                  # 是否开启\nsize_mb = 32                                     # 允许缓存使用的最大内存（单位MB），为0时系统自动设置为512KB\nexpire  = 60                                     # 缓存最大时长\n\n[gzip]                                           # gzip压缩配置区\nenable         = false                           # 是否开启\nmin_length     = 20                              # 进行压缩的最小内容长度\ncompress_level = 1                               # 非文件类响应Body的压缩水平（0-9），注意文件压缩始终为最优压缩比（9）\nmethods        = GET                             # 允许压缩的请求方法，为空时默认为GET\n\n[log]                                            # 日志配置区\nconsole_enable = true                            # 是否启用控制台日志\nconsole_level  = debug                           # 控制台日志打印水平\nfile_enable    = true                            # 是否启用文件日志\nfile_level     = debug                           # 文件日志打印水平\nasync_len      = 0                               # 0表示同步打印，大于0表示异步缓存长度\n</code></pre> <h2 id=\"Handler结构体字段标签说明\">Handler 结构体字段标签说明</h2> <table class=\"table table-bordered table-striped\">\n<tbody><tr>\n<th>tag</th>\n<th>key</th>\n<th>required</th>\n<th>value</th>\n<th>desc</th>\n</tr>\n<tr>\n<td>param</td>\n<td>in</td>\n<td>有且只有一个</td>\n<td>path</td>\n<td>（参数位置）为空时自动补全，如 URL <code>http://www.abc.com/a/{path}</code>\n</td>\n</tr>\n<tr>\n<td>param</td>\n<td>in</td>\n<td>有且只有一个</td>\n<td>query</td>\n<td>（参数位置）如 URL <code>http://www.abc.com/a?b={query}</code>\n</td>\n</tr>\n<tr>\n<td>param</td>\n<td>in</td>\n<td>有且只有一个</td>\n<td>formData</td>\n<td>（参数位置）请求表单，如 <code>a=123&amp;amp;b={formData}</code>\n</td>\n</tr>\n<tr>\n<td>param</td>\n<td>in</td>\n<td>有且只有一个</td>\n<td>body</td>\n<td>（参数位置）请求 Body</td>\n</tr>\n<tr>\n<td>param</td>\n<td>in</td>\n<td>有且只有一个</td>\n<td>header</td>\n<td>（参数位置）请求头</td>\n</tr>\n<tr>\n<td>param</td>\n<td>in</td>\n<td>有且只有一个</td>\n<td>cookie</td>\n<td>（参数位置）请求 cookie，支持：<code>*http.Cookie</code>、<code>http.Cookie</code>、<code>string</code>、<code>[]byte</code>等</td>\n</tr>\n<tr>\n<td>param</td>\n<td>name</td>\n<td>否</td>\n<td>(如<code>id</code>)</td>\n<td>自定义参数名</td>\n</tr>\n<tr>\n<td>param</td>\n<td>required</td>\n<td>否</td>\n<td>required</td>\n<td>参数是否必须</td>\n</tr>\n<tr>\n<td>param</td>\n<td>desc</td>\n<td>否</td>\n<td>(如<code>id</code>)</td>\n<td>参数描述</td>\n</tr>\n<tr>\n<td>param</td>\n<td>len</td>\n<td>否</td>\n<td>(如<code>3:6</code><code>3</code>)</td>\n<td>字符串类型参数的长度范围</td>\n</tr>\n<tr>\n<td>param</td>\n<td>range</td>\n<td>否</td>\n<td>(如<code>0:10</code>)</td>\n<td>数字类型参数的数值范围</td>\n</tr>\n<tr>\n<td>param</td>\n<td>nonzero</td>\n<td>否</td>\n<td>nonzero</td>\n<td>是否能为零值</td>\n</tr>\n<tr>\n<td>param</td>\n<td>maxmb</td>\n<td>否</td>\n<td>(如<code>32</code>)</td>\n<td>当前<code>Content-Type</code>为<code>multipart/form-data</code>时，允许使用的最大内存，当设置了多个时使用较大值</td>\n</tr>\n<tr>\n<td>param</td>\n<td>regexp</td>\n<td>否</td>\n<td>(如<code>^\\w+$</code>)</td>\n<td>使用正则验证参数值</td>\n</tr>\n<tr>\n<td>param</td>\n<td>err</td>\n<td>否</td>\n<td>(如<code>密码格式错误</code>)</td>\n<td>自定义参数绑定或验证的错误信息</td>\n</tr>\n</tbody></table> \n<p><strong>NOTES</strong>:</p>\n\n<ul>\n<li>绑定的对象必须为结构体指针类型</li>\n<li>除<code>*multipart.FileHeader</code>外，绑定的结构体字段类型不能为指针类型</li>\n<li>只有在<code>param:&amp;quot;type(xxx)&amp;quot;</code>存在时，<code>regexp</code> 和 <code>param</code> 标签才有效</li>\n<li>若<code>param</code>标签不存在，将尝试解析匿名字段</li>\n<li>当结构体标签<code>in</code>为<code>formData</code>且字段类型为<code>*multipart.FileHeader</code>、<code>multipart.FileHeader</code>、<code>[]*multipart.FileHeader</code>或<code>[]multipart.FileHeader</code>时，该参数接收文件类型</li>\n<li>当结构体标签<code>in</code>为<code>cookie</code>，字段类型必须为<code>*http.Cookie</code>或<code>http.Cookie</code>\n</li>\n<li>标签<code>in(formData)</code>和<code>in(body)</code>不能同时出现在同一结构体</li>\n<li>不能存在多个<code>in(body)</code>标签</li>\n</ul>\n<h2 id=\"Handler结构体字段类型说明\">Handler 结构体字段类型说明</h2> <table class=\"table table-bordered table-striped\">\n<tbody><tr>\n<th>base</th>\n<th>slice</th>\n<th>special</th>\n</tr>\n<tr>\n<td>string</td>\n<td>[] string</td>\n<td>[][] byte</td>\n</tr>\n<tr>\n<td>byte</td>\n<td>[] byte</td>\n<td>[][] uint8</td>\n</tr>\n<tr>\n<td>uint8</td>\n<td>[] uint8</td>\n<td>*multipart.FileHeader (仅<code>formData</code>参数使用)</td>\n</tr>\n<tr>\n<td>bool</td>\n<td>[] bool</td>\n<td>[]*multipart.FileHeader (仅<code>formData</code>参数使用)</td>\n</tr>\n<tr>\n<td>int</td>\n<td>[] int</td>\n<td>*http.Cookie (仅<code>net/http</code>下的<code>cookie</code>参数使用)</td>\n</tr>\n<tr>\n<td>int8</td>\n<td>[] int8</td>\n<td>http.Cookie (仅<code>net/http</code>下的<code>cookie</code>参数使用)</td>\n</tr>\n<tr>\n<td>int16</td>\n<td>[] int16</td>\n<td>struct (<code>body</code>参数使用或用于匿名字段扩展参数)</td>\n</tr>\n<tr>\n<td>int32</td>\n<td>[] int32</td>\n<td></td>\n</tr>\n<tr>\n<td>int64</td>\n<td>[] int64</td>\n<td></td>\n</tr>\n<tr>\n<td>uint8</td>\n<td>[] uint8</td>\n<td></td>\n</tr>\n<tr>\n<td>uint16</td>\n<td>[] uint16</td>\n<td></td>\n</tr>\n<tr>\n<td>uint32</td>\n<td>[] uint32</td>\n<td></td>\n</tr>\n<tr>\n<td>uint64</td>\n<td>[] uint64</td>\n<td></td>\n</tr>\n<tr>\n<td>float32</td>\n<td>[] float32</td>\n<td></td>\n</tr>\n<tr>\n<td>float64</td>\n<td>[] float64</td>\n<td></td>\n</tr>\n</tbody></table> <h2 id=\"扩展包\">扩展包</h2> <table class=\"table table-bordered table-striped\">\n<tbody><tr>\n<th>扩展包</th>\n<th>导入路径</th>\n</tr>\n<tr>\n<td><a href=\"https://github.com/henrylee2cn/faygo/raw/master/ext/barcode\" rel=\"nofollow\" target=\"_blank\" title=\"\">各种条码</a></td>\n<td><code>github.com/henrylee2cn/faygo/ext/barcode</code></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/henrylee2cn/faygo/raw/master/ext/bitconv\" rel=\"nofollow\" target=\"_blank\" title=\"\">比特单位</a></td>\n<td><code>github.com/henrylee2cn/faygo/ext/bitconv</code></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/henrylee2cn/faygo/raw/master/ext/db/gorm\" rel=\"nofollow\" target=\"_blank\" title=\"\">gorm 数据库引擎</a></td>\n<td><code>github.com/henrylee2cn/faygo/ext/db/gorm</code></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/henrylee2cn/faygo/raw/master/ext/db/sqlx\" rel=\"nofollow\" target=\"_blank\" title=\"\">sqlx 数据库引擎</a></td>\n<td><code>github.com/henrylee2cn/faygo/ext/db/sqlx</code></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/henrylee2cn/faygo/raw/master/ext/db/xorm\" rel=\"nofollow\" target=\"_blank\" title=\"\">xorm 数据库引擎</a></td>\n<td><code>github.com/henrylee2cn/faygo/ext/db/xorm</code></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/henrylee2cn/faygo/raw/master/ext/db/directsql\" rel=\"nofollow\" target=\"_blank\" title=\"\">directSQL(配置化 SQL 引擎)</a></td>\n<td><code>github.com/henrylee2cn/faygo/ext/db/directsql</code></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/henrylee2cn/faygo/raw/master/ext/otp\" rel=\"nofollow\" target=\"_blank\" title=\"\">口令算法</a></td>\n<td><code>github.com/henrylee2cn/faygo/ext/otp</code></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/henrylee2cn/faygo/raw/master/ext/uuid\" rel=\"nofollow\" target=\"_blank\" title=\"\">UUID</a></td>\n<td><code>github.com/henrylee2cn/faygo/ext/uuid</code></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/henrylee2cn/faygo/raw/master/ext/websocket\" rel=\"nofollow\" target=\"_blank\" title=\"\">Websocket</a></td>\n<td><code>github.com/henrylee2cn/faygo/ext/websocket</code></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/henrylee2cn/faygo/raw/master/ini\" rel=\"nofollow\" target=\"_blank\" title=\"\">ini 配置</a></td>\n<td><code>github.com/henrylee2cn/faygo/ini</code></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/henrylee2cn/faygo/raw/master/ext/cron\" rel=\"nofollow\" target=\"_blank\" title=\"\">定时器</a></td>\n<td><code>github.com/henrylee2cn/faygo/ext/cron</code></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/henrylee2cn/faygo/raw/master/ext/task\" rel=\"nofollow\" target=\"_blank\" title=\"\">任务工具</a></td>\n<td><code>github.com/henrylee2cn/faygo/ext/task</code></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/henrylee2cn/faygo/raw/master/ext/surfer\" rel=\"nofollow\" target=\"_blank\" title=\"\">HTTP 客户端</a></td>\n<td><code>github.com/henrylee2cn/faygo/ext/surfer</code></td>\n</tr>\n</tbody></table> <h2 id=\"开源协议\">开源协议</h2>\n<p>Faygo 项目采用商业应用友好的 <a href=\"https://github.com/henrylee2cn/faygo/raw/master/LICENSE\" rel=\"nofollow\" target=\"_blank\" title=\"\">Apache2.0</a> 协议发布。</p>",
    "hits": 584,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 561,
    "title": "前两天在 Leetcode 做题时发现一个问题，特来请教一下。",
    "created_at": "2017-01-06 15:30:51",
    "updated_at": "2017-08-25 19:06:04",
    "replied_at": "2017-08-25 19:06:04",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2629,
    "last_reply_user_login": "katherine",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1194,
    "user": "{\"id\": 1194, \"name\": \"dcb9\", \"login\": \"dcb9\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "把一个字符串转成 int 类型 https://leetcode.com/problems/string-to-integer-atoi/\n\nGo 里面获取当前环境的 int 最大值应该是使用：\n``` go\n// https://groups.google.com/forum/#!msg/golang-nuts/a9PitPAHSSU/ziQw1-QHw3EJ\nconst MaxUint = ^uint(0) \nconst MaxInt = int(MaxUint &gt;&gt; 1) \nconst MinInt = -MaxInt - 1\n\nfunc myAtoi(str string) int {\n    return MaxInt\n}\n```\n\n得到的最大的 int 值为 9223372036854775807，所以如果值比这个大的，应该就这个最大的值来替代，于是我的代码在测试的时候未通过：\n\nBut in case of \nInput:\n&quot;2147483648&quot;\nOutput:\n2147483648\nExpected:\n2147483647\n\n我程序觉得 2147483648 这个数字还没有达到 int 的最大值，所以是可以正确的，所以我感觉是不是 Leetcode 出的题有问题啊，如果说他确定要是 int32 的他应该把 返回值那里的类型改成 int32，而不是 int。\n\n不知道我理解的对不对。。",
    "body_html": "<p>把一个字符串转成 int 类型 <a href=\"https://leetcode.com/problems/string-to-integer-atoi/\" rel=\"nofollow\" target=\"_blank\">https://leetcode.com/problems/string-to-integer-atoi/</a></p>\n\n<p>Go 里面获取当前环境的 int 最大值应该是使用：</p>\n <pre class=\"highlight go\"><code><span class=\"c\">// https://groups.google.com/forum/#!msg/golang-nuts/a9PitPAHSSU/ziQw1-QHw3EJ</span>\n<span class=\"k\">const</span> <span class=\"n\">MaxUint</span> <span class=\"o\">=</span> <span class=\"o\">^</span><span class=\"kt\">uint</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">)</span> \n<span class=\"k\">const</span> <span class=\"n\">MaxInt</span> <span class=\"o\">=</span> <span class=\"kt\">int</span><span class=\"p\">(</span><span class=\"n\">MaxUint</span> <span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"m\">1</span><span class=\"p\">)</span> \n<span class=\"k\">const</span> <span class=\"n\">MinInt</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">MaxInt</span> <span class=\"o\">-</span> <span class=\"m\">1</span>\n\n<span class=\"k\">func</span> <span class=\"n\">myAtoi</span><span class=\"p\">(</span><span class=\"n\">str</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"kt\">int</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">MaxInt</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>得到的最大的 int 值为 9223372036854775807，所以如果值比这个大的，应该就这个最大的值来替代，于是我的代码在测试的时候未通过：</p>\n\n<p>But in case of \nInput:\n\"2147483648\"\nOutput:\n2147483648\nExpected:\n2147483647</p>\n\n<p>我程序觉得 2147483648 这个数字还没有达到 int 的最大值，所以是可以正确的，所以我感觉是不是 Leetcode 出的题有问题啊，如果说他确定要是 int32 的他应该把 返回值那里的类型改成 int32，而不是 int。</p>\n\n<p>不知道我理解的对不对。。</p>",
    "hits": 494,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 562,
    "title": "2017年 GopherChina 大会期望在哪里召开？",
    "created_at": "2017-01-06 18:56:48",
    "updated_at": "2017-02-04 19:49:44",
    "replied_at": "2017-02-04 19:49:44",
    "replies_count": 21,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1413,
    "last_reply_user_login": "appleboy",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "希望大家抽空投个票：http://vote.weibo.com/poll/137686663",
    "body_html": "<p>希望大家抽空投个票：<a href=\"http://vote.weibo.com/poll/137686663\" rel=\"nofollow\" target=\"_blank\">http://vote.weibo.com/poll/137686663</a></p>",
    "hits": 588,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 563,
    "title": "从java转过来的，关于构建问题",
    "created_at": "2017-01-08 11:23:27",
    "updated_at": "2017-01-09 14:21:00",
    "replied_at": "2017-01-09 14:21:00",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1531,
    "user": "{\"id\": 1531, \"name\": \"willian\", \"login\": \"willian\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "1:本人是小白，有过java基础\n2:在看了go的官网后，知道go推荐一个gopath和一个workplace，并以github.com/username/projectname\n来构建一个library，所以的library都是通过go get install 生成.a文件的，请问有没有一个像gradle的项目构建工具，以及一个中心library库，还是说github就是go的library库\n3:请大家指点下应该怎么构建一个工程\n4:鉴于github网速，本人是oschina较多，请问怎么go get install oschina的library\n\n小白问题，希望各位有时间解答一下 ， 非常感谢",
    "body_html": "<p>1:本人是小白，有过 java 基础\n2:在看了 go 的官网后，知道 go 推荐一个 gopath 和一个 workplace，并以 github.com/username/projectname\n来构建一个 library，所以的 library 都是通过 go get install 生成.a 文件的，请问有没有一个像 gradle 的项目构建工具，以及一个中心 library 库，还是说 github 就是 go 的 library 库\n3:请大家指点下应该怎么构建一个工程\n4:鉴于 github 网速，本人是 oschina 较多，请问怎么 go get install oschina 的 library</p>\n\n<p>小白问题，希望各位有时间解答一下 ， 非常感谢</p>",
    "hits": 339,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 564,
    "title": "从java转过来的，关于构建问题",
    "created_at": "2017-01-08 11:23:27",
    "updated_at": "2017-08-16 13:38:32",
    "replied_at": "2017-08-16 13:38:20",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2012,
    "last_reply_user_login": "plain",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1531,
    "user": "{\"id\": 1531, \"name\": \"willian\", \"login\": \"willian\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "1:本人是小白，有过java基础\n2:在看了go的官网后，知道go推荐一个gopath和一个workplace，并以github.com/username/projectname\n来构建一个library，所以的library都是通过go get install 生成.a文件的，请问有没有一个像gradle的项目构建工具，以及一个中心library库，还是说github就是go的library库\n3:请大家指点下应该怎么构建一个工程\n4:鉴于github网速，本人是oschina较多，请问怎么go get install oschina的library\n\n小白问题，希望各位有时间解答一下 ， 非常感谢",
    "body_html": "<p>1:本人是小白，有过 java 基础\n2:在看了 go 的官网后，知道 go 推荐一个 gopath 和一个 workplace，并以 github.com/username/projectname\n来构建一个 library，所以的 library 都是通过 go get install 生成.a 文件的，请问有没有一个像 gradle 的项目构建工具，以及一个中心 library 库，还是说 github 就是 go 的 library 库\n3:请大家指点下应该怎么构建一个工程\n4:鉴于 github 网速，本人是 oschina 较多，请问怎么 go get install oschina 的 library</p>\n\n<p>小白问题，希望各位有时间解答一下 ， 非常感谢</p>",
    "hits": 444,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 565,
    "title": "prod模式下修改注解路由不生效",
    "created_at": "2017-01-09 11:03:30",
    "updated_at": "2017-01-09 13:45:15",
    "replied_at": "2017-01-09 13:45:15",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 70,
    "user": "{\"id\": 70, \"name\": \"Samuier\", \"login\": \"Samuier\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "bee  v1.5.2\n├── Beego     : 1.7.1\n├── GoVersion : go1.7.3\n├── GOOS      : linux\n├── GOARCH    : amd64\n├── NumCPU    : 4\n├── GOPATH    : /home/zzz02/GoCode\n├── GOROOT    : /usr/local/go\n├── Compiler  : gc\n└── Date      : Monday, 9 Jan 2017\n\n\n```\nrunmode = prod\n```\n\n在controller中修改// @router /getone [post] 为// @router /getone111 [post]发现不生效。访问getone111报404，只有访问getone才能访问到(使用bee run启动)。",
    "body_html": "<p>bee  v1.5.2\n├── Beego     : 1.7.1\n├── GoVersion : go1.7.3\n├── GOOS      : linux\n├── GOARCH    : amd64\n├── NumCPU    : 4\n├── GOPATH    : /home/zzz02/GoCode\n├── GOROOT    : /usr/local/go\n├── Compiler  : gc\n└── Date      : Monday, 9 Jan 2017</p>\n <pre class=\"highlight plaintext\"><code>runmode = prod\n</code></pre> \n<p>在 controller 中修改// <a href=\"/router\" class=\"user-mention\" title=\"@router\"><i>@</i>router</a> /getone [post] 为// <a href=\"/router\" class=\"user-mention\" title=\"@router\"><i>@</i>router</a> /getone111 [post] 发现不生效。访问 getone111 报 404，只有访问 getone 才能访问到 (使用 bee run 启动)。</p>",
    "hits": 331,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 566,
    "title": "求bytes-转-&gt;string的高效办法！！！",
    "created_at": "2017-01-09 11:19:40",
    "updated_at": "2017-01-15 22:28:16",
    "replied_at": "2017-01-15 22:28:16",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1364,
    "last_reply_user_login": "lrita",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "总觉得很慢的很慢",
    "body_html": "<p>总觉得很慢的很慢</p>",
    "hits": 506,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 567,
    "title": "go get 报i/o timeout错误",
    "created_at": "2017-01-09 14:21:04",
    "updated_at": "2017-03-16 11:02:18",
    "replied_at": "2017-01-09 14:44:37",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1531,
    "last_reply_user_login": "willian",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1531,
    "user": "{\"id\": 1531, \"name\": \"willian\", \"login\": \"willian\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Fetching https://golang.org/x/net/html?go-get=1\nhttps fetch failed: Get https://golang.org/x/net/html?go-get=1: dial tcp 216.239.37.1:443: i/o timeout\npackage golang.org/x/net/html: unrecognized import path &quot;golang.org/x/net/html&quot; (https fetch: Get https://golang.org/x/net/html?go-get=1: dial tcp 216.239.37.1:443: i/o timeout)\n\n请问各位怎么解决这种问题",
    "body_html": "<p>Fetching <a href=\"https://golang.org/x/net/html?go-get=1\" rel=\"nofollow\" target=\"_blank\">https://golang.org/x/net/html?go-get=1</a>\nhttps fetch failed: Get <a href=\"https://golang.org/x/net/html?go-get=1:\" rel=\"nofollow\" target=\"_blank\">https://golang.org/x/net/html?go-get=1:</a> dial tcp 216.239.37.1:443: i/o timeout\npackage golang.org/x/net/html: unrecognized import path \"golang.org/x/net/html\" (https fetch: Get <a href=\"https://golang.org/x/net/html?go-get=1:\" rel=\"nofollow\" target=\"_blank\">https://golang.org/x/net/html?go-get=1:</a> dial tcp 216.239.37.1:443: i/o timeout)</p>\n\n<p>请问各位怎么解决这种问题</p>",
    "hits": 1039,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 568,
    "title": "也是struct转byte的问题",
    "created_at": "2017-01-09 15:38:12",
    "updated_at": "2017-01-10 17:13:32",
    "replied_at": "2017-01-10 17:13:32",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 569,
    "last_reply_user_login": "philc",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1401,
    "user": "{\"id\": 1401, \"name\": \"iframe\", \"login\": \"iframe\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\ntype EvLogin struct {\n\tTimeStamp    []byte\n\tSerialNumber uint16\n\tIccid        string\n\tBatterCnt    byte\n\tBatteryLen   byte\n\tBatterNum    string\n}\n\ntype EvMsg struct {\n\tHeadflag   string\n\tMsg_type   byte\n\tRes_flag   byte\n\tVin        string\n\tEncryption byte\n\tLen        uint16\n\tPk         []byte\n\tCheck_code byte\n}\n\n\tconn, err := net.Dial(&quot;tcp&quot;, Addr)\n\tif err != nil {\n\t\tfmt.Println(&quot;tcp connect error:&quot;, err)\n\t\treturn\n\t}\n\tdefer conn.Close()\n\n\tpk := EvMsg{}\n\tpk.Headflag = &quot;##&quot;\n\n\tpk.Msg_type = 0x01\n\tpk.Res_flag = 0xFE\n\tpk.Vin = &quot;12345678901234567&quot;\n\tpk.Encryption = 0x01\n\tlogin := EvLogin{}\n\tlogin.TimeStamp = []byte(&quot;170106085901&quot;)\n\tlogin.SerialNumber = 1\n\tlogin.Iccid = &quot;kkkk&quot;\n\n```\n\n想通过结构体赋值，然后fmt.Fprintf将消息发送出去，但是结构体不能直接转byte，请问应该怎么作阿，上网上查了好久也没搞懂～～",
    "body_html": "<pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">EvLogin</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">TimeStamp</span>    <span class=\"p\">[]</span><span class=\"kt\">byte</span>\n    <span class=\"n\">SerialNumber</span> <span class=\"kt\">uint16</span>\n    <span class=\"n\">Iccid</span>        <span class=\"kt\">string</span>\n    <span class=\"n\">BatterCnt</span>    <span class=\"kt\">byte</span>\n    <span class=\"n\">BatteryLen</span>   <span class=\"kt\">byte</span>\n    <span class=\"n\">BatterNum</span>    <span class=\"kt\">string</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">type</span> <span class=\"n\">EvMsg</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Headflag</span>   <span class=\"kt\">string</span>\n    <span class=\"n\">Msg_type</span>   <span class=\"kt\">byte</span>\n    <span class=\"n\">Res_flag</span>   <span class=\"kt\">byte</span>\n    <span class=\"n\">Vin</span>        <span class=\"kt\">string</span>\n    <span class=\"n\">Encryption</span> <span class=\"kt\">byte</span>\n    <span class=\"n\">Len</span>        <span class=\"kt\">uint16</span>\n    <span class=\"n\">Pk</span>         <span class=\"p\">[]</span><span class=\"kt\">byte</span>\n    <span class=\"n\">Check_code</span> <span class=\"kt\">byte</span>\n<span class=\"p\">}</span>\n\n    <span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">Dial</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">tcp</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">Addr</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">tcp</span> <span class=\"n\">connect</span> <span class=\"kt\">error</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">defer</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n\n    <span class=\"n\">pk</span> <span class=\"o\">:=</span> <span class=\"n\">EvMsg</span><span class=\"p\">{}</span>\n    <span class=\"n\">pk</span><span class=\"o\">.</span><span class=\"n\">Headflag</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">##</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n    <span class=\"n\">pk</span><span class=\"o\">.</span><span class=\"n\">Msg_type</span> <span class=\"o\">=</span> <span class=\"m\">0x01</span>\n    <span class=\"n\">pk</span><span class=\"o\">.</span><span class=\"n\">Res_flag</span> <span class=\"o\">=</span> <span class=\"m\">0xFE</span>\n    <span class=\"n\">pk</span><span class=\"o\">.</span><span class=\"n\">Vin</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"m\">12345678901234567</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"n\">pk</span><span class=\"o\">.</span><span class=\"n\">Encryption</span> <span class=\"o\">=</span> <span class=\"m\">0x01</span>\n    <span class=\"n\">login</span> <span class=\"o\">:=</span> <span class=\"n\">EvLogin</span><span class=\"p\">{}</span>\n    <span class=\"n\">login</span><span class=\"o\">.</span><span class=\"n\">TimeStamp</span> <span class=\"o\">=</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"m\">170106085901</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">login</span><span class=\"o\">.</span><span class=\"n\">SerialNumber</span> <span class=\"o\">=</span> <span class=\"m\">1</span>\n    <span class=\"n\">login</span><span class=\"o\">.</span><span class=\"n\">Iccid</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">kkkk</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n</code></pre>\n<p>想通过结构体赋值，然后 fmt.Fprintf 将消息发送出去，但是结构体不能直接转 byte，请问应该怎么作阿，上网上查了好久也没搞懂～～</p>",
    "hits": 459,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 569,
    "title": "【七牛云】运维开发工程师",
    "created_at": "2017-01-09 16:22:04",
    "updated_at": "2017-01-09 16:22:04",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 477,
    "user": "{\"id\": 477, \"name\": \"七小牛来招聘\", \"login\": \"xiamengru\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "职位描述：\n工作职责:\n-负责设计/研发/运维私有云平台\n-负责设计/研发自动化，可视化运维平台\n\n职责要求:\n-强烈责任感、严密逻辑思维和主动跨团队沟通能力,并且需要有项目管理及推动力\n-熟悉各类编程工具Shell/Go/Python/Perl/Java等，研发能力强\n-深入理解Linux操作系统、体系结构\n-具有Kvm/Docker或Kubernetes等虚拟机或容器及编排管理工具使用和运维经验者\n-本科或以上学历，计算机相关专业者优先，3年以上工作经验\n\n地点：上海市浦东新区金科路2889号长泰广场A座10楼\n\n邮箱：xiamengru@qiniu.com (请备注一下求职职位）",
    "body_html": "<p>职位描述：\n工作职责:\n-负责设计/研发/运维私有云平台\n-负责设计/研发自动化，可视化运维平台</p>\n\n<p>职责要求:\n-强烈责任感、严密逻辑思维和主动跨团队沟通能力,并且需要有项目管理及推动力\n-熟悉各类编程工具 Shell/Go/Python/Perl/Java 等，研发能力强\n-深入理解 Linux 操作系统、体系结构\n-具有 Kvm/Docker 或 Kubernetes 等虚拟机或容器及编排管理工具使用和运维经验者\n-本科或以上学历，计算机相关专业者优先，3 年以上工作经验</p>\n\n<p>地点：上海市浦东新区金科路 2889 号长泰广场 A 座 10 楼</p>\n\n<p>邮箱：xiamengru@qiniu.com (请备注一下求职职位）</p>",
    "hits": 333,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 570,
    "title": "boogo 模板里if判断可以有多个判断条件吗",
    "created_at": "2017-01-10 11:39:30",
    "updated_at": "2017-01-10 21:59:53",
    "replied_at": "2017-01-10 21:59:53",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1535,
    "user": "{\"id\": 1535, \"name\": \"眉间雪\", \"login\": \"guopeng1109\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "比如：args1 &gt; xx &amp;&amp;/and args2 &lt; xx",
    "body_html": "<p>比如：args1 &gt; xx &amp;&amp;/and args2 &lt; xx</p>",
    "hits": 318,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 571,
    "title": "gieta派生的分支如何从gitea的仓库主干更新?",
    "created_at": "2017-01-10 16:15:49",
    "updated_at": "2017-01-11 12:01:48",
    "replied_at": "2017-01-11 12:01:48",
    "replies_count": 2,
    "node_name": "Gitea",
    "node_id": 45,
    "last_reply_user_id": 1024,
    "last_reply_user_login": "lunny",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1536,
    "user": "{\"id\": 1536, \"name\": \"caohj\", \"login\": \"caohj\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题,QQ群咨询,没有这个功能,只有从github主干的分支更新功能",
    "body_html": "<p>如题,QQ 群咨询,没有这个功能,只有从 github 主干的分支更新功能</p>",
    "hits": 816,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 572,
    "title": "如何捕获fatal error",
    "created_at": "2017-01-10 18:28:18",
    "updated_at": "2017-01-15 22:21:52",
    "replied_at": "2017-01-15 22:21:52",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1364,
    "last_reply_user_login": "lrita",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 124,
    "user": "{\"id\": 124, \"name\": \"mnhkahn\", \"login\": \"mnhkahn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "由于编码问题，申请的slice过大，导致程序直接异常退出了。\n\n```go\nfatal error: runtime: out of memory\n```\n\n大家知道怎么捕获这个错误么，如何在这种情况下防止程序异常退出？",
    "body_html": "<p>由于编码问题，申请的 slice 过大，导致程序直接异常退出了。</p>\n <pre class=\"highlight go\"><code><span class=\"n\">fatal</span> <span class=\"kt\">error</span><span class=\"o\">:</span> <span class=\"n\">runtime</span><span class=\"o\">:</span> <span class=\"n\">out</span> <span class=\"n\">of</span> <span class=\"n\">memory</span>\n</code></pre> \n<p>大家知道怎么捕获这个错误么，如何在这种情况下防止程序异常退出？</p>",
    "hits": 313,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 573,
    "title": "【已完美解决】Gogland EAP 2 (build 163.10516.6)已经出炉，但是升级出错，能直接下载升级包吗？",
    "created_at": "2017-01-10 21:25:08",
    "updated_at": "2017-01-12 16:42:09",
    "replied_at": "2017-01-12 16:42:09",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1544,
    "last_reply_user_login": "ealpha",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1047,
    "user": "{\"id\": 1047, \"name\": \"够浪\", \"login\": \"lovetempmail\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "详见：\nhttps://www.jetbrains.com/updates/updates.xml\n\n修正问题列表\nhttps://youtrack.jetbrains.com/releaseNotes/GO?q=project%3A+GO+Fixed+in+build%3A+163.10615.6+sort+by%3A+Priority&amp;title=Gogland+163.10615.6&amp;showDescription=false&amp;showComments=false\n\nhttps://youtrack.jetbrains.com/issues/GO?q=project:%20GO%20Fixed%20in%20build:%20163.10615.6%20sort%20by:%20Priority",
    "body_html": "<p>详见：\n<a href=\"https://www.jetbrains.com/updates/updates.xml\" rel=\"nofollow\" target=\"_blank\">https://www.jetbrains.com/updates/updates.xml</a></p>\n\n<p>修正问题列表\n<a href=\"https://youtrack.jetbrains.com/releaseNotes/GO?q=project%3A+GO+Fixed+in+build%3A+163.10615.6+sort+by%3A+Priority&amp;amptitle=Gogland+163.10615.6&amp;ampshowDescription=false&amp;ampshowComments=false\" rel=\"nofollow\" target=\"_blank\">https://youtrack.jetbrains.com/releaseNotes/GO?q=project%3A+GO+Fixed+in+build%3A+163.10615.6+sort+by%3A+Priority&amp;amptitle=Gogland+163.10615.6&amp;ampshowDescription=false&amp;ampshowComments=false</a>;</p>\n\n<p><a href=\"https://youtrack.jetbrains.com/issues/GO?q=project:%20GO%20Fixed%20in%20build:%20163.10615.6%20sort%20by:%20Priority\" rel=\"nofollow\" target=\"_blank\">https://youtrack.jetbrains.com/issues/GO?q=project:%20GO%20Fixed%20in%20build:%20163.10615.6%20sort%20by:%20Priority</a></p>",
    "hits": 524,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 574,
    "title": "使用https你的系统性能下降了多少？",
    "created_at": "2017-01-11 09:41:40",
    "updated_at": "2017-01-15 22:08:55",
    "replied_at": "2017-01-15 22:08:55",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1364,
    "last_reply_user_login": "lrita",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1331,
    "user": "{\"id\": 1331, \"name\": \"kakashi\", \"login\": \"kakashi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "# 使用https你的系统性能下降了多少？\n最近将接口升级了 https，\n升级之前 qps 为1000～1300，升级完后 qps为 100左右\n\n测试场景，\n1. go server直接起 https\n1. nginx配置https代理到 go http server\n1. 使用阿里slb服务，走https协议，转go http\n1. 使用阿里slb服务，走tcp：443，转 go https server\n\n所有测试结果，和文章开头给出的数据差不多，有http升级https服务经历的朋友，可否分享一下，你们的性能下降的数据，以及优化方式，谢谢",
    "body_html": "<h2 id=\"使用https你的系统性能下降了多少？\">使用 https 你的系统性能下降了多少？</h2>\n<p>最近将接口升级了 https，\n升级之前 qps 为 1000～1300，升级完后 qps 为 100 左右</p>\n\n<p>测试场景，</p>\n\n<ol>\n<li>go server 直接起 https</li>\n<li>nginx 配置 https 代理到 go http server</li>\n<li>使用阿里 slb 服务，走 https 协议，转 go http</li>\n<li>使用阿里 slb 服务，走 tcp：443，转 go https server</li>\n</ol>\n\n<p>所有测试结果，和文章开头给出的数据差不多，有 http 升级 https 服务经历的朋友，可否分享一下，你们的性能下降的数据，以及优化方式，谢谢</p>",
    "hits": 490,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 575,
    "title": "beego 怎么实现框架级的接口幂等？",
    "created_at": "2017-01-11 12:47:48",
    "updated_at": "2021-01-16 21:40:34",
    "replied_at": "2017-04-18 06:03:01",
    "replies_count": 4,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1793,
    "last_reply_user_login": "ZZHHAANNGG",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 261,
    "user": "{\"id\": 261, \"name\": \"hacpai\", \"login\": \"hacpai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 453,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 576,
    "title": "json.Marshal 在什么情况下会报错",
    "created_at": "2017-01-11 14:54:36",
    "updated_at": "2017-01-11 18:27:45",
    "replied_at": "2017-01-11 18:27:45",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 30,
    "last_reply_user_login": "wulinlw",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 646,
    "user": "{\"id\": 646, \"name\": \"deepzz\", \"login\": \"deepzz\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "json.Marshal 在什么情况下会报错？\n\n什么情况下可以忽略错误？",
    "body_html": "<p>json.Marshal 在什么情况下会报错？</p>\n\n<p>什么情况下可以忽略错误？</p>",
    "hits": 508,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 577,
    "title": "为什么value receiver可以减少需要回收的垃圾量？",
    "created_at": "2017-01-11 18:54:08",
    "updated_at": "2017-01-12 13:00:15",
    "replied_at": "2017-01-12 13:00:15",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 271,
    "last_reply_user_login": "cholerae",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 806,
    "user": "{\"id\": 806, \"name\": \"hheedat\", \"login\": \"hheedat\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在网上看到一个文章《[Golang何时该使用指针](http://zpjiang.me/2016/08/22/when-to-use-pointer-in-golang/ &quot;Golang何时该使用指针&quot;)》其中提到\n\n&gt; 如果receiver使较小的struct或者array，并且其变量都是些不变量、常量，例如time.Time，value receiver更加适合，因为value receiver可以减少需要回收的垃圾量。\n\n然后这个博文的原文《[Go Code Review Comments](https://github.com/golang/go/wiki/CodeReviewComments#receiver-type &quot;Go Code Review Comments&quot;)》中指出\n\n&gt; if a value is passed to a value method, an on-stack copy can be used instead of allocating on the heap.\n\n看了一些资料，似懂非懂，哪位大大能稍微通俗的解释一下，这个大概是什么原理啊？\n\n",
    "body_html": "<p>在网上看到一个文章《<a href=\"http://zpjiang.me/2016/08/22/when-to-use-pointer-in-golang/%20%22Golang%E4%BD%95%E6%97%B6%E8%AF%A5%E4%BD%BF%E7%94%A8%E6%8C%87%E9%92%88%22\" title=\"\">Golang 何时该使用指针</a>》其中提到</p>\n\n<p>&gt; 如果 receiver 使较小的 struct 或者 array，并且其变量都是些不变量、常量，例如 time.Time，value receiver 更加适合，因为 value receiver 可以减少需要回收的垃圾量。</p>\n\n<p>然后这个博文的原文《<a href=\"https://github.com/golang/go/wiki/CodeReviewComments#receiver-type%20%22Go%20Code%20Review%20Comments%22\" title=\"\">Go Code Review Comments</a>》中指出</p>\n\n<p>&gt; if a value is passed to a value method, an on-stack copy can be used instead of allocating on the heap.</p>\n\n<p>看了一些资料，似懂非懂，哪位大大能稍微通俗的解释一下，这个大概是什么原理啊？</p>",
    "hits": 442,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 578,
    "title": "golang程序重启自身",
    "created_at": "2017-01-12 12:04:57",
    "updated_at": "2017-01-15 23:48:56",
    "replied_at": "2017-01-15 23:48:56",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 45,
    "last_reply_user_login": "小张的烦恼",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 45,
    "user": "{\"id\": 45, \"name\": \"小张的烦恼\", \"login\": \"zhangyumingtfr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "部署到linux上面的程序如何通过前台页面的重启按钮来重启自己？？求大神指导",
    "body_html": "<p>部署到 linux 上面的程序如何通过前台页面的重启按钮来重启自己？？求大神指导</p>",
    "hits": 593,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 579,
    "title": "有没有人用过 gopher.js 这个东西？",
    "created_at": "2017-01-12 13:07:55",
    "updated_at": "2018-04-11 18:52:21",
    "replied_at": "2018-04-11 18:52:21",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 3463,
    "last_reply_user_login": "xbgxwh",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 271,
    "user": "{\"id\": 271, \"name\": \"cholerae\", \"login\": \"cholerae\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "从 go 编译到 js，还可以直接调 js 的库，感觉挺诱人的，不过它 goroutine 的实现是遇到阻塞直接 unwind 整个栈然后换另一个 goroutine，直觉上性能应该比正常的版本低不少吧，有人在生产里用过吗？",
    "body_html": "<p>从 go 编译到 js，还可以直接调 js 的库，感觉挺诱人的，不过它 goroutine 的实现是遇到阻塞直接 unwind 整个栈然后换另一个 goroutine，直觉上性能应该比正常的版本低不少吧，有人在生产里用过吗？</p>",
    "hits": 433,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 580,
    "title": "网站升级到https后百度统计出现了这个问题？",
    "created_at": "2017-01-12 14:12:06",
    "updated_at": "2017-01-12 19:19:46",
    "replied_at": "2017-01-12 19:19:46",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 148,
    "last_reply_user_login": "msheng",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1070,
    "user": "{\"id\": 1070, \"name\": \"jdlau\", \"login\": \"jdlau\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "[![出错信息](http://www.jdscript.com:52035/%E7%99%BE%E5%BA%A6%E7%BB%9F%E8%AE%A1crs%E9%97%AE%E9%A2%98.png &quot;出错信息&quot;)](http://www.jdscript.com:52035/%E7%99%BE%E5%BA%A6%E7%BB%9F%E8%AE%A1crs%E9%97%AE%E9%A2%98.png &quot;出错信息&quot;)\n\n请问有人遇到过吗？\n该怎么解决呢？",
    "body_html": "<p><a href=\"http://www.jdscript.com:52035/%E7%99%BE%E5%BA%A6%E7%BB%9F%E8%AE%A1crs%E9%97%AE%E9%A2%98.png%20%22%E5%87%BA%E9%94%99%E4%BF%A1%E6%81%AF%22\" title=\"\"><img src=\"http://www.jdscript.com:52035/%E7%99%BE%E5%BA%A6%E7%BB%9F%E8%AE%A1crs%E9%97%AE%E9%A2%98.png\" title=\"&quot;出错信息&quot;\" alt=\"出错信息\"></a></p>\n\n<p>请问有人遇到过吗？\n该怎么解决呢？</p>",
    "hits": 325,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 581,
    "title": "Godep包管理第三方依赖包的问题",
    "created_at": "2017-01-12 15:29:30",
    "updated_at": "2017-05-23 12:00:55",
    "replied_at": "2017-05-23 12:00:35",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1494,
    "last_reply_user_login": "stirlingx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 663,
    "user": "{\"id\": 663, \"name\": \"wangweihong\", \"login\": \"wangweihong\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我在使用Godep进行包管理时,调用的第三方的包其中也包含自己vender依赖；但我执行godep save时,经常提示第三方包的依赖包找不到. 这些第三方的包有些能够通过go get下载下来,有些连Repo都没有.比如说/k8s.io/apiserver/pkg/authentication/user. 这个包就找不到哪里可以下载的地方. 直接通过拷贝这些包到包导入的路径, godep save又会提示这些包&quot;not using a known version control system&quot;. 这种情况大家是怎么处理的? ",
    "body_html": "<p>我在使用 Godep 进行包管理时,调用的第三方的包其中也包含自己 vender 依赖；但我执行 godep save 时,经常提示第三方包的依赖包找不到. 这些第三方的包有些能够通过 go get 下载下来,有些连 Repo 都没有.比如说/k8s.io/apiserver/pkg/authentication/user. 这个包就找不到哪里可以下载的地方. 直接通过拷贝这些包到包导入的路径, godep save 又会提示这些包\"not using a known version control system\". 这种情况大家是怎么处理的? </p>",
    "hits": 406,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 582,
    "title": "golang解析html出错",
    "created_at": "2017-01-12 17:10:13",
    "updated_at": "2017-01-13 18:11:20",
    "replied_at": "2017-01-13 18:11:20",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1357,
    "last_reply_user_login": "Dingding",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1357,
    "user": "{\"id\": 1357, \"name\": \"Dingding\", \"login\": \"Dingding\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "前端的html页面，用了vue语法\n```\n&lt;body&gt;\n\t\t&lt;div id=&quot;box&quot;&gt;\n\t\t\t&lt;input type=&quot;text&quot; v-model=&quot;t1&quot; @keyup=&quot;get($evevt)&quot; @keydown.down=&quot;changeDown()&quot; @keydown.up=&quot;changeUp()&quot;/&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t\t&lt;li v-for=&quot;value in myDate&quot; :class=&quot;gray:$index==now&quot;&gt;\n\t\t\t\t\t{{value}} //!!!改为{{.value}}不出错\n\t\t\t\t&lt;/li&gt;\n\t\t\t&lt;/ul&gt;\n\t\t\t&lt;p v-show=&quot;myData.length==0&quot;&gt;暂无数据&lt;/p&gt;\n\t\t&lt;/div&gt;\n\t&lt;/body&gt;\n```\n但在go中解析该文件，解析到 {{value}} 时， \n```\n\tt, err := template.ParseFiles(&quot;demo.html&quot;)\n\tt.Execute(w, LoginValue) //出错\n```\n怎样才能把上面的html原封不动的打印到浏览器中，不改动前端的页面。\n\n\n",
    "body_html": "<p>前端的 html 页面，用了 vue 语法</p>\n <pre class=\"highlight plaintext\"><code>&amp;lt;body&amp;gt;\n        &amp;lt;div id=&amp;quot;box&amp;quot;&amp;gt;\n            &amp;lt;input type=&amp;quot;text&amp;quot; v-model=&amp;quot;t1&amp;quot; @keyup=&amp;quot;get($evevt)&amp;quot; @keydown.down=&amp;quot;changeDown()&amp;quot; @keydown.up=&amp;quot;changeUp()&amp;quot;/&amp;gt;\n            &amp;lt;ul&amp;gt;\n                &amp;lt;li v-for=&amp;quot;value in myDate&amp;quot; :class=&amp;quot;gray:$index==now&amp;quot;&amp;gt;\n                    {{value}} //!!!改为{{.value}}不出错\n                &amp;lt;/li&amp;gt;\n            &amp;lt;/ul&amp;gt;\n            &amp;lt;p v-show=&amp;quot;myData.length==0&amp;quot;&amp;gt;暂无数据&amp;lt;/p&amp;gt;\n        &amp;lt;/div&amp;gt;\n    &amp;lt;/body&amp;gt;\n</code></pre> \n<p>但在 go 中解析该文件，解析到 {{value}} 时， </p>\n <pre class=\"highlight plaintext\"><code>t, err := template.ParseFiles(&amp;quot;demo.html&amp;quot;)\nt.Execute(w, LoginValue) //出错\n</code></pre> \n<p>怎样才能把上面的 html 原封不动的打印到浏览器中，不改动前端的页面。</p>",
    "hits": 544,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 583,
    "title": "why os.expand() is not a function of  package string?",
    "created_at": "2017-01-13 11:17:24",
    "updated_at": "2017-01-13 11:57:56",
    "replied_at": "2017-01-13 11:57:56",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1300,
    "last_reply_user_login": "RedMothball",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1542,
    "user": "{\"id\": 1542, \"name\": \"enoit\", \"login\": \"enoit\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 372,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 584,
    "title": "golang有没有好的AI框架？",
    "created_at": "2017-01-13 15:03:42",
    "updated_at": "2017-01-13 15:55:51",
    "replied_at": "2017-01-13 15:55:51",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1253,
    "last_reply_user_login": "liushuchun",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1448,
    "user": "{\"id\": 1448, \"name\": \"ansencumt\", \"login\": \"ansencumt\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 873,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 585,
    "title": "golang ssh 如何才能支持tab键自动补全功能",
    "created_at": "2017-01-14 23:33:51",
    "updated_at": "2017-01-14 23:33:51",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 826,
    "user": "{\"id\": 826, \"name\": \"qianguozheng\", \"login\": \"qianguozheng\", \"avatar\": \"https://gocn.vip/system/letter_avatars/q.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "由于Linux没有好用的终端管理软件，想用go实现一个简单的存储常用的用户名和密码。\n\n遇到的问题是： 登陆进设备，无法通过tab键自动补全输入的目录，试过执行/bin/bash但是这个没用。\n\n怀疑：怀疑是我实现的终端问题，不能直接用os.Stdin os.Stdout作为输入输出，而应该实现一个类似于terminal的功能，不知道理解的对不对？\n\n希望有高手指点一二，万分感谢",
    "body_html": "<p>由于 Linux 没有好用的终端管理软件，想用 go 实现一个简单的存储常用的用户名和密码。</p>\n\n<p>遇到的问题是： 登陆进设备，无法通过 tab 键自动补全输入的目录，试过执行/bin/bash 但是这个没用。</p>\n\n<p>怀疑：怀疑是我实现的终端问题，不能直接用 os.Stdin os.Stdout 作为输入输出，而应该实现一个类似于 terminal 的功能，不知道理解的对不对？</p>\n\n<p>希望有高手指点一二，万分感谢</p>",
    "hits": 421,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 586,
    "title": "RobotGo v0.42.0 发布了,更新基础支持",
    "created_at": "2017-01-15 19:13:51",
    "updated_at": "2017-01-16 15:24:02",
    "replied_at": "2017-01-16 15:13:18",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 183,
    "last_reply_user_login": "veni",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 183,
    "user": "{\"id\": 183, \"name\": \"veni\", \"login\": \"veni\", \"avatar\": \"https://gocn.vip/system/letter_avatars/v.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "RobotGo v0.42.0 发布了，Golang 跨平台控制鼠标、键盘、位图、屏幕、窗口句柄以及全局事件监听。\n主要变更：\n- 增加 gitter\n- 增加 circle\n- 增加 MoveClick\n- 增加 Guidelines\n- AddEvent监听增加f1-f12\n- 增加移动平台支持计划\n\n更新\n- 格式化代码\n- 更新文档\n- 更新介绍\n- 更新golint\n- 更新example\n- 更新代码顺序\n\n修复\n- 降级c11到c99\n- 优化内存释放\n- 修复linux ShowAlert进程导致的X11错误\n\n安装:\n    - go get github.com/go-vgo/robotgo\n\n\n项目地址:\n\nGithub:https://github.com/go-vgo/robotgo",
    "body_html": "<p>RobotGo v0.42.0 发布了，Golang 跨平台控制鼠标、键盘、位图、屏幕、窗口句柄以及全局事件监听。\n主要变更：</p>\n\n<ul>\n<li>增加 gitter</li>\n<li>增加 circle</li>\n<li>增加 MoveClick</li>\n<li>增加 Guidelines</li>\n<li>AddEvent 监听增加 f1-f12</li>\n<li>增加移动平台支持计划</li>\n</ul>\n\n<p>更新</p>\n\n<ul>\n<li>格式化代码</li>\n<li>更新文档</li>\n<li>更新介绍</li>\n<li>更新 golint</li>\n<li>更新 example</li>\n<li>更新代码顺序</li>\n</ul>\n\n<p>修复</p>\n\n<ul>\n<li>降级 c11 到 c99</li>\n<li>优化内存释放</li>\n<li>修复 linux ShowAlert 进程导致的 X11 错误</li>\n</ul>\n\n<p>安装:\n    - go get github.com/go-vgo/robotgo</p>\n\n<p>项目地址:</p>\n\n<p>Github:<a href=\"https://github.com/go-vgo/robotgo\" rel=\"nofollow\" target=\"_blank\">https://github.com/go-vgo/robotgo</a></p>",
    "hits": 495,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 587,
    "title": "go的grpc一致性哈希balancer有开源库吗",
    "created_at": "2017-01-16 18:10:56",
    "updated_at": "2017-01-19 16:13:17",
    "replied_at": "2017-01-19 16:13:17",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1494,
    "last_reply_user_login": "stirlingx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1494,
    "user": "{\"id\": 1494, \"name\": \"stirlingx\", \"login\": \"stirlingx\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "官方客户端库里面只有一个RoundRobin的balancer",
    "body_html": "<p>官方客户端库里面只有一个 RoundRobin 的 balancer</p>",
    "hits": 388,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 588,
    "title": "beego的后台管理系统实现热更新",
    "created_at": "2017-01-16 18:28:44",
    "updated_at": "2021-01-16 21:40:33",
    "replied_at": "2017-02-20 16:38:04",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 45,
    "last_reply_user_login": "小张的烦恼",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 45,
    "user": "{\"id\": 45, \"name\": \"小张的烦恼\", \"login\": \"zhangyumingtfr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "谢大大的框架的grace模块，我看了许久，大概意思能够明白，但是对于新旧交替中间正在执行的怎么解决？然后重启只需要kill -HUP pid就够了吗？感觉对于这个热更新只是思想懂那么一点，但是具体实现细节有许多地方不是很清楚，所以想问一下哪位大神有些过热更新，我很厚脸皮的向借阅您的热更新代码。在此感谢！！！",
    "body_html": "<p>谢大大的框架的 grace 模块，我看了许久，大概意思能够明白，但是对于新旧交替中间正在执行的怎么解决？然后重启只需要 kill -HUP pid 就够了吗？感觉对于这个热更新只是思想懂那么一点，但是具体实现细节有许多地方不是很清楚，所以想问一下哪位大神有些过热更新，我很厚脸皮的向借阅您的热更新代码。在此感谢！！！</p>",
    "hits": 546,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 589,
    "title": "beego问题",
    "created_at": "2017-01-16 18:46:03",
    "updated_at": "2021-01-20 02:03:16",
    "replied_at": "2017-01-16 23:32:28",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 816,
    "user": "{\"id\": 816, \"name\": \"easonme\", \"login\": \"easonme\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在beego中\n\n\tthis.Data[&quot;json&quot;] = map[string]interface{}{&quot;datalist&quot;: address, &quot;status&quot;: 1, &quot;msg&quot;: &quot;success&quot;}\n\tthis.ServeJSON()\n我发现传输给苹果端后json数据里面包括URL的&amp; 会被转义成\\u0026\n\n求教，\n  怎么传输过去才不被转义\n",
    "body_html": "<p>在 beego 中</p>\n\n<p>this.Data[\"json\"] = map[string] interface{}{\"datalist\": address, \"status\": 1, \"msg\": \"success\"}\n    this.ServeJSON()\n我发现传输给苹果端后 json 数据里面包括 URL 的&amp; 会被转义成\\u0026</p>\n\n<p>求教，\n  怎么传输过去才不被转义</p>",
    "hits": 440,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 590,
    "title": "beego orm模型定义中整形的长度问题",
    "created_at": "2017-01-16 19:36:29",
    "updated_at": "2021-01-16 21:40:30",
    "replied_at": "2017-02-13 14:33:42",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1563,
    "user": "{\"id\": 1563, \"name\": \"jysk\", \"login\": \"jysk\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "通过不断的试验，我发现orm根据tag生成表的字段类型只有字符型的可以限制长度，后来仔细研究文档，发现文档中只提到了如下内容\n\n```\nsize\nstring 类型字段默认为 varchar(255)\n设置 size 以后，db type 将使用 varchar(size)\n```\n请问beego orm怎样可以实现整型的长度限制？",
    "body_html": "<p>通过不断的试验，我发现 orm 根据 tag 生成表的字段类型只有字符型的可以限制长度，后来仔细研究文档，发现文档中只提到了如下内容</p>\n <pre class=\"highlight plaintext\"><code>size\nstring 类型字段默认为 varchar(255)\n设置 size 以后，db type 将使用 varchar(size)\n</code></pre> \n<p>请问 beego orm 怎样可以实现整型的长度限制？</p>",
    "hits": 369,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 591,
    "title": "go1.8 中的 plugin 对.so中的函数调用是cgo调用吗?",
    "created_at": "2017-01-16 21:17:14",
    "updated_at": "2017-01-18 12:13:26",
    "replied_at": "2017-01-18 12:13:26",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1420,
    "last_reply_user_login": "ansin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1420,
    "user": "{\"id\": 1420, \"name\": \"ansin\", \"login\": \"ansin\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题，plugin.Open中看到了用cgo加载动态库，不知道对动态库中函数的调用是否也是cgo的，如果是的话，plugin中的内存，GC，goroutine等等是怎么管理的？",
    "body_html": "<p>如题，plugin.Open 中看到了用 cgo 加载动态库，不知道对动态库中函数的调用是否也是 cgo 的，如果是的话，plugin 中的内存，GC，goroutine 等等是怎么管理的？</p>",
    "hits": 394,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 592,
    "title": "关于通道的简单问题",
    "created_at": "2017-01-17 00:10:34",
    "updated_at": "2017-01-17 10:47:11",
    "replied_at": "2017-01-17 10:47:11",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1106,
    "last_reply_user_login": "zdt3476",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1561,
    "user": "{\"id\": 1561, \"name\": \"mendick\", \"login\": \"mendick\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "第18行的括号填入什么值，可以让打印结果变为？我已经试了0，结果还是Send! Received!6\nReceived! 6\nSent!\n\n\npackage main\n\nimport (\n    &quot;fmt&quot;\n\t&quot;time&quot;\n)\n\ntype Sender chan&lt;- int\n\ntype Receiver &lt;-chan int\n\nfunc main() {\n\tvar myChannel = make(chan int, ())\n\tvar number = 6\n\tgo func() {\n\t\tvar sender Sender = myChannel\n\t\tsender &lt;- number\n\t\tfmt.Println(&quot;Sent!&quot;)\n\t}()\n\tgo func() {\n\t\tvar receiver Receiver = myChannel\n\t\tfmt.Println(&quot;Received!&quot;, &lt;-receiver)\n\t}()\n\t// 让main函数执行结束的时间延迟1秒，\n\t// 以使上面两个代码块有机会被执行。\n\ttime.Sleep(time.Second)\n}",
    "body_html": "<p>第 18 行的括号填入什么值，可以让打印结果变为？我已经试了 0，结果还是 Send! Received! 6\nReceived! 6\nSent!</p>\n\n<p>package main</p>\n\n<p>import (\n    \"fmt\"\n    \"time\"\n)</p>\n\n<p>type Sender chan&lt;- int</p>\n\n<p>type Receiver &lt;-chan int</p>\n\n<p>func main() {\n    var myChannel = make(chan int, ())\n    var number = 6\n    go func() {\n        var sender Sender = myChannel\n        sender &lt;- number\n        fmt.Println(\"Sent!\")\n    }()\n    go func() {\n        var receiver Receiver = myChannel\n        fmt.Println(\"Received!\", &lt;-receiver)\n    }()\n    // 让 main 函数执行结束的时间延迟 1 秒，\n    // 以使上面两个代码块有机会被执行。\n    time.Sleep(time.Second)\n}</p>",
    "hits": 229,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 593,
    "title": "有哪些好用的日志云服务？",
    "created_at": "2017-01-17 14:27:10",
    "updated_at": "2017-01-17 14:27:10",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1353,
    "user": "{\"id\": 1353, \"name\": \"songtianyi\", \"login\": \"songtianyi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "rt",
    "body_html": "<p>rt</p>",
    "hits": 319,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 594,
    "title": "LiteIDE get编译的时候怎么设置编译参数？",
    "created_at": "2017-01-17 16:52:52",
    "updated_at": "2017-01-17 16:52:52",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "LiteIDE",
    "node_id": 47,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1261,
    "user": "{\"id\": 1261, \"name\": \"cjmxp\", \"login\": \"cjmxp\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "## 如题：LiteIDE get编译的时候怎么设置编译参数？\n### 求大大指教",
    "body_html": "<h2 id=\"如题：LiteIDE get编译的时候怎么设置编译参数？\">如题：LiteIDE get 编译的时候怎么设置编译参数？</h2><h3 id=\"求大大指教\">求大大指教</h3>",
    "hits": 839,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 595,
    "title": "Automaticly provide RESTful API for gRPC",
    "created_at": "2017-01-17 21:08:02",
    "updated_at": "2017-01-22 09:55:59",
    "replied_at": "2017-01-22 09:55:59",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1013,
    "last_reply_user_login": "lcp0578",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1564,
    "user": "{\"id\": 1564, \"name\": \"jmzwcn\", \"login\": \"jmzwcn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "开源一个grpc RESTful方案，大家有兴趣可以关注下。也希望多多提意见。\n\nhttps://github.com/jmzwcn/api-gateway",
    "body_html": "<p>开源一个 grpc RESTful 方案，大家有兴趣可以关注下。也希望多多提意见。</p>\n\n<p><a href=\"https://github.com/jmzwcn/api-gateway\" rel=\"nofollow\" target=\"_blank\">https://github.com/jmzwcn/api-gateway</a></p>",
    "hits": 352,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 596,
    "title": "如何理解Go语言中的动态内存分配和静态内存分配？",
    "created_at": "2017-01-18 12:18:07",
    "updated_at": "2017-02-06 21:39:51",
    "replied_at": "2017-02-06 21:39:51",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 835,
    "last_reply_user_login": "Ky",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1570,
    "user": "{\"id\": 1570, \"name\": \"shuaishuai\", \"login\": \"shuaishuai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我已经不仅一次听说，Go的性能测试中，有关于 0内存分配 这种说法了，今天在看一个Go的路由器的说明时，再一次看到这种说法。\n\n![](http://studygolang.qiniudn.com/170116/0caa4b4b204173b2e213d20e11f49d30.png)\n\n我已经百度过了动态内存分配和静态内存分配，主要说C语言，但Go语言中没有主动malloc这种C语言的形式。请问，如何理解Go语言中的动态内存分配和静态内存分配？",
    "body_html": "<p>我已经不仅一次听说，Go 的性能测试中，有关于 0 内存分配 这种说法了，今天在看一个 Go 的路由器的说明时，再一次看到这种说法。</p>\n\n<p><img src=\"http://studygolang.qiniudn.com/170116/0caa4b4b204173b2e213d20e11f49d30.png\" title=\"\" alt=\"\"></p>\n\n<p>我已经百度过了动态内存分配和静态内存分配，主要说 C 语言，但 Go 语言中没有主动 malloc 这种 C 语言的形式。请问，如何理解 Go 语言中的动态内存分配和静态内存分配？</p>",
    "hits": 607,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 597,
    "title": "dlv打印全部字符串",
    "created_at": "2017-01-18 14:43:39",
    "updated_at": "2017-01-18 14:43:39",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1036,
    "user": "{\"id\": 1036, \"name\": \"yong27\", \"login\": \"yong27\", \"avatar\": \"https://gocn.vip/system/letter_avatars/y.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "dlv的字符串print默认一次只打印64个字符，要打印所以的得一次一次切片打印，如果一次打印所有字符内容",
    "body_html": "<p>dlv 的字符串 print 默认一次只打印 64 个字符，要打印所以的得一次一次切片打印，如果一次打印所有字符内容</p>",
    "hits": 343,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 598,
    "title": "go怎么发送chunked模式的http请求",
    "created_at": "2017-01-19 16:32:14",
    "updated_at": "2017-01-19 16:32:14",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 915,
    "user": "{\"id\": 915, \"name\": \"alexkkk\", \"login\": \"alexkkk\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "比如，我上传录音的时候：\n1. 按下语音录音键\n2. 说一段话，发送一段语音\n3. 松开语音录音键，结束发送\n\n这就需要在上传语音数据的时候，用chunked模式，实时的发送http请求。\n哪位大神知道，谢谢！",
    "body_html": "<p>比如，我上传录音的时候：</p>\n\n<ol>\n<li>按下语音录音键</li>\n<li>说一段话，发送一段语音</li>\n<li>松开语音录音键，结束发送</li>\n</ol>\n\n<p>这就需要在上传语音数据的时候，用 chunked 模式，实时的发送 http 请求。\n哪位大神知道，谢谢！</p>",
    "hits": 344,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 599,
    "title": "后端开发工程师（Golang）（高级）",
    "created_at": "2017-01-19 17:06:24",
    "updated_at": "2017-01-19 17:06:24",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1577,
    "user": "{\"id\": 1577, \"name\": \"bhj242360\", \"login\": \"bhj242360\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "后端开发工程师（Golang）（高级）（广州市爱菩新医药科技有限公司）\n\n岗位职责：\n1、负责公司Web产品的功能分析、设计、开发与维护等工作\n2、根据开发进度和任务分配，完成产品Web系统相应模块软件的设计、开发、编程等任务\n3、研究新技术、引入到实际项目应用当中\n4、持续优化现有系统、线上问题排查及修复\n5、维护项目文档和手册，持续完善技术知识库\n\n岗位要求：\n1、2年以上Web产品服务器后端开发经验\n2、熟悉网络编程、多线程编程技术，有完整的核心功能开发和设计经验\n3、熟悉MySQL、PostgreSQL、Redis、MongoDB\n4、熟悉Linux平台的C/C++/Golang中的某种编程语言（Golang优先）\n5、熟悉Linux系统，对高并发处理有一定经验\n6、熟悉HTTP/TCP/UDP协议，熟悉B/S，C/S架构\n7、优秀的分析问题和解决问题的能力，具备强烈的进取心和良好的团队合作能力\n加分项：对后端架构和前沿技术有研究或作品欣赏。\n\n工作地址:广州市天河区龙怡路91号广业文化创意园5楼5015房。\n联系电话：020-87565003，15918768787，\n联系邮箱（投递简历）hr_group@iprexmed.com",
    "body_html": "<p>后端开发工程师（Golang）（高级）（广州市爱菩新医药科技有限公司）</p>\n\n<p>岗位职责：\n1、负责公司 Web 产品的功能分析、设计、开发与维护等工作\n2、根据开发进度和任务分配，完成产品 Web 系统相应模块软件的设计、开发、编程等任务\n3、研究新技术、引入到实际项目应用当中\n4、持续优化现有系统、线上问题排查及修复\n5、维护项目文档和手册，持续完善技术知识库</p>\n\n<p>岗位要求：\n1、2 年以上 Web 产品服务器后端开发经验\n2、熟悉网络编程、多线程编程技术，有完整的核心功能开发和设计经验\n3、熟悉 MySQL、PostgreSQL、Redis、MongoDB\n4、熟悉 Linux 平台的 C/C++/Golang 中的某种编程语言（Golang 优先）\n5、熟悉 Linux 系统，对高并发处理有一定经验\n6、熟悉 HTTP/TCP/UDP 协议，熟悉 B/S，C/S 架构\n7、优秀的分析问题和解决问题的能力，具备强烈的进取心和良好的团队合作能力\n加分项：对后端架构和前沿技术有研究或作品欣赏。</p>\n\n<p>工作地址:广州市天河区龙怡路 91 号广业文化创意园 5 楼 5015 房。\n联系电话：020-87565003，15918768787，\n联系邮箱（投递简历）hr_group@iprexmed.com</p>",
    "hits": 329,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 600,
    "title": "前端开发工程师 （高级）",
    "created_at": "2017-01-19 17:19:48",
    "updated_at": "2017-01-19 17:19:48",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1577,
    "user": "{\"id\": 1577, \"name\": \"bhj242360\", \"login\": \"bhj242360\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "前端开发工程师（高级）\n\n岗位职责：\n1、负责完成页面的制作与特效开发，持续优化前端体验并保证各浏览器兼容性\n2、与后端开发工程师和设计人员密切配合，完成前端的开发工作\n3、研究新技术、引入到实际项目应用当中\n4、持续优化现有系统、线上问题排查修复\n5、维护项目文档和手册，持续完善技术知识库\n6、能独立工作，不需具体指导，自觉遵守软件工程规范和公司程序规范\n岗位要求：\n1、2年以上前端开发工作经验\n2、掌握Web前端标准规范，并熟悉前端优化\n3、精通Web前端技术 CSS、CSS3、HTML5、Javascript\n4、精通常用Web前端框架 jQuery、AngularJs、Vue.js、Bootstrap3\n5、精通常用Web前端工具和类库 gulp、bower、requirejs\n6、了解HTTP协议、RESTful API 接口\n7、了解任意一门后台语言和常用服务软件，如：php、golang、nginx、mysql等；\n加分项：对前端架构和前沿技术有研究或作品欣赏。\n\n工作地址:广州市天河区龙怡路91号广业文化创意园5楼5015房。\n联系电话：020-87565003，15918768787，\n联系邮箱（投递简历）hr_group@iprexmed.com",
    "body_html": "<p>前端开发工程师（高级）</p>\n\n<p>岗位职责：\n1、负责完成页面的制作与特效开发，持续优化前端体验并保证各浏览器兼容性\n2、与后端开发工程师和设计人员密切配合，完成前端的开发工作\n3、研究新技术、引入到实际项目应用当中\n4、持续优化现有系统、线上问题排查修复\n5、维护项目文档和手册，持续完善技术知识库\n6、能独立工作，不需具体指导，自觉遵守软件工程规范和公司程序规范\n岗位要求：\n1、2 年以上前端开发工作经验\n2、掌握 Web 前端标准规范，并熟悉前端优化\n3、精通 Web 前端技术 CSS、CSS3、HTML5、Javascript\n4、精通常用 Web 前端框架 jQuery、AngularJs、Vue.js、Bootstrap3\n5、精通常用 Web 前端工具和类库 gulp、bower、requirejs\n6、了解 HTTP 协议、RESTful API 接口\n7、了解任意一门后台语言和常用服务软件，如：php、golang、nginx、mysql 等；\n加分项：对前端架构和前沿技术有研究或作品欣赏。</p>\n\n<p>工作地址:广州市天河区龙怡路 91 号广业文化创意园 5 楼 5015 房。\n联系电话：020-87565003，15918768787，\n联系邮箱（投递简历）hr_group@iprexmed.com</p>",
    "hits": 311,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 601,
    "title": "前端开发工程师 （高级）",
    "created_at": "2017-01-19 17:20:00",
    "updated_at": "2017-01-19 17:20:00",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1577,
    "user": "{\"id\": 1577, \"name\": \"bhj242360\", \"login\": \"bhj242360\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "前端开发工程师（高级）\n\n岗位职责：\n1、负责完成页面的制作与特效开发，持续优化前端体验并保证各浏览器兼容性\n2、与后端开发工程师和设计人员密切配合，完成前端的开发工作\n3、研究新技术、引入到实际项目应用当中\n4、持续优化现有系统、线上问题排查修复\n5、维护项目文档和手册，持续完善技术知识库\n6、能独立工作，不需具体指导，自觉遵守软件工程规范和公司程序规范\n岗位要求：\n1、2年以上前端开发工作经验\n2、掌握Web前端标准规范，并熟悉前端优化\n3、精通Web前端技术 CSS、CSS3、HTML5、Javascript\n4、精通常用Web前端框架 jQuery、AngularJs、Vue.js、Bootstrap3\n5、精通常用Web前端工具和类库 gulp、bower、requirejs\n6、了解HTTP协议、RESTful API 接口\n7、了解任意一门后台语言和常用服务软件，如：php、golang、nginx、mysql等；\n加分项：对前端架构和前沿技术有研究或作品欣赏。\n\n工作地址:广州市天河区龙怡路91号广业文化创意园5楼5015房。\n联系电话：020-87565003，15918768787，\n联系邮箱（投递简历）hr_group@iprexmed.com",
    "body_html": "<p>前端开发工程师（高级）</p>\n\n<p>岗位职责：\n1、负责完成页面的制作与特效开发，持续优化前端体验并保证各浏览器兼容性\n2、与后端开发工程师和设计人员密切配合，完成前端的开发工作\n3、研究新技术、引入到实际项目应用当中\n4、持续优化现有系统、线上问题排查修复\n5、维护项目文档和手册，持续完善技术知识库\n6、能独立工作，不需具体指导，自觉遵守软件工程规范和公司程序规范\n岗位要求：\n1、2 年以上前端开发工作经验\n2、掌握 Web 前端标准规范，并熟悉前端优化\n3、精通 Web 前端技术 CSS、CSS3、HTML5、Javascript\n4、精通常用 Web 前端框架 jQuery、AngularJs、Vue.js、Bootstrap3\n5、精通常用 Web 前端工具和类库 gulp、bower、requirejs\n6、了解 HTTP 协议、RESTful API 接口\n7、了解任意一门后台语言和常用服务软件，如：php、golang、nginx、mysql 等；\n加分项：对前端架构和前沿技术有研究或作品欣赏。</p>\n\n<p>工作地址:广州市天河区龙怡路 91 号广业文化创意园 5 楼 5015 房。\n联系电话：020-87565003，15918768787，\n联系邮箱（投递简历）hr_group@iprexmed.com</p>",
    "hits": 325,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 602,
    "title": "后端开发工程师（Golang）（初级）",
    "created_at": "2017-01-19 17:26:36",
    "updated_at": "2017-01-19 17:26:36",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1577,
    "user": "{\"id\": 1577, \"name\": \"bhj242360\", \"login\": \"bhj242360\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "后端开发工程师（Golang）（初级） (广州市爱菩新医药科技有限公司)\n\n岗位职责：\n1、负责公司Web产品的功能分析、设计、开发与维护等工作\n2、根据开发进度和任务分配，完成产品Web系统相应模块软件的设计、开发、编程等任务\n3、研究新技术、引入到实际项目应用当中\n4、持续优化现有系统、线上问题排查及修复\n5、维护项目文档和手册，持续完善技术知识库\n岗位要求：\n1、1年以上Web产品服务器后端开发经验\n2、熟悉网络编程、多线程编程技术\n3、熟悉MySQL、PostgreSQL、Redis、MongoDB\n4、熟悉Linux平台的C/C++/Golang中的某种编程语言（Golang优先）\n5、熟悉Linux系统，对高并发处理有一定经验\n6、了解HTTP/TCP/UDP协议，了解B/S，C/S架构\n7、优秀的分析问题和解决问题的能力，具备强烈的进取心和良好的团队合作能力\n\n工作地址:广州市天河区龙怡路91号广业文化创意园5楼5015房。\n联系电话：020-87565003，15918768787，\n联系邮箱（投递简历）hr_group@iprexmed.com",
    "body_html": "<p>后端开发工程师（Golang）（初级）(广州市爱菩新医药科技有限公司)</p>\n\n<p>岗位职责：\n1、负责公司 Web 产品的功能分析、设计、开发与维护等工作\n2、根据开发进度和任务分配，完成产品 Web 系统相应模块软件的设计、开发、编程等任务\n3、研究新技术、引入到实际项目应用当中\n4、持续优化现有系统、线上问题排查及修复\n5、维护项目文档和手册，持续完善技术知识库\n岗位要求：\n1、1 年以上 Web 产品服务器后端开发经验\n2、熟悉网络编程、多线程编程技术\n3、熟悉 MySQL、PostgreSQL、Redis、MongoDB\n4、熟悉 Linux 平台的 C/C++/Golang 中的某种编程语言（Golang 优先）\n5、熟悉 Linux 系统，对高并发处理有一定经验\n6、了解 HTTP/TCP/UDP 协议，了解 B/S，C/S 架构\n7、优秀的分析问题和解决问题的能力，具备强烈的进取心和良好的团队合作能力</p>\n\n<p>工作地址:广州市天河区龙怡路 91 号广业文化创意园 5 楼 5015 房。\n联系电话：020-87565003，15918768787，\n联系邮箱（投递简历）hr_group@iprexmed.com</p>",
    "hits": 458,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 603,
    "title": "nginx服务器邮件发送失败",
    "created_at": "2017-01-20 13:44:02",
    "updated_at": "2017-01-20 13:44:02",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1344,
    "user": "{\"id\": 1344, \"name\": \"皇虫\", \"login\": \"1272881215\", \"avatar\": \"https://static.gocn.vip/user/avatar/1344/6acfae.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "用beego开发的web站点，如果是直接localhost:8080 进行访问，http能够很快地发送邮件并返回响应，但是当使用本地的nginx反向代理做测试的时候，邮件是能发送成功，但是耗时在5秒左右，然后当部署到nginx的云服务器测试的时候，邮件发送失败，返回“504 Gateway Time-out”。\n\n本地ubuntu环境下的nginx版本和模块是这样的：\n```\nnginx version: nginx/1.10.0\nbuilt by gcc 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.4) \nbuilt with OpenSSL 1.0.2g  1 Mar 2016\nTLS SNI support enabled\nconfigure arguments: --user=www --group=www --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_v2_module --with-http_gzip_static_module --with-ipv6 --with-http_sub_module\n\n```\n\n云服务器centos环境下的nginx版本和模块是这样的：\n```\nnginx version: nginx/1.8.1\nbuilt by gcc 4.4.7 20120313 (Red Hat 4.4.7-17) (GCC) \nbuilt with OpenSSL 1.0.1e-fips 11 Feb 2013\nTLS SNI support enabled\nconfigure arguments: --user=www --group=www --prefix=/www/wdlinux/nginx-1.8.1 --with-http_stub_status_module --with-ipv6 --with-http_gzip_static_module --with-http_realip_module --with-http_ssl_module\n```\n\n\n请教下如何解决邮件发送问题。大家在使用go开发的时候，有没有遇到相同或类似的问题。",
    "body_html": "<p>用 beego 开发的 web 站点，如果是直接 localhost:8080 进行访问，http 能够很快地发送邮件并返回响应，但是当使用本地的 nginx 反向代理做测试的时候，邮件是能发送成功，但是耗时在 5 秒左右，然后当部署到 nginx 的云服务器测试的时候，邮件发送失败，返回 “504 Gateway Time-out”。</p>\n\n<p>本地 ubuntu 环境下的 nginx 版本和模块是这样的：</p>\n <pre class=\"highlight plaintext\"><code>nginx version: nginx/1.10.0\nbuilt by gcc 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.4) \nbuilt with OpenSSL 1.0.2g  1 Mar 2016\nTLS SNI support enabled\nconfigure arguments: --user=www --group=www --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_v2_module --with-http_gzip_static_module --with-ipv6 --with-http_sub_module\n\n</code></pre> \n<p>云服务器 centos 环境下的 nginx 版本和模块是这样的：</p>\n <pre class=\"highlight plaintext\"><code>nginx version: nginx/1.8.1\nbuilt by gcc 4.4.7 20120313 (Red Hat 4.4.7-17) (GCC) \nbuilt with OpenSSL 1.0.1e-fips 11 Feb 2013\nTLS SNI support enabled\nconfigure arguments: --user=www --group=www --prefix=/www/wdlinux/nginx-1.8.1 --with-http_stub_status_module --with-ipv6 --with-http_gzip_static_module --with-http_realip_module --with-http_ssl_module\n</code></pre> \n<p>请教下如何解决邮件发送问题。大家在使用 go 开发的时候，有没有遇到相同或类似的问题。</p>",
    "hits": 155,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 604,
    "title": "golang 怎么设置cookie？",
    "created_at": "2017-01-20 14:31:06",
    "updated_at": "2017-01-20 18:42:17",
    "replied_at": "2017-01-20 18:42:17",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 244,
    "last_reply_user_login": "zensh",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1353,
    "user": "{\"id\": 1353, \"name\": \"songtianyi\", \"login\": \"songtianyi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "rt",
    "body_html": "<p>rt</p>",
    "hits": 363,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 605,
    "title": "Go Base64 Decode 的问题",
    "created_at": "2017-01-21 08:23:40",
    "updated_at": "2017-01-29 08:46:10",
    "replied_at": "2017-01-29 08:46:10",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1344,
    "last_reply_user_login": "皇虫",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 962,
    "user": "{\"id\": 962, \"name\": \"codinghxl\", \"login\": \"codinghxl\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我用`Go Base64 Encode`，传给`Java`能正常`decode`，但是发现用`Java Base64 Encode`的数据，用 `Go Base64 Decode`会多几个字节，但是发现多的几个字节是0，什么问题造成的？`",
    "body_html": "<p>我用<code>Go Base64 Encode</code>，传给<code>Java</code>能正常<code>decode</code>，但是发现用<code>Java Base64 Encode</code>的数据，用 <code>Go Base64 Decode</code>会多几个字节，但是发现多的几个字节是 0，什么问题造成的？`</p>",
    "hits": 422,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 606,
    "title": "在beego api开发中如何对几个API组合成一个新的API",
    "created_at": "2017-01-22 15:56:37",
    "updated_at": "2021-01-20 02:28:46",
    "replied_at": "2017-01-26 23:38:25",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1259,
    "last_reply_user_login": "gloomyzerg",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1055,
    "user": "{\"id\": 1055, \"name\": \"hlj2722\", \"login\": \"hlj2722\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在开发API的过程中，一个个小的API已经开发好，但是有这样的一个需求，要把特定的几个API组合成一个新的API，大家有遇到这个问题吗，思路是怎么样的",
    "body_html": "<p>在开发 API 的过程中，一个个小的 API 已经开发好，但是有这样的一个需求，要把特定的几个 API 组合成一个新的 API，大家有遇到这个问题吗，思路是怎么样的</p>",
    "hits": 377,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 607,
    "title": "beego log 绝对路径",
    "created_at": "2017-01-22 17:31:35",
    "updated_at": "2021-01-16 21:20:29",
    "replied_at": "2017-01-22 17:56:33",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1140,
    "last_reply_user_login": "xiaofeng211",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1140,
    "user": "{\"id\": 1140, \"name\": \"xiaofeng211\", \"login\": \"xiaofeng211\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在使用beegolog模块遇到一个问题，如果使用绝对路径配置的时候会报\n logs.BeeLogger.SetLogger: invalid character '/' looking for beginning of value\n \n请问如何解决这个问题",
    "body_html": "<p>在使用 beegolog 模块遇到一个问题，如果使用绝对路径配置的时候会报\n logs.BeeLogger.SetLogger: invalid character '/' looking for beginning of value</p>\n\n<p>请问如何解决这个问题</p>",
    "hits": 323,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 608,
    "title": "如何在window上连续执行cmd命令？",
    "created_at": "2017-01-23 10:30:44",
    "updated_at": "2017-01-23 11:23:39",
    "replied_at": "2017-01-23 11:23:39",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 835,
    "last_reply_user_login": "Ky",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 931,
    "user": "{\"id\": 931, \"name\": \"lifei6671\", \"login\": \"lifei6671\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "想用Go实现项目的自动部署，在Windows平台上需要先执行cd 目录命令，再执行git pull命令。\n请问在Windows上是如何连续执行这两个命令呢？",
    "body_html": "<p>想用 Go 实现项目的自动部署，在 Windows 平台上需要先执行 cd 目录命令，再执行 git pull 命令。\n请问在 Windows 上是如何连续执行这两个命令呢？</p>",
    "hits": 356,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 609,
    "title": "glide get包 版本问题",
    "created_at": "2017-01-23 19:59:42",
    "updated_at": "2017-01-26 21:51:47",
    "replied_at": "2017-01-26 21:51:47",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1531,
    "user": "{\"id\": 1531, \"name\": \"willian\", \"login\": \"willian\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "package: github.com/zhangweilun/go_proxy\nimport:\n- package: github.com/zhangweilun/logs\n- package: github.com/go-sql-driver/mysql\n  version: ^1.3.0\n- package: github.com/zhangweilun/goxmlpath\n- package: github.com/astaxie/beego\n  version: ^1.7.2\n  subpackages:\n  - orm\n  \n  zhangweilun是我自己的包，怎么没有version标识，是要加什么东西吗",
    "body_html": "<p>package: github.com/zhangweilun/go_proxy\nimport:</p>\n\n<ul>\n<li>package: github.com/zhangweilun/logs</li>\n<li>package: github.com/go-sql-driver/mysql\nversion: ^1.3.0</li>\n<li>package: github.com/zhangweilun/goxmlpath</li>\n<li>package: github.com/astaxie/beego\nversion: ^1.7.2\nsubpackages:\n\n<ul>\n<li>orm</li>\n</ul>\n</li>\n</ul>\n\n<p>zhangweilun 是我自己的包，怎么没有 version 标识，是要加什么东西吗</p>",
    "hits": 360,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 610,
    "title": "第三届GopherChina大会正式启动了",
    "created_at": "2017-01-23 22:48:15",
    "updated_at": "2017-03-13 15:03:56",
    "replied_at": "2017-03-13 15:03:43",
    "replies_count": 14,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1698,
    "last_reply_user_login": "hector",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "时间如梭，转眼又到了一年一度的Gopher大会了，我们也正式启动了明年的大会筹备活动。\n\nGopherChina 是中国的最权威和最实力干货的Go大会，我们致力于为中国广大的Gopher提供最好的大会，我们本着非盈利目的来举办大会，前面两届大会在上海和北京都获得了非常好的口碑，今年我们大会将在四月份举办大会。举办Gopher大会，主要是汇集Gopher的广大开发者，聚集一批大规模应用Go的示范企业给大家分享，呈现一场cool的盛会。\n \n这是2015年Go作者之一Robert参会之后写的博客：https://blog.golang.org/gopherchina\n \n第一届我们的大会参会人数是500人，去年在北京差不多达到了1000人的规模， 今年我们组织了1500人的场地，面向的受众也是越来越多，同时我们也邀请了Go team的同学过来分享。\n\n我们的传统就是每年大会提供一件限量版的T恤：\n\n![](https://github.com/gocn/images/blob/master/WX20170123-224148%402x.png?raw=true)\n\n\n报名地址：http://www.bagevent.com/event/357764",
    "body_html": "<p>时间如梭，转眼又到了一年一度的 Gopher 大会了，我们也正式启动了明年的大会筹备活动。</p>\n\n<p>GopherChina 是中国的最权威和最实力干货的 Go 大会，我们致力于为中国广大的 Gopher 提供最好的大会，我们本着非盈利目的来举办大会，前面两届大会在上海和北京都获得了非常好的口碑，今年我们大会将在四月份举办大会。举办 Gopher 大会，主要是汇集 Gopher 的广大开发者，聚集一批大规模应用 Go 的示范企业给大家分享，呈现一场 cool 的盛会。</p>\n\n<p>这是 2015 年 Go 作者之一 Robert 参会之后写的博客：<a href=\"https://blog.golang.org/gopherchina\" rel=\"nofollow\" target=\"_blank\">https://blog.golang.org/gopherchina</a></p>\n\n<p>第一届我们的大会参会人数是 500 人，去年在北京差不多达到了 1000 人的规模， 今年我们组织了 1500 人的场地，面向的受众也是越来越多，同时我们也邀请了 Go team 的同学过来分享。</p>\n\n<p>我们的传统就是每年大会提供一件限量版的 T 恤：</p>\n\n<p><img src=\"https://github.com/gocn/images/blob/master/WX20170123-224148%402x.png?raw=true\" title=\"\" alt=\"\"></p>\n\n<p>报名地址：<a href=\"http://www.bagevent.com/event/357764\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/357764</a></p>",
    "hits": 621,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 611,
    "title": "Http请求遇到一个非常郁闷的问题",
    "created_at": "2017-01-24 00:32:17",
    "updated_at": "2017-01-24 10:17:09",
    "replied_at": "2017-01-24 10:17:09",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 159,
    "last_reply_user_login": "Xargin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 816,
    "user": "{\"id\": 816, \"name\": \"easonme\", \"login\": \"easonme\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我试图通过beego的httplib发起get请求，但是总是返回失败的问题；最后我采用最原始的系统get方法同样存在这个问题；我很好奇的是为什么会有样的问题；请各位大神相助感谢\n\n问题是\n\n1：这是curl请求，是能拿到数据的；\ncurl -H 'Host: apiv2.ai.biz -H 'Accept: */*' -H 'User-Agent: Beauty/2.0 (iPhone; iOS 10.2; Scale/2.00)' -H 'Accept-Language: zh-Hans-CN;q=1' --compressed 'http://4.3.1.8/album/all?app=PrettyBeauty&amp;pageIndex=1&amp;pageSize=10&amp;styleId=3&amp;type=0&amp;version=2.0'；\n\n2：Postmain模拟请求也是OK的能拿到数据；\n\n3：我于是开始写最基础的代码，一直是拿不到数据的，而且是404\n\n```go\nimport(\t \n\t&quot;fmt&quot;\n\t&quot;net/http&quot;\n\t&quot;os&quot;\n\t&quot;io/ioutil&quot;\n\t)\nfunc main() {\n\tclient := &amp;http.Client{}\n\treq, err := http.NewRequest(&quot;GET&quot;, &quot;http://4.3.9.8/album/all&quot;, nil)\n\tif err != nil {\n\t\tfmt.Println(&quot;Fatal error &quot;, err.Error())\n\t\tos.Exit(0)\n\t}\n\n\treq.Header.Add(&quot;Accept-Language&quot;, &quot;zh-Hans-CN;q=1&quot;)\n\treq.Header.Add(&quot;Host&quot;, &quot;apiv2.ai.biz&quot;)\n\treq.Header.Add(&quot;Accept&quot;, &quot;*&quot;)\n\treq.Header.Add(&quot;User-Agent&quot;, &quot;Beauty/2.0(iPhone;iOS 10.2;Scale/2.00)&quot;)\n    //这个是我后来加上的\n\t//req.Header.Set(&quot;Content-Type&quot;, &quot;application/json&quot;)\n\tresp, err := client.Do(req)\n\n\tdefer resp.Body.Close()\n\tbody, err := ioutil.ReadAll(resp.Body)\n\tif err != nil {\n\t\t// handle error\n\t}\n\n\tfmt.Println(string(body))\n}\n\n```\n这样的请求永远是404，后台是采用php写的，不知道为何无法发起请求\n1：我同时尝试了 Header的Set方法和Add方法\n\n\n同样的数据和请求我采用python来写请求就成功\n\n```python\nimport urllib2\nrequest = urllib2.Request('http://4.3.9.8/album/all')\nrequest.add_header(&quot;Accept-Language&quot;, &quot;zh-Hans-CN;q=1&quot;)\nrequest.add_header(&quot;Host&quot;, &quot;apiv2.ai.biz&quot;)\nrequest.add_header(&quot;Accept&quot;, &quot;*&quot;)\nrequest.add_header(&quot;User-Agent&quot;, &quot;Beauty/2.0 (iPhone; iOS 10.2; Scale/2.00)&quot;)\nresponse = urllib2.urlopen(request)\nprint response.read()\n```\n",
    "body_html": "<p>我试图通过 beego 的 httplib 发起 get 请求，但是总是返回失败的问题；最后我采用最原始的系统 get 方法同样存在这个问题；我很好奇的是为什么会有样的问题；请各位大神相助感谢</p>\n\n<p>问题是</p>\n\n<p>1：这是 curl 请求，是能拿到数据的；\ncurl -H 'Host: apiv2.ai.biz -H 'Accept: <em>/</em>' -H 'User-Agent: Beauty/2.0 (iPhone; iOS 10.2; Scale/2.00)' -H 'Accept-Language: zh-Hans-CN;q=1' --compressed '<a href=\"http://4.3.1.8/album/all?app=PrettyBeauty&amp;amppageIndex=1&amp;amppageSize=10&amp;ampstyleId=3&amp;amptype=0&amp;ampversion=2.0'%EF%BC%9B\" rel=\"nofollow\" target=\"_blank\">http://4.3.1.8/album/all?app=PrettyBeauty&amp;amppageIndex=1&amp;amppageSize=10&amp;ampstyleId=3&amp;amptype=0&amp;ampversion=2.0'；</a>;</p>\n\n<p>2：Postmain 模拟请求也是 OK 的能拿到数据；</p>\n\n<p>3：我于是开始写最基础的代码，一直是拿不到数据的，而且是 404</p>\n <pre class=\"highlight go\"><code><span class=\"k\">import</span><span class=\"p\">(</span>  \n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">os</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">ioutil</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">)</span>\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">client</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">{}</span>\n    <span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">NewRequest</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">GET</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">http</span><span class=\"o\">:</span><span class=\"c\">//4.3.9.8/album/all&amp;quot;, nil)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Fatal</span> <span class=\"kt\">error</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">err</span><span class=\"o\">.</span><span class=\"n\">Error</span><span class=\"p\">())</span>\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Exit</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">Header</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Accept</span><span class=\"o\">-</span><span class=\"n\">Language</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">zh</span><span class=\"o\">-</span><span class=\"n\">Hans</span><span class=\"o\">-</span><span class=\"n\">CN</span><span class=\"p\">;</span><span class=\"n\">q</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">Header</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Host</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">apiv2</span><span class=\"o\">.</span><span class=\"n\">ai</span><span class=\"o\">.</span><span class=\"n\">biz</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">Header</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Accept</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">*&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">Header</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">User</span><span class=\"o\">-</span><span class=\"n\">Agent</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Beauty</span><span class=\"o\">/</span><span class=\"m\">2.0</span><span class=\"p\">(</span><span class=\"n\">iPhone</span><span class=\"p\">;</span><span class=\"n\">iOS</span> <span class=\"m\">10.2</span><span class=\"p\">;</span><span class=\"n\">Scale</span><span class=\"o\">/</span><span class=\"m\">2.00</span><span class=\"p\">)</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"c\">//这个是我后来加上的</span>\n    <span class=\"c\">//req.Header.Set(&amp;quot;Content-Type&amp;quot;, &amp;quot;application/json&amp;quot;)</span>\n    <span class=\"n\">resp</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Do</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n\n    <span class=\"k\">defer</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">Body</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n    <span class=\"n\">body</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">ioutil</span><span class=\"o\">.</span><span class=\"n\">ReadAll</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">Body</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"c\">// handle error</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n\n</code></pre> \n<p>这样的请求永远是 404，后台是采用 php 写的，不知道为何无法发起请求\n1：我同时尝试了 Header 的 Set 方法和 Add 方法</p>\n\n<p>同样的数据和请求我采用 python 来写请求就成功</p>\n <pre class=\"highlight python\"><code><span class=\"kn\">import</span> <span class=\"nn\">urllib2</span>\n<span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">urllib2</span><span class=\"p\">.</span><span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"s\">'http://4.3.9.8/album/all'</span><span class=\"p\">)</span>\n<span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">add_header</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Accept</span><span class=\"o\">-</span><span class=\"n\">Language</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">zh</span><span class=\"o\">-</span><span class=\"n\">Hans</span><span class=\"o\">-</span><span class=\"n\">CN</span><span class=\"p\">;</span><span class=\"n\">q</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">add_header</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Host</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">apiv2</span><span class=\"p\">.</span><span class=\"n\">ai</span><span class=\"p\">.</span><span class=\"n\">biz</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">add_header</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Accept</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">*&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">add_header</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">User</span><span class=\"o\">-</span><span class=\"n\">Agent</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Beauty</span><span class=\"o\">/</span><span class=\"mf\">2.0</span> <span class=\"p\">(</span><span class=\"n\">iPhone</span><span class=\"p\">;</span> <span class=\"n\">iOS</span> <span class=\"mf\">10.2</span><span class=\"p\">;</span> <span class=\"n\">Scale</span><span class=\"o\">/</span><span class=\"mf\">2.00</span><span class=\"p\">)</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">urllib2</span><span class=\"p\">.</span><span class=\"n\">urlopen</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n<span class=\"k\">print</span> <span class=\"n\">response</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n</code></pre> ",
    "hits": 485,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 612,
    "title": "http.Post 请求 返回一个图片",
    "created_at": "2017-01-24 13:32:25",
    "updated_at": "2017-01-24 14:22:56",
    "replied_at": "2017-01-24 14:22:56",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1353,
    "last_reply_user_login": "songtianyi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1588,
    "user": "{\"id\": 1588, \"name\": \"zanjs\", \"login\": \"zanjs\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "用户通过客户端发起 `get` 请求  ， get 有个参数 `code` ，获取到这个 `code` 后， `golang` 在发起一个 `post` 请求 , 然后把返回的图片 在返回给用户客户端\n\n\n\n```go\nresp, err := http.Post(creatURL,\n\t\t&quot;application/x-www-form-urlencoded&quot;,\n\t\tstrings.NewReader(strJSON))\n\ndefer resp.Body.Close()\n\n\tbody, _ := ioutil.ReadAll(resp.Body)\n\n\treturn string(body)\n```\n\n通过 post 请求 ，如果参数 `strJSON` 正确，返回一个图片，如果错误返回一个 json\n\n如果在正确的情况下，该如何读取 `resp.Body` 这个图片的信息呢，\n\n如果直接返回 `body` 的话 \n图片如下\n\n![](http://p1.bqimg.com/1949/b13626e95a9f8fdc.png)",
    "body_html": "<p>用户通过客户端发起 <code>get</code> 请求 ， get 有个参数 <code>code</code> ，获取到这个 <code>code</code> 后， <code>golang</code> 在发起一个 <code>post</code> 请求 , 然后把返回的图片 在返回给用户客户端</p>\n <pre class=\"highlight go\"><code><span class=\"n\">resp</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Post</span><span class=\"p\">(</span><span class=\"n\">creatURL</span><span class=\"p\">,</span>\n        <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">application</span><span class=\"o\">/</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"n\">www</span><span class=\"o\">-</span><span class=\"n\">form</span><span class=\"o\">-</span><span class=\"n\">urlencoded</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n        <span class=\"n\">strings</span><span class=\"o\">.</span><span class=\"n\">NewReader</span><span class=\"p\">(</span><span class=\"n\">strJSON</span><span class=\"p\">))</span>\n\n<span class=\"k\">defer</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">Body</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n\n    <span class=\"n\">body</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">ioutil</span><span class=\"o\">.</span><span class=\"n\">ReadAll</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">Body</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"kt\">string</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">)</span>\n</code></pre> \n<p>通过 post 请求 ，如果参数 <code>strJSON</code> 正确，返回一个图片，如果错误返回一个 json</p>\n\n<p>如果在正确的情况下，该如何读取 <code>resp.Body</code> 这个图片的信息呢，</p>\n\n<p>如果直接返回 <code>body</code> 的话 \n图片如下</p>\n\n<p><img src=\"http://p1.bqimg.com/1949/b13626e95a9f8fdc.png\" title=\"\" alt=\"\"></p>",
    "hits": 548,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 613,
    "title": "beego orm 使用困惑",
    "created_at": "2017-01-29 16:39:33",
    "updated_at": "2021-01-16 21:40:25",
    "replied_at": "2017-01-29 16:43:07",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1531,
    "last_reply_user_login": "willian",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1531,
    "user": "{\"id\": 1531, \"name\": \"willian\", \"login\": \"willian\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "1：首先指出一下官网的一处错误\n// 也可以直接使用对象作为表名\nuser := new(User)\nqs = o.QueryTable(user) // 返回 QuerySeter\n\n地址：https://beego.me/docs/mvc/model/query.md\n\n上面的这句代码少了一个：这个符号 qs = o.QueryTable(user) // 返回 QuerySeter\n\n2：我有一段代码添加条件语句不成功 我将代码指出 希望astaxie有时间回答\n\norm版本：- package: github.com/astaxie/beego\n  version: ^1.7.2\n  subpackages:\n  - orm\ngo：1.7.5\n\nmysql：5.6\n\n第一次用beego orm 代码写的很烂 请提写建议 应该怎么样优雅些 代码如下：\no := orm.NewOrm()\n\to.Using(&quot;default&quot;)\n\tvar proxy []*model.Proxy\n\tcondition := new(model.Proxy)\n\tr.ParseForm()\n\tif len(r.Form[&quot;feature&quot;]) &gt; 0 {\n\t\tfeature := r.Form[&quot;feature&quot;][0]\n\t\tcondition.Feature = feature\n\t}else {\n\t\tcondition.Feature = &quot;高匿&quot;\n\t}\n\tif len(r.Form[&quot;protocol&quot;]) &gt; 0 {\n\t\tprotocol := r.Form[&quot;protocol&quot;][0]\n\t\tcondition.Protocol = protocol\n\t}else {\n\t\tcondition.Protocol = &quot;HTTP&quot;\n\t}\n\n\tif len(r.Form[&quot;address&quot;]) &gt; 0 {\n\t\taddress := r.Form[&quot;address&quot;][0]\n\t\tcondition.Address = address\n\t}\n\tif len(r.Form[&quot;country&quot;]) &gt; 0 {\n\t\tcountry := r.Form[&quot;country&quot;][0]\n\t\tcondition.Country = country\n\t}else {\n\t\tcondition.Country = &quot;china&quot;\n\t}\n\tqs := o.QueryTable(condition)\n\tif len(r.Form[&quot;count&quot;]) &gt; 0 {\n\t\ti,err := strconv.ParseInt(r.Form[&quot;count&quot;][0],10,64)\n\t\tif err != nil {\n\t\t\tlogs.Fatal(&quot;cannot convert&quot;)\n\t\t}\n\t\tlogs.Debug(&quot;count&quot;,i)\n\t\tqs.OrderBy(&quot;speed&quot;).Limit(i).All(&amp;proxy)\n\t}else {\n\t\tlogs.Debug(&quot;count&quot;,common.Query_limit)\n\t\tqs.OrderBy(&quot;speed&quot;).Limit(common.Query_limit).All(&amp;proxy)\n\t}\n\tjson_string, _ := json.Marshal(proxy)\n\tw.Write(json_string)\n[ORM]2017/01/29 16:32:44  -[Queries/default] - [  OK /    db.Query /    30.9ms] - [SELECT T0.`id`, T0.`ip`, T0.`port`, T0.`protocol`, T0.`feature`, T0.`count`, T0.`address`, T0.`country`, T0.`check_time`, T0.`speed`, T0.`score` FROM `proxy` T0 ORDER BY T0.`speed` ASC LIMIT 5]\n\n执行的sql始终是这句，where条件老是加不进",
    "body_html": "<p>1：首先指出一下官网的一处错误\n// 也可以直接使用对象作为表名\nuser := new(User)\nqs = o.QueryTable(user) // 返回 QuerySeter</p>\n\n<p>地址：<a href=\"https://beego.me/docs/mvc/model/query.md\" rel=\"nofollow\" target=\"_blank\">https://beego.me/docs/mvc/model/query.md</a></p>\n\n<p>上面的这句代码少了一个：这个符号 qs = o.QueryTable(user) // 返回 QuerySeter</p>\n\n<p>2：我有一段代码添加条件语句不成功 我将代码指出 希望 astaxie 有时间回答</p>\n\n<p>orm 版本：- package: github.com/astaxie/beego\n  version: ^1.7.2\n  subpackages:</p>\n\n<ul>\n<li>orm\ngo：1.7.5</li>\n</ul>\n\n<p>mysql：5.6</p>\n\n<p>第一次用 beego orm 代码写的很烂 请提写建议 应该怎么样优雅些 代码如下：\no := orm.NewOrm()\n    o.Using(\"default\")\n    var proxy []*model.Proxy\n    condition := new(model.Proxy)\n    r.ParseForm()\n    if len(r.Form[\"feature\"]) &gt; 0 {\n        feature := r.Form[\"feature\"][0]\n        condition.Feature = feature\n    }else {\n        condition.Feature = \"高匿\"\n    }\n    if len(r.Form[\"protocol\"]) &gt; 0 {\n        protocol := r.Form[\"protocol\"][0]\n        condition.Protocol = protocol\n    }else {\n        condition.Protocol = \"HTTP\"\n    }</p>\n\n<p>if len(r.Form[\"address\"]) &gt; 0 {\n        address := r.Form[\"address\"][0]\n        condition.Address = address\n    }\n    if len(r.Form[\"country\"]) &gt; 0 {\n        country := r.Form[\"country\"][0]\n        condition.Country = country\n    }else {\n        condition.Country = \"china\"\n    }\n    qs := o.QueryTable(condition)\n    if len(r.Form[\"count\"]) &gt; 0 {\n        i,err := strconv.ParseInt(r.Form[\"count\"][0],10,64)\n        if err != nil {\n            logs.Fatal(\"cannot convert\")\n        }\n        logs.Debug(\"count\",i)\n        qs.OrderBy(\"speed\").Limit(i).All(&amp;proxy)\n    }else {\n        logs.Debug(\"count\",common.Query_limit)\n        qs.OrderBy(\"speed\").Limit(common.Query_limit).All(&amp;proxy)\n    }\n    json_string, _ := json.Marshal(proxy)\n    w.Write(json_string)\n[ORM] 2017/01/29 16:32:44  -[Queries/default] - [  OK /    db.Query /    30.9ms] - [SELECT T0.<code>id</code>, T0.<code>ip</code>, T0.<code>port</code>, T0.<code>protocol</code>, T0.<code>feature</code>, T0.<code>count</code>, T0.<code>address</code>, T0.<code>country</code>, T0.<code>check_time</code>, T0.<code>speed</code>, T0.<code>score</code> FROM <code>proxy</code> T0 ORDER BY T0.<code>speed</code> ASC LIMIT 5]</p>\n\n<p>执行的 sql 始终是这句，where 条件老是加不进</p>",
    "hits": 580,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 614,
    "title": "beego orm困惑",
    "created_at": "2017-01-29 16:42:25",
    "updated_at": "2021-01-16 21:40:22",
    "replied_at": "2017-02-03 17:33:27",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1259,
    "last_reply_user_login": "gloomyzerg",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1531,
    "user": "{\"id\": 1531, \"name\": \"willian\", \"login\": \"willian\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "1：首先指出一下官网的一处错误\n// 也可以直接使用对象作为表名\nuser := new(User)\nqs = o.QueryTable(user) // 返回 QuerySeter\n\n\n地址：https://beego.me/docs/mvc/model/query.md\n\n\n上面的这句代码少了一个：这个符号 qs = o.QueryTable(user) // 返回 QuerySeter\n\n\n2：我有一段代码添加条件语句不成功 我将代码指出 希望astaxie有时间回答\n\n\norm版本：- version: ^1.7.2\ngo版本：1.7.5\nmysql版本：5.6\n\n\n第一次用beego orm 代码写的很烂 请提写建议 应该怎么样优雅些 代码如下：\n\n\n```go\no := orm.NewOrm()\no.Using(&quot;default&quot;)\nvar proxy []*model.Proxy\ncondition := new(model.Proxy)\nr.ParseForm()\nif len(r.Form[&quot;feature&quot;]) &gt; 0 {\nfeature := r.Form[&quot;feature&quot;][0]\ncondition.Feature = feature\n}else {\ncondition.Feature = &quot;高匿&quot;\n}\nif len(r.Form[&quot;protocol&quot;]) &gt; 0 {\nprotocol := r.Form[&quot;protocol&quot;][0]\ncondition.Protocol = protocol\n}else {\ncondition.Protocol = &quot;HTTP&quot;\n}\nif len(r.Form[&quot;address&quot;]) &gt; 0 {\n    address := r.Form[&quot;address&quot;][0]\n    condition.Address = address\n}\nif len(r.Form[&quot;country&quot;]) &gt; 0 {\n    country := r.Form[&quot;country&quot;][0]\n    condition.Country = country\n}else {\n    condition.Country = &quot;china&quot;\n}\nqs := o.QueryTable(condition)\nif len(r.Form[&quot;count&quot;]) &gt; 0 {\n    i,err := strconv.ParseInt(r.Form[&quot;count&quot;][0],10,64)\n    if err != nil {\n        logs.Fatal(&quot;cannot convert&quot;)\n    }\n    logs.Debug(&quot;count&quot;,i)\n    qs.OrderBy(&quot;speed&quot;).Limit(i).All(&amp;proxy)\n}else {\n    logs.Debug(&quot;count&quot;,common.Query_limit)\n    qs.OrderBy(&quot;speed&quot;).Limit(common.Query_limit).All(&amp;proxy)\n}\njson_string, _ := json.Marshal(proxy)\nw.Write(json_string)\n```\n\n```go\n[ORM]2017/01/29 16:32:44 -[Queries/default] - [ OK / db.Query / 30.9ms] - [SELECT T0.id, T0.ip, T0.port, T0.protocol, T0.feature, T0.count, T0.address, T0.country, T0.check_time, T0.speed, T0.score FROM proxy T0 ORDER BY T0.speed ASC LIMIT 5]\n\t\t\t\t\t\t   \n\t\t\t\t\t\t   \n\t\t\t\t\t\t   这个是日志\n```\n\n\n执行的sql始终是这句，where条件老是加不进",
    "body_html": "<p>1：首先指出一下官网的一处错误\n// 也可以直接使用对象作为表名\nuser := new(User)\nqs = o.QueryTable(user) // 返回 QuerySeter</p>\n\n<p>地址：<a href=\"https://beego.me/docs/mvc/model/query.md\" rel=\"nofollow\" target=\"_blank\">https://beego.me/docs/mvc/model/query.md</a></p>\n\n<p>上面的这句代码少了一个：这个符号 qs = o.QueryTable(user) // 返回 QuerySeter</p>\n\n<p>2：我有一段代码添加条件语句不成功 我将代码指出 希望 astaxie 有时间回答</p>\n\n<p>orm 版本：- version: ^1.7.2\ngo 版本：1.7.5\nmysql 版本：5.6</p>\n\n<p>第一次用 beego orm 代码写的很烂 请提写建议 应该怎么样优雅些 代码如下：</p>\n <pre class=\"highlight go\"><code><span class=\"n\">o</span> <span class=\"o\">:=</span> <span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">NewOrm</span><span class=\"p\">()</span>\n<span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">Using</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"k\">default</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"k\">var</span> <span class=\"n\">proxy</span> <span class=\"p\">[]</span><span class=\"o\">*</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">Proxy</span>\n<span class=\"n\">condition</span> <span class=\"o\">:=</span> <span class=\"nb\">new</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">Proxy</span><span class=\"p\">)</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">ParseForm</span><span class=\"p\">()</span>\n<span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">feature</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;])</span> <span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n<span class=\"n\">feature</span> <span class=\"o\">:=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">feature</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;][</span><span class=\"m\">0</span><span class=\"p\">]</span>\n<span class=\"n\">condition</span><span class=\"o\">.</span><span class=\"n\">Feature</span> <span class=\"o\">=</span> <span class=\"n\">feature</span>\n<span class=\"p\">}</span><span class=\"k\">else</span> <span class=\"p\">{</span>\n<span class=\"n\">condition</span><span class=\"o\">.</span><span class=\"n\">Feature</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">高匿</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">protocol</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;])</span> <span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n<span class=\"n\">protocol</span> <span class=\"o\">:=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">protocol</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;][</span><span class=\"m\">0</span><span class=\"p\">]</span>\n<span class=\"n\">condition</span><span class=\"o\">.</span><span class=\"n\">Protocol</span> <span class=\"o\">=</span> <span class=\"n\">protocol</span>\n<span class=\"p\">}</span><span class=\"k\">else</span> <span class=\"p\">{</span>\n<span class=\"n\">condition</span><span class=\"o\">.</span><span class=\"n\">Protocol</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">HTTP</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">address</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;])</span> <span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n    <span class=\"n\">address</span> <span class=\"o\">:=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">address</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;][</span><span class=\"m\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">condition</span><span class=\"o\">.</span><span class=\"n\">Address</span> <span class=\"o\">=</span> <span class=\"n\">address</span>\n<span class=\"p\">}</span>\n<span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">country</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;])</span> <span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n    <span class=\"n\">country</span> <span class=\"o\">:=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">country</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;][</span><span class=\"m\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">condition</span><span class=\"o\">.</span><span class=\"n\">Country</span> <span class=\"o\">=</span> <span class=\"n\">country</span>\n<span class=\"p\">}</span><span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"n\">condition</span><span class=\"o\">.</span><span class=\"n\">Country</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">china</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"n\">qs</span> <span class=\"o\">:=</span> <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">QueryTable</span><span class=\"p\">(</span><span class=\"n\">condition</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">count</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;])</span> <span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n    <span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">strconv</span><span class=\"o\">.</span><span class=\"n\">ParseInt</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">count</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;][</span><span class=\"m\">0</span><span class=\"p\">],</span><span class=\"m\">10</span><span class=\"p\">,</span><span class=\"m\">64</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">logs</span><span class=\"o\">.</span><span class=\"n\">Fatal</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">cannot</span> <span class=\"n\">convert</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">logs</span><span class=\"o\">.</span><span class=\"n\">Debug</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">count</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"n\">qs</span><span class=\"o\">.</span><span class=\"n\">OrderBy</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">speed</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">All</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">proxy</span><span class=\"p\">)</span>\n<span class=\"p\">}</span><span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"n\">logs</span><span class=\"o\">.</span><span class=\"n\">Debug</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">count</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span><span class=\"n\">common</span><span class=\"o\">.</span><span class=\"n\">Query_limit</span><span class=\"p\">)</span>\n    <span class=\"n\">qs</span><span class=\"o\">.</span><span class=\"n\">OrderBy</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">speed</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">(</span><span class=\"n\">common</span><span class=\"o\">.</span><span class=\"n\">Query_limit</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">All</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">proxy</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n<span class=\"n\">json_string</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">Marshal</span><span class=\"p\">(</span><span class=\"n\">proxy</span><span class=\"p\">)</span>\n<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">Write</span><span class=\"p\">(</span><span class=\"n\">json_string</span><span class=\"p\">)</span>\n</code></pre>  <pre class=\"highlight go\"><code><span class=\"p\">[</span><span class=\"n\">ORM</span><span class=\"p\">]</span><span class=\"m\">2017</span><span class=\"o\">/</span><span class=\"m\">01</span><span class=\"o\">/</span><span class=\"m\">29</span> <span class=\"m\">16</span><span class=\"o\">:</span><span class=\"m\">32</span><span class=\"o\">:</span><span class=\"m\">44</span> <span class=\"o\">-</span><span class=\"p\">[</span><span class=\"n\">Queries</span><span class=\"o\">/</span><span class=\"k\">default</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"p\">[</span> <span class=\"n\">OK</span> <span class=\"o\">/</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Query</span> <span class=\"o\">/</span> <span class=\"m\">30.9</span><span class=\"n\">ms</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"p\">[</span><span class=\"n\">SELECT</span> <span class=\"n\">T0</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">T0</span><span class=\"o\">.</span><span class=\"n\">ip</span><span class=\"p\">,</span> <span class=\"n\">T0</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"n\">T0</span><span class=\"o\">.</span><span class=\"n\">protocol</span><span class=\"p\">,</span> <span class=\"n\">T0</span><span class=\"o\">.</span><span class=\"n\">feature</span><span class=\"p\">,</span> <span class=\"n\">T0</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">,</span> <span class=\"n\">T0</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"p\">,</span> <span class=\"n\">T0</span><span class=\"o\">.</span><span class=\"n\">country</span><span class=\"p\">,</span> <span class=\"n\">T0</span><span class=\"o\">.</span><span class=\"n\">check_time</span><span class=\"p\">,</span> <span class=\"n\">T0</span><span class=\"o\">.</span><span class=\"n\">speed</span><span class=\"p\">,</span> <span class=\"n\">T0</span><span class=\"o\">.</span><span class=\"n\">score</span> <span class=\"n\">FROM</span> <span class=\"n\">proxy</span> <span class=\"n\">T0</span> <span class=\"n\">ORDER</span> <span class=\"n\">BY</span> <span class=\"n\">T0</span><span class=\"o\">.</span><span class=\"n\">speed</span> <span class=\"n\">ASC</span> <span class=\"n\">LIMIT</span> <span class=\"m\">5</span><span class=\"p\">]</span>\n\n\n                           <span class=\"n\">这个是日志</span>\n</code></pre> \n<p>执行的 sql 始终是这句，where 条件老是加不进</p>",
    "hits": 549,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 615,
    "title": "go交叉编译go和cgo混合编写的库",
    "created_at": "2017-01-30 20:59:12",
    "updated_at": "2018-05-02 11:47:32",
    "replied_at": "2018-05-02 11:47:32",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 5650,
    "last_reply_user_login": "zengming00",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1531,
    "user": "{\"id\": 1531, \"name\": \"willian\", \"login\": \"willian\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "环境：mac os\n错误输出：\nld: unknown option: --build-id=none\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n\n\n编译命令：\nCGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build\n\n编译错误的库：\niconv-go",
    "body_html": "<p>环境：mac os\n错误输出：\nld: unknown option: --build-id=none\nclang: error: linker command failed with exit code 1 (use -v to see invocation)</p>\n\n<p>编译命令：\nCGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build</p>\n\n<p>编译错误的库：\niconv-go</p>",
    "hits": 840,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 616,
    "title": "Glide error 求解",
    "created_at": "2017-02-04 22:42:52",
    "updated_at": "2017-03-15 17:06:43",
    "replied_at": "2017-03-15 17:06:43",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1704,
    "last_reply_user_login": "cookedsteak",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1446,
    "user": "{\"id\": 1446, \"name\": \"chrislee\", \"login\": \"chrislee\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "利用glide下载项目的依赖\n```\nglide init\nglide update\n```\n执行glide update时出现下列错误\n```\n[WARN]  Unable to checkout golang.org/x/net/context\n[ERROR] Error looking for golang.org/x/net/context: Cannot detect VCS\n```\n似乎glide只能成功从github下载依赖，从golang.org或者gopkg.in都会下载失败，这是GFW的功劳吧，各位有什么好办法吗？大点的开源项目几十个依赖很常见，再加上依赖的依赖，总不能手工挨个下载吧。",
    "body_html": "<p>利用 glide 下载项目的依赖</p>\n <pre class=\"highlight plaintext\"><code>glide init\nglide update\n</code></pre> \n<p>执行 glide update 时出现下列错误</p>\n <pre class=\"highlight plaintext\"><code>[WARN]  Unable to checkout golang.org/x/net/context\n[ERROR] Error looking for golang.org/x/net/context: Cannot detect VCS\n</code></pre> \n<p>似乎 glide 只能成功从 github 下载依赖，从 golang.org 或者 gopkg.in 都会下载失败，这是 GFW 的功劳吧，各位有什么好办法吗？大点的开源项目几十个依赖很常见，再加上依赖的依赖，总不能手工挨个下载吧。</p>",
    "hits": 689,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 617,
    "title": "求个go的安卓自动化测试工具",
    "created_at": "2017-02-06 00:00:31",
    "updated_at": "2017-03-06 10:04:55",
    "replied_at": "2017-03-06 10:04:55",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1678,
    "last_reply_user_login": "shadow1163",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "rt",
    "body_html": "<p>rt</p>",
    "hits": 342,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 618,
    "title": "请问有golang实现的acc编码／解码库吗？",
    "created_at": "2017-02-06 13:20:38",
    "updated_at": "2017-02-06 13:54:31",
    "replied_at": "2017-02-06 13:54:31",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 339,
    "last_reply_user_login": "Akagi201",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1070,
    "user": "{\"id\": 1070, \"name\": \"jdlau\", \"login\": \"jdlau\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "__如题__\n\n我在github上搜索了一下，好像只有[这个](https://github.com/Comcast/gaad)，但是我看它的usage感觉这个库不太靠谱，不知道大家还知道其它的acc编码／解码库吗？\n\n先谢过了～",
    "body_html": "<p><strong>如题</strong></p>\n\n<p>我在 github 上搜索了一下，好像只有<a href=\"https://github.com/Comcast/gaad\" rel=\"nofollow\" target=\"_blank\" title=\"\">这个</a>，但是我看它的 usage 感觉这个库不太靠谱，不知道大家还知道其它的 acc 编码／解码库吗？</p>\n\n<p>先谢过了～</p>",
    "hits": 414,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 619,
    "title": "beego支持chunked模式转发吗",
    "created_at": "2017-02-06 16:10:41",
    "updated_at": "2021-01-20 02:43:54",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 915,
    "user": "{\"id\": 915, \"name\": \"alexkkk\", \"login\": \"alexkkk\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "当http客户端用chunked模式给beego发送请求的时候，beego能将收到的拆分后的包逐个转发吗？\n也就是beego不等整个包都收完，直接也用chunked模式逐个转发",
    "body_html": "<p>当 http 客户端用 chunked 模式给 beego 发送请求的时候，beego 能将收到的拆分后的包逐个转发吗？\n也就是 beego 不等整个包都收完，直接也用 chunked 模式逐个转发</p>",
    "hits": 363,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 620,
    "title": "beego orm 默认limit值",
    "created_at": "2017-02-06 16:21:25",
    "updated_at": "2021-01-16 21:20:42",
    "replied_at": "2017-02-10 13:57:02",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 955,
    "user": "{\"id\": 955, \"name\": \"tianice\", \"login\": \"tianice\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "beego 的orm查询功能有个默认limit为1000，有没有办法取消这个默认或全局修改这个默认值？不希望每个查询单独设置",
    "body_html": "<p>beego 的 orm 查询功能有个默认 limit 为 1000，有没有办法取消这个默认或全局修改这个默认值？不希望每个查询单独设置</p>",
    "hits": 461,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 621,
    "title": "在docker swarm中使用grpc如何做负载均衡",
    "created_at": "2017-02-07 16:55:29",
    "updated_at": "2017-02-07 19:40:23",
    "replied_at": "2017-02-07 19:38:08",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1564,
    "last_reply_user_login": "jmzwcn",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1494,
    "user": "{\"id\": 1494, \"name\": \"stirlingx\", \"login\": \"stirlingx\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "一个rpc连接之后，就已经和服务节点绑定了，如果服务扩容，客户端还是的调用之前连接的节点，我是想每次调用不同的节点。\n\n难道要每次调用之前都重新connect吗？",
    "body_html": "<p>一个 rpc 连接之后，就已经和服务节点绑定了，如果服务扩容，客户端还是的调用之前连接的节点，我是想每次调用不同的节点。</p>\n\n<p>难道要每次调用之前都重新 connect 吗？</p>",
    "hits": 431,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 622,
    "title": "go怎么获取本机ip的疑问",
    "created_at": "2017-02-08 14:09:08",
    "updated_at": "2017-02-09 18:43:58",
    "replied_at": "2017-02-09 18:43:58",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 339,
    "last_reply_user_login": "Akagi201",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1494,
    "user": "{\"id\": 1494, \"name\": \"stirlingx\", \"login\": \"stirlingx\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "网上看了几种方法都有问题，大家有什么办法吗\n方法一，下面代码范返回好几个ip，不知道哪个是真的。\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;net&quot;\n\t&quot;os&quot;\n)\n\nfunc main() {\n\n\taddrs, err := net.InterfaceAddrs()\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n\n\tfor _, address := range addrs {\n\n\t\t// 检查ip地址判断是否回环地址\n\t\tif ipnet, ok := address.(*net.IPNet); ok &amp;&amp; !ipnet.IP.IsLoopback() {\n\t\t\tif ipnet.IP.To4() != nil {\n\t\t\t\tfmt.Println(ipnet.IP.String())\n\t\t\t}\n\n\t\t}\n\t}\n}\n```\n\n方法二，在无网络情况下或者连不通主机时，得不到结果\n```go\npackage main\nimport (\n    &quot;net&quot;\n    &quot;fmt&quot;\n    &quot;strings&quot;\n)\nfunc main() {\n    conn, err := net.Dial(&quot;udp&quot;, &quot;google.com:80&quot;)\n    if err != nil {\n        fmt.Println(err.Error())\n        return\n    }\n    defer conn.Close()\n    fmt.Println(strings.Split(conn.LocalAddr().String(), &quot;:&quot;)[0])\n}\n```\n",
    "body_html": "<p>网上看了几种方法都有问题，大家有什么办法吗\n方法一，下面代码范返回好几个 ip，不知道哪个是真的。</p>\n<pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">net</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">os</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"n\">addrs</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">InterfaceAddrs</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Exit</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">address</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">addrs</span> <span class=\"p\">{</span>\n\n        <span class=\"c\">// 检查ip地址判断是否回环地址</span>\n        <span class=\"k\">if</span> <span class=\"n\">ipnet</span><span class=\"p\">,</span> <span class=\"n\">ok</span> <span class=\"o\">:=</span> <span class=\"n\">address</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">IPNet</span><span class=\"p\">);</span> <span class=\"n\">ok</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span> <span class=\"o\">!</span><span class=\"n\">ipnet</span><span class=\"o\">.</span><span class=\"n\">IP</span><span class=\"o\">.</span><span class=\"n\">IsLoopback</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"n\">ipnet</span><span class=\"o\">.</span><span class=\"n\">IP</span><span class=\"o\">.</span><span class=\"n\">To4</span><span class=\"p\">()</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n                <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">ipnet</span><span class=\"o\">.</span><span class=\"n\">IP</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">())</span>\n            <span class=\"p\">}</span>\n\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n<p>方法二，在无网络情况下或者连不通主机时，得不到结果</p>\n<pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">net</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">strings</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">Dial</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">udp</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">google</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">:</span><span class=\"m\">80</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"o\">.</span><span class=\"n\">Error</span><span class=\"p\">())</span>\n        <span class=\"k\">return</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">defer</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">strings</span><span class=\"o\">.</span><span class=\"n\">Split</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">LocalAddr</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(),</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)[</span><span class=\"m\">0</span><span class=\"p\">])</span>\n<span class=\"p\">}</span>\n</code></pre>",
    "hits": 618,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 623,
    "title": "【北京-美餐】招聘 『Web 开发工程师（Go 语言）』15-30 K",
    "created_at": "2017-02-08 15:19:46",
    "updated_at": "2017-02-08 15:19:46",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 984,
    "user": "{\"id\": 984, \"name\": \"meican\", \"login\": \"meican\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "工作职责：\n1. 熟悉 Linux 系统和运维工具使用，MySQL/PostgreSqL 数据库操作；\n2. 熟悉 Docker 及相关生态工具优先；\n3. 创造自动化工具，帮助工作伙伴提升运营效率；\n4. DevOps 方向，负责公司项目基础平台服务开发运维；\n5. 熟悉 AWS。\n\n任职要求：\n1. 统招大学本科及以上学历；\n2. 包括且不限于：服务治理平台、应用基础框架、基础中间件、CI/CD 系统；\n3. 基本功扎实，能够写清晰的代码，对代码质量有很高的追求；\n4. 思路清晰，有很好的团队协作能力，乐于分享；\n5. 爱折腾，对新技术充满好奇心；\n6. 对良好代码风格具有强迫症。\n\n优先条件：\n1. 有 Go 开发经验优先；\n2. 玩儿过以下语言中的至少一种：Lua/Erlang/Scala/R；\n3. 玩儿过至少一种非关系型数据库；\n4. 熟悉 Play Framework 框架；\n5. 如有 GitHub 账号或技术博客，请在简历中写明。\n\n地址：北京海淀西三环中外文大厦B座\n邮箱：longyun@meican.com\n\n福利待遇情况：\n1、美餐网目前由大众点评网投资的 C 轮融资 1.4 亿，技术人员分配期权；\n2、试用期全额；\n3、中餐、晚餐不限额免费点餐；\n4、上下班时间自由安排（不打卡）；\n5、每人配备万元以上 Emboby；\n6、入职就有 15000 元的设备自由采购费用,工作满 1 年归个人所有，满 2 年更新换代；\n7、重视技术，无官僚，Geek 团队；\n8、目前团队有部分员工来自海外留学或有海外工作的经历。\n",
    "body_html": "<p>工作职责：</p>\n\n<ol>\n<li>熟悉 Linux 系统和运维工具使用，MySQL/PostgreSqL 数据库操作；</li>\n<li>熟悉 Docker 及相关生态工具优先；</li>\n<li>创造自动化工具，帮助工作伙伴提升运营效率；</li>\n<li>DevOps 方向，负责公司项目基础平台服务开发运维；</li>\n<li>熟悉 AWS。</li>\n</ol>\n\n<p>任职要求：</p>\n\n<ol>\n<li>统招大学本科及以上学历；</li>\n<li>包括且不限于：服务治理平台、应用基础框架、基础中间件、CI/CD 系统；</li>\n<li>基本功扎实，能够写清晰的代码，对代码质量有很高的追求；</li>\n<li>思路清晰，有很好的团队协作能力，乐于分享；</li>\n<li>爱折腾，对新技术充满好奇心；</li>\n<li>对良好代码风格具有强迫症。</li>\n</ol>\n\n<p>优先条件：</p>\n\n<ol>\n<li>有 Go 开发经验优先；</li>\n<li>玩儿过以下语言中的至少一种：Lua/Erlang/Scala/R；</li>\n<li>玩儿过至少一种非关系型数据库；</li>\n<li>熟悉 Play Framework 框架；</li>\n<li>如有 GitHub 账号或技术博客，请在简历中写明。</li>\n</ol>\n\n<p>地址：北京海淀西三环中外文大厦 B 座\n邮箱：longyun@meican.com</p>\n\n<p>福利待遇情况：\n1、美餐网目前由大众点评网投资的 C 轮融资 1.4 亿，技术人员分配期权；\n2、试用期全额；\n3、中餐、晚餐不限额免费点餐；\n4、上下班时间自由安排（不打卡）；\n5、每人配备万元以上 Emboby；\n6、入职就有 15000 元的设备自由采购费用,工作满 1 年归个人所有，满 2 年更新换代；\n7、重视技术，无官僚，Geek 团队；\n8、目前团队有部分员工来自海外留学或有海外工作的经历。</p>",
    "hits": 498,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 624,
    "title": "Golang工程师  上海浦东",
    "created_at": "2017-02-10 10:45:14",
    "updated_at": "2017-02-10 13:59:03",
    "replied_at": "2017-02-10 13:59:03",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1494,
    "last_reply_user_login": "stirlingx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1617,
    "user": "{\"id\": 1617, \"name\": \"Sara酱\", \"login\": \"1340128589\", \"avatar\": \"https://gocn.vip/system/letter_avatars/1.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "\n岗位职责:\n1、负责游戏服务端逻辑模块的编写; 负责项目的设计、编码、调优、测试及Bug处理；\n2、精通Golang游戏服务端代码的编写；\n3、精通MySql等数据库；\n4、精通至少一门脚本Lua, 熟悉Protobuf, Websocket等协议；\n5、负责游戏逻辑后台, 管理后台的搭建,升级,维护；\n6、有linux/windows c++开发经验, 熟悉Java/PHP开发优先。\n\n任职要求：\n1、有良好的代码规范和习惯, 3年以上游戏服务端开发经验, 1年go语言开发经验；\n2、扎实的算法基础，能够编写冒泡排序、麻将等基础算法；\n3、具备良好沟通能力、高度的工作责任心和敬业精神, 优秀的团队协作精神。\n\n欢迎加QQ：1340128589\n欢迎自荐或推荐~~",
    "body_html": "<p>岗位职责:\n1、负责游戏服务端逻辑模块的编写; 负责项目的设计、编码、调优、测试及 Bug 处理；\n2、精通 Golang 游戏服务端代码的编写；\n3、精通 MySql 等数据库；\n4、精通至少一门脚本 Lua, 熟悉 Protobuf, Websocket 等协议；\n5、负责游戏逻辑后台, 管理后台的搭建,升级,维护；\n6、有 linux/windows c++ 开发经验, 熟悉 Java/PHP 开发优先。</p>\n\n<p>任职要求：\n1、有良好的代码规范和习惯, 3 年以上游戏服务端开发经验, 1 年 go 语言开发经验；\n2、扎实的算法基础，能够编写冒泡排序、麻将等基础算法；\n3、具备良好沟通能力、高度的工作责任心和敬业精神, 优秀的团队协作精神。</p>\n\n<p>欢迎加 QQ：1340128589\n欢迎自荐或推荐~~</p>",
    "hits": 372,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 625,
    "title": "疑似刷论坛做硬推广",
    "created_at": "2017-02-10 13:45:39",
    "updated_at": "2017-02-10 13:55:31",
    "replied_at": "2017-02-10 13:55:31",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 295,
    "last_reply_user_login": "lgn21st",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 295,
    "user": "{\"id\": 295, \"name\": \"lgn21st\", \"login\": \"lgn21st\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "收到来自 @orichi 的私信，疑似做推广，请验证。\n\n![](https://ruby-china-files.b0.upaiyun.com/photo/2017/9cbc03e8fdc7184b4657156171555b94.png)",
    "body_html": "<p>收到来自 <a href=\"/orichi\" class=\"user-mention\" title=\"@orichi\"><i>@</i>orichi</a> 的私信，疑似做推广，请验证。</p>\n\n<p><img src=\"https://ruby-china-files.b0.upaiyun.com/photo/2017/9cbc03e8fdc7184b4657156171555b94.png\" title=\"\" alt=\"\"></p>",
    "hits": 419,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 626,
    "title": "收到广告私信?",
    "created_at": "2017-02-10 13:46:33",
    "updated_at": "2017-07-26 09:34:37",
    "replied_at": "2017-07-26 09:34:37",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2293,
    "last_reply_user_login": "Hawken",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 982,
    "user": "{\"id\": 982, \"name\": \"su21\", \"login\": \"su21\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "su21，您好:\n\norichi 在 Go 技术社区 - golang 上给您发送了私信\n\n----- 私信内容 -----\n\nHi 前辈,刚在上面看到您分享的信息 XXXX广告站 .不知是前辈自己分享的还是？\n\n\n",
    "body_html": "<p>su21，您好:</p>\n\n<p>orichi 在 Go 技术社区 - golang 上给您发送了私信</p>\n\n<p>----- 私信内容 -----</p>\n\n<p>Hi 前辈,刚在上面看到您分享的信息 XXXX 广告站 .不知是前辈自己分享的还是？</p>",
    "hits": 459,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 627,
    "title": "golang怎么在不重新打开文件的情况下清空文件的内容",
    "created_at": "2017-02-13 20:11:27",
    "updated_at": "2017-02-16 09:39:24",
    "replied_at": "2017-02-16 09:39:24",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 124,
    "last_reply_user_login": "mnhkahn",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1073,
    "user": "{\"id\": 1073, \"name\": \"FancyGo\", \"login\": \"FancyGo\", \"avatar\": \"https://static.gocn.vip/user/avatar/1073/a6d075.jpg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "rt",
    "body_html": "<p>rt</p>",
    "hits": 526,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 628,
    "title": "谁能给通俗的讲讲[]byte和string的区别,新手一直没弄明白这个问题",
    "created_at": "2017-02-14 10:07:02",
    "updated_at": "2019-04-03 10:58:44",
    "replied_at": "2019-04-03 10:58:44",
    "replies_count": 10,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 817,
    "last_reply_user_login": "pathbox",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1259,
    "user": "{\"id\": 1259, \"name\": \"gloomyzerg\", \"login\": \"gloomyzerg\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "看很多函数都使用[]byte作为参数或返回值,但有的函数内部又有许多 string和[]byte的互相转换\n这两者到底有什么区别?或者说什么时候应该使用[]byte,什么时候用string?\n目前已知的信息\nstring类型是不可变的 不可使用数组下标进行修改\n[]byte和string的互相转换得到的是一个拷贝,会得到不同的内存地址\n\n望高手能给通俗的讲讲,谢谢",
    "body_html": "<p>看很多函数都使用 [] byte 作为参数或返回值,但有的函数内部又有许多 string 和 [] byte 的互相转换\n这两者到底有什么区别?或者说什么时候应该使用 [] byte,什么时候用 string?\n目前已知的信息\nstring 类型是不可变的 不可使用数组下标进行修改\n[] byte 和 string 的互相转换得到的是一个拷贝,会得到不同的内存地址</p>\n\n<p>望高手能给通俗的讲讲,谢谢</p>",
    "hits": 973,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 629,
    "title": "请问golang 中是否有内置的可排序容器，比如类似c++中的std::vector?",
    "created_at": "2017-02-14 11:56:01",
    "updated_at": "2017-02-17 09:25:40",
    "replied_at": "2017-02-17 09:25:40",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 715,
    "last_reply_user_login": "changjixiong",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 715,
    "user": "{\"id\": 715, \"name\": \"changjixiong\", \"login\": \"changjixiong\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "请问golang 中是否有内置的可排序容器，比如类似c++中的vertor, 可以排序，查找，插入到指定的位置使插入后依然是排序的？",
    "body_html": "<p>请问 golang 中是否有内置的可排序容器，比如类似 c++ 中的 vertor, 可以排序，查找，插入到指定的位置使插入后依然是排序的？</p>",
    "hits": 458,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 630,
    "title": "TensorFlow能用来识别验证码吗？",
    "created_at": "2017-02-15 15:09:57",
    "updated_at": "2017-02-17 08:22:50",
    "replied_at": "2017-02-17 08:22:50",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1627,
    "last_reply_user_login": "weizhe86",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1081,
    "user": "{\"id\": 1081, \"name\": \"geekzone\", \"login\": \"geekzone\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "TensorFlow能用来识别验证码吗？\n如题\nTensorFlow深度学习主要用了做什么的",
    "body_html": "<p>TensorFlow 能用来识别验证码吗？\n如题\nTensorFlow 深度学习主要用了做什么的</p>",
    "hits": 458,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 631,
    "title": "招聘go工程师，坐标济南，薪资8-10K",
    "created_at": "2017-02-16 09:58:08",
    "updated_at": "2017-05-19 18:05:47",
    "replied_at": "2017-05-19 18:05:47",
    "replies_count": 7,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 1359,
    "last_reply_user_login": "mozhata",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1625,
    "user": "{\"id\": 1625, \"name\": \"yidongkeji\", \"login\": \"yidongkeji\", \"avatar\": \"https://gocn.vip/system/letter_avatars/y.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "职位诱惑：\n互联网产品 已经上线 用户量10万\n职位描述：\n\n职位描述：\n1、负责B/S后端业务逻辑的开发和优化；\n2、对负责的相应模块进行单元测试，并编写相应技术文档；\n3、积极参与系统架构和核心组件的设计并对用到的技术、算法和产品功能提出意见和建议；\n职位要求：\n1、两年以上B/S后端开发经验；\n2、1年以上Golang开发经验或2年以上PHP/Python/Java Web开发经验有意向转Golang者，有Golang实际项目开发经验者优先；\n3、有一年以上类Unix系统使用经验；\n4、具备良好的代码风格；\n5、熟练掌握MySQL、Oracle、SQLServer等至少一种关系型数据库及至少一种NoSQL数据库；\n6、善于学习和研究，有独立思考的习惯，能够独立解决工作中遇到的问题；\n7、良好的沟通能力及团队协作精神，能够服从领导的任务安排，能够承受一定工作压力。\n\n工作地址\n\n济南 - 高新区 - 齐鲁软件园 - 齐鲁软件园大厦B座C603",
    "body_html": "<p>职位诱惑：\n互联网产品 已经上线 用户量 10 万\n职位描述：</p>\n\n<p>职位描述：\n1、负责 B/S 后端业务逻辑的开发和优化；\n2、对负责的相应模块进行单元测试，并编写相应技术文档；\n3、积极参与系统架构和核心组件的设计并对用到的技术、算法和产品功能提出意见和建议；\n职位要求：\n1、两年以上 B/S 后端开发经验；\n2、1 年以上 Golang 开发经验或 2 年以上 PHP/Python/Java Web 开发经验有意向转 Golang 者，有 Golang 实际项目开发经验者优先；\n3、有一年以上类 Unix 系统使用经验；\n4、具备良好的代码风格；\n5、熟练掌握 MySQL、Oracle、SQLServer 等至少一种关系型数据库及至少一种 NoSQL 数据库；\n6、善于学习和研究，有独立思考的习惯，能够独立解决工作中遇到的问题；\n7、良好的沟通能力及团队协作精神，能够服从领导的任务安排，能够承受一定工作压力。</p>\n\n<p>工作地址</p>\n\n<p>济南 - 高新区 - 齐鲁软件园 - 齐鲁软件园大厦 B 座 C603</p>",
    "hits": 645,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 632,
    "title": "将配置文件打包进二进制文件中",
    "created_at": "2017-02-16 10:29:52",
    "updated_at": "2017-02-16 10:59:21",
    "replied_at": "2017-02-16 10:59:21",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 140,
    "last_reply_user_login": "xnotepad",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1531,
    "user": "{\"id\": 1531, \"name\": \"willian\", \"login\": \"willian\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我有个程序是读取配置文件的，但是我build成二进制文件时，找不到文件的位置，请问能否将.yaml文件打包进二进制文件",
    "body_html": "<p>我有个程序是读取配置文件的，但是我 build 成二进制文件时，找不到文件的位置，请问能否将.yaml 文件打包进二进制文件</p>",
    "hits": 382,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 633,
    "title": "【上海-捞月狗招聘】Golang工程师",
    "created_at": "2017-02-16 14:51:39",
    "updated_at": "2017-02-16 14:51:39",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1626,
    "user": "{\"id\": 1626, \"name\": \"kevin052712\", \"login\": \"kevin052712\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "捞月狗招聘Golang工程师，有兴趣的发送简历到: kevin052712@gmail.com\n\n公司网站：http://www.laoyuegou.com\n工作地点：上海\n申请邮箱：kevin052712@gmail.com\n薪资待遇：极具行业竞争力，具体根据个人实际能力可谈。\n\n具体要求：\n- 良好的团队合作和自我驱动意识。\n- 参与过大型复杂项目，对复杂系统的快速拆解、理解能力。\n- 3年以上Linux/Unix服务端开发经验，熟悉网络编程、TCP、HTTP协议。\n- 编译型语言（例 C++,Java）背景，有Golang，Python经验者优先，Bash编程经验。\n- 熟悉数据库、缓存、消息队列。\n- 对编程、技术有热情，态度积极。",
    "body_html": "<p>捞月狗招聘 Golang 工程师，有兴趣的发送简历到: kevin052712@gmail.com</p>\n\n<p>公司网站：<a href=\"http://www.laoyuegou.com\" rel=\"nofollow\" target=\"_blank\">http://www.laoyuegou.com</a>\n工作地点：上海\n申请邮箱：kevin052712@gmail.com\n薪资待遇：极具行业竞争力，具体根据个人实际能力可谈。</p>\n\n<p>具体要求：</p>\n\n<ul>\n<li>良好的团队合作和自我驱动意识。</li>\n<li>参与过大型复杂项目，对复杂系统的快速拆解、理解能力。</li>\n<li>3 年以上 Linux/Unix 服务端开发经验，熟悉网络编程、TCP、HTTP 协议。</li>\n<li>编译型语言（例 C++,Java）背景，有 Golang，Python 经验者优先，Bash 编程经验。</li>\n<li>熟悉数据库、缓存、消息队列。</li>\n<li>对编程、技术有热情，态度积极。</li>\n</ul>",
    "hits": 372,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 634,
    "title": "channel连接池的问题",
    "created_at": "2017-02-16 18:51:22",
    "updated_at": "2017-02-17 11:15:56",
    "replied_at": "2017-02-17 11:15:56",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1100,
    "last_reply_user_login": "Rg",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1353,
    "user": "{\"id\": 1353, \"name\": \"songtianyi\", \"login\": \"songtianyi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\npackage pool\n\nimport (\n\t&quot;errors&quot;\n\t&quot;fmt&quot;\n\t&quot;net&quot;\n\t&quot;sync&quot;\n)\n\n// channelPool implements the Pool interface based on buffered channels.\ntype channelPool struct {\n\t// storage for our net.Conn connections\n\tmu    sync.Mutex\n\tconns chan net.Conn\n\n\t// net.Conn generator\n\tfactory Factory\n}\n\n// Factory is a function to create new connections.\ntype Factory func() (net.Conn, error)\n\n// NewChannelPool returns a new pool based on buffered channels with an initial\n// capacity and maximum capacity. Factory is used when initial capacity is\n// greater than zero to fill the pool. A zero initialCap doesn't fill the Pool\n// until a new Get() is called. During a Get(), If there is no new connection\n// available in the pool, a new connection will be created via the Factory()\n// method.\nfunc NewChannelPool(initialCap, maxCap int, factory Factory) (Pool, error) {\n\tif initialCap &lt; 0 || maxCap &lt;= 0 || initialCap &gt; maxCap {\n\t\treturn nil, errors.New(&quot;invalid capacity settings&quot;)\n\t}\n\n\tc := &amp;channelPool{\n\t\tconns:   make(chan net.Conn, maxCap),\n\t\tfactory: factory,\n\t}\n\n\t// create initial connections, if something goes wrong,\n\t// just close the pool error out.\n\tfor i := 0; i &lt; initialCap; i++ {\n\t\tconn, err := factory()\n\t\tif err != nil {\n\t\t\tc.Close()\n\t\t\treturn nil, fmt.Errorf(&quot;factory is not able to fill the pool: %s&quot;, err)\n\t\t}\n\t\tc.conns &lt;- conn\n\t}\n\n\treturn c, nil\n}\n\nfunc (c *channelPool) getConns() chan net.Conn {\n\tc.mu.Lock()\n\tconns := c.conns\n\tc.mu.Unlock()\n\treturn conns\n}\n\n// Get implements the Pool interfaces Get() method. If there is no new\n// connection available in the pool, a new connection will be created via the\n// Factory() method.\nfunc (c *channelPool) Get() (net.Conn, error) {\n\tconns := c.getConns()\n\tif conns == nil {\n\t\treturn nil, ErrClosed\n\t}\n\n\t// wrap our connections with out custom net.Conn implementation (wrapConn\n\t// method) that puts the connection back to the pool if it's closed.\n\tselect {\n\tcase conn := &lt;-conns:\n\t\tif conn == nil {\n\t\t\treturn nil, ErrClosed\n\t\t}\n\n\t\treturn c.wrapConn(conn), nil\n\tdefault:\n\t\tconn, err := c.factory()\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\n\t\treturn c.wrapConn(conn), nil\n\t}\n}\n\n// put puts the connection back to the pool. If the pool is full or closed,\n// conn is simply closed. A nil conn will be rejected.\nfunc (c *channelPool) put(conn net.Conn) error {\n\tif conn == nil {\n\t\treturn errors.New(&quot;connection is nil. rejecting&quot;)\n\t}\n\n\tc.mu.Lock()\n\tdefer c.mu.Unlock()\n\n\tif c.conns == nil {\n\t\t// pool is closed, close passed connection\n\t\treturn conn.Close()\n\t}\n\n\t// put the resource back into the pool. If the pool is full, this will\n\t// block and the default case will be executed.\n\tselect {\n\tcase c.conns &lt;- conn:\n\t\treturn nil\n\tdefault:\n\t\t// pool is full, close passed connection\n\t\treturn conn.Close()\n\t}\n}\n\nfunc (c *channelPool) Close() {\n\tc.mu.Lock()\n\tconns := c.conns\n\tc.conns = nil\n\tc.factory = nil\n\tc.mu.Unlock()\n\n\tif conns == nil {\n\t\treturn\n\t}\n\n\tclose(conns)\n\tfor conn := range conns {\n\t\tconn.Close()\n\t}\n}\n\nfunc (c *channelPool) Len() int { return len(c.getConns()) }\n\n```\n\nchannel是线程安全的，为什么要用加锁的方式去实现？\n[channel.go](https://github.com/fatih/pool/blob/v2.0.0/channel.go &quot;channel.go&quot;)",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">pool</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">errors</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">net</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">sync</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"c\">// channelPool implements the Pool interface based on buffered channels.</span>\n<span class=\"k\">type</span> <span class=\"n\">channelPool</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"c\">// storage for our net.Conn connections</span>\n    <span class=\"n\">mu</span>    <span class=\"n\">sync</span><span class=\"o\">.</span><span class=\"n\">Mutex</span>\n    <span class=\"n\">conns</span> <span class=\"k\">chan</span> <span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">Conn</span>\n\n    <span class=\"c\">// net.Conn generator</span>\n    <span class=\"n\">factory</span> <span class=\"n\">Factory</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">// Factory is a function to create new connections.</span>\n<span class=\"k\">type</span> <span class=\"n\">Factory</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">Conn</span><span class=\"p\">,</span> <span class=\"kt\">error</span><span class=\"p\">)</span>\n\n<span class=\"c\">// NewChannelPool returns a new pool based on buffered channels with an initial</span>\n<span class=\"c\">// capacity and maximum capacity. Factory is used when initial capacity is</span>\n<span class=\"c\">// greater than zero to fill the pool. A zero initialCap doesn't fill the Pool</span>\n<span class=\"c\">// until a new Get() is called. During a Get(), If there is no new connection</span>\n<span class=\"c\">// available in the pool, a new connection will be created via the Factory()</span>\n<span class=\"c\">// method.</span>\n<span class=\"k\">func</span> <span class=\"n\">NewChannelPool</span><span class=\"p\">(</span><span class=\"n\">initialCap</span><span class=\"p\">,</span> <span class=\"n\">maxCap</span> <span class=\"kt\">int</span><span class=\"p\">,</span> <span class=\"n\">factory</span> <span class=\"n\">Factory</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"n\">Pool</span><span class=\"p\">,</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"n\">initialCap</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"m\">0</span> <span class=\"o\">||</span> <span class=\"n\">maxCap</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">=</span> <span class=\"m\">0</span> <span class=\"o\">||</span> <span class=\"n\">initialCap</span> <span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"n\">maxCap</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"n\">errors</span><span class=\"o\">.</span><span class=\"n\">New</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">invalid</span> <span class=\"n\">capacity</span> <span class=\"n\">settings</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">channelPool</span><span class=\"p\">{</span>\n        <span class=\"n\">conns</span><span class=\"o\">:</span>   <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">Conn</span><span class=\"p\">,</span> <span class=\"n\">maxCap</span><span class=\"p\">),</span>\n        <span class=\"n\">factory</span><span class=\"o\">:</span> <span class=\"n\">factory</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c\">// create initial connections, if something goes wrong,</span>\n    <span class=\"c\">// just close the pool error out.</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"n\">initialCap</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n        <span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">factory</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n            <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n            <span class=\"k\">return</span> <span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Errorf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">factory</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">able</span> <span class=\"n\">to</span> <span class=\"n\">fill</span> <span class=\"n\">the</span> <span class=\"n\">pool</span><span class=\"o\">:</span> <span class=\"o\">%</span><span class=\"n\">s</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">conns</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"n\">conn</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"no\">nil</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"o\">*</span><span class=\"n\">channelPool</span><span class=\"p\">)</span> <span class=\"n\">getConns</span><span class=\"p\">()</span> <span class=\"k\">chan</span> <span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">Conn</span> <span class=\"p\">{</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">mu</span><span class=\"o\">.</span><span class=\"n\">Lock</span><span class=\"p\">()</span>\n    <span class=\"n\">conns</span> <span class=\"o\">:=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">conns</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">mu</span><span class=\"o\">.</span><span class=\"n\">Unlock</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">conns</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">// Get implements the Pool interfaces Get() method. If there is no new</span>\n<span class=\"c\">// connection available in the pool, a new connection will be created via the</span>\n<span class=\"c\">// Factory() method.</span>\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"o\">*</span><span class=\"n\">channelPool</span><span class=\"p\">)</span> <span class=\"n\">Get</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">Conn</span><span class=\"p\">,</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">conns</span> <span class=\"o\">:=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">getConns</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">conns</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"n\">ErrClosed</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c\">// wrap our connections with out custom net.Conn implementation (wrapConn</span>\n    <span class=\"c\">// method) that puts the connection back to the pool if it's closed.</span>\n    <span class=\"k\">select</span> <span class=\"p\">{</span>\n    <span class=\"k\">case</span> <span class=\"n\">conn</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">conns</span><span class=\"o\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">conn</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n            <span class=\"k\">return</span> <span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"n\">ErrClosed</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">wrapConn</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">),</span> <span class=\"no\">nil</span>\n    <span class=\"k\">default</span><span class=\"o\">:</span>\n        <span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">factory</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n            <span class=\"k\">return</span> <span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"n\">err</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">wrapConn</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">),</span> <span class=\"no\">nil</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">// put puts the connection back to the pool. If the pool is full or closed,</span>\n<span class=\"c\">// conn is simply closed. A nil conn will be rejected.</span>\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"o\">*</span><span class=\"n\">channelPool</span><span class=\"p\">)</span> <span class=\"n\">put</span><span class=\"p\">(</span><span class=\"n\">conn</span> <span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">Conn</span><span class=\"p\">)</span> <span class=\"kt\">error</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"n\">conn</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">errors</span><span class=\"o\">.</span><span class=\"n\">New</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">connection</span> <span class=\"n\">is</span> <span class=\"no\">nil</span><span class=\"o\">.</span> <span class=\"n\">rejecting</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">mu</span><span class=\"o\">.</span><span class=\"n\">Lock</span><span class=\"p\">()</span>\n    <span class=\"k\">defer</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">mu</span><span class=\"o\">.</span><span class=\"n\">Unlock</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">conns</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"c\">// pool is closed, close passed connection</span>\n        <span class=\"k\">return</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c\">// put the resource back into the pool. If the pool is full, this will</span>\n    <span class=\"c\">// block and the default case will be executed.</span>\n    <span class=\"k\">select</span> <span class=\"p\">{</span>\n    <span class=\"k\">case</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">conns</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"n\">conn</span><span class=\"o\">:</span>\n        <span class=\"k\">return</span> <span class=\"no\">nil</span>\n    <span class=\"k\">default</span><span class=\"o\">:</span>\n        <span class=\"c\">// pool is full, close passed connection</span>\n        <span class=\"k\">return</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"o\">*</span><span class=\"n\">channelPool</span><span class=\"p\">)</span> <span class=\"n\">Close</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">mu</span><span class=\"o\">.</span><span class=\"n\">Lock</span><span class=\"p\">()</span>\n    <span class=\"n\">conns</span> <span class=\"o\">:=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">conns</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">conns</span> <span class=\"o\">=</span> <span class=\"no\">nil</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">factory</span> <span class=\"o\">=</span> <span class=\"no\">nil</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">mu</span><span class=\"o\">.</span><span class=\"n\">Unlock</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">conns</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nb\">close</span><span class=\"p\">(</span><span class=\"n\">conns</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">conn</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">conns</span> <span class=\"p\">{</span>\n        <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"o\">*</span><span class=\"n\">channelPool</span><span class=\"p\">)</span> <span class=\"n\">Len</span><span class=\"p\">()</span> <span class=\"kt\">int</span> <span class=\"p\">{</span> <span class=\"k\">return</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">getConns</span><span class=\"p\">())</span> <span class=\"p\">}</span>\n\n</code></pre> \n<p>channel 是线程安全的，为什么要用加锁的方式去实现？\n<a href=\"https://github.com/fatih/pool/blob/v2.0.0/channel.go%20%22channel.go%22\" title=\"\">channel.go</a></p>",
    "hits": 710,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 635,
    "title": "写了个web服务器，ab测试一下，就报错Conn.Write wrote more than the declared Content-Length",
    "created_at": "2017-02-17 16:53:00",
    "updated_at": "2017-02-17 16:53:00",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1629,
    "user": "{\"id\": 1629, \"name\": \"dyllen\", \"login\": \"dyllen\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我渲染模板的代码：\n\n    type View struct {\n        TplDir string //模板目录\n        Ctx    *Context\n    }\n    func (v *View) Render(tplFile string, data interface{}) {\n        tpl, err := template.ParseFiles(v.getTplFile(tplFile))\n        if err != nil {\n            fmt.Println(&quot;Parse template file error:&quot; + err.Error())\n            return\n        }\n        err = tpl.Execute(v.Ctx.Response, data)\n        if err != nil {\n            v.Ctx.App.Log.Error(err)\n        }\n    }\n    func (v *View) getTplFile(tplFile string) string {\n        file := strings.Join([]string{v.TplDir, tplFile}, &quot;&quot;)\n        _, err := os.Stat(file)\n        if err != nil {\n            log.Fatal(err)\n        }\n        return file\n    }\n\n我单个刷新页面就没问题，我用ab测试一下就那样报错。\n在这里tpl.Execute(v.Ctx.Response, data)\n叫报错Conn.Write wrote more than the declared Content-Length,不是每个请求都会报，有好几个请求会报。\n\n我写的东西在这里：https://git.oschina.net/dyllen/lite_go",
    "body_html": "<p>我渲染模板的代码：</p>\n\n<p>type View struct {\n        TplDir string //模板目录\n        Ctx    *Context\n    }\n    func (v *View) Render(tplFile string, data interface{}) {\n        tpl, err := template.ParseFiles(v.getTplFile(tplFile))\n        if err != nil {\n            fmt.Println(\"Parse template file error:\" + err.Error())\n            return\n        }\n        err = tpl.Execute(v.Ctx.Response, data)\n        if err != nil {\n            v.Ctx.App.Log.Error(err)\n        }\n    }\n    func (v *View) getTplFile(tplFile string) string {\n        file := strings.Join([] string{v.TplDir, tplFile}, \"\")\n        _, err := os.Stat(file)\n        if err != nil {\n            log.Fatal(err)\n        }\n        return file\n    }</p>\n\n<p>我单个刷新页面就没问题，我用 ab 测试一下就那样报错。\n在这里 tpl.Execute(v.Ctx.Response, data)\n叫报错 Conn.Write wrote more than the declared Content-Length,不是每个请求都会报，有好几个请求会报。</p>\n\n<p>我写的东西在这里：<a href=\"https://git.oschina.net/dyllen/lite_go\" rel=\"nofollow\" target=\"_blank\">https://git.oschina.net/dyllen/lite_go</a></p>",
    "hits": 769,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 636,
    "title": "go&quot;继承&quot;",
    "created_at": "2017-02-17 18:11:27",
    "updated_at": "2017-04-21 22:33:34",
    "replied_at": "2017-04-21 22:33:15",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 215,
    "last_reply_user_login": "lmw",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1353,
    "user": "{\"id\": 1353, \"name\": \"songtianyi\", \"login\": \"songtianyi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "这两种方式有本质的区别么？\n\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n)\n\ntype Book struct {\n\tTitle  string\n\tAuthor string\n\tIntor  string\n}\ntype MyBook struct {\n\tBook\n\tContent string\n}\n\nfunc main() {\n\tmy := &amp;MyBook{\n\t\tContent: &quot;xxx&quot;,\n\t}\n\tmy.Book = Book{\n\t\tTitle:  &quot;Go&quot;,\n\t\tAuthor: &quot;songtianyi&quot;,\n\t\tIntor:  &quot;GoGoGo&quot;,\n\t}\n\tfmt.Println(my)\n\tfmt.Println(my.Title)\n}\n```\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n)\n\ntype Book struct {\n\tTitle  string\n\tAuthor string\n\tIntor  string\n}\ntype MyBook struct {\n\tBo      Book\n\tContent string\n}\n\nfunc main() {\n\tmy := &amp;MyBook{\n\t\tContent: &quot;xxx&quot;,\n\t}\n\tmy.Bo = Book{\n\t\tTitle:  &quot;Go&quot;,\n\t\tAuthor: &quot;songtianyi&quot;,\n\t\tIntor:  &quot;GoGoGo&quot;,\n\t}\n\tfmt.Println(my)\n\tfmt.Println(my.Bo.Title)\n}\n```\n\n----\n好像并没有什么区别, 唯一的区别是调用属性和方法的时候 可以省去Book\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n)\n\ntype Book struct {\n\tTitle  string\n\tAuthor string\n\tIntor  string\n}\n\nfunc (s *Book) String() {\n\tfmt.Println(s.Title, s.Author, s.Intor)\n}\n\ntype MyBook struct {\n\tBook\n\tContent string\n}\n\nfunc main() {\n\tmy := &amp;MyBook{\n\t\tContent: &quot;xxx&quot;,\n\t}\n\tmy.Book = Book{\n\t\tTitle:  &quot;Go&quot;,\n\t\tAuthor: &quot;songtianyi&quot;,\n\t\tIntor:  &quot;GoGoGo&quot;,\n\t}\n\tfmt.Println(my)\n\tfmt.Println(my.Title)\n\tmy.String()\n}\n```",
    "body_html": "<p>这两种方式有本质的区别么？</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">type</span> <span class=\"n\">Book</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Title</span>  <span class=\"kt\">string</span>\n    <span class=\"n\">Author</span> <span class=\"kt\">string</span>\n    <span class=\"n\">Intor</span>  <span class=\"kt\">string</span>\n<span class=\"p\">}</span>\n<span class=\"k\">type</span> <span class=\"n\">MyBook</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Book</span>\n    <span class=\"n\">Content</span> <span class=\"kt\">string</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">my</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">MyBook</span><span class=\"p\">{</span>\n        <span class=\"n\">Content</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">xxx</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">my</span><span class=\"o\">.</span><span class=\"n\">Book</span> <span class=\"o\">=</span> <span class=\"n\">Book</span><span class=\"p\">{</span>\n        <span class=\"n\">Title</span><span class=\"o\">:</span>  <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Go</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n        <span class=\"n\">Author</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">songtianyi</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n        <span class=\"n\">Intor</span><span class=\"o\">:</span>  <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">GoGoGo</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">my</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">my</span><span class=\"o\">.</span><span class=\"n\">Title</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre>  <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">type</span> <span class=\"n\">Book</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Title</span>  <span class=\"kt\">string</span>\n    <span class=\"n\">Author</span> <span class=\"kt\">string</span>\n    <span class=\"n\">Intor</span>  <span class=\"kt\">string</span>\n<span class=\"p\">}</span>\n<span class=\"k\">type</span> <span class=\"n\">MyBook</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Bo</span>      <span class=\"n\">Book</span>\n    <span class=\"n\">Content</span> <span class=\"kt\">string</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">my</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">MyBook</span><span class=\"p\">{</span>\n        <span class=\"n\">Content</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">xxx</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">my</span><span class=\"o\">.</span><span class=\"n\">Bo</span> <span class=\"o\">=</span> <span class=\"n\">Book</span><span class=\"p\">{</span>\n        <span class=\"n\">Title</span><span class=\"o\">:</span>  <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Go</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n        <span class=\"n\">Author</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">songtianyi</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n        <span class=\"n\">Intor</span><span class=\"o\">:</span>  <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">GoGoGo</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">my</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">my</span><span class=\"o\">.</span><span class=\"n\">Bo</span><span class=\"o\">.</span><span class=\"n\">Title</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<hr>\n\n<p>好像并没有什么区别, 唯一的区别是调用属性和方法的时候 可以省去 Book</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">type</span> <span class=\"n\">Book</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Title</span>  <span class=\"kt\">string</span>\n    <span class=\"n\">Author</span> <span class=\"kt\">string</span>\n    <span class=\"n\">Intor</span>  <span class=\"kt\">string</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">*</span><span class=\"n\">Book</span><span class=\"p\">)</span> <span class=\"n\">String</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">Title</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">Author</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">Intor</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">type</span> <span class=\"n\">MyBook</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Book</span>\n    <span class=\"n\">Content</span> <span class=\"kt\">string</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">my</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">MyBook</span><span class=\"p\">{</span>\n        <span class=\"n\">Content</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">xxx</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">my</span><span class=\"o\">.</span><span class=\"n\">Book</span> <span class=\"o\">=</span> <span class=\"n\">Book</span><span class=\"p\">{</span>\n        <span class=\"n\">Title</span><span class=\"o\">:</span>  <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Go</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n        <span class=\"n\">Author</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">songtianyi</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n        <span class=\"n\">Intor</span><span class=\"o\">:</span>  <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">GoGoGo</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">my</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">my</span><span class=\"o\">.</span><span class=\"n\">Title</span><span class=\"p\">)</span>\n    <span class=\"n\">my</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 507,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 637,
    "title": "println 与 fmt.Println 一起使用为何不是顺序打印？",
    "created_at": "2017-02-18 12:00:12",
    "updated_at": "2017-02-20 11:23:12",
    "replied_at": "2017-02-20 11:22:47",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1353,
    "last_reply_user_login": "songtianyi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 74,
    "user": "{\"id\": 74, \"name\": \"xieyanke\", \"login\": \"xieyanke\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "- go version : **1.7.1** \n\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n)\n\nfunc main() {\n\tprintln(&quot;first&quot;)\n\tprintln(&quot;second&quot;)\n\tfmt.Println(&quot;third&quot;)\n}\n```",
    "body_html": "<ul>\n<li>go version : <strong>1.7.1</strong> </li>\n</ul>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">first</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">second</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">third</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 498,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 638,
    "title": "请问开发的时候用什么工具做热编译？",
    "created_at": "2017-02-18 17:44:57",
    "updated_at": "2017-02-21 15:30:32",
    "replied_at": "2017-02-21 15:30:32",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 882,
    "last_reply_user_login": "chuzhaoqian",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 747,
    "user": "{\"id\": 747, \"name\": \"ruisin\", \"login\": \"ruisin\", \"avatar\": \"https://gocn.vip/system/letter_avatars/r.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 488,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 639,
    "title": "beego 写api接口，运行后遇到的问题",
    "created_at": "2017-02-20 14:04:15",
    "updated_at": "2021-01-16 21:20:39",
    "replied_at": "2017-02-20 14:20:08",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1259,
    "last_reply_user_login": "gloomyzerg",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 816,
    "user": "{\"id\": 816, \"name\": \"easonme\", \"login\": \"easonme\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我用golang写的手机端API接口，跑在服务器上经常会引起崩溃，\n\n先阐述下我怎么写的\n其中耗时  包括了数据库查询、参数封装；\n这两个我没有采用任何的goroutine，直接写的代码，\n```go\nfunc (this *RankListController) Post() {\n\n\tdoc_lable := this.GetString(&quot;doc_lable&quot;)\n\n\t//请求排行榜数据\n\tvar rankDataList []models.RankDataList\n\t//查询数据库耗时\n\tnum, errors, list := dao.RankDataList(doc_lable)\n\tif errors != nil {\n\t\tthis.Data[&quot;json&quot;] = map[string]interface{}{&quot;datalist&quot;: nil, &quot;status&quot;: 1, &quot;msg&quot;: &quot;In addition to the problem by the server&quot;}\n\t}\n\tif num == 0 {\n\t\tthis.Data[&quot;json&quot;] = map[string]interface{}{&quot;datalist&quot;: nil, &quot;status&quot;: 1, &quot;msg&quot;: &quot;no data&quot;}\n\t}\n\t//数据封装耗时\n\tfor i := 0; i &lt; len(list); i++ {\n\t\t//\t\tindate, _ := strconv.Atoi(list[i].Indate)\n\t\trankDataLists := models.RankDataList{\n\t\t\tId:        list[i].MoveId,\n\t\t\tTitle:     list[i].Title,\n\t\t\tLogo:      list[i].Logo,\n\t\t\tRating:    list[i].Rating,\n\t\t\tRemark:    list[i].Remark,\n\t\t\tIndate:    list[i].Indate,\n\t\t\tDoc_lable: list[i].DocLable,\n\t\t\tDirectors: list[i].Directors,\n\t\t\tStarrings: list[i].Starrings,\n\t\t}\n\t\trankDataList = append(rankDataList, rankDataLists)\n\t}\n\tthis.Data[&quot;json&quot;] = map[string]interface{}{&quot;datalist&quot;: rankDataList, &quot;status&quot;: 1, &quot;msg&quot;: &quot;success&quot;}\n\tthis.ServeJSON()\n}\n```\n\n现在遇到的问题\n\n1：服务不稳定，经常会一大堆请求阻塞\n\n\n我的问题是\n\n我要依靠beego写一个并发程序，在Controller部分也需要用goroutine？不是每个请求就是一个routine么？\n\n\n\n日志文件如下\n\n```go\nlogs.BeeLogger.SetLogger: open logs/web.log: no such file or directory\nfatal error: runtime: out of memory\n\nruntime stack:\nruntime.throw(0xc48920, 0x16)\n\t/usr/local/go/src/runtime/panic.go:547 +0x90\nruntime.sysMap(0xc8561e0000, 0xb210000, 0x434c00, 0x11801d8)\n\t/usr/local/go/src/runtime/mem_linux.go:206 +0x9b\nruntime.(*mheap).sysAlloc(0x1165b80, 0xb210000, 0xc820223800)\n\t/usr/local/go/src/runtime/malloc.go:429 +0x191\nruntime.(*mheap).grow(0x1165b80, 0x5908, 0x0)\n\t/usr/local/go/src/runtime/mheap.go:651 +0x63\nruntime.(*mheap).allocSpanLocked(0x1165b80, 0x5902, 0x2b156880)\n\t/usr/local/go/src/runtime/mheap.go:553 +0x4f6\nruntime.(*mheap).alloc_m(0x1165b80, 0x5902, 0x100000000, 0x1166f30)\n\t/usr/local/go/src/runtime/mheap.go:437 +0x119\nruntime.(*mheap).alloc.func1()\n\t/usr/local/go/src/runtime/mheap.go:502 +0x41\nruntime.systemstack(0x7f70200b1d88)\n\t/usr/local/go/src/runtime/asm_amd64.s:307 +0xab\nruntime.(*mheap).alloc(0x1165b80, 0x5902, 0x10100000000, 0x20)\n\t/usr/local/go/src/runtime/mheap.go:503 +0x63\nruntime.largeAlloc(0xb202819, 0xc800000001, 0xc8205a8a60)\n\t/usr/local/go/src/runtime/malloc.go:766 +0xb3\nruntime.mallocgc.func3()\n\t/usr/local/go/src/runtime/malloc.go:664 +0x33\nruntime.systemstack(0xc820019500)\n\t/usr/local/go/src/runtime/asm_amd64.s:291 +0x79\nruntime.mstart()\n\t/usr/local/go/src/runtime/proc.go:1051\n\ngoroutine 14559 [running]:\nruntime.systemstack_switch()\n\t/usr/local/go/src/runtime/asm_amd64.s:245 fp=0xc8205a88f8 sp=0xc8205a88f0\nruntime.mallocgc(0xb202819, 0x9af100, 0x1, 0xa07c1d1)\n\t/usr/local/go/src/runtime/malloc.go:665 +0x9eb fp=0xc8205a89d0 sp=0xc8205a88f8\nruntime.newarray(0x9af100, 0xb202819, 0xc8205a8a70)\n\t/usr/local/go/src/runtime/malloc.go:798 +0xc9 fp=0xc8205a8a10 sp=0xc8205a89d0\nruntime.makeslice(0x997fe0, 0xb202819, 0xb202819, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/runtime/slice.go:32 +0x165 fp=0xc8205a8a60 sp=0xc8205a8a10\nbytes.makeSlice(0xb202819, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/bytes/buffer.go:198 +0x64 fp=0xc8205a8ab0 sp=0xc8205a8a60\nbytes.(*Buffer).grow(0xc8203de070, 0xb202819, 0x7f702149c8e8)\n\t/usr/local/go/src/bytes/buffer.go:106 +0x282 fp=0xc8205a8b58 sp=0xc8205a8ab0\nbytes.(*Buffer).Write(0xc8203de070, 0xc820b56000, 0xb202819, 0xb202819, 0xc8205dc010, 0x0, 0x0)\n\t/usr/local/go/src/bytes/buffer.go:134 +0x4b fp=0xc8205a8bb0 sp=0xc8205a8b58\ngithub.com/astaxie/beego/context.(*nopResetWriter).Write(0xc8205dc010, 0xc820b56000, 0xb202819, 0xb202819, 0xc820026800, 0x0, 0x0)\n\t&lt;autogenerated&gt;:1 +0x82 fp=0xc8205a8c00 sp=0xc8205a8bb0\nbytes.(*Reader).WriteTo(0xc820780000, 0x7f701ec815c0, 0xc8205dc010, 0xc8205a8cf8, 0x0, 0x0)\n\t/usr/local/go/src/bytes/reader.go:137 +0xc2 fp=0xc8205a8c68 sp=0xc8205a8c00\nio.copyBuffer(0x7f701ec815c0, 0xc8205dc010, 0x7f701ec753e0, 0xc820780000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:370 +0xd0 fp=0xc8205a8d28 sp=0xc8205a8c68\nio.Copy(0x7f701ec815c0, 0xc8205dc010, 0x7f701ec753e0, 0xc820780000, 0xc8205dc010, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:350 +0x64 fp=0xc8205a8d80 sp=0xc8205a8d28\ngithub.com/astaxie/beego/context.writeLevel(0x0, 0x0, 0x7f701ec81568, 0xc8203de070, 0x7f701ec753e0, 0xc820780000, 0x1, 0x7f70214e2400, 0x0, 0x0, ...)\n\t/home/gosource/src/github.com/astaxie/beego/context/acceptencoder.go:140 +0x2d7 fp=0xc8205a8e78 sp=0xc8205a8d80\ngithub.com/astaxie/beego/context.WriteBody(0x0, 0x0, 0x7f701ec81568, 0xc8203de070, 0xc820b56000, 0xb202819, 0xb202819, 0xc820b56000, 0x0, 0x0, ...)\n\t/home/gosource/src/github.com/astaxie/beego/context/acceptencoder.go:123 +0x138 fp=0xc8205a8f10 sp=0xc8205a8e78\ngithub.com/astaxie/beego/context.(*BeegoOutput).Body(0xc820294a40, 0xc820b56000, 0xb202819, 0xb202819, 0x0, 0x0)\n\t/home/gosource/src/github.com/astaxie/beego/context/output.go:65 +0x131 fp=0xc8205a8fc8 sp=0xc8205a8f10\ngithub.com/astaxie/beego/context.(*BeegoOutput).JSONDisableHTMLEscaping(0xc820294a40, 0x9ad600, 0xc8204e2db0, 0xc820a00001, 0x0, 0x0)\n\t/home/gosource/src/github.com/astaxie/beego/context/output.go:214 +0x403 fp=0xc8205a9110 sp=0xc8205a8fc8\ngithub.com/astaxie/beego.(*Controller).ServeJSONDisableHTMLEscaping(0xc82058a270, 0x0, 0x0, 0x0)\n\t/home/gosource/src/github.com/astaxie/beego/controller.go:317 +0x19c fp=0xc8205a91a0 sp=0xc8205a9110\nTestapi/controllers.(*VideoPathController).Post(0xc82058a270)\n\t/home/gosource/src/Testapi/controllers/videopathcontroller.go:53 +0xb67 fp=0xc8205a9420 sp=0xc8205a91a0\nruntime.call32(0xc820242a40, 0xbb1e50, 0xc8201c23d8, 0x800000008)\n\t/usr/local/go/src/runtime/asm_amd64.s:472 +0x3e fp=0xc8205a9448 sp=0xc8205a9420\nreflect.Value.call(0xbb17c0, 0xc82058a270, 0x8213, 0xbbbaf8, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\n\t/usr/local/go/src/reflect/value.go:435 +0x120d fp=0xc8205a9798 sp=0xc8205a9448\nreflect.Value.Call(0xbb17c0, 0xc82058a270, 0x8213, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/reflect/value.go:303 +0xb1 fp=0xc8205a97f8 sp=0xc8205a9798\ngithub.com/astaxie/beego.(*ControllerRegister).ServeHTTP(0xc820146210, 0x7f701ec812f0, 0xc82058a1a0, 0xc8207ccee0)\n\t/home/gosource/src/github.com/astaxie/beego/router.go:778 +0x1f3d fp=0xc8205a9b60 sp=0xc8205a97f8\nnet/http.serverHandler.ServeHTTP(0xc820088180, 0x7f701ec812f0, 0xc82058a1a0, 0xc8207ccee0)\n\t/usr/local/go/src/net/http/server.go:2081 +0x19e fp=0xc8205a9bc0 sp=0xc8205a9b60\nnet/http.(*conn).serve(0xc82054da00)\n\t/usr/local/go/src/net/http/server.go:1472 +0xf2e fp=0xc8205a9f88 sp=0xc8205a9bc0\nruntime.goexit()\n\t/usr/local/go/src/runtime/asm_amd64.s:1998 +0x1 fp=0xc8205a9f90 sp=0xc8205a9f88\ncreated by net/http.(*Server).Serve\n\t/usr/local/go/src/net/http/server.go:2137 +0x44e\n\ngoroutine 1 [chan receive, 309 minutes]:\ngithub.com/astaxie/beego.(*App).Run(0xc8200614d0)\n\t/home/gosource/src/github.com/astaxie/beego/app.go:182 +0xabb\ngithub.com/astaxie/beego.Run(0x0, 0x0, 0x0)\n\t/home/gosource/src/github.com/astaxie/beego/beego.go:66 +0x163\nmain.main()\n\t/home/gosource/src/Testapi/main.go:17 +0x14d\n\ngoroutine 17 [syscall, 309 minutes, locked to thread]:\nruntime.goexit()\n\t/usr/local/go/src/runtime/asm_amd64.s:1998 +0x1\n\ngoroutine 20 [syscall, 309 minutes]:\nos/signal.signal_recv(0x0)\n\t/usr/local/go/src/runtime/sigqueue.go:116 +0x132\nos/signal.loop()\n\t/usr/local/go/src/os/signal/signal_unix.go:22 +0x18\ncreated by os/signal.init.1\n\t/usr/local/go/src/os/signal/signal_unix.go:28 +0x37\n\ngoroutine 21 [chan receive, 309 minutes]:\ndatabase/sql.(*DB).connectionOpener(0xc820103ad0)\n\t/usr/local/go/src/database/sql/sql.go:727 +0x45\ncreated by database/sql.Open\n\t/usr/local/go/src/database/sql/sql.go:493 +0x33f\n\ngoroutine 24 [IO wait]:\nnet.runtime_pollWait(0x7f701ec7b2c8, 0x72, 0x0)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc8203dfe90, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc8203dfe90, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).accept(0xc8203dfe30, 0x0, 0x7f701ec811f8, 0xc8200e5b40)\n\t/usr/local/go/src/net/fd_unix.go:426 +0x27c\nnet.(*TCPListener).AcceptTCP(0xc820083388, 0x454e60, 0x0, 0x0)\n\t/usr/local/go/src/net/tcpsock_posix.go:254 +0x4d\nnet/http.tcpKeepAliveListener.Accept(0xc820083388, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/server.go:2427 +0x41\nnet/http.(*Server).Serve(0xc820088180, 0x7f701ec811c0, 0xc820083388, 0x0, 0x0)\n\t/usr/local/go/src/net/http/server.go:2117 +0x129\nnet/http.(*Server).ListenAndServe(0xc820088180, 0x0, 0x0)\n\t/usr/local/go/src/net/http/server.go:2098 +0x136\ngithub.com/astaxie/beego.(*App).Run.func4(0xc8200614d0, 0xc82038d918, 0x5, 0xc8203dfdc0)\n\t/home/gosource/src/github.com/astaxie/beego/app.go:174 +0x476\ncreated by github.com/astaxie/beego.(*App).Run\n\t/home/gosource/src/github.com/astaxie/beego/app.go:180 +0xa98\n\ngoroutine 14436 [IO wait]:\nnet.runtime_pollWait(0x7f701ec7a6c8, 0x72, 0xc82077a000)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc82053e290, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc82053e290, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc82053e230, 0xc82077a000, 0x2000, 0x2000, 0x0, 0x7f701ec71028, 0xc8200600b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc8201c2158, 0xc82077a000, 0x2000, 0x2000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\ncrypto/tls.(*block).readFromUntil(0xc8203eee70, 0x7f701ec81220, 0xc8201c2158, 0x5, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:460 +0xcc\ncrypto/tls.(*Conn).readRecord(0xc8200efb00, 0xd0e317, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:562 +0x2d1\ncrypto/tls.(*Conn).Read(0xc8200efb00, 0xc8205b3000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:939 +0x167\nbufio.(*Reader).fill(0xc82025c240)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Read(0xc82025c240, 0xc820316718, 0x9, 0x9, 0x521934, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:207 +0x260\nio.ReadAtLeast(0x7f701ec814b8, 0xc82025c240, 0xc820316718, 0x9, 0x9, 0x9, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:297 +0xe6\nio.ReadFull(0x7f701ec814b8, 0xc82025c240, 0xc820316718, 0x9, 0x9, 0x411787, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:315 +0x62\nnet/http.http2readFrameHeader(0xc820316718, 0x9, 0x9, 0x7f701ec814b8, 0xc82025c240, 0x20000000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:715 +0xa5\nnet/http.(*http2Framer).ReadFrame(0xc8203166e0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:906 +0xe9\nnet/http.(*http2clientConnReadLoop).run(0xc8200ed0e0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5583 +0xa6\nnet/http.(*http2ClientConn).readLoop(0xc820198420)\n\t/usr/local/go/src/net/http/h2_bundle.go:5544 +0x162\ncreated by net/http.(*http2Transport).NewClientConn\n\t/usr/local/go/src/net/http/h2_bundle.go:4975 +0xd94\n\ngoroutine 14583 [select]:\nnet/http.(*persistConn).writeLoop(0xc820168dd0)\n\t/usr/local/go/src/net/http/transport.go:1277 +0x472\ncreated by net/http.(*Transport).dialConn\n\t/usr/local/go/src/net/http/transport.go:858 +0x10cb\n\ngoroutine 14476 [IO wait]:\nnet.runtime_pollWait(0x7f701ec7a908, 0x72, 0xc820396000)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc82053fe20, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc82053fe20, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc82053fdc0, 0xc820396000, 0x800, 0x800, 0x0, 0x7f701ec71028, 0xc8200600b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc820082320, 0xc820396000, 0x800, 0x800, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\ncrypto/tls.(*block).readFromUntil(0xc8202abb90, 0x7f701ec81220, 0xc820082320, 0x5, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:460 +0xcc\ncrypto/tls.(*Conn).readRecord(0xc820a88000, 0xd0e317, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:562 +0x2d1\ncrypto/tls.(*Conn).Read(0xc820a88000, 0xc820506000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:939 +0x167\nbufio.(*Reader).fill(0xc8206aa1e0)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Read(0xc8206aa1e0, 0xc8201234d8, 0x9, 0x9, 0x521934, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:207 +0x260\nio.ReadAtLeast(0x7f701ec814b8, 0xc8206aa1e0, 0xc8201234d8, 0x9, 0x9, 0x9, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:297 +0xe6\nio.ReadFull(0x7f701ec814b8, 0xc8206aa1e0, 0xc8201234d8, 0x9, 0x9, 0x411787, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:315 +0x62\nnet/http.http2readFrameHeader(0xc8201234d8, 0x9, 0x9, 0x7f701ec814b8, 0xc8206aa1e0, 0x20000000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:715 +0xa5\nnet/http.(*http2Framer).ReadFrame(0xc8201234a0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:906 +0xe9\nnet/http.(*http2clientConnReadLoop).run(0xc8207ca280, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5583 +0xa6\nnet/http.(*http2ClientConn).readLoop(0xc8207a2b00)\n\t/usr/local/go/src/net/http/h2_bundle.go:5544 +0x162\ncreated by net/http.(*http2Transport).NewClientConn\n\t/usr/local/go/src/net/http/h2_bundle.go:4975 +0xd94\n\ngoroutine 14424 [IO wait]:\nnet.runtime_pollWait(0x7f70200d1d78, 0x72, 0xc820408000)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc8203e9f00, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc8203e9f00, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc8203e9ea0, 0xc820408000, 0x2000, 0x2000, 0x0, 0x7f701ec71028, 0xc8200600b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc8201c2048, 0xc820408000, 0x2000, 0x2000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\ncrypto/tls.(*block).readFromUntil(0xc82038b2f0, 0x7f701ec81220, 0xc8201c2048, 0x5, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:460 +0xcc\ncrypto/tls.(*Conn).readRecord(0xc8200ef800, 0xd0e317, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:562 +0x2d1\ncrypto/tls.(*Conn).Read(0xc8200ef800, 0xc8204b9000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:939 +0x167\nbufio.(*Reader).fill(0xc82005eae0)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Read(0xc82005eae0, 0xc8200d29d8, 0x9, 0x9, 0x521934, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:207 +0x260\nio.ReadAtLeast(0x7f701ec814b8, 0xc82005eae0, 0xc8200d29d8, 0x9, 0x9, 0x9, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:297 +0xe6\nio.ReadFull(0x7f701ec814b8, 0xc82005eae0, 0xc8200d29d8, 0x9, 0x9, 0x411787, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:315 +0x62\nnet/http.http2readFrameHeader(0xc8200d29d8, 0x9, 0x9, 0x7f701ec814b8, 0xc82005eae0, 0x20000000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:715 +0xa5\nnet/http.(*http2Framer).ReadFrame(0xc8200d29a0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:906 +0xe9\nnet/http.(*http2clientConnReadLoop).run(0xc820128ff0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5583 +0xa6\nnet/http.(*http2ClientConn).readLoop(0xc82051a840)\n\t/usr/local/go/src/net/http/h2_bundle.go:5544 +0x162\ncreated by net/http.(*http2Transport).NewClientConn\n\t/usr/local/go/src/net/http/h2_bundle.go:4975 +0xd94\n\ngoroutine 14368 [IO wait]:\nnet.runtime_pollWait(0x7f70200d1a78, 0x72, 0xc8200e9800)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc8203de3e0, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc8203de3e0, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc8203de380, 0xc8200e9800, 0x800, 0x800, 0x0, 0x7f701ec71028, 0xc8200600b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc8200820f0, 0xc8200e9800, 0x800, 0x800, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\ncrypto/tls.(*block).readFromUntil(0xc820780120, 0x7f701ec81220, 0xc8200820f0, 0x5, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:460 +0xcc\ncrypto/tls.(*Conn).readRecord(0xc820404600, 0xd0e317, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:562 +0x2d1\ncrypto/tls.(*Conn).Read(0xc820404600, 0xc820228000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:939 +0x167\nbufio.(*Reader).fill(0xc8201922a0)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Read(0xc8201922a0, 0xc8200940e8, 0x9, 0x9, 0x521934, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:207 +0x260\nio.ReadAtLeast(0x7f701ec814b8, 0xc8201922a0, 0xc8200940e8, 0x9, 0x9, 0x9, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:297 +0xe6\nio.ReadFull(0x7f701ec814b8, 0xc8201922a0, 0xc8200940e8, 0x9, 0x9, 0x411787, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:315 +0x62\nnet/http.http2readFrameHeader(0xc8200940e8, 0x9, 0x9, 0x7f701ec814b8, 0xc8201922a0, 0x20000000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:715 +0xa5\nnet/http.(*http2Framer).ReadFrame(0xc8200940b0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:906 +0xe9\nnet/http.(*http2clientConnReadLoop).run(0xc8200ed8b0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5583 +0xa6\nnet/http.(*http2ClientConn).readLoop(0xc82039a2c0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5544 +0x162\ncreated by net/http.(*http2Transport).NewClientConn\n\t/usr/local/go/src/net/http/h2_bundle.go:4975 +0xd94\n\ngoroutine 14450 [IO wait]:\nnet.runtime_pollWait(0x7f701ec7ae48, 0x72, 0xc82026d800)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc8203ded80, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc8203ded80, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc8203ded20, 0xc82026d800, 0x400, 0x400, 0x0, 0x7f701ec71028, 0xc8200600b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc820082330, 0xc82026d800, 0x400, 0x400, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\ncrypto/tls.(*block).readFromUntil(0xc8201664e0, 0x7f701ec81220, 0xc820082330, 0x5, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:460 +0xcc\ncrypto/tls.(*Conn).readRecord(0xc8209d2000, 0xd0e317, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:562 +0x2d1\ncrypto/tls.(*Conn).Read(0xc8209d2000, 0xc8206ad000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:939 +0x167\nbufio.(*Reader).fill(0xc8206aa660)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Read(0xc8206aa660, 0xc8200d3b08, 0x9, 0x9, 0x521934, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:207 +0x260\nio.ReadAtLeast(0x7f701ec814b8, 0xc8206aa660, 0xc8200d3b08, 0x9, 0x9, 0x9, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:297 +0xe6\nio.ReadFull(0x7f701ec814b8, 0xc8206aa660, 0xc8200d3b08, 0x9, 0x9, 0x411787, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:315 +0x62\nnet/http.http2readFrameHeader(0xc8200d3b08, 0x9, 0x9, 0x7f701ec814b8, 0xc8206aa660, 0x20000000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:715 +0xa5\nnet/http.(*http2Framer).ReadFrame(0xc8200d3ad0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:906 +0xe9\nnet/http.(*http2clientConnReadLoop).run(0xc82032c1e0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5583 +0xa6\nnet/http.(*http2ClientConn).readLoop(0xc82007f4a0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5544 +0x162\ncreated by net/http.(*http2Transport).NewClientConn\n\t/usr/local/go/src/net/http/h2_bundle.go:4975 +0xd94\n\ngoroutine 14598 [select]:\nnet/http.(*persistConn).writeLoop(0xc820520b60)\n\t/usr/local/go/src/net/http/transport.go:1277 +0x472\ncreated by net/http.(*Transport).dialConn\n\t/usr/local/go/src/net/http/transport.go:858 +0x10cb\n\ngoroutine 14597 [IO wait]:\nnet.runtime_pollWait(0x7f70200d1238, 0x72, 0xc8205c3000)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc8203e8fb0, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc8203e8fb0, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc8203e8f50, 0xc8205c3000, 0x1000, 0x1000, 0x0, 0x7f701ec71028, 0xc8200600b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc8201c2428, 0xc8205c3000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\nnet/http.noteEOFReader.Read(0x7f701ec81220, 0xc8201c2428, 0xc820520bc8, 0xc8205c3000, 0x1000, 0x1000, 0x405cf3, 0x0, 0x0)\n\t/usr/local/go/src/net/http/transport.go:1687 +0x67\nnet/http.(*noteEOFReader).Read(0xc82035c3e0, 0xc8205c3000, 0x1000, 0x1000, 0xc820035d1d, 0x0, 0x0)\n\t&lt;autogenerated&gt;:284 +0xd0\nbufio.(*Reader).fill(0xc8207d97a0)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Peek(0xc8207d97a0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:132 +0xcc\nnet/http.(*persistConn).readLoop(0xc820520b60)\n\t/usr/local/go/src/net/http/transport.go:1073 +0x177\ncreated by net/http.(*Transport).dialConn\n\t/usr/local/go/src/net/http/transport.go:857 +0x10a6\n\ngoroutine 14385 [IO wait]:\nnet.runtime_pollWait(0x7f701ec7ab48, 0x72, 0xc8202a2000)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc820058a00, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc820058a00, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc8200589a0, 0xc8202a2000, 0x2000, 0x2000, 0x0, 0x7f701ec71028, 0xc8200600b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc820082040, 0xc8202a2000, 0x2000, 0x2000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\ncrypto/tls.(*block).readFromUntil(0xc8207808d0, 0x7f701ec81220, 0xc820082040, 0x5, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:460 +0xcc\ncrypto/tls.(*Conn).readRecord(0xc8202bec00, 0xd0e317, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:562 +0x2d1\ncrypto/tls.(*Conn).Read(0xc8202bec00, 0xc820229000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:939 +0x167\nbufio.(*Reader).fill(0xc820192720)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Read(0xc820192720, 0xc820095d18, 0x9, 0x9, 0x521934, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:207 +0x260\nio.ReadAtLeast(0x7f701ec814b8, 0xc820192720, 0xc820095d18, 0x9, 0x9, 0x9, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:297 +0xe6\nio.ReadFull(0x7f701ec814b8, 0xc820192720, 0xc820095d18, 0x9, 0x9, 0x411787, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:315 +0x62\nnet/http.http2readFrameHeader(0xc820095d18, 0x9, 0x9, 0x7f701ec814b8, 0xc820192720, 0x20000000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:715 +0xa5\nnet/http.(*http2Framer).ReadFrame(0xc820095ce0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:906 +0xe9\nnet/http.(*http2clientConnReadLoop).run(0xc820128f50, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5583 +0xa6\nnet/http.(*http2ClientConn).readLoop(0xc8203f4c60)\n\t/usr/local/go/src/net/http/h2_bundle.go:5544 +0x162\ncreated by net/http.(*http2Transport).NewClientConn\n\t/usr/local/go/src/net/http/h2_bundle.go:4975 +0xd94\n\ngoroutine 14614 [IO wait]:\nnet.runtime_pollWait(0x7f701ec7a488, 0x72, 0xc8204c6000)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc8203e9db0, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc8203e9db0, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc8203e9d50, 0xc8204c6000, 0x2000, 0x2000, 0x0, 0x7f701ec71028, 0xc8200600b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc8201c21b0, 0xc8204c6000, 0x2000, 0x2000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\ncrypto/tls.(*block).readFromUntil(0xc8205012c0, 0x7f701ec81220, 0xc8201c21b0, 0x5, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:460 +0xcc\ncrypto/tls.(*Conn).readRecord(0xc8209d2900, 0xd0e317, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:562 +0x2d1\ncrypto/tls.(*Conn).Read(0xc8209d2900, 0xc820502000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:939 +0x167\nbufio.(*Reader).fill(0xc8206abf80)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Read(0xc8206abf80, 0xc820a0f6e8, 0x9, 0x9, 0x521c32, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:207 +0x260\nio.ReadAtLeast(0x7f701ec814b8, 0xc8206abf80, 0xc820a0f6e8, 0x9, 0x9, 0x9, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:297 +0xe6\nio.ReadFull(0x7f701ec814b8, 0xc8206abf80, 0xc820a0f6e8, 0x9, 0x9, 0xc82037e780, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:315 +0x62\nnet/http.http2readFrameHeader(0xc820a0f6e8, 0x9, 0x9, 0x7f701ec814b8, 0xc8206abf80, 0x20000000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:715 +0xa5\nnet/http.(*http2Framer).ReadFrame(0xc820a0f6b0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:906 +0xe9\nnet/http.(*http2clientConnReadLoop).run(0xc8200ec460, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5583 +0xa6\nnet/http.(*http2ClientConn).readLoop(0xc82039a580)\n\t/usr/local/go/src/net/http/h2_bundle.go:5544 +0x162\ncreated by net/http.(*http2Transport).NewClientConn\n\t/usr/local/go/src/net/http/h2_bundle.go:4975 +0xd94\n\ngoroutine 14582 [IO wait]:\nnet.runtime_pollWait(0x7f70200d19b8, 0x72, 0xc8205ad000)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc82053e8b0, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc82053e8b0, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc82053e850, 0xc8205ad000, 0x1000, 0x1000, 0x0, 0x7f701ec71028, 0xc8200600b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc8201c2418, 0xc8205ad000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\nnet/http.noteEOFReader.Read(0x7f701ec81220, 0xc8201c2418, 0xc820168e38, 0xc8205ad000, 0x1000, 0x1000, 0x405cf3, 0x0, 0x0)\n\t/usr/local/go/src/net/http/transport.go:1687 +0x67\nnet/http.(*noteEOFReader).Read(0xc8205a1260, 0xc8205ad000, 0x1000, 0x1000, 0xc820032d1d, 0x0, 0x0)\n\t&lt;autogenerated&gt;:284 +0xd0\nbufio.(*Reader).fill(0xc82025d7a0)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Peek(0xc82025d7a0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:132 +0xcc\nnet/http.(*persistConn).readLoop(0xc820168dd0)\n\t/usr/local/go/src/net/http/transport.go:1073 +0x177\ncreated by net/http.(*Transport).dialConn\n\t/usr/local/go/src/net/http/transport.go:857 +0x10a6\n\ngoroutine 14384 [IO wait]:\nnet.runtime_pollWait(0x7f70200d1778, 0x72, 0xc82051e000)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc820058990, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc820058990, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc820058930, 0xc82051e000, 0x2000, 0x2000, 0x0, 0x7f701ec71028, 0xc8200600b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc820082050, 0xc82051e000, 0x2000, 0x2000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\ncrypto/tls.(*block).readFromUntil(0xc8202b8120, 0x7f701ec81220, 0xc820082050, 0x5, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:460 +0xcc\ncrypto/tls.(*Conn).readRecord(0xc8202bef00, 0xd0e317, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:562 +0x2d1\ncrypto/tls.(*Conn).Read(0xc8202bef00, 0xc8205c2000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:939 +0x167\nbufio.(*Reader).fill(0xc820192120)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Read(0xc820192120, 0xc820095a58, 0x9, 0x9, 0x521934, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:207 +0x260\nio.ReadAtLeast(0x7f701ec814b8, 0xc820192120, 0xc820095a58, 0x9, 0x9, 0x9, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:297 +0xe6\nio.ReadFull(0x7f701ec814b8, 0xc820192120, 0xc820095a58, 0x9, 0x9, 0x411787, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:315 +0x62\nnet/http.http2readFrameHeader(0xc820095a58, 0x9, 0x9, 0x7f701ec814b8, 0xc820192120, 0x20000000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:715 +0xa5\nnet/http.(*http2Framer).ReadFrame(0xc820095a20, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:906 +0xe9\nnet/http.(*http2clientConnReadLoop).run(0xc820128f00, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5583 +0xa6\nnet/http.(*http2ClientConn).readLoop(0xc8203f4b00)\n\t/usr/local/go/src/net/http/h2_bundle.go:5544 +0x162\ncreated by net/http.(*http2Transport).NewClientConn\n\t/usr/local/go/src/net/http/h2_bundle.go:4975 +0xd94\n\ngoroutine 14408 [IO wait]:\nnet.runtime_pollWait(0x7f70200d16b8, 0x72, 0xc8202ee000)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc820058300, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc820058300, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc8200582a0, 0xc8202ee000, 0x2000, 0x2000, 0x0, 0x7f701ec71028, 0xc8200600b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc8201c2170, 0xc8202ee000, 0x2000, 0x2000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\ncrypto/tls.(*block).readFromUntil(0xc82036be60, 0x7f701ec81220, 0xc8201c2170, 0x5, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:460 +0xcc\ncrypto/tls.(*Conn).readRecord(0xc8202bf500, 0xd0e317, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:562 +0x2d1\ncrypto/tls.(*Conn).Read(0xc8202bf500, 0xc82021f000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:939 +0x167\nbufio.(*Reader).fill(0xc8207b61e0)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Read(0xc8207b61e0, 0xc820094248, 0x9, 0x9, 0x521934, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:207 +0x260\nio.ReadAtLeast(0x7f701ec814b8, 0xc8207b61e0, 0xc820094248, 0x9, 0x9, 0x9, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:297 +0xe6\nio.ReadFull(0x7f701ec814b8, 0xc8207b61e0, 0xc820094248, 0x9, 0x9, 0x411787, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:315 +0x62\nnet/http.http2readFrameHeader(0xc820094248, 0x9, 0x9, 0x7f701ec814b8, 0xc8207b61e0, 0x20000000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:715 +0xa5\nnet/http.(*http2Framer).ReadFrame(0xc820094210, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:906 +0xe9\nnet/http.(*http2clientConnReadLoop).run(0xc8207caaf0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5583 +0xa6\nnet/http.(*http2ClientConn).readLoop(0xc8203f4000)\n\t/usr/local/go/src/net/http/h2_bundle.go:5544 +0x162\ncreated by net/http.(*http2Transport).NewClientConn\n\t/usr/local/go/src/net/http/h2_bundle.go:4975 +0xd94\n\ngoroutine 14607 [select]:\nnet/http.(*persistConn).writeLoop(0xc8205212b0)\n\t/usr/local/go/src/net/http/transport.go:1277 +0x472\ncreated by net/http.(*Transport).dialConn\n\t/usr/local/go/src/net/http/transport.go:858 +0x10cb\n\ngoroutine 14549 [IO wait]:\nnet.runtime_pollWait(0x7f701ec7b148, 0x72, 0xc820946000)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc820059480, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc820059480, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc820059420, 0xc820946000, 0x2000, 0x2000, 0x0, 0x7f701ec71028, 0xc8200600b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc820082168, 0xc820946000, 0x2000, 0x2000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\ncrypto/tls.(*block).readFromUntil(0xc8202b85a0, 0x7f701ec81220, 0xc820082168, 0x5, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:460 +0xcc\ncrypto/tls.(*Conn).readRecord(0xc8200ee300, 0xd0e317, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:562 +0x2d1\ncrypto/tls.(*Conn).Read(0xc8200ee300, 0xc82031e000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:939 +0x167\nbufio.(*Reader).fill(0xc820192600)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Read(0xc820192600, 0xc820a0e928, 0x9, 0x9, 0x521934, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:207 +0x260\nio.ReadAtLeast(0x7f701ec814b8, 0xc820192600, 0xc820a0e928, 0x9, 0x9, 0x9, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:297 +0xe6\nio.ReadFull(0x7f701ec814b8, 0xc820192600, 0xc820a0e928, 0x9, 0x9, 0x411787, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:315 +0x62\nnet/http.http2readFrameHeader(0xc820a0e928, 0x9, 0x9, 0x7f701ec814b8, 0xc820192600, 0x20000000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:715 +0xa5\nnet/http.(*http2Framer).ReadFrame(0xc820a0e8f0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:906 +0xe9\nnet/http.(*http2clientConnReadLoop).run(0xc820128500, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5583 +0xa6\nnet/http.(*http2ClientConn).readLoop(0xc82039be40)\n\t/usr/local/go/src/net/http/h2_bundle.go:5544 +0x162\ncreated by net/http.(*http2Transport).NewClientConn\n\t/usr/local/go/src/net/http/h2_bundle.go:4975 +0xd94\n\ngoroutine 14581 [IO wait]:\nnet.runtime_pollWait(0x7f701ec7ad88, 0x72, 0xc820778c00)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc8201abaa0, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc8201abaa0, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc8201aba40, 0xc820778c00, 0x400, 0x400, 0x0, 0x7f701ec71028, 0xc8200600b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc8200822c0, 0xc820778c00, 0x400, 0x400, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\ncrypto/tls.(*block).readFromUntil(0xc820413470, 0x7f701ec81220, 0xc8200822c0, 0x5, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:460 +0xcc\ncrypto/tls.(*Conn).readRecord(0xc8200ee900, 0xd0e317, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:562 +0x2d1\ncrypto/tls.(*Conn).Read(0xc8200ee900, 0xc8205ac000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:939 +0x167\nbufio.(*Reader).fill(0xc82025d500)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Read(0xc82025d500, 0xc8203090b8, 0x9, 0x9, 0x521934, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:207 +0x260\nio.ReadAtLeast(0x7f701ec814b8, 0xc82025d500, 0xc8203090b8, 0x9, 0x9, 0x9, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:297 +0xe6\nio.ReadFull(0x7f701ec814b8, 0xc82025d500, 0xc8203090b8, 0x9, 0x9, 0x411787, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:315 +0x62\nnet/http.http2readFrameHeader(0xc8203090b8, 0x9, 0x9, 0x7f701ec814b8, 0xc82025d500, 0x20000000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:715 +0xa5\nnet/http.(*http2Framer).ReadFrame(0xc820309080, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:906 +0xe9\nnet/http.(*http2clientConnReadLoop).run(0xc8203facd0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5583 +0xa6\nnet/http.(*http2ClientConn).readLoop(0xc82058eb00)\n\t/usr/local/go/src/net/http/h2_bundle.go:5544 +0x162\ncreated by net/http.(*http2Transport).NewClientConn\n\t/usr/local/go/src/net/http/h2_bundle.go:4975 +0xd94\n\ngoroutine 14484 [IO wait]:\nnet.runtime_pollWait(0x7f70200d1cb8, 0x72, 0xc8204cc000)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc8203e91e0, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc8203e91e0, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc8203e9180, 0xc8204cc000, 0x2000, 0x2000, 0x0, 0x7f701ec71028, 0xc8200600b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc820082030, 0xc8204cc000, 0x2000, 0x2000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\ncrypto/tls.(*block).readFromUntil(0xc8203e0ea0, 0x7f701ec81220, 0xc820082030, 0x5, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:460 +0xcc\ncrypto/tls.(*Conn).readRecord(0xc8209d2300, 0xd0e317, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:562 +0x2d1\ncrypto/tls.(*Conn).Read(0xc8209d2300, 0xc82028f000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:939 +0x167\nbufio.(*Reader).fill(0xc8206aad20)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Read(0xc8206aad20, 0xc820094508, 0x9, 0x9, 0x521934, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:207 +0x260\nio.ReadAtLeast(0x7f701ec814b8, 0xc8206aad20, 0xc820094508, 0x9, 0x9, 0x9, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:297 +0xe6\nio.ReadFull(0x7f701ec814b8, 0xc8206aad20, 0xc820094508, 0x9, 0x9, 0x411787, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:315 +0x62\nnet/http.http2readFrameHeader(0xc820094508, 0x9, 0x9, 0x7f701ec814b8, 0xc8206aad20, 0x20000000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:715 +0xa5\nnet/http.(*http2Framer).ReadFrame(0xc8200944d0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:906 +0xe9\nnet/http.(*http2clientConnReadLoop).run(0xc82027a8c0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5583 +0xa6\nnet/http.(*http2ClientConn).readLoop(0xc8207a3ce0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5544 +0x162\ncreated by net/http.(*http2Transport).NewClientConn\n\t/usr/local/go/src/net/http/h2_bundle.go:4975 +0xd94\n\ngoroutine 14606 [IO wait]:\nnet.runtime_pollWait(0x7f701ec7af08, 0x72, 0xc8205b0000)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc8203e9800, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc8203e9800, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc8203e97a0, 0xc8205b0000, 0x1000, 0x1000, 0x0, 0x7f701ec71028, 0xc8200600b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc8201c2160, 0xc8205b0000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\nnet/http.noteEOFReader.Read(0x7f701ec81220, 0xc8201c2160, 0xc820521318, 0xc8205b0000, 0x1000, 0x1000, 0x405cf3, 0x0, 0x0)\n\t/usr/local/go/src/net/http/transport.go:1687 +0x67\nnet/http.(*noteEOFReader).Read(0xc82035d3a0, 0xc8205b0000, 0x1000, 0x1000, 0xc820031d1d, 0x0, 0x0)\n\t&lt;autogenerated&gt;:284 +0xd0\nbufio.(*Reader).fill(0xc8206aa7e0)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Peek(0xc8206aa7e0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:132 +0xcc\nnet/http.(*persistConn).readLoop(0xc8205212b0)\n\t/usr/local/go/src/net/http/transport.go:1073 +0x177\ncreated by net/http.(*Transport).dialConn\n\t/usr/local/go/src/net/http/transport.go:857 +0x10a6\n\ngoroutine 14391 [IO wait]:\nnet.runtime_pollWait(0x7f70200d1838, 0x72, 0xc82012f000)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc8203dee60, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc8203dee60, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc8203dee00, 0xc82012f000, 0x800, 0x800, 0x0, 0x7f701ec71028, 0xc8200600b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc8201c20c8, 0xc82012f000, 0x800, 0x800, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\ncrypto/tls.(*block).readFromUntil(0xc8203c5590, 0x7f701ec81220, 0xc8201c20c8, 0x5, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:460 +0xcc\ncrypto/tls.(*Conn).readRecord(0xc8202be900, 0xd0e317, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:562 +0x2d1\ncrypto/tls.(*Conn).Read(0xc8202be900, 0xc8202b1000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:939 +0x167\nbufio.(*Reader).fill(0xc820193380)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Read(0xc820193380, 0xc820094928, 0x9, 0x9, 0x521934, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:207 +0x260\nio.ReadAtLeast(0x7f701ec814b8, 0xc820193380, 0xc820094928, 0x9, 0x9, 0x9, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:297 +0xe6\nio.ReadFull(0x7f701ec814b8, 0xc820193380, 0xc820094928, 0x9, 0x9, 0x411787, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:315 +0x62\nnet/http.http2readFrameHeader(0xc820094928, 0x9, 0x9, 0x7f701ec814b8, 0xc820193380, 0x20000000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:715 +0xa5\nnet/http.(*http2Framer).ReadFrame(0xc8200948f0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:906 +0xe9\nnet/http.(*http2clientConnReadLoop).run(0xc820129040, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5583 +0xa6\nnet/http.(*http2ClientConn).readLoop(0xc8207a2f20)\n\t/usr/local/go/src/net/http/h2_bundle.go:5544 +0x162\ncreated by net/http.(*http2Transport).NewClientConn\n\t/usr/local/go/src/net/http/h2_bundle.go:4975 +0xd94\n\ngoroutine 14454 [IO wait]:\nnet.runtime_pollWait(0x7f701ec7a848, 0x72, 0xc8209e8000)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc82053f8e0, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc82053f8e0, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc82053f880, 0xc8209e8000, 0x2000, 0x2000, 0x0, 0x7f701ec71028, 0xc8200600b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc820082258, 0xc8209e8000, 0x2000, 0x2000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\ncrypto/tls.(*block).readFromUntil(0xc820412120, 0x7f701ec81220, 0xc820082258, 0x5, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:460 +0xcc\ncrypto/tls.(*Conn).readRecord(0xc8209d2f00, 0xd0e317, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:562 +0x2d1\ncrypto/tls.(*Conn).Read(0xc8209d2f00, 0xc820a11000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:939 +0x167\nbufio.(*Reader).fill(0xc8206ab3e0)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Read(0xc8206ab3e0, 0xc820a0e2f8, 0x9, 0x9, 0x521934, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:207 +0x260\nio.ReadAtLeast(0x7f701ec814b8, 0xc8206ab3e0, 0xc820a0e2f8, 0x9, 0x9, 0x9, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:297 +0xe6\nio.ReadFull(0x7f701ec814b8, 0xc8206ab3e0, 0xc820a0e2f8, 0x9, 0x9, 0x411787, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:315 +0x62\nnet/http.http2readFrameHeader(0xc820a0e2f8, 0x9, 0x9, 0x7f701ec814b8, 0xc8206ab3e0, 0x20000000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:715 +0xa5\nnet/http.(*http2Framer).ReadFrame(0xc820a0e2c0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:906 +0xe9\nnet/http.(*http2clientConnReadLoop).run(0xc82032c500, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5583 +0xa6\nnet/http.(*http2ClientConn).readLoop(0xc82007fb80)\n\t/usr/local/go/src/net/http/h2_bundle.go:5544 +0x162\ncreated by net/http.(*http2Transport).NewClientConn\n\t/usr/local/go/src/net/http/h2_bundle.go:4975 +0xd94\nlogs.BeeLogger.SetLogger: open logs/web.log: no such file or directory\nlogs.BeeLogger.SetLogger: open logs/web.log: no such file or directory\nfatal error: runtime: out of memory\n\nruntime stack:\nruntime.throw(0xc48920, 0x16)\n\t/usr/local/go/src/runtime/panic.go:547 +0x90\nruntime.sysMap(0xc858900000, 0x96b0000, 0x434c00, 0x11801d8)\n\t/usr/local/go/src/runtime/mem_linux.go:206 +0x9b\nruntime.(*mheap).sysAlloc(0x1165b80, 0x96b0000, 0xc820084f00)\n\t/usr/local/go/src/runtime/malloc.go:429 +0x191\nruntime.(*mheap).grow(0x1165b80, 0x4b58, 0x0)\n\t/usr/local/go/src/runtime/mheap.go:651 +0x63\nruntime.(*mheap).allocSpanLocked(0x1165b80, 0x4b51, 0x1160ae0)\n\t/usr/local/go/src/runtime/mheap.go:553 +0x4f6\nruntime.(*mheap).alloc_m(0x1165b80, 0x4b51, 0x100000000, 0x7fd0b0b73f80)\n\t/usr/local/go/src/runtime/mheap.go:437 +0x119\nruntime.(*mheap).alloc.func1()\n\t/usr/local/go/src/runtime/mheap.go:502 +0x41\nruntime.systemstack(0x7fd0b012cd88)\n\t/usr/local/go/src/runtime/asm_amd64.s:307 +0xab\nruntime.(*mheap).alloc(0x1165b80, 0x4b51, 0x10100000000, 0xc820019220)\n\t/usr/local/go/src/runtime/mheap.go:503 +0x63\nruntime.largeAlloc(0x96a052f, 0x1, 0x0)\n\t/usr/local/go/src/runtime/malloc.go:766 +0xb3\nruntime.mallocgc.func3()\n\t/usr/local/go/src/runtime/malloc.go:664 +0x33\nruntime.systemstack(0xc820019500)\n\t/usr/local/go/src/runtime/asm_amd64.s:291 +0x79\nruntime.mstart()\n\t/usr/local/go/src/runtime/proc.go:1051\n\ngoroutine 6 [running]:\nruntime.systemstack_switch()\n\t/usr/local/go/src/runtime/asm_amd64.s:245 fp=0xc827e02d70 sp=0xc827e02d68\nruntime.mallocgc(0x96a052f, 0x9af100, 0x1, 0xc827e0305c)\n\t/usr/local/go/src/runtime/malloc.go:665 +0x9eb fp=0xc827e02e48 sp=0xc827e02d70\nruntime.newarray(0x9af100, 0x96a052f, 0x27a398)\n\t/usr/local/go/src/runtime/malloc.go:798 +0xc9 fp=0xc827e02e88 sp=0xc827e02e48\nruntime.makeslice(0x997fe0, 0x96a052f, 0x96a052f, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/runtime/slice.go:32 +0x165 fp=0xc827e02ed8 sp=0xc827e02e88\nbytes.Replace(0xc846c08000, 0xa303727, 0x106104bf, 0xc827e03070, 0x6, 0x6, 0xc827e03050, 0x1, 0x1, 0x27a398, ...)\n\t/usr/local/go/src/bytes/bytes.go:640 +0x1f2 fp=0xc827e02fc8 sp=0xc827e02ed8\ngithub.com/astaxie/beego/context.(*BeegoOutput).JSONDisableHTMLEscaping(0xc8202439c0, 0x9ad600, 0xc8204f4000, 0xc8201c0001, 0x0, 0x0)\n\t/home/gosource/src/github.com/astaxie/beego/context/output.go:205 +0x22d fp=0xc827e03110 sp=0xc827e02fc8\ngithub.com/astaxie/beego.(*Controller).ServeJSONDisableHTMLEscaping(0xc8202ea9c0, 0x0, 0x0, 0x0)\n\t/home/gosource/src/github.com/astaxie/beego/controller.go:317 +0x19c fp=0xc827e031a0 sp=0xc827e03110\nTestapi/controllers.(*VideoPathController).Post(0xc8202ea9c0)\n\t/home/gosource/src/Testapi/controllers/videopathcontroller.go:53 +0xb67 fp=0xc827e03420 sp=0xc827e031a0\nruntime.call32(0xc820015780, 0xbb1e50, 0xc820024220, 0x800000008)\n\t/usr/local/go/src/runtime/asm_amd64.s:472 +0x3e fp=0xc827e03448 sp=0xc827e03420\nreflect.Value.call(0xbb17c0, 0xc8202ea9c0, 0x8213, 0xbbbaf8, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\n\t/usr/local/go/src/reflect/value.go:435 +0x120d fp=0xc827e03798 sp=0xc827e03448\nreflect.Value.Call(0xbb17c0, 0xc8202ea9c0, 0x8213, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/reflect/value.go:303 +0xb1 fp=0xc827e037f8 sp=0xc827e03798\ngithub.com/astaxie/beego.(*ControllerRegister).ServeHTTP(0xc820148210, 0x7fd0b013d628, 0xc8202ea8f0, 0xc8202f35e0)\n\t/home/gosource/src/github.com/astaxie/beego/router.go:778 +0x1f3d fp=0xc827e03b60 sp=0xc827e037f8\nnet/http.serverHandler.ServeHTTP(0xc820088180, 0x7fd0b013d628, 0xc8202ea8f0, 0xc8202f35e0)\n\t/usr/local/go/src/net/http/server.go:2081 +0x19e fp=0xc827e03bc0 sp=0xc827e03b60\nnet/http.(*conn).serve(0xc8201ab280)\n\t/usr/local/go/src/net/http/server.go:1472 +0xf2e fp=0xc827e03f88 sp=0xc827e03bc0\nruntime.goexit()\n\t/usr/local/go/src/runtime/asm_amd64.s:1998 +0x1 fp=0xc827e03f90 sp=0xc827e03f88\ncreated by net/http.(*Server).Serve\n\t/usr/local/go/src/net/http/server.go:2137 +0x44e\n\ngoroutine 1 [chan receive]:\ngithub.com/astaxie/beego.(*App).Run(0xc82005f4e0)\n\t/home/gosource/src/github.com/astaxie/beego/app.go:182 +0xabb\ngithub.com/astaxie/beego.Run(0x0, 0x0, 0x0)\n\t/home/gosource/src/github.com/astaxie/beego/beego.go:66 +0x163\nmain.main()\n\t/home/gosource/src/Testapi/main.go:17 +0x14d\n\ngoroutine 17 [syscall, locked to thread]:\nruntime.goexit()\n\t/usr/local/go/src/runtime/asm_amd64.s:1998 +0x1\n\ngoroutine 19 [syscall]:\nos/signal.signal_recv(0x0)\n\t/usr/local/go/src/runtime/sigqueue.go:116 +0x132\nos/signal.loop()\n\t/usr/local/go/src/os/signal/signal_unix.go:22 +0x18\ncreated by os/signal.init.1\n\t/usr/local/go/src/os/signal/signal_unix.go:28 +0x37\n\ngoroutine 20 [chan receive]:\ndatabase/sql.(*DB).connectionOpener(0xc82019a0b0)\n\t/usr/local/go/src/database/sql/sql.go:727 +0x45\ncreated by database/sql.Open\n\t/usr/local/go/src/database/sql/sql.go:493 +0x33f\n\ngoroutine 24 [IO wait]:\nnet.runtime_pollWait(0x7fd0b0134078, 0x72, 0x0)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc820289db0, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc820289db0, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).accept(0xc820289d50, 0x0, 0x7fd0b013d530, 0xc820466000)\n\t/usr/local/go/src/net/fd_unix.go:426 +0x27c\nnet.(*TCPListener).AcceptTCP(0xc8200805f8, 0x454e60, 0x0, 0x0)\n\t/usr/local/go/src/net/tcpsock_posix.go:254 +0x4d\nnet/http.tcpKeepAliveListener.Accept(0xc8200805f8, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/server.go:2427 +0x41\nnet/http.(*Server).Serve(0xc820088180, 0x7fd0b013d4f8, 0xc8200805f8, 0x0, 0x0)\n\t/usr/local/go/src/net/http/server.go:2117 +0x129\nnet/http.(*Server).ListenAndServe(0xc820088180, 0x0, 0x0)\n\t/usr/local/go/src/net/http/server.go:2098 +0x136\ngithub.com/astaxie/beego.(*App).Run.func4(0xc82005f4e0, 0xc82025f018, 0x5, 0xc820289ce0)\n\t/home/gosource/src/github.com/astaxie/beego/app.go:174 +0x476\ncreated by github.com/astaxie/beego.(*App).Run\n\t/home/gosource/src/github.com/astaxie/beego/app.go:180 +0xa98\n\ngoroutine 33 [IO wait]:\nnet.runtime_pollWait(0x7fd0b0133d78, 0x72, 0xc820348000)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc8202a85a0, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc8202a85a0, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc8202a8540, 0xc820348000, 0x2000, 0x2000, 0x0, 0x7fd0b012e028, 0xc82005e0b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc820080660, 0xc820348000, 0x2000, 0x2000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\ncrypto/tls.(*block).readFromUntil(0xc82028ba70, 0x7fd0b013d558, 0xc820080660, 0x5, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:460 +0xcc\ncrypto/tls.(*Conn).readRecord(0xc820344000, 0xd0e317, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:562 +0x2d1\ncrypto/tls.(*Conn).Read(0xc820344000, 0xc82029b000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:939 +0x167\nbufio.(*Reader).fill(0xc820436f60)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Read(0xc820436f60, 0xc8200d3a58, 0x9, 0x9, 0x521934, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:207 +0x260\nio.ReadAtLeast(0x7fd0b013d7f0, 0xc820436f60, 0xc8200d3a58, 0x9, 0x9, 0x9, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:297 +0xe6\nio.ReadFull(0x7fd0b013d7f0, 0xc820436f60, 0xc8200d3a58, 0x9, 0x9, 0x411787, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:315 +0x62\nnet/http.http2readFrameHeader(0xc8200d3a58, 0x9, 0x9, 0x7fd0b013d7f0, 0xc820436f60, 0x20000000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:715 +0xa5\nnet/http.(*http2Framer).ReadFrame(0xc8200d3a20, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:906 +0xe9\nnet/http.(*http2clientConnReadLoop).run(0xc8203f0000, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5583 +0xa6\nnet/http.(*http2ClientConn).readLoop(0xc820244000)\n\t/usr/local/go/src/net/http/h2_bundle.go:5544 +0x162\ncreated by net/http.(*http2Transport).NewClientConn\n\t/usr/local/go/src/net/http/h2_bundle.go:4975 +0xd94\n\ngoroutine 39 [IO wait]:\nnet.runtime_pollWait(0x7fd0b0133bf8, 0x72, 0xc8200fe000)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc8202a8300, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc8202a8300, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc8202a82a0, 0xc8200fe000, 0x1000, 0x1000, 0x0, 0x7fd0b012e028, 0xc82005e0b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc820080038, 0xc8200fe000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\nnet/http.noteEOFReader.Read(0x7fd0b013d558, 0xc820080038, 0xc8201fb7f8, 0xc8200fe000, 0x1000, 0x1000, 0x405cf3, 0x0, 0x0)\n\t/usr/local/go/src/net/http/transport.go:1687 +0x67\nnet/http.(*noteEOFReader).Read(0xc8203ee660, 0xc8200fe000, 0x1000, 0x1000, 0xc820036d1d, 0x0, 0x0)\n\t&lt;autogenerated&gt;:284 +0xd0\nbufio.(*Reader).fill(0xc8204377a0)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Peek(0xc8204377a0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:132 +0xcc\nnet/http.(*persistConn).readLoop(0xc8201fb790)\n\t/usr/local/go/src/net/http/transport.go:1073 +0x177\ncreated by net/http.(*Transport).dialConn\n\t/usr/local/go/src/net/http/transport.go:857 +0x10a6\n\ngoroutine 40 [select]:\nnet/http.(*persistConn).writeLoop(0xc8201fb790)\n\t/usr/local/go/src/net/http/transport.go:1277 +0x472\ncreated by net/http.(*Transport).dialConn\n\t/usr/local/go/src/net/http/transport.go:858 +0x10cb\n\ngoroutine 48 [IO wait]:\nnet.runtime_pollWait(0x7fd0b0133a78, 0x72, 0xc8203f2000)\n\t/usr/local/go/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc8200de840, 0x72, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc8200de840, 0x0, 0x0)\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).Read(0xc8200de7e0, 0xc8203f2000, 0x2000, 0x2000, 0x0, 0x7fd0b012e028, 0xc82005e0b0)\n\t/usr/local/go/src/net/fd_unix.go:250 +0x23a\nnet.(*conn).Read(0xc8200800e0, 0xc8203f2000, 0x2000, 0x2000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/net.go:172 +0xe4\ncrypto/tls.(*block).readFromUntil(0xc820459710, 0x7fd0b013d558, 0xc8200800e0, 0x5, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:460 +0xcc\ncrypto/tls.(*Conn).readRecord(0xc820344300, 0xd0e317, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:562 +0x2d1\ncrypto/tls.(*Conn).Read(0xc820344300, 0xc8202ad000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/crypto/tls/conn.go:939 +0x167\nbufio.(*Reader).fill(0xc820437200)\n\t/usr/local/go/src/bufio/bufio.go:97 +0x1e9\nbufio.(*Reader).Read(0xc820437200, 0xc8200d2038, 0x9, 0x9, 0x521934, 0x0, 0x0)\n\t/usr/local/go/src/bufio/bufio.go:207 +0x260\nio.ReadAtLeast(0x7fd0b013d7f0, 0xc820437200, 0xc8200d2038, 0x9, 0x9, 0x9, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:297 +0xe6\nio.ReadFull(0x7fd0b013d7f0, 0xc820437200, 0xc8200d2038, 0x9, 0x9, 0x411787, 0x0, 0x0)\n\t/usr/local/go/src/io/io.go:315 +0x62\nnet/http.http2readFrameHeader(0xc8200d2038, 0x9, 0x9, 0x7fd0b013d7f0, 0xc820437200, 0x20000000, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:715 +0xa5\nnet/http.(*http2Framer).ReadFrame(0xc8200d2000, 0x0, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:906 +0xe9\nnet/http.(*http2clientConnReadLoop).run(0xc82044a9b0, 0x0, 0x0)\n\t/usr/local/go/src/net/http/h2_bundle.go:5583 +0xa6\nnet/http.(*http2ClientConn).readLoop(0xc820244420)\n\t/usr/local/go/src/net/http/h2_bundle.go:5544 +0x162\ncreated by net/http.(*http2Transport).NewClientConn\n\t/usr/local/go/src/net/http/h2_bundle.go:4975 +0xd94\nlogs.BeeLogger.SetLogger: open logs/web.log: no such file or directory\n\n```",
    "body_html": "<p>我用 golang 写的手机端 API 接口，跑在服务器上经常会引起崩溃，</p>\n\n<p>先阐述下我怎么写的\n其中耗时  包括了数据库查询、参数封装；\n这两个我没有采用任何的 goroutine，直接写的代码，</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">this</span> <span class=\"o\">*</span><span class=\"n\">RankListController</span><span class=\"p\">)</span> <span class=\"n\">Post</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"n\">doc_lable</span> <span class=\"o\">:=</span> <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"n\">GetString</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">doc_lable</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n    <span class=\"c\">//请求排行榜数据</span>\n    <span class=\"k\">var</span> <span class=\"n\">rankDataList</span> <span class=\"p\">[]</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">RankDataList</span>\n    <span class=\"c\">//查询数据库耗时</span>\n    <span class=\"n\">num</span><span class=\"p\">,</span> <span class=\"n\">errors</span><span class=\"p\">,</span> <span class=\"n\">list</span> <span class=\"o\">:=</span> <span class=\"n\">dao</span><span class=\"o\">.</span><span class=\"n\">RankDataList</span><span class=\"p\">(</span><span class=\"n\">doc_lable</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">errors</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"n\">Data</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">json</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;]</span> <span class=\"o\">=</span> <span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"k\">interface</span><span class=\"p\">{}{</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">datalist</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span> <span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">status</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">msg</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">In</span> <span class=\"n\">addition</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">problem</span> <span class=\"n\">by</span> <span class=\"n\">the</span> <span class=\"n\">server</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">if</span> <span class=\"n\">num</span> <span class=\"o\">==</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n        <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"n\">Data</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">json</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;]</span> <span class=\"o\">=</span> <span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"k\">interface</span><span class=\"p\">{}{</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">datalist</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span> <span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">status</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">msg</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">no</span> <span class=\"n\">data</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}</span>\n    <span class=\"p\">}</span>\n    <span class=\"c\">//数据封装耗时</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">list</span><span class=\"p\">);</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n        <span class=\"c\">//      indate, _ := strconv.Atoi(list[i].Indate)</span>\n        <span class=\"n\">rankDataLists</span> <span class=\"o\">:=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">RankDataList</span><span class=\"p\">{</span>\n            <span class=\"n\">Id</span><span class=\"o\">:</span>        <span class=\"n\">list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">MoveId</span><span class=\"p\">,</span>\n            <span class=\"n\">Title</span><span class=\"o\">:</span>     <span class=\"n\">list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">Title</span><span class=\"p\">,</span>\n            <span class=\"n\">Logo</span><span class=\"o\">:</span>      <span class=\"n\">list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">Logo</span><span class=\"p\">,</span>\n            <span class=\"n\">Rating</span><span class=\"o\">:</span>    <span class=\"n\">list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">Rating</span><span class=\"p\">,</span>\n            <span class=\"n\">Remark</span><span class=\"o\">:</span>    <span class=\"n\">list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">Remark</span><span class=\"p\">,</span>\n            <span class=\"n\">Indate</span><span class=\"o\">:</span>    <span class=\"n\">list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">Indate</span><span class=\"p\">,</span>\n            <span class=\"n\">Doc_lable</span><span class=\"o\">:</span> <span class=\"n\">list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">DocLable</span><span class=\"p\">,</span>\n            <span class=\"n\">Directors</span><span class=\"o\">:</span> <span class=\"n\">list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">Directors</span><span class=\"p\">,</span>\n            <span class=\"n\">Starrings</span><span class=\"o\">:</span> <span class=\"n\">list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">Starrings</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">rankDataList</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">rankDataList</span><span class=\"p\">,</span> <span class=\"n\">rankDataLists</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"n\">Data</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">json</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;]</span> <span class=\"o\">=</span> <span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"k\">interface</span><span class=\"p\">{}{</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">datalist</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span> <span class=\"n\">rankDataList</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">status</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">msg</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">success</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}</span>\n    <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"n\">ServeJSON</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>现在遇到的问题</p>\n\n<p>1：服务不稳定，经常会一大堆请求阻塞</p>\n\n<p>我的问题是</p>\n\n<p>我要依靠 beego 写一个并发程序，在 Controller 部分也需要用 goroutine？不是每个请求就是一个 routine 么？</p>\n\n<p>日志文件如下</p>\n <pre class=\"highlight go\"><code><span class=\"n\">logs</span><span class=\"o\">.</span><span class=\"n\">BeeLogger</span><span class=\"o\">.</span><span class=\"n\">SetLogger</span><span class=\"o\">:</span> <span class=\"n\">open</span> <span class=\"n\">logs</span><span class=\"o\">/</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span>\n<span class=\"n\">fatal</span> <span class=\"kt\">error</span><span class=\"o\">:</span> <span class=\"n\">runtime</span><span class=\"o\">:</span> <span class=\"n\">out</span> <span class=\"n\">of</span> <span class=\"n\">memory</span>\n\n<span class=\"n\">runtime</span> <span class=\"n\">stack</span><span class=\"o\">:</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">throw</span><span class=\"p\">(</span><span class=\"m\">0xc48920</span><span class=\"p\">,</span> <span class=\"m\">0x16</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"nb\">panic</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">547</span> <span class=\"o\">+</span><span class=\"m\">0x90</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">sysMap</span><span class=\"p\">(</span><span class=\"m\">0xc8561e0000</span><span class=\"p\">,</span> <span class=\"m\">0xb210000</span><span class=\"p\">,</span> <span class=\"m\">0x434c00</span><span class=\"p\">,</span> <span class=\"m\">0x11801d8</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">mem_linux</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">206</span> <span class=\"o\">+</span><span class=\"m\">0x9b</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">mheap</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">sysAlloc</span><span class=\"p\">(</span><span class=\"m\">0x1165b80</span><span class=\"p\">,</span> <span class=\"m\">0xb210000</span><span class=\"p\">,</span> <span class=\"m\">0xc820223800</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">malloc</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">429</span> <span class=\"o\">+</span><span class=\"m\">0x191</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">mheap</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">grow</span><span class=\"p\">(</span><span class=\"m\">0x1165b80</span><span class=\"p\">,</span> <span class=\"m\">0x5908</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">mheap</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">651</span> <span class=\"o\">+</span><span class=\"m\">0x63</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">mheap</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">allocSpanLocked</span><span class=\"p\">(</span><span class=\"m\">0x1165b80</span><span class=\"p\">,</span> <span class=\"m\">0x5902</span><span class=\"p\">,</span> <span class=\"m\">0x2b156880</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">mheap</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">553</span> <span class=\"o\">+</span><span class=\"m\">0x4f6</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">mheap</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">alloc_m</span><span class=\"p\">(</span><span class=\"m\">0x1165b80</span><span class=\"p\">,</span> <span class=\"m\">0x5902</span><span class=\"p\">,</span> <span class=\"m\">0x100000000</span><span class=\"p\">,</span> <span class=\"m\">0x1166f30</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">mheap</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">437</span> <span class=\"o\">+</span><span class=\"m\">0x119</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">mheap</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">alloc</span><span class=\"o\">.</span><span class=\"n\">func1</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">mheap</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">502</span> <span class=\"o\">+</span><span class=\"m\">0x41</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">systemstack</span><span class=\"p\">(</span><span class=\"m\">0x7f70200b1d88</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">307</span> <span class=\"o\">+</span><span class=\"m\">0xab</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">mheap</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">alloc</span><span class=\"p\">(</span><span class=\"m\">0x1165b80</span><span class=\"p\">,</span> <span class=\"m\">0x5902</span><span class=\"p\">,</span> <span class=\"m\">0x10100000000</span><span class=\"p\">,</span> <span class=\"m\">0x20</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">mheap</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">503</span> <span class=\"o\">+</span><span class=\"m\">0x63</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">largeAlloc</span><span class=\"p\">(</span><span class=\"m\">0xb202819</span><span class=\"p\">,</span> <span class=\"m\">0xc800000001</span><span class=\"p\">,</span> <span class=\"m\">0xc8205a8a60</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">malloc</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">766</span> <span class=\"o\">+</span><span class=\"m\">0xb3</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">mallocgc</span><span class=\"o\">.</span><span class=\"n\">func3</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">malloc</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">664</span> <span class=\"o\">+</span><span class=\"m\">0x33</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">systemstack</span><span class=\"p\">(</span><span class=\"m\">0xc820019500</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">291</span> <span class=\"o\">+</span><span class=\"m\">0x79</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">mstart</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">proc</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1051</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14559</span> <span class=\"p\">[</span><span class=\"n\">running</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">systemstack_switch</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">245</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a88f8</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a88f0</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">mallocgc</span><span class=\"p\">(</span><span class=\"m\">0xb202819</span><span class=\"p\">,</span> <span class=\"m\">0x9af100</span><span class=\"p\">,</span> <span class=\"m\">0x1</span><span class=\"p\">,</span> <span class=\"m\">0xa07c1d1</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">malloc</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">665</span> <span class=\"o\">+</span><span class=\"m\">0x9eb</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a89d0</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a88f8</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">newarray</span><span class=\"p\">(</span><span class=\"m\">0x9af100</span><span class=\"p\">,</span> <span class=\"m\">0xb202819</span><span class=\"p\">,</span> <span class=\"m\">0xc8205a8a70</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">malloc</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">798</span> <span class=\"o\">+</span><span class=\"m\">0xc9</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8a10</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a89d0</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">makeslice</span><span class=\"p\">(</span><span class=\"m\">0x997fe0</span><span class=\"p\">,</span> <span class=\"m\">0xb202819</span><span class=\"p\">,</span> <span class=\"m\">0xb202819</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">slice</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">32</span> <span class=\"o\">+</span><span class=\"m\">0x165</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8a60</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8a10</span>\n<span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"n\">makeSlice</span><span class=\"p\">(</span><span class=\"m\">0xb202819</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bytes</span><span class=\"o\">/</span><span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">198</span> <span class=\"o\">+</span><span class=\"m\">0x64</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8ab0</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8a60</span>\n<span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Buffer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">grow</span><span class=\"p\">(</span><span class=\"m\">0xc8203de070</span><span class=\"p\">,</span> <span class=\"m\">0xb202819</span><span class=\"p\">,</span> <span class=\"m\">0x7f702149c8e8</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bytes</span><span class=\"o\">/</span><span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">106</span> <span class=\"o\">+</span><span class=\"m\">0x282</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8b58</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8ab0</span>\n<span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Buffer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Write</span><span class=\"p\">(</span><span class=\"m\">0xc8203de070</span><span class=\"p\">,</span> <span class=\"m\">0xc820b56000</span><span class=\"p\">,</span> <span class=\"m\">0xb202819</span><span class=\"p\">,</span> <span class=\"m\">0xb202819</span><span class=\"p\">,</span> <span class=\"m\">0xc8205dc010</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bytes</span><span class=\"o\">/</span><span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">134</span> <span class=\"o\">+</span><span class=\"m\">0x4b</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8bb0</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8b58</span>\n<span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">nopResetWriter</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Write</span><span class=\"p\">(</span><span class=\"m\">0xc8205dc010</span><span class=\"p\">,</span> <span class=\"m\">0xc820b56000</span><span class=\"p\">,</span> <span class=\"m\">0xb202819</span><span class=\"p\">,</span> <span class=\"m\">0xb202819</span><span class=\"p\">,</span> <span class=\"m\">0xc820026800</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"n\">autogenerated</span><span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span><span class=\"o\">:</span><span class=\"m\">1</span> <span class=\"o\">+</span><span class=\"m\">0x82</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8c00</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8bb0</span>\n<span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WriteTo</span><span class=\"p\">(</span><span class=\"m\">0xc820780000</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec815c0</span><span class=\"p\">,</span> <span class=\"m\">0xc8205dc010</span><span class=\"p\">,</span> <span class=\"m\">0xc8205a8cf8</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bytes</span><span class=\"o\">/</span><span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">137</span> <span class=\"o\">+</span><span class=\"m\">0xc2</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8c68</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8c00</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">copyBuffer</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec815c0</span><span class=\"p\">,</span> <span class=\"m\">0xc8205dc010</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec753e0</span><span class=\"p\">,</span> <span class=\"m\">0xc820780000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">370</span> <span class=\"o\">+</span><span class=\"m\">0xd0</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8d28</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8c68</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">Copy</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec815c0</span><span class=\"p\">,</span> <span class=\"m\">0xc8205dc010</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec753e0</span><span class=\"p\">,</span> <span class=\"m\">0xc820780000</span><span class=\"p\">,</span> <span class=\"m\">0xc8205dc010</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">350</span> <span class=\"o\">+</span><span class=\"m\">0x64</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8d80</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8d28</span>\n<span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">writeLevel</span><span class=\"p\">(</span><span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec81568</span><span class=\"p\">,</span> <span class=\"m\">0xc8203de070</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec753e0</span><span class=\"p\">,</span> <span class=\"m\">0xc820780000</span><span class=\"p\">,</span> <span class=\"m\">0x1</span><span class=\"p\">,</span> <span class=\"m\">0x7f70214e2400</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">context</span><span class=\"o\">/</span><span class=\"n\">acceptencoder</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">140</span> <span class=\"o\">+</span><span class=\"m\">0x2d7</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8e78</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8d80</span>\n<span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">WriteBody</span><span class=\"p\">(</span><span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec81568</span><span class=\"p\">,</span> <span class=\"m\">0xc8203de070</span><span class=\"p\">,</span> <span class=\"m\">0xc820b56000</span><span class=\"p\">,</span> <span class=\"m\">0xb202819</span><span class=\"p\">,</span> <span class=\"m\">0xb202819</span><span class=\"p\">,</span> <span class=\"m\">0xc820b56000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">context</span><span class=\"o\">/</span><span class=\"n\">acceptencoder</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">123</span> <span class=\"o\">+</span><span class=\"m\">0x138</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8f10</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8e78</span>\n<span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">BeegoOutput</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Body</span><span class=\"p\">(</span><span class=\"m\">0xc820294a40</span><span class=\"p\">,</span> <span class=\"m\">0xc820b56000</span><span class=\"p\">,</span> <span class=\"m\">0xb202819</span><span class=\"p\">,</span> <span class=\"m\">0xb202819</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">context</span><span class=\"o\">/</span><span class=\"n\">output</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">65</span> <span class=\"o\">+</span><span class=\"m\">0x131</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8fc8</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8f10</span>\n<span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">BeegoOutput</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">JSONDisableHTMLEscaping</span><span class=\"p\">(</span><span class=\"m\">0xc820294a40</span><span class=\"p\">,</span> <span class=\"m\">0x9ad600</span><span class=\"p\">,</span> <span class=\"m\">0xc8204e2db0</span><span class=\"p\">,</span> <span class=\"m\">0xc820a00001</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">context</span><span class=\"o\">/</span><span class=\"n\">output</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">214</span> <span class=\"o\">+</span><span class=\"m\">0x403</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a9110</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a8fc8</span>\n<span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Controller</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ServeJSONDisableHTMLEscaping</span><span class=\"p\">(</span><span class=\"m\">0xc82058a270</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">controller</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">317</span> <span class=\"o\">+</span><span class=\"m\">0x19c</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a91a0</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a9110</span>\n<span class=\"n\">Testapi</span><span class=\"o\">/</span><span class=\"n\">controllers</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">VideoPathController</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Post</span><span class=\"p\">(</span><span class=\"m\">0xc82058a270</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Testapi</span><span class=\"o\">/</span><span class=\"n\">controllers</span><span class=\"o\">/</span><span class=\"n\">videopathcontroller</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">53</span> <span class=\"o\">+</span><span class=\"m\">0xb67</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a9420</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a91a0</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">call32</span><span class=\"p\">(</span><span class=\"m\">0xc820242a40</span><span class=\"p\">,</span> <span class=\"m\">0xbb1e50</span><span class=\"p\">,</span> <span class=\"m\">0xc8201c23d8</span><span class=\"p\">,</span> <span class=\"m\">0x800000008</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">472</span> <span class=\"o\">+</span><span class=\"m\">0x3e</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a9448</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a9420</span>\n<span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"m\">0xbb17c0</span><span class=\"p\">,</span> <span class=\"m\">0xc82058a270</span><span class=\"p\">,</span> <span class=\"m\">0x8213</span><span class=\"p\">,</span> <span class=\"m\">0xbbbaf8</span><span class=\"p\">,</span> <span class=\"m\">0x4</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">reflect</span><span class=\"o\">/</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">435</span> <span class=\"o\">+</span><span class=\"m\">0x120d</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a9798</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a9448</span>\n<span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">Call</span><span class=\"p\">(</span><span class=\"m\">0xbb17c0</span><span class=\"p\">,</span> <span class=\"m\">0xc82058a270</span><span class=\"p\">,</span> <span class=\"m\">0x8213</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">reflect</span><span class=\"o\">/</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">303</span> <span class=\"o\">+</span><span class=\"m\">0xb1</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a97f8</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a9798</span>\n<span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">ControllerRegister</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ServeHTTP</span><span class=\"p\">(</span><span class=\"m\">0xc820146210</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec812f0</span><span class=\"p\">,</span> <span class=\"m\">0xc82058a1a0</span><span class=\"p\">,</span> <span class=\"m\">0xc8207ccee0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">router</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">778</span> <span class=\"o\">+</span><span class=\"m\">0x1f3d</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a9b60</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a97f8</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">serverHandler</span><span class=\"o\">.</span><span class=\"n\">ServeHTTP</span><span class=\"p\">(</span><span class=\"m\">0xc820088180</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec812f0</span><span class=\"p\">,</span> <span class=\"m\">0xc82058a1a0</span><span class=\"p\">,</span> <span class=\"m\">0xc8207ccee0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">2081</span> <span class=\"o\">+</span><span class=\"m\">0x19e</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a9bc0</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a9b60</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">serve</span><span class=\"p\">(</span><span class=\"m\">0xc82054da00</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1472</span> <span class=\"o\">+</span><span class=\"m\">0xf2e</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a9f88</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a9bc0</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">goexit</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">1998</span> <span class=\"o\">+</span><span class=\"m\">0x1</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a9f90</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc8205a9f88</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Server</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Serve</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">2137</span> <span class=\"o\">+</span><span class=\"m\">0x44e</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">1</span> <span class=\"p\">[</span><span class=\"k\">chan</span> <span class=\"n\">receive</span><span class=\"p\">,</span> <span class=\"m\">309</span> <span class=\"n\">minutes</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">App</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Run</span><span class=\"p\">(</span><span class=\"m\">0xc8200614d0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">182</span> <span class=\"o\">+</span><span class=\"m\">0xabb</span>\n<span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">Run</span><span class=\"p\">(</span><span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">66</span> <span class=\"o\">+</span><span class=\"m\">0x163</span>\n<span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Testapi</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">17</span> <span class=\"o\">+</span><span class=\"m\">0x14d</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">17</span> <span class=\"p\">[</span><span class=\"n\">syscall</span><span class=\"p\">,</span> <span class=\"m\">309</span> <span class=\"n\">minutes</span><span class=\"p\">,</span> <span class=\"n\">locked</span> <span class=\"n\">to</span> <span class=\"n\">thread</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">goexit</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">1998</span> <span class=\"o\">+</span><span class=\"m\">0x1</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">20</span> <span class=\"p\">[</span><span class=\"n\">syscall</span><span class=\"p\">,</span> <span class=\"m\">309</span> <span class=\"n\">minutes</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">os</span><span class=\"o\">/</span><span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">signal_recv</span><span class=\"p\">(</span><span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">sigqueue</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">116</span> <span class=\"o\">+</span><span class=\"m\">0x132</span>\n<span class=\"n\">os</span><span class=\"o\">/</span><span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">loop</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">os</span><span class=\"o\">/</span><span class=\"n\">signal</span><span class=\"o\">/</span><span class=\"n\">signal_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">22</span> <span class=\"o\">+</span><span class=\"m\">0x18</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">os</span><span class=\"o\">/</span><span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"m\">.1</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">os</span><span class=\"o\">/</span><span class=\"n\">signal</span><span class=\"o\">/</span><span class=\"n\">signal_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">28</span> <span class=\"o\">+</span><span class=\"m\">0x37</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">21</span> <span class=\"p\">[</span><span class=\"k\">chan</span> <span class=\"n\">receive</span><span class=\"p\">,</span> <span class=\"m\">309</span> <span class=\"n\">minutes</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">database</span><span class=\"o\">/</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">DB</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">connectionOpener</span><span class=\"p\">(</span><span class=\"m\">0xc820103ad0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">database</span><span class=\"o\">/</span><span class=\"n\">sql</span><span class=\"o\">/</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">727</span> <span class=\"o\">+</span><span class=\"m\">0x45</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">database</span><span class=\"o\">/</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">Open</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">database</span><span class=\"o\">/</span><span class=\"n\">sql</span><span class=\"o\">/</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">493</span> <span class=\"o\">+</span><span class=\"m\">0x33f</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">24</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec7b2c8</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc8203dfe90</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc8203dfe90</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">accept</span><span class=\"p\">(</span><span class=\"m\">0xc8203dfe30</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec811f8</span><span class=\"p\">,</span> <span class=\"m\">0xc8200e5b40</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">426</span> <span class=\"o\">+</span><span class=\"m\">0x27c</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">TCPListener</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">AcceptTCP</span><span class=\"p\">(</span><span class=\"m\">0xc820083388</span><span class=\"p\">,</span> <span class=\"m\">0x454e60</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">tcpsock_posix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">254</span> <span class=\"o\">+</span><span class=\"m\">0x4d</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">tcpKeepAliveListener</span><span class=\"o\">.</span><span class=\"n\">Accept</span><span class=\"p\">(</span><span class=\"m\">0xc820083388</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">2427</span> <span class=\"o\">+</span><span class=\"m\">0x41</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Server</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Serve</span><span class=\"p\">(</span><span class=\"m\">0xc820088180</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec811c0</span><span class=\"p\">,</span> <span class=\"m\">0xc820083388</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">2117</span> <span class=\"o\">+</span><span class=\"m\">0x129</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Server</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ListenAndServe</span><span class=\"p\">(</span><span class=\"m\">0xc820088180</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">2098</span> <span class=\"o\">+</span><span class=\"m\">0x136</span>\n<span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">App</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Run</span><span class=\"o\">.</span><span class=\"n\">func4</span><span class=\"p\">(</span><span class=\"m\">0xc8200614d0</span><span class=\"p\">,</span> <span class=\"m\">0xc82038d918</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0xc8203dfdc0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">174</span> <span class=\"o\">+</span><span class=\"m\">0x476</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">App</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Run</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">180</span> <span class=\"o\">+</span><span class=\"m\">0xa98</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14436</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec7a6c8</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc82077a000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc82053e290</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc82053e290</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc82053e230</span><span class=\"p\">,</span> <span class=\"m\">0xc82077a000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec71028</span><span class=\"p\">,</span> <span class=\"m\">0xc8200600b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8201c2158</span><span class=\"p\">,</span> <span class=\"m\">0xc82077a000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readFromUntil</span><span class=\"p\">(</span><span class=\"m\">0xc8203eee70</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec81220</span><span class=\"p\">,</span> <span class=\"m\">0xc8201c2158</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">460</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readRecord</span><span class=\"p\">(</span><span class=\"m\">0xc8200efb00</span><span class=\"p\">,</span> <span class=\"m\">0xd0e317</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">562</span> <span class=\"o\">+</span><span class=\"m\">0x2d1</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8200efb00</span><span class=\"p\">,</span> <span class=\"m\">0xc8205b3000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">939</span> <span class=\"o\">+</span><span class=\"m\">0x167</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc82025c240</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc82025c240</span><span class=\"p\">,</span> <span class=\"m\">0xc820316718</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x521934</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">207</span> <span class=\"o\">+</span><span class=\"m\">0x260</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadAtLeast</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc82025c240</span><span class=\"p\">,</span> <span class=\"m\">0xc820316718</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">297</span> <span class=\"o\">+</span><span class=\"m\">0xe6</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadFull</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc82025c240</span><span class=\"p\">,</span> <span class=\"m\">0xc820316718</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x411787</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">315</span> <span class=\"o\">+</span><span class=\"m\">0x62</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">http2readFrameHeader</span><span class=\"p\">(</span><span class=\"m\">0xc820316718</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc82025c240</span><span class=\"p\">,</span> <span class=\"m\">0x20000000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">715</span> <span class=\"o\">+</span><span class=\"m\">0xa5</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Framer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ReadFrame</span><span class=\"p\">(</span><span class=\"m\">0xc8203166e0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">906</span> <span class=\"o\">+</span><span class=\"m\">0xe9</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2clientConnReadLoop</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"m\">0xc8200ed0e0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5583</span> <span class=\"o\">+</span><span class=\"m\">0xa6</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2ClientConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc820198420</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5544</span> <span class=\"o\">+</span><span class=\"m\">0x162</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">NewClientConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">4975</span> <span class=\"o\">+</span><span class=\"m\">0xd94</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14583</span> <span class=\"p\">[</span><span class=\"k\">select</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">persistConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">writeLoop</span><span class=\"p\">(</span><span class=\"m\">0xc820168dd0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1277</span> <span class=\"o\">+</span><span class=\"m\">0x472</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dialConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">858</span> <span class=\"o\">+</span><span class=\"m\">0x10cb</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14476</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec7a908</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc820396000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc82053fe20</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc82053fe20</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc82053fdc0</span><span class=\"p\">,</span> <span class=\"m\">0xc820396000</span><span class=\"p\">,</span> <span class=\"m\">0x800</span><span class=\"p\">,</span> <span class=\"m\">0x800</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec71028</span><span class=\"p\">,</span> <span class=\"m\">0xc8200600b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820082320</span><span class=\"p\">,</span> <span class=\"m\">0xc820396000</span><span class=\"p\">,</span> <span class=\"m\">0x800</span><span class=\"p\">,</span> <span class=\"m\">0x800</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readFromUntil</span><span class=\"p\">(</span><span class=\"m\">0xc8202abb90</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec81220</span><span class=\"p\">,</span> <span class=\"m\">0xc820082320</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">460</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readRecord</span><span class=\"p\">(</span><span class=\"m\">0xc820a88000</span><span class=\"p\">,</span> <span class=\"m\">0xd0e317</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">562</span> <span class=\"o\">+</span><span class=\"m\">0x2d1</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820a88000</span><span class=\"p\">,</span> <span class=\"m\">0xc820506000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">939</span> <span class=\"o\">+</span><span class=\"m\">0x167</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc8206aa1e0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8206aa1e0</span><span class=\"p\">,</span> <span class=\"m\">0xc8201234d8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x521934</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">207</span> <span class=\"o\">+</span><span class=\"m\">0x260</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadAtLeast</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8206aa1e0</span><span class=\"p\">,</span> <span class=\"m\">0xc8201234d8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">297</span> <span class=\"o\">+</span><span class=\"m\">0xe6</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadFull</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8206aa1e0</span><span class=\"p\">,</span> <span class=\"m\">0xc8201234d8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x411787</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">315</span> <span class=\"o\">+</span><span class=\"m\">0x62</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">http2readFrameHeader</span><span class=\"p\">(</span><span class=\"m\">0xc8201234d8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8206aa1e0</span><span class=\"p\">,</span> <span class=\"m\">0x20000000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">715</span> <span class=\"o\">+</span><span class=\"m\">0xa5</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Framer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ReadFrame</span><span class=\"p\">(</span><span class=\"m\">0xc8201234a0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">906</span> <span class=\"o\">+</span><span class=\"m\">0xe9</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2clientConnReadLoop</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"m\">0xc8207ca280</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5583</span> <span class=\"o\">+</span><span class=\"m\">0xa6</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2ClientConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc8207a2b00</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5544</span> <span class=\"o\">+</span><span class=\"m\">0x162</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">NewClientConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">4975</span> <span class=\"o\">+</span><span class=\"m\">0xd94</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14424</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f70200d1d78</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc820408000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc8203e9f00</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc8203e9f00</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8203e9ea0</span><span class=\"p\">,</span> <span class=\"m\">0xc820408000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec71028</span><span class=\"p\">,</span> <span class=\"m\">0xc8200600b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8201c2048</span><span class=\"p\">,</span> <span class=\"m\">0xc820408000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readFromUntil</span><span class=\"p\">(</span><span class=\"m\">0xc82038b2f0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec81220</span><span class=\"p\">,</span> <span class=\"m\">0xc8201c2048</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">460</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readRecord</span><span class=\"p\">(</span><span class=\"m\">0xc8200ef800</span><span class=\"p\">,</span> <span class=\"m\">0xd0e317</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">562</span> <span class=\"o\">+</span><span class=\"m\">0x2d1</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8200ef800</span><span class=\"p\">,</span> <span class=\"m\">0xc8204b9000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">939</span> <span class=\"o\">+</span><span class=\"m\">0x167</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc82005eae0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc82005eae0</span><span class=\"p\">,</span> <span class=\"m\">0xc8200d29d8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x521934</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">207</span> <span class=\"o\">+</span><span class=\"m\">0x260</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadAtLeast</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc82005eae0</span><span class=\"p\">,</span> <span class=\"m\">0xc8200d29d8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">297</span> <span class=\"o\">+</span><span class=\"m\">0xe6</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadFull</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc82005eae0</span><span class=\"p\">,</span> <span class=\"m\">0xc8200d29d8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x411787</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">315</span> <span class=\"o\">+</span><span class=\"m\">0x62</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">http2readFrameHeader</span><span class=\"p\">(</span><span class=\"m\">0xc8200d29d8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc82005eae0</span><span class=\"p\">,</span> <span class=\"m\">0x20000000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">715</span> <span class=\"o\">+</span><span class=\"m\">0xa5</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Framer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ReadFrame</span><span class=\"p\">(</span><span class=\"m\">0xc8200d29a0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">906</span> <span class=\"o\">+</span><span class=\"m\">0xe9</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2clientConnReadLoop</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"m\">0xc820128ff0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5583</span> <span class=\"o\">+</span><span class=\"m\">0xa6</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2ClientConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc82051a840</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5544</span> <span class=\"o\">+</span><span class=\"m\">0x162</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">NewClientConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">4975</span> <span class=\"o\">+</span><span class=\"m\">0xd94</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14368</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f70200d1a78</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc8200e9800</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc8203de3e0</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc8203de3e0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8203de380</span><span class=\"p\">,</span> <span class=\"m\">0xc8200e9800</span><span class=\"p\">,</span> <span class=\"m\">0x800</span><span class=\"p\">,</span> <span class=\"m\">0x800</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec71028</span><span class=\"p\">,</span> <span class=\"m\">0xc8200600b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8200820f0</span><span class=\"p\">,</span> <span class=\"m\">0xc8200e9800</span><span class=\"p\">,</span> <span class=\"m\">0x800</span><span class=\"p\">,</span> <span class=\"m\">0x800</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readFromUntil</span><span class=\"p\">(</span><span class=\"m\">0xc820780120</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec81220</span><span class=\"p\">,</span> <span class=\"m\">0xc8200820f0</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">460</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readRecord</span><span class=\"p\">(</span><span class=\"m\">0xc820404600</span><span class=\"p\">,</span> <span class=\"m\">0xd0e317</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">562</span> <span class=\"o\">+</span><span class=\"m\">0x2d1</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820404600</span><span class=\"p\">,</span> <span class=\"m\">0xc820228000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">939</span> <span class=\"o\">+</span><span class=\"m\">0x167</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc8201922a0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8201922a0</span><span class=\"p\">,</span> <span class=\"m\">0xc8200940e8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x521934</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">207</span> <span class=\"o\">+</span><span class=\"m\">0x260</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadAtLeast</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8201922a0</span><span class=\"p\">,</span> <span class=\"m\">0xc8200940e8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">297</span> <span class=\"o\">+</span><span class=\"m\">0xe6</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadFull</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8201922a0</span><span class=\"p\">,</span> <span class=\"m\">0xc8200940e8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x411787</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">315</span> <span class=\"o\">+</span><span class=\"m\">0x62</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">http2readFrameHeader</span><span class=\"p\">(</span><span class=\"m\">0xc8200940e8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8201922a0</span><span class=\"p\">,</span> <span class=\"m\">0x20000000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">715</span> <span class=\"o\">+</span><span class=\"m\">0xa5</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Framer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ReadFrame</span><span class=\"p\">(</span><span class=\"m\">0xc8200940b0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">906</span> <span class=\"o\">+</span><span class=\"m\">0xe9</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2clientConnReadLoop</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"m\">0xc8200ed8b0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5583</span> <span class=\"o\">+</span><span class=\"m\">0xa6</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2ClientConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc82039a2c0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5544</span> <span class=\"o\">+</span><span class=\"m\">0x162</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">NewClientConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">4975</span> <span class=\"o\">+</span><span class=\"m\">0xd94</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14450</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec7ae48</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc82026d800</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc8203ded80</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc8203ded80</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8203ded20</span><span class=\"p\">,</span> <span class=\"m\">0xc82026d800</span><span class=\"p\">,</span> <span class=\"m\">0x400</span><span class=\"p\">,</span> <span class=\"m\">0x400</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec71028</span><span class=\"p\">,</span> <span class=\"m\">0xc8200600b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820082330</span><span class=\"p\">,</span> <span class=\"m\">0xc82026d800</span><span class=\"p\">,</span> <span class=\"m\">0x400</span><span class=\"p\">,</span> <span class=\"m\">0x400</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readFromUntil</span><span class=\"p\">(</span><span class=\"m\">0xc8201664e0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec81220</span><span class=\"p\">,</span> <span class=\"m\">0xc820082330</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">460</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readRecord</span><span class=\"p\">(</span><span class=\"m\">0xc8209d2000</span><span class=\"p\">,</span> <span class=\"m\">0xd0e317</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">562</span> <span class=\"o\">+</span><span class=\"m\">0x2d1</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8209d2000</span><span class=\"p\">,</span> <span class=\"m\">0xc8206ad000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">939</span> <span class=\"o\">+</span><span class=\"m\">0x167</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc8206aa660</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8206aa660</span><span class=\"p\">,</span> <span class=\"m\">0xc8200d3b08</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x521934</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">207</span> <span class=\"o\">+</span><span class=\"m\">0x260</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadAtLeast</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8206aa660</span><span class=\"p\">,</span> <span class=\"m\">0xc8200d3b08</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">297</span> <span class=\"o\">+</span><span class=\"m\">0xe6</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadFull</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8206aa660</span><span class=\"p\">,</span> <span class=\"m\">0xc8200d3b08</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x411787</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">315</span> <span class=\"o\">+</span><span class=\"m\">0x62</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">http2readFrameHeader</span><span class=\"p\">(</span><span class=\"m\">0xc8200d3b08</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8206aa660</span><span class=\"p\">,</span> <span class=\"m\">0x20000000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">715</span> <span class=\"o\">+</span><span class=\"m\">0xa5</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Framer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ReadFrame</span><span class=\"p\">(</span><span class=\"m\">0xc8200d3ad0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">906</span> <span class=\"o\">+</span><span class=\"m\">0xe9</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2clientConnReadLoop</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"m\">0xc82032c1e0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5583</span> <span class=\"o\">+</span><span class=\"m\">0xa6</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2ClientConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc82007f4a0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5544</span> <span class=\"o\">+</span><span class=\"m\">0x162</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">NewClientConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">4975</span> <span class=\"o\">+</span><span class=\"m\">0xd94</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14598</span> <span class=\"p\">[</span><span class=\"k\">select</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">persistConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">writeLoop</span><span class=\"p\">(</span><span class=\"m\">0xc820520b60</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1277</span> <span class=\"o\">+</span><span class=\"m\">0x472</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dialConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">858</span> <span class=\"o\">+</span><span class=\"m\">0x10cb</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14597</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f70200d1238</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc8205c3000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc8203e8fb0</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc8203e8fb0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8203e8f50</span><span class=\"p\">,</span> <span class=\"m\">0xc8205c3000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec71028</span><span class=\"p\">,</span> <span class=\"m\">0xc8200600b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8201c2428</span><span class=\"p\">,</span> <span class=\"m\">0xc8205c3000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">noteEOFReader</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec81220</span><span class=\"p\">,</span> <span class=\"m\">0xc8201c2428</span><span class=\"p\">,</span> <span class=\"m\">0xc820520bc8</span><span class=\"p\">,</span> <span class=\"m\">0xc8205c3000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x405cf3</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1687</span> <span class=\"o\">+</span><span class=\"m\">0x67</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">noteEOFReader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc82035c3e0</span><span class=\"p\">,</span> <span class=\"m\">0xc8205c3000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0xc820035d1d</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"n\">autogenerated</span><span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span><span class=\"o\">:</span><span class=\"m\">284</span> <span class=\"o\">+</span><span class=\"m\">0xd0</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc8207d97a0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Peek</span><span class=\"p\">(</span><span class=\"m\">0xc8207d97a0</span><span class=\"p\">,</span> <span class=\"m\">0x1</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">132</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">persistConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc820520b60</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1073</span> <span class=\"o\">+</span><span class=\"m\">0x177</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dialConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">857</span> <span class=\"o\">+</span><span class=\"m\">0x10a6</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14385</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec7ab48</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc8202a2000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc820058a00</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc820058a00</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8200589a0</span><span class=\"p\">,</span> <span class=\"m\">0xc8202a2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec71028</span><span class=\"p\">,</span> <span class=\"m\">0xc8200600b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820082040</span><span class=\"p\">,</span> <span class=\"m\">0xc8202a2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readFromUntil</span><span class=\"p\">(</span><span class=\"m\">0xc8207808d0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec81220</span><span class=\"p\">,</span> <span class=\"m\">0xc820082040</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">460</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readRecord</span><span class=\"p\">(</span><span class=\"m\">0xc8202bec00</span><span class=\"p\">,</span> <span class=\"m\">0xd0e317</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">562</span> <span class=\"o\">+</span><span class=\"m\">0x2d1</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8202bec00</span><span class=\"p\">,</span> <span class=\"m\">0xc820229000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">939</span> <span class=\"o\">+</span><span class=\"m\">0x167</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc820192720</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820192720</span><span class=\"p\">,</span> <span class=\"m\">0xc820095d18</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x521934</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">207</span> <span class=\"o\">+</span><span class=\"m\">0x260</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadAtLeast</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc820192720</span><span class=\"p\">,</span> <span class=\"m\">0xc820095d18</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">297</span> <span class=\"o\">+</span><span class=\"m\">0xe6</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadFull</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc820192720</span><span class=\"p\">,</span> <span class=\"m\">0xc820095d18</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x411787</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">315</span> <span class=\"o\">+</span><span class=\"m\">0x62</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">http2readFrameHeader</span><span class=\"p\">(</span><span class=\"m\">0xc820095d18</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc820192720</span><span class=\"p\">,</span> <span class=\"m\">0x20000000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">715</span> <span class=\"o\">+</span><span class=\"m\">0xa5</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Framer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ReadFrame</span><span class=\"p\">(</span><span class=\"m\">0xc820095ce0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">906</span> <span class=\"o\">+</span><span class=\"m\">0xe9</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2clientConnReadLoop</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"m\">0xc820128f50</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5583</span> <span class=\"o\">+</span><span class=\"m\">0xa6</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2ClientConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc8203f4c60</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5544</span> <span class=\"o\">+</span><span class=\"m\">0x162</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">NewClientConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">4975</span> <span class=\"o\">+</span><span class=\"m\">0xd94</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14614</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec7a488</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc8204c6000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc8203e9db0</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc8203e9db0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8203e9d50</span><span class=\"p\">,</span> <span class=\"m\">0xc8204c6000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec71028</span><span class=\"p\">,</span> <span class=\"m\">0xc8200600b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8201c21b0</span><span class=\"p\">,</span> <span class=\"m\">0xc8204c6000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readFromUntil</span><span class=\"p\">(</span><span class=\"m\">0xc8205012c0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec81220</span><span class=\"p\">,</span> <span class=\"m\">0xc8201c21b0</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">460</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readRecord</span><span class=\"p\">(</span><span class=\"m\">0xc8209d2900</span><span class=\"p\">,</span> <span class=\"m\">0xd0e317</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">562</span> <span class=\"o\">+</span><span class=\"m\">0x2d1</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8209d2900</span><span class=\"p\">,</span> <span class=\"m\">0xc820502000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">939</span> <span class=\"o\">+</span><span class=\"m\">0x167</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc8206abf80</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8206abf80</span><span class=\"p\">,</span> <span class=\"m\">0xc820a0f6e8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x521c32</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">207</span> <span class=\"o\">+</span><span class=\"m\">0x260</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadAtLeast</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8206abf80</span><span class=\"p\">,</span> <span class=\"m\">0xc820a0f6e8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">297</span> <span class=\"o\">+</span><span class=\"m\">0xe6</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadFull</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8206abf80</span><span class=\"p\">,</span> <span class=\"m\">0xc820a0f6e8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0xc82037e780</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">315</span> <span class=\"o\">+</span><span class=\"m\">0x62</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">http2readFrameHeader</span><span class=\"p\">(</span><span class=\"m\">0xc820a0f6e8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8206abf80</span><span class=\"p\">,</span> <span class=\"m\">0x20000000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">715</span> <span class=\"o\">+</span><span class=\"m\">0xa5</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Framer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ReadFrame</span><span class=\"p\">(</span><span class=\"m\">0xc820a0f6b0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">906</span> <span class=\"o\">+</span><span class=\"m\">0xe9</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2clientConnReadLoop</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"m\">0xc8200ec460</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5583</span> <span class=\"o\">+</span><span class=\"m\">0xa6</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2ClientConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc82039a580</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5544</span> <span class=\"o\">+</span><span class=\"m\">0x162</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">NewClientConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">4975</span> <span class=\"o\">+</span><span class=\"m\">0xd94</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14582</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f70200d19b8</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc8205ad000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc82053e8b0</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc82053e8b0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc82053e850</span><span class=\"p\">,</span> <span class=\"m\">0xc8205ad000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec71028</span><span class=\"p\">,</span> <span class=\"m\">0xc8200600b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8201c2418</span><span class=\"p\">,</span> <span class=\"m\">0xc8205ad000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">noteEOFReader</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec81220</span><span class=\"p\">,</span> <span class=\"m\">0xc8201c2418</span><span class=\"p\">,</span> <span class=\"m\">0xc820168e38</span><span class=\"p\">,</span> <span class=\"m\">0xc8205ad000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x405cf3</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1687</span> <span class=\"o\">+</span><span class=\"m\">0x67</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">noteEOFReader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8205a1260</span><span class=\"p\">,</span> <span class=\"m\">0xc8205ad000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0xc820032d1d</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"n\">autogenerated</span><span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span><span class=\"o\">:</span><span class=\"m\">284</span> <span class=\"o\">+</span><span class=\"m\">0xd0</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc82025d7a0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Peek</span><span class=\"p\">(</span><span class=\"m\">0xc82025d7a0</span><span class=\"p\">,</span> <span class=\"m\">0x1</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">132</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">persistConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc820168dd0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1073</span> <span class=\"o\">+</span><span class=\"m\">0x177</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dialConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">857</span> <span class=\"o\">+</span><span class=\"m\">0x10a6</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14384</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f70200d1778</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc82051e000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc820058990</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc820058990</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820058930</span><span class=\"p\">,</span> <span class=\"m\">0xc82051e000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec71028</span><span class=\"p\">,</span> <span class=\"m\">0xc8200600b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820082050</span><span class=\"p\">,</span> <span class=\"m\">0xc82051e000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readFromUntil</span><span class=\"p\">(</span><span class=\"m\">0xc8202b8120</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec81220</span><span class=\"p\">,</span> <span class=\"m\">0xc820082050</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">460</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readRecord</span><span class=\"p\">(</span><span class=\"m\">0xc8202bef00</span><span class=\"p\">,</span> <span class=\"m\">0xd0e317</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">562</span> <span class=\"o\">+</span><span class=\"m\">0x2d1</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8202bef00</span><span class=\"p\">,</span> <span class=\"m\">0xc8205c2000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">939</span> <span class=\"o\">+</span><span class=\"m\">0x167</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc820192120</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820192120</span><span class=\"p\">,</span> <span class=\"m\">0xc820095a58</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x521934</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">207</span> <span class=\"o\">+</span><span class=\"m\">0x260</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadAtLeast</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc820192120</span><span class=\"p\">,</span> <span class=\"m\">0xc820095a58</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">297</span> <span class=\"o\">+</span><span class=\"m\">0xe6</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadFull</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc820192120</span><span class=\"p\">,</span> <span class=\"m\">0xc820095a58</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x411787</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">315</span> <span class=\"o\">+</span><span class=\"m\">0x62</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">http2readFrameHeader</span><span class=\"p\">(</span><span class=\"m\">0xc820095a58</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc820192120</span><span class=\"p\">,</span> <span class=\"m\">0x20000000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">715</span> <span class=\"o\">+</span><span class=\"m\">0xa5</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Framer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ReadFrame</span><span class=\"p\">(</span><span class=\"m\">0xc820095a20</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">906</span> <span class=\"o\">+</span><span class=\"m\">0xe9</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2clientConnReadLoop</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"m\">0xc820128f00</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5583</span> <span class=\"o\">+</span><span class=\"m\">0xa6</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2ClientConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc8203f4b00</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5544</span> <span class=\"o\">+</span><span class=\"m\">0x162</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">NewClientConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">4975</span> <span class=\"o\">+</span><span class=\"m\">0xd94</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14408</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f70200d16b8</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc8202ee000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc820058300</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc820058300</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8200582a0</span><span class=\"p\">,</span> <span class=\"m\">0xc8202ee000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec71028</span><span class=\"p\">,</span> <span class=\"m\">0xc8200600b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8201c2170</span><span class=\"p\">,</span> <span class=\"m\">0xc8202ee000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readFromUntil</span><span class=\"p\">(</span><span class=\"m\">0xc82036be60</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec81220</span><span class=\"p\">,</span> <span class=\"m\">0xc8201c2170</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">460</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readRecord</span><span class=\"p\">(</span><span class=\"m\">0xc8202bf500</span><span class=\"p\">,</span> <span class=\"m\">0xd0e317</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">562</span> <span class=\"o\">+</span><span class=\"m\">0x2d1</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8202bf500</span><span class=\"p\">,</span> <span class=\"m\">0xc82021f000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">939</span> <span class=\"o\">+</span><span class=\"m\">0x167</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc8207b61e0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8207b61e0</span><span class=\"p\">,</span> <span class=\"m\">0xc820094248</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x521934</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">207</span> <span class=\"o\">+</span><span class=\"m\">0x260</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadAtLeast</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8207b61e0</span><span class=\"p\">,</span> <span class=\"m\">0xc820094248</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">297</span> <span class=\"o\">+</span><span class=\"m\">0xe6</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadFull</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8207b61e0</span><span class=\"p\">,</span> <span class=\"m\">0xc820094248</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x411787</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">315</span> <span class=\"o\">+</span><span class=\"m\">0x62</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">http2readFrameHeader</span><span class=\"p\">(</span><span class=\"m\">0xc820094248</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8207b61e0</span><span class=\"p\">,</span> <span class=\"m\">0x20000000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">715</span> <span class=\"o\">+</span><span class=\"m\">0xa5</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Framer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ReadFrame</span><span class=\"p\">(</span><span class=\"m\">0xc820094210</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">906</span> <span class=\"o\">+</span><span class=\"m\">0xe9</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2clientConnReadLoop</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"m\">0xc8207caaf0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5583</span> <span class=\"o\">+</span><span class=\"m\">0xa6</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2ClientConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc8203f4000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5544</span> <span class=\"o\">+</span><span class=\"m\">0x162</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">NewClientConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">4975</span> <span class=\"o\">+</span><span class=\"m\">0xd94</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14607</span> <span class=\"p\">[</span><span class=\"k\">select</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">persistConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">writeLoop</span><span class=\"p\">(</span><span class=\"m\">0xc8205212b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1277</span> <span class=\"o\">+</span><span class=\"m\">0x472</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dialConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">858</span> <span class=\"o\">+</span><span class=\"m\">0x10cb</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14549</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec7b148</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc820946000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc820059480</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc820059480</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820059420</span><span class=\"p\">,</span> <span class=\"m\">0xc820946000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec71028</span><span class=\"p\">,</span> <span class=\"m\">0xc8200600b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820082168</span><span class=\"p\">,</span> <span class=\"m\">0xc820946000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readFromUntil</span><span class=\"p\">(</span><span class=\"m\">0xc8202b85a0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec81220</span><span class=\"p\">,</span> <span class=\"m\">0xc820082168</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">460</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readRecord</span><span class=\"p\">(</span><span class=\"m\">0xc8200ee300</span><span class=\"p\">,</span> <span class=\"m\">0xd0e317</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">562</span> <span class=\"o\">+</span><span class=\"m\">0x2d1</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8200ee300</span><span class=\"p\">,</span> <span class=\"m\">0xc82031e000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">939</span> <span class=\"o\">+</span><span class=\"m\">0x167</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc820192600</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820192600</span><span class=\"p\">,</span> <span class=\"m\">0xc820a0e928</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x521934</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">207</span> <span class=\"o\">+</span><span class=\"m\">0x260</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadAtLeast</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc820192600</span><span class=\"p\">,</span> <span class=\"m\">0xc820a0e928</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">297</span> <span class=\"o\">+</span><span class=\"m\">0xe6</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadFull</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc820192600</span><span class=\"p\">,</span> <span class=\"m\">0xc820a0e928</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x411787</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">315</span> <span class=\"o\">+</span><span class=\"m\">0x62</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">http2readFrameHeader</span><span class=\"p\">(</span><span class=\"m\">0xc820a0e928</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc820192600</span><span class=\"p\">,</span> <span class=\"m\">0x20000000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">715</span> <span class=\"o\">+</span><span class=\"m\">0xa5</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Framer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ReadFrame</span><span class=\"p\">(</span><span class=\"m\">0xc820a0e8f0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">906</span> <span class=\"o\">+</span><span class=\"m\">0xe9</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2clientConnReadLoop</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"m\">0xc820128500</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5583</span> <span class=\"o\">+</span><span class=\"m\">0xa6</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2ClientConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc82039be40</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5544</span> <span class=\"o\">+</span><span class=\"m\">0x162</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">NewClientConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">4975</span> <span class=\"o\">+</span><span class=\"m\">0xd94</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14581</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec7ad88</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc820778c00</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc8201abaa0</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc8201abaa0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8201aba40</span><span class=\"p\">,</span> <span class=\"m\">0xc820778c00</span><span class=\"p\">,</span> <span class=\"m\">0x400</span><span class=\"p\">,</span> <span class=\"m\">0x400</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec71028</span><span class=\"p\">,</span> <span class=\"m\">0xc8200600b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8200822c0</span><span class=\"p\">,</span> <span class=\"m\">0xc820778c00</span><span class=\"p\">,</span> <span class=\"m\">0x400</span><span class=\"p\">,</span> <span class=\"m\">0x400</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readFromUntil</span><span class=\"p\">(</span><span class=\"m\">0xc820413470</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec81220</span><span class=\"p\">,</span> <span class=\"m\">0xc8200822c0</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">460</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readRecord</span><span class=\"p\">(</span><span class=\"m\">0xc8200ee900</span><span class=\"p\">,</span> <span class=\"m\">0xd0e317</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">562</span> <span class=\"o\">+</span><span class=\"m\">0x2d1</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8200ee900</span><span class=\"p\">,</span> <span class=\"m\">0xc8205ac000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">939</span> <span class=\"o\">+</span><span class=\"m\">0x167</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc82025d500</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc82025d500</span><span class=\"p\">,</span> <span class=\"m\">0xc8203090b8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x521934</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">207</span> <span class=\"o\">+</span><span class=\"m\">0x260</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadAtLeast</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc82025d500</span><span class=\"p\">,</span> <span class=\"m\">0xc8203090b8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">297</span> <span class=\"o\">+</span><span class=\"m\">0xe6</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadFull</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc82025d500</span><span class=\"p\">,</span> <span class=\"m\">0xc8203090b8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x411787</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">315</span> <span class=\"o\">+</span><span class=\"m\">0x62</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">http2readFrameHeader</span><span class=\"p\">(</span><span class=\"m\">0xc8203090b8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc82025d500</span><span class=\"p\">,</span> <span class=\"m\">0x20000000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">715</span> <span class=\"o\">+</span><span class=\"m\">0xa5</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Framer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ReadFrame</span><span class=\"p\">(</span><span class=\"m\">0xc820309080</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">906</span> <span class=\"o\">+</span><span class=\"m\">0xe9</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2clientConnReadLoop</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"m\">0xc8203facd0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5583</span> <span class=\"o\">+</span><span class=\"m\">0xa6</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2ClientConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc82058eb00</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5544</span> <span class=\"o\">+</span><span class=\"m\">0x162</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">NewClientConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">4975</span> <span class=\"o\">+</span><span class=\"m\">0xd94</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14484</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f70200d1cb8</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc8204cc000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc8203e91e0</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc8203e91e0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8203e9180</span><span class=\"p\">,</span> <span class=\"m\">0xc8204cc000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec71028</span><span class=\"p\">,</span> <span class=\"m\">0xc8200600b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820082030</span><span class=\"p\">,</span> <span class=\"m\">0xc8204cc000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readFromUntil</span><span class=\"p\">(</span><span class=\"m\">0xc8203e0ea0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec81220</span><span class=\"p\">,</span> <span class=\"m\">0xc820082030</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">460</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readRecord</span><span class=\"p\">(</span><span class=\"m\">0xc8209d2300</span><span class=\"p\">,</span> <span class=\"m\">0xd0e317</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">562</span> <span class=\"o\">+</span><span class=\"m\">0x2d1</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8209d2300</span><span class=\"p\">,</span> <span class=\"m\">0xc82028f000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">939</span> <span class=\"o\">+</span><span class=\"m\">0x167</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc8206aad20</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8206aad20</span><span class=\"p\">,</span> <span class=\"m\">0xc820094508</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x521934</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">207</span> <span class=\"o\">+</span><span class=\"m\">0x260</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadAtLeast</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8206aad20</span><span class=\"p\">,</span> <span class=\"m\">0xc820094508</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">297</span> <span class=\"o\">+</span><span class=\"m\">0xe6</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadFull</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8206aad20</span><span class=\"p\">,</span> <span class=\"m\">0xc820094508</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x411787</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">315</span> <span class=\"o\">+</span><span class=\"m\">0x62</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">http2readFrameHeader</span><span class=\"p\">(</span><span class=\"m\">0xc820094508</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8206aad20</span><span class=\"p\">,</span> <span class=\"m\">0x20000000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">715</span> <span class=\"o\">+</span><span class=\"m\">0xa5</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Framer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ReadFrame</span><span class=\"p\">(</span><span class=\"m\">0xc8200944d0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">906</span> <span class=\"o\">+</span><span class=\"m\">0xe9</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2clientConnReadLoop</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"m\">0xc82027a8c0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5583</span> <span class=\"o\">+</span><span class=\"m\">0xa6</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2ClientConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc8207a3ce0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5544</span> <span class=\"o\">+</span><span class=\"m\">0x162</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">NewClientConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">4975</span> <span class=\"o\">+</span><span class=\"m\">0xd94</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14606</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec7af08</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc8205b0000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc8203e9800</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc8203e9800</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8203e97a0</span><span class=\"p\">,</span> <span class=\"m\">0xc8205b0000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec71028</span><span class=\"p\">,</span> <span class=\"m\">0xc8200600b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8201c2160</span><span class=\"p\">,</span> <span class=\"m\">0xc8205b0000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">noteEOFReader</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec81220</span><span class=\"p\">,</span> <span class=\"m\">0xc8201c2160</span><span class=\"p\">,</span> <span class=\"m\">0xc820521318</span><span class=\"p\">,</span> <span class=\"m\">0xc8205b0000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x405cf3</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1687</span> <span class=\"o\">+</span><span class=\"m\">0x67</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">noteEOFReader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc82035d3a0</span><span class=\"p\">,</span> <span class=\"m\">0xc8205b0000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0xc820031d1d</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"n\">autogenerated</span><span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span><span class=\"o\">:</span><span class=\"m\">284</span> <span class=\"o\">+</span><span class=\"m\">0xd0</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc8206aa7e0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Peek</span><span class=\"p\">(</span><span class=\"m\">0xc8206aa7e0</span><span class=\"p\">,</span> <span class=\"m\">0x1</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">132</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">persistConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc8205212b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1073</span> <span class=\"o\">+</span><span class=\"m\">0x177</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dialConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">857</span> <span class=\"o\">+</span><span class=\"m\">0x10a6</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14391</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f70200d1838</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc82012f000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc8203dee60</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc8203dee60</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8203dee00</span><span class=\"p\">,</span> <span class=\"m\">0xc82012f000</span><span class=\"p\">,</span> <span class=\"m\">0x800</span><span class=\"p\">,</span> <span class=\"m\">0x800</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec71028</span><span class=\"p\">,</span> <span class=\"m\">0xc8200600b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8201c20c8</span><span class=\"p\">,</span> <span class=\"m\">0xc82012f000</span><span class=\"p\">,</span> <span class=\"m\">0x800</span><span class=\"p\">,</span> <span class=\"m\">0x800</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readFromUntil</span><span class=\"p\">(</span><span class=\"m\">0xc8203c5590</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec81220</span><span class=\"p\">,</span> <span class=\"m\">0xc8201c20c8</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">460</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readRecord</span><span class=\"p\">(</span><span class=\"m\">0xc8202be900</span><span class=\"p\">,</span> <span class=\"m\">0xd0e317</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">562</span> <span class=\"o\">+</span><span class=\"m\">0x2d1</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8202be900</span><span class=\"p\">,</span> <span class=\"m\">0xc8202b1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">939</span> <span class=\"o\">+</span><span class=\"m\">0x167</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc820193380</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820193380</span><span class=\"p\">,</span> <span class=\"m\">0xc820094928</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x521934</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">207</span> <span class=\"o\">+</span><span class=\"m\">0x260</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadAtLeast</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc820193380</span><span class=\"p\">,</span> <span class=\"m\">0xc820094928</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">297</span> <span class=\"o\">+</span><span class=\"m\">0xe6</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadFull</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc820193380</span><span class=\"p\">,</span> <span class=\"m\">0xc820094928</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x411787</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">315</span> <span class=\"o\">+</span><span class=\"m\">0x62</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">http2readFrameHeader</span><span class=\"p\">(</span><span class=\"m\">0xc820094928</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc820193380</span><span class=\"p\">,</span> <span class=\"m\">0x20000000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">715</span> <span class=\"o\">+</span><span class=\"m\">0xa5</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Framer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ReadFrame</span><span class=\"p\">(</span><span class=\"m\">0xc8200948f0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">906</span> <span class=\"o\">+</span><span class=\"m\">0xe9</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2clientConnReadLoop</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"m\">0xc820129040</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5583</span> <span class=\"o\">+</span><span class=\"m\">0xa6</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2ClientConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc8207a2f20</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5544</span> <span class=\"o\">+</span><span class=\"m\">0x162</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">NewClientConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">4975</span> <span class=\"o\">+</span><span class=\"m\">0xd94</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">14454</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec7a848</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc8209e8000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc82053f8e0</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc82053f8e0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc82053f880</span><span class=\"p\">,</span> <span class=\"m\">0xc8209e8000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec71028</span><span class=\"p\">,</span> <span class=\"m\">0xc8200600b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820082258</span><span class=\"p\">,</span> <span class=\"m\">0xc8209e8000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readFromUntil</span><span class=\"p\">(</span><span class=\"m\">0xc820412120</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec81220</span><span class=\"p\">,</span> <span class=\"m\">0xc820082258</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">460</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readRecord</span><span class=\"p\">(</span><span class=\"m\">0xc8209d2f00</span><span class=\"p\">,</span> <span class=\"m\">0xd0e317</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">562</span> <span class=\"o\">+</span><span class=\"m\">0x2d1</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8209d2f00</span><span class=\"p\">,</span> <span class=\"m\">0xc820a11000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">939</span> <span class=\"o\">+</span><span class=\"m\">0x167</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc8206ab3e0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8206ab3e0</span><span class=\"p\">,</span> <span class=\"m\">0xc820a0e2f8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x521934</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">207</span> <span class=\"o\">+</span><span class=\"m\">0x260</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadAtLeast</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8206ab3e0</span><span class=\"p\">,</span> <span class=\"m\">0xc820a0e2f8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">297</span> <span class=\"o\">+</span><span class=\"m\">0xe6</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadFull</span><span class=\"p\">(</span><span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8206ab3e0</span><span class=\"p\">,</span> <span class=\"m\">0xc820a0e2f8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x411787</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">315</span> <span class=\"o\">+</span><span class=\"m\">0x62</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">http2readFrameHeader</span><span class=\"p\">(</span><span class=\"m\">0xc820a0e2f8</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x7f701ec814b8</span><span class=\"p\">,</span> <span class=\"m\">0xc8206ab3e0</span><span class=\"p\">,</span> <span class=\"m\">0x20000000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">715</span> <span class=\"o\">+</span><span class=\"m\">0xa5</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Framer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ReadFrame</span><span class=\"p\">(</span><span class=\"m\">0xc820a0e2c0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">906</span> <span class=\"o\">+</span><span class=\"m\">0xe9</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2clientConnReadLoop</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"m\">0xc82032c500</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5583</span> <span class=\"o\">+</span><span class=\"m\">0xa6</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2ClientConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc82007fb80</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5544</span> <span class=\"o\">+</span><span class=\"m\">0x162</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">NewClientConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">4975</span> <span class=\"o\">+</span><span class=\"m\">0xd94</span>\n<span class=\"n\">logs</span><span class=\"o\">.</span><span class=\"n\">BeeLogger</span><span class=\"o\">.</span><span class=\"n\">SetLogger</span><span class=\"o\">:</span> <span class=\"n\">open</span> <span class=\"n\">logs</span><span class=\"o\">/</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span>\n<span class=\"n\">logs</span><span class=\"o\">.</span><span class=\"n\">BeeLogger</span><span class=\"o\">.</span><span class=\"n\">SetLogger</span><span class=\"o\">:</span> <span class=\"n\">open</span> <span class=\"n\">logs</span><span class=\"o\">/</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span>\n<span class=\"n\">fatal</span> <span class=\"kt\">error</span><span class=\"o\">:</span> <span class=\"n\">runtime</span><span class=\"o\">:</span> <span class=\"n\">out</span> <span class=\"n\">of</span> <span class=\"n\">memory</span>\n\n<span class=\"n\">runtime</span> <span class=\"n\">stack</span><span class=\"o\">:</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">throw</span><span class=\"p\">(</span><span class=\"m\">0xc48920</span><span class=\"p\">,</span> <span class=\"m\">0x16</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"nb\">panic</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">547</span> <span class=\"o\">+</span><span class=\"m\">0x90</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">sysMap</span><span class=\"p\">(</span><span class=\"m\">0xc858900000</span><span class=\"p\">,</span> <span class=\"m\">0x96b0000</span><span class=\"p\">,</span> <span class=\"m\">0x434c00</span><span class=\"p\">,</span> <span class=\"m\">0x11801d8</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">mem_linux</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">206</span> <span class=\"o\">+</span><span class=\"m\">0x9b</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">mheap</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">sysAlloc</span><span class=\"p\">(</span><span class=\"m\">0x1165b80</span><span class=\"p\">,</span> <span class=\"m\">0x96b0000</span><span class=\"p\">,</span> <span class=\"m\">0xc820084f00</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">malloc</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">429</span> <span class=\"o\">+</span><span class=\"m\">0x191</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">mheap</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">grow</span><span class=\"p\">(</span><span class=\"m\">0x1165b80</span><span class=\"p\">,</span> <span class=\"m\">0x4b58</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">mheap</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">651</span> <span class=\"o\">+</span><span class=\"m\">0x63</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">mheap</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">allocSpanLocked</span><span class=\"p\">(</span><span class=\"m\">0x1165b80</span><span class=\"p\">,</span> <span class=\"m\">0x4b51</span><span class=\"p\">,</span> <span class=\"m\">0x1160ae0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">mheap</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">553</span> <span class=\"o\">+</span><span class=\"m\">0x4f6</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">mheap</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">alloc_m</span><span class=\"p\">(</span><span class=\"m\">0x1165b80</span><span class=\"p\">,</span> <span class=\"m\">0x4b51</span><span class=\"p\">,</span> <span class=\"m\">0x100000000</span><span class=\"p\">,</span> <span class=\"m\">0x7fd0b0b73f80</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">mheap</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">437</span> <span class=\"o\">+</span><span class=\"m\">0x119</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">mheap</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">alloc</span><span class=\"o\">.</span><span class=\"n\">func1</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">mheap</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">502</span> <span class=\"o\">+</span><span class=\"m\">0x41</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">systemstack</span><span class=\"p\">(</span><span class=\"m\">0x7fd0b012cd88</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">307</span> <span class=\"o\">+</span><span class=\"m\">0xab</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">mheap</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">alloc</span><span class=\"p\">(</span><span class=\"m\">0x1165b80</span><span class=\"p\">,</span> <span class=\"m\">0x4b51</span><span class=\"p\">,</span> <span class=\"m\">0x10100000000</span><span class=\"p\">,</span> <span class=\"m\">0xc820019220</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">mheap</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">503</span> <span class=\"o\">+</span><span class=\"m\">0x63</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">largeAlloc</span><span class=\"p\">(</span><span class=\"m\">0x96a052f</span><span class=\"p\">,</span> <span class=\"m\">0x1</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">malloc</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">766</span> <span class=\"o\">+</span><span class=\"m\">0xb3</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">mallocgc</span><span class=\"o\">.</span><span class=\"n\">func3</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">malloc</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">664</span> <span class=\"o\">+</span><span class=\"m\">0x33</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">systemstack</span><span class=\"p\">(</span><span class=\"m\">0xc820019500</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">291</span> <span class=\"o\">+</span><span class=\"m\">0x79</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">mstart</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">proc</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1051</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">6</span> <span class=\"p\">[</span><span class=\"n\">running</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">systemstack_switch</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">245</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc827e02d70</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc827e02d68</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">mallocgc</span><span class=\"p\">(</span><span class=\"m\">0x96a052f</span><span class=\"p\">,</span> <span class=\"m\">0x9af100</span><span class=\"p\">,</span> <span class=\"m\">0x1</span><span class=\"p\">,</span> <span class=\"m\">0xc827e0305c</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">malloc</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">665</span> <span class=\"o\">+</span><span class=\"m\">0x9eb</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc827e02e48</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc827e02d70</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">newarray</span><span class=\"p\">(</span><span class=\"m\">0x9af100</span><span class=\"p\">,</span> <span class=\"m\">0x96a052f</span><span class=\"p\">,</span> <span class=\"m\">0x27a398</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">malloc</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">798</span> <span class=\"o\">+</span><span class=\"m\">0xc9</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc827e02e88</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc827e02e48</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">makeslice</span><span class=\"p\">(</span><span class=\"m\">0x997fe0</span><span class=\"p\">,</span> <span class=\"m\">0x96a052f</span><span class=\"p\">,</span> <span class=\"m\">0x96a052f</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">slice</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">32</span> <span class=\"o\">+</span><span class=\"m\">0x165</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc827e02ed8</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc827e02e88</span>\n<span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"n\">Replace</span><span class=\"p\">(</span><span class=\"m\">0xc846c08000</span><span class=\"p\">,</span> <span class=\"m\">0xa303727</span><span class=\"p\">,</span> <span class=\"m\">0x106104bf</span><span class=\"p\">,</span> <span class=\"m\">0xc827e03070</span><span class=\"p\">,</span> <span class=\"m\">0x6</span><span class=\"p\">,</span> <span class=\"m\">0x6</span><span class=\"p\">,</span> <span class=\"m\">0xc827e03050</span><span class=\"p\">,</span> <span class=\"m\">0x1</span><span class=\"p\">,</span> <span class=\"m\">0x1</span><span class=\"p\">,</span> <span class=\"m\">0x27a398</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bytes</span><span class=\"o\">/</span><span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">640</span> <span class=\"o\">+</span><span class=\"m\">0x1f2</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc827e02fc8</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc827e02ed8</span>\n<span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">BeegoOutput</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">JSONDisableHTMLEscaping</span><span class=\"p\">(</span><span class=\"m\">0xc8202439c0</span><span class=\"p\">,</span> <span class=\"m\">0x9ad600</span><span class=\"p\">,</span> <span class=\"m\">0xc8204f4000</span><span class=\"p\">,</span> <span class=\"m\">0xc8201c0001</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">context</span><span class=\"o\">/</span><span class=\"n\">output</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">205</span> <span class=\"o\">+</span><span class=\"m\">0x22d</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc827e03110</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc827e02fc8</span>\n<span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Controller</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ServeJSONDisableHTMLEscaping</span><span class=\"p\">(</span><span class=\"m\">0xc8202ea9c0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">controller</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">317</span> <span class=\"o\">+</span><span class=\"m\">0x19c</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc827e031a0</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc827e03110</span>\n<span class=\"n\">Testapi</span><span class=\"o\">/</span><span class=\"n\">controllers</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">VideoPathController</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Post</span><span class=\"p\">(</span><span class=\"m\">0xc8202ea9c0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Testapi</span><span class=\"o\">/</span><span class=\"n\">controllers</span><span class=\"o\">/</span><span class=\"n\">videopathcontroller</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">53</span> <span class=\"o\">+</span><span class=\"m\">0xb67</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc827e03420</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc827e031a0</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">call32</span><span class=\"p\">(</span><span class=\"m\">0xc820015780</span><span class=\"p\">,</span> <span class=\"m\">0xbb1e50</span><span class=\"p\">,</span> <span class=\"m\">0xc820024220</span><span class=\"p\">,</span> <span class=\"m\">0x800000008</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">472</span> <span class=\"o\">+</span><span class=\"m\">0x3e</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc827e03448</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc827e03420</span>\n<span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"m\">0xbb17c0</span><span class=\"p\">,</span> <span class=\"m\">0xc8202ea9c0</span><span class=\"p\">,</span> <span class=\"m\">0x8213</span><span class=\"p\">,</span> <span class=\"m\">0xbbbaf8</span><span class=\"p\">,</span> <span class=\"m\">0x4</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">reflect</span><span class=\"o\">/</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">435</span> <span class=\"o\">+</span><span class=\"m\">0x120d</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc827e03798</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc827e03448</span>\n<span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">Call</span><span class=\"p\">(</span><span class=\"m\">0xbb17c0</span><span class=\"p\">,</span> <span class=\"m\">0xc8202ea9c0</span><span class=\"p\">,</span> <span class=\"m\">0x8213</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">reflect</span><span class=\"o\">/</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">303</span> <span class=\"o\">+</span><span class=\"m\">0xb1</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc827e037f8</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc827e03798</span>\n<span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">ControllerRegister</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ServeHTTP</span><span class=\"p\">(</span><span class=\"m\">0xc820148210</span><span class=\"p\">,</span> <span class=\"m\">0x7fd0b013d628</span><span class=\"p\">,</span> <span class=\"m\">0xc8202ea8f0</span><span class=\"p\">,</span> <span class=\"m\">0xc8202f35e0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">router</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">778</span> <span class=\"o\">+</span><span class=\"m\">0x1f3d</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc827e03b60</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc827e037f8</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">serverHandler</span><span class=\"o\">.</span><span class=\"n\">ServeHTTP</span><span class=\"p\">(</span><span class=\"m\">0xc820088180</span><span class=\"p\">,</span> <span class=\"m\">0x7fd0b013d628</span><span class=\"p\">,</span> <span class=\"m\">0xc8202ea8f0</span><span class=\"p\">,</span> <span class=\"m\">0xc8202f35e0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">2081</span> <span class=\"o\">+</span><span class=\"m\">0x19e</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc827e03bc0</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc827e03b60</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">serve</span><span class=\"p\">(</span><span class=\"m\">0xc8201ab280</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1472</span> <span class=\"o\">+</span><span class=\"m\">0xf2e</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc827e03f88</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc827e03bc0</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">goexit</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">1998</span> <span class=\"o\">+</span><span class=\"m\">0x1</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"m\">0xc827e03f90</span> <span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"m\">0xc827e03f88</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Server</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Serve</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">2137</span> <span class=\"o\">+</span><span class=\"m\">0x44e</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">1</span> <span class=\"p\">[</span><span class=\"k\">chan</span> <span class=\"n\">receive</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">App</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Run</span><span class=\"p\">(</span><span class=\"m\">0xc82005f4e0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">182</span> <span class=\"o\">+</span><span class=\"m\">0xabb</span>\n<span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">Run</span><span class=\"p\">(</span><span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">66</span> <span class=\"o\">+</span><span class=\"m\">0x163</span>\n<span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Testapi</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">17</span> <span class=\"o\">+</span><span class=\"m\">0x14d</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">17</span> <span class=\"p\">[</span><span class=\"n\">syscall</span><span class=\"p\">,</span> <span class=\"n\">locked</span> <span class=\"n\">to</span> <span class=\"n\">thread</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">goexit</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">asm_amd64</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"m\">1998</span> <span class=\"o\">+</span><span class=\"m\">0x1</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">19</span> <span class=\"p\">[</span><span class=\"n\">syscall</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">os</span><span class=\"o\">/</span><span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">signal_recv</span><span class=\"p\">(</span><span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">sigqueue</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">116</span> <span class=\"o\">+</span><span class=\"m\">0x132</span>\n<span class=\"n\">os</span><span class=\"o\">/</span><span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">loop</span><span class=\"p\">()</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">os</span><span class=\"o\">/</span><span class=\"n\">signal</span><span class=\"o\">/</span><span class=\"n\">signal_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">22</span> <span class=\"o\">+</span><span class=\"m\">0x18</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">os</span><span class=\"o\">/</span><span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"m\">.1</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">os</span><span class=\"o\">/</span><span class=\"n\">signal</span><span class=\"o\">/</span><span class=\"n\">signal_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">28</span> <span class=\"o\">+</span><span class=\"m\">0x37</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">20</span> <span class=\"p\">[</span><span class=\"k\">chan</span> <span class=\"n\">receive</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">database</span><span class=\"o\">/</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">DB</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">connectionOpener</span><span class=\"p\">(</span><span class=\"m\">0xc82019a0b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">database</span><span class=\"o\">/</span><span class=\"n\">sql</span><span class=\"o\">/</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">727</span> <span class=\"o\">+</span><span class=\"m\">0x45</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">database</span><span class=\"o\">/</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">Open</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">database</span><span class=\"o\">/</span><span class=\"n\">sql</span><span class=\"o\">/</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">493</span> <span class=\"o\">+</span><span class=\"m\">0x33f</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">24</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7fd0b0134078</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc820289db0</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc820289db0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">accept</span><span class=\"p\">(</span><span class=\"m\">0xc820289d50</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7fd0b013d530</span><span class=\"p\">,</span> <span class=\"m\">0xc820466000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">426</span> <span class=\"o\">+</span><span class=\"m\">0x27c</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">TCPListener</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">AcceptTCP</span><span class=\"p\">(</span><span class=\"m\">0xc8200805f8</span><span class=\"p\">,</span> <span class=\"m\">0x454e60</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">tcpsock_posix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">254</span> <span class=\"o\">+</span><span class=\"m\">0x4d</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">tcpKeepAliveListener</span><span class=\"o\">.</span><span class=\"n\">Accept</span><span class=\"p\">(</span><span class=\"m\">0xc8200805f8</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">2427</span> <span class=\"o\">+</span><span class=\"m\">0x41</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Server</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Serve</span><span class=\"p\">(</span><span class=\"m\">0xc820088180</span><span class=\"p\">,</span> <span class=\"m\">0x7fd0b013d4f8</span><span class=\"p\">,</span> <span class=\"m\">0xc8200805f8</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">2117</span> <span class=\"o\">+</span><span class=\"m\">0x129</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Server</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ListenAndServe</span><span class=\"p\">(</span><span class=\"m\">0xc820088180</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">2098</span> <span class=\"o\">+</span><span class=\"m\">0x136</span>\n<span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">App</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Run</span><span class=\"o\">.</span><span class=\"n\">func4</span><span class=\"p\">(</span><span class=\"m\">0xc82005f4e0</span><span class=\"p\">,</span> <span class=\"m\">0xc82025f018</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0xc820289ce0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">174</span> <span class=\"o\">+</span><span class=\"m\">0x476</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">App</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Run</span>\n    <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">gosource</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">180</span> <span class=\"o\">+</span><span class=\"m\">0xa98</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">33</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7fd0b0133d78</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc820348000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc8202a85a0</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc8202a85a0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8202a8540</span><span class=\"p\">,</span> <span class=\"m\">0xc820348000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7fd0b012e028</span><span class=\"p\">,</span> <span class=\"m\">0xc82005e0b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820080660</span><span class=\"p\">,</span> <span class=\"m\">0xc820348000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readFromUntil</span><span class=\"p\">(</span><span class=\"m\">0xc82028ba70</span><span class=\"p\">,</span> <span class=\"m\">0x7fd0b013d558</span><span class=\"p\">,</span> <span class=\"m\">0xc820080660</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">460</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readRecord</span><span class=\"p\">(</span><span class=\"m\">0xc820344000</span><span class=\"p\">,</span> <span class=\"m\">0xd0e317</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">562</span> <span class=\"o\">+</span><span class=\"m\">0x2d1</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820344000</span><span class=\"p\">,</span> <span class=\"m\">0xc82029b000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">939</span> <span class=\"o\">+</span><span class=\"m\">0x167</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc820436f60</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820436f60</span><span class=\"p\">,</span> <span class=\"m\">0xc8200d3a58</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x521934</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">207</span> <span class=\"o\">+</span><span class=\"m\">0x260</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadAtLeast</span><span class=\"p\">(</span><span class=\"m\">0x7fd0b013d7f0</span><span class=\"p\">,</span> <span class=\"m\">0xc820436f60</span><span class=\"p\">,</span> <span class=\"m\">0xc8200d3a58</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">297</span> <span class=\"o\">+</span><span class=\"m\">0xe6</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadFull</span><span class=\"p\">(</span><span class=\"m\">0x7fd0b013d7f0</span><span class=\"p\">,</span> <span class=\"m\">0xc820436f60</span><span class=\"p\">,</span> <span class=\"m\">0xc8200d3a58</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x411787</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">315</span> <span class=\"o\">+</span><span class=\"m\">0x62</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">http2readFrameHeader</span><span class=\"p\">(</span><span class=\"m\">0xc8200d3a58</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x7fd0b013d7f0</span><span class=\"p\">,</span> <span class=\"m\">0xc820436f60</span><span class=\"p\">,</span> <span class=\"m\">0x20000000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">715</span> <span class=\"o\">+</span><span class=\"m\">0xa5</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Framer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ReadFrame</span><span class=\"p\">(</span><span class=\"m\">0xc8200d3a20</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">906</span> <span class=\"o\">+</span><span class=\"m\">0xe9</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2clientConnReadLoop</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"m\">0xc8203f0000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5583</span> <span class=\"o\">+</span><span class=\"m\">0xa6</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2ClientConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc820244000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5544</span> <span class=\"o\">+</span><span class=\"m\">0x162</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">NewClientConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">4975</span> <span class=\"o\">+</span><span class=\"m\">0xd94</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">39</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7fd0b0133bf8</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc8200fe000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc8202a8300</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc8202a8300</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8202a82a0</span><span class=\"p\">,</span> <span class=\"m\">0xc8200fe000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7fd0b012e028</span><span class=\"p\">,</span> <span class=\"m\">0xc82005e0b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820080038</span><span class=\"p\">,</span> <span class=\"m\">0xc8200fe000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">noteEOFReader</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0x7fd0b013d558</span><span class=\"p\">,</span> <span class=\"m\">0xc820080038</span><span class=\"p\">,</span> <span class=\"m\">0xc8201fb7f8</span><span class=\"p\">,</span> <span class=\"m\">0xc8200fe000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x405cf3</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1687</span> <span class=\"o\">+</span><span class=\"m\">0x67</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">noteEOFReader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8203ee660</span><span class=\"p\">,</span> <span class=\"m\">0xc8200fe000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0xc820036d1d</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"n\">autogenerated</span><span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span><span class=\"o\">:</span><span class=\"m\">284</span> <span class=\"o\">+</span><span class=\"m\">0xd0</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc8204377a0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Peek</span><span class=\"p\">(</span><span class=\"m\">0xc8204377a0</span><span class=\"p\">,</span> <span class=\"m\">0x1</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">132</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">persistConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc8201fb790</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1073</span> <span class=\"o\">+</span><span class=\"m\">0x177</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dialConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">857</span> <span class=\"o\">+</span><span class=\"m\">0x10a6</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">40</span> <span class=\"p\">[</span><span class=\"k\">select</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">persistConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">writeLoop</span><span class=\"p\">(</span><span class=\"m\">0xc8201fb790</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">1277</span> <span class=\"o\">+</span><span class=\"m\">0x472</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dialConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">858</span> <span class=\"o\">+</span><span class=\"m\">0x10cb</span>\n\n<span class=\"n\">goroutine</span> <span class=\"m\">48</span> <span class=\"p\">[</span><span class=\"n\">IO</span> <span class=\"n\">wait</span><span class=\"p\">]</span><span class=\"o\">:</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">runtime_pollWait</span><span class=\"p\">(</span><span class=\"m\">0x7fd0b0133a78</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0xc8203f2000</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">netpoll</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">160</span> <span class=\"o\">+</span><span class=\"m\">0x60</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">(</span><span class=\"m\">0xc8200de840</span><span class=\"p\">,</span> <span class=\"m\">0x72</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">73</span> <span class=\"o\">+</span><span class=\"m\">0x3a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pollDesc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">WaitRead</span><span class=\"p\">(</span><span class=\"m\">0xc8200de840</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_poll_runtime</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">78</span> <span class=\"o\">+</span><span class=\"m\">0x36</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">netFD</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8200de7e0</span><span class=\"p\">,</span> <span class=\"m\">0xc8203f2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x7fd0b012e028</span><span class=\"p\">,</span> <span class=\"m\">0xc82005e0b0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">fd_unix</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">250</span> <span class=\"o\">+</span><span class=\"m\">0x23a</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc8200800e0</span><span class=\"p\">,</span> <span class=\"m\">0xc8203f2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">172</span> <span class=\"o\">+</span><span class=\"m\">0xe4</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readFromUntil</span><span class=\"p\">(</span><span class=\"m\">0xc820459710</span><span class=\"p\">,</span> <span class=\"m\">0x7fd0b013d558</span><span class=\"p\">,</span> <span class=\"m\">0xc8200800e0</span><span class=\"p\">,</span> <span class=\"m\">0x5</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">460</span> <span class=\"o\">+</span><span class=\"m\">0xcc</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readRecord</span><span class=\"p\">(</span><span class=\"m\">0xc820344300</span><span class=\"p\">,</span> <span class=\"m\">0xd0e317</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">562</span> <span class=\"o\">+</span><span class=\"m\">0x2d1</span>\n<span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820344300</span><span class=\"p\">,</span> <span class=\"m\">0xc8202ad000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x1000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crypto</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"o\">/</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">939</span> <span class=\"o\">+</span><span class=\"m\">0x167</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"m\">0xc820437200</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">97</span> <span class=\"o\">+</span><span class=\"m\">0x1e9</span>\n<span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Reader</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"m\">0xc820437200</span><span class=\"p\">,</span> <span class=\"m\">0xc8200d2038</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x521934</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">/</span><span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">207</span> <span class=\"o\">+</span><span class=\"m\">0x260</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadAtLeast</span><span class=\"p\">(</span><span class=\"m\">0x7fd0b013d7f0</span><span class=\"p\">,</span> <span class=\"m\">0xc820437200</span><span class=\"p\">,</span> <span class=\"m\">0xc8200d2038</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">297</span> <span class=\"o\">+</span><span class=\"m\">0xe6</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">ReadFull</span><span class=\"p\">(</span><span class=\"m\">0x7fd0b013d7f0</span><span class=\"p\">,</span> <span class=\"m\">0xc820437200</span><span class=\"p\">,</span> <span class=\"m\">0xc8200d2038</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x411787</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">315</span> <span class=\"o\">+</span><span class=\"m\">0x62</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">http2readFrameHeader</span><span class=\"p\">(</span><span class=\"m\">0xc8200d2038</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x9</span><span class=\"p\">,</span> <span class=\"m\">0x7fd0b013d7f0</span><span class=\"p\">,</span> <span class=\"m\">0xc820437200</span><span class=\"p\">,</span> <span class=\"m\">0x20000000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">715</span> <span class=\"o\">+</span><span class=\"m\">0xa5</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Framer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ReadFrame</span><span class=\"p\">(</span><span class=\"m\">0xc8200d2000</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">906</span> <span class=\"o\">+</span><span class=\"m\">0xe9</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2clientConnReadLoop</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"m\">0xc82044a9b0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">,</span> <span class=\"m\">0x0</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5583</span> <span class=\"o\">+</span><span class=\"m\">0xa6</span>\n<span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2ClientConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readLoop</span><span class=\"p\">(</span><span class=\"m\">0xc820244420</span><span class=\"p\">)</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">5544</span> <span class=\"o\">+</span><span class=\"m\">0x162</span>\n<span class=\"n\">created</span> <span class=\"n\">by</span> <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">http2Transport</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">NewClientConn</span>\n    <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">h2_bundle</span><span class=\"o\">.</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"m\">4975</span> <span class=\"o\">+</span><span class=\"m\">0xd94</span>\n<span class=\"n\">logs</span><span class=\"o\">.</span><span class=\"n\">BeeLogger</span><span class=\"o\">.</span><span class=\"n\">SetLogger</span><span class=\"o\">:</span> <span class=\"n\">open</span> <span class=\"n\">logs</span><span class=\"o\">/</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span>\n\n</code></pre> ",
    "hits": 525,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 640,
    "title": "并发下连接mysql报错",
    "created_at": "2017-02-20 15:09:33",
    "updated_at": "2017-02-20 21:48:56",
    "replied_at": "2017-02-20 21:48:56",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 817,
    "last_reply_user_login": "pathbox",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 832,
    "user": "{\"id\": 832, \"name\": \"freedkr\", \"login\": \"freedkr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "100个并发，出现少量的失败情况，最开始认为是连接数不够，把连接数调整到300依然出现，查了下资料也没找到具体说明，在这里发个帖子希望有大大能帮忙解惑下\n\n```go\npackage main\n\nimport (\n\t&quot;database/sql&quot;\n\t&quot;time&quot;\n\n\t_ &quot;github.com/go-sql-driver/mysql&quot;\n\t&quot;gopkg.in/gin-gonic/gin.v1&quot;\n)\n\nfunc main() {\n\tgin.SetMode(gin.ReleaseMode)\n\tf := gin.Default()\n\tf.GET(&quot;/test&quot;, func(c *gin.Context) {\n\t\tname := c.Query(&quot;type&quot;)\n\t\tvalue := c.Query(&quot;value&quot;)\n\t\thash := c.Query(&quot;hash&quot;)\n\t\tdb, err := sql.Open(&quot;mysql&quot;, &quot;root:123456@tcp(0.0.0.0:33061)/test?charset=utf8&amp;loc=Asia%2FShanghai&quot;)\n\t\tdb.SetMaxIdleConns(300)\n\t\tcheckErr(err)\n\t\tdefer db.Close()\n\t\tstmt, err := db.Prepare(&quot;INSERT userinfo(type, value, hash, created) VALUES(?,?,?,?)&quot;)\n\t\tcheckErr(err)\n\t\tdefer stmt.Close()\n\t\t_, err = stmt.Exec(name, value, hash, time.Now())\n\t\tcheckErr(err)\n\t\tc.JSON(200, gin.H{\n\t\t\t&quot;message&quot;: &quot;ok&quot;,\n\t\t})\n\t})\n\tf.Run()\n\n}\n\nfunc checkErr(err error) {\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n```\n`ab -c 100 -n 100 http://localhost:8080/test\\?type\\=a\\&amp;value\\=b`\n错误信息如下\n\n`dial tcp 0.0.0.0:33061: getsockopt: connection reset by peer\n/usr/local/go/src/runtime/panic.go:458 (0x2acc3)`",
    "body_html": "<p>100 个并发，出现少量的失败情况，最开始认为是连接数不够，把连接数调整到 300 依然出现，查了下资料也没找到具体说明，在这里发个帖子希望有大大能帮忙解惑下</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">database</span><span class=\"o\">/</span><span class=\"n\">sql</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n    <span class=\"n\">_</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">-</span><span class=\"n\">sql</span><span class=\"o\">-</span><span class=\"n\">driver</span><span class=\"o\">/</span><span class=\"n\">mysql</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">gopkg</span><span class=\"o\">.</span><span class=\"n\">in</span><span class=\"o\">/</span><span class=\"n\">gin</span><span class=\"o\">-</span><span class=\"n\">gonic</span><span class=\"o\">/</span><span class=\"n\">gin</span><span class=\"o\">.</span><span class=\"n\">v1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">gin</span><span class=\"o\">.</span><span class=\"n\">SetMode</span><span class=\"p\">(</span><span class=\"n\">gin</span><span class=\"o\">.</span><span class=\"n\">ReleaseMode</span><span class=\"p\">)</span>\n    <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"n\">gin</span><span class=\"o\">.</span><span class=\"n\">Default</span><span class=\"p\">()</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">GET</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"o\">*</span><span class=\"n\">gin</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"k\">type</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"n\">value</span> <span class=\"o\">:=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">value</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"n\">hash</span> <span class=\"o\">:=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">hash</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">mysql</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">root</span><span class=\"o\">:</span><span class=\"m\">123456</span><span class=\"err\">@</span><span class=\"n\">tcp</span><span class=\"p\">(</span><span class=\"m\">0.0.0.0</span><span class=\"o\">:</span><span class=\"m\">33061</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"err\">?</span><span class=\"n\">charset</span><span class=\"o\">=</span><span class=\"n\">utf8</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"n\">Asia</span><span class=\"o\">%</span><span class=\"m\">2</span><span class=\"n\">FShanghai</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">SetMaxIdleConns</span><span class=\"p\">(</span><span class=\"m\">300</span><span class=\"p\">)</span>\n        <span class=\"n\">checkErr</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n        <span class=\"k\">defer</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n        <span class=\"n\">stmt</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Prepare</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">INSERT</span> <span class=\"n\">userinfo</span><span class=\"p\">(</span><span class=\"k\">type</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">hash</span><span class=\"p\">,</span> <span class=\"n\">created</span><span class=\"p\">)</span> <span class=\"n\">VALUES</span><span class=\"p\">(</span><span class=\"err\">?</span><span class=\"p\">,</span><span class=\"err\">?</span><span class=\"p\">,</span><span class=\"err\">?</span><span class=\"p\">,</span><span class=\"err\">?</span><span class=\"p\">)</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"n\">checkErr</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n        <span class=\"k\">defer</span> <span class=\"n\">stmt</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n        <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">stmt</span><span class=\"o\">.</span><span class=\"n\">Exec</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">hash</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Now</span><span class=\"p\">())</span>\n        <span class=\"n\">checkErr</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n        <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">JSON</span><span class=\"p\">(</span><span class=\"m\">200</span><span class=\"p\">,</span> <span class=\"n\">gin</span><span class=\"o\">.</span><span class=\"n\">H</span><span class=\"p\">{</span>\n            <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">message</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">ok</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n        <span class=\"p\">})</span>\n    <span class=\"p\">})</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">Run</span><span class=\"p\">()</span>\n\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">checkErr</span><span class=\"p\">(</span><span class=\"n\">err</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"nb\">panic</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p><code>ab -c 100 -n 100 http://localhost:8080/test\\?type\\=a\\&amp;amp;value\\=b</code>\n错误信息如下</p>\n\n<p><code>dial tcp 0.0.0.0:33061: getsockopt: connection reset by peer\n/usr/local/go/src/runtime/panic.go:458 (0x2acc3)</code></p>",
    "hits": 515,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 641,
    "title": "求推荐一个好用 mongo driver for go？感觉 mongo 也不知道进取，一直不推出官方driver, mgo 也好久不更新了。",
    "created_at": "2017-02-20 17:02:50",
    "updated_at": "2019-06-21 14:06:08",
    "replied_at": "2019-06-21 14:06:08",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 3134,
    "last_reply_user_login": "noname",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 74,
    "user": "{\"id\": 74, \"name\": \"xieyanke\", \"login\": \"xieyanke\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 701,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 642,
    "title": "一些用golang开发的存储项目",
    "created_at": "2017-02-21 11:57:15",
    "updated_at": "2017-02-21 11:57:15",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 769,
    "user": "{\"id\": 769, \"name\": \"lei\", \"login\": \"lei\", \"avatar\": \"https://static.gocn.vip/user/avatar/769/ce9f66.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "一些用golang开发的存储项目， 地址：https://github.com/gostor/awesome-go-storage",
    "body_html": "<p>一些用 golang 开发的存储项目， 地址：<a href=\"https://github.com/gostor/awesome-go-storage\" rel=\"nofollow\" target=\"_blank\">https://github.com/gostor/awesome-go-storage</a></p>",
    "hits": 358,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 643,
    "title": " 建议连接新tab打开",
    "created_at": "2017-02-21 16:11:05",
    "updated_at": "2017-03-06 10:08:13",
    "replied_at": "2017-03-06 10:08:13",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1678,
    "last_reply_user_login": "shadow1163",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1056,
    "user": "{\"id\": 1056, \"name\": \"lifesohard\", \"login\": \"lifesohard\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 431,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 644,
    "title": "上海/GO工作/区块链领域公司",
    "created_at": "2017-02-22 12:34:01",
    "updated_at": "2017-02-28 13:28:32",
    "replied_at": "2017-02-28 13:28:32",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 13,
    "last_reply_user_login": "h12",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 82,
    "user": "{\"id\": 82, \"name\": \"mikerr\", \"login\": \"mikerr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "中午好，看机会与不看机会的各位~\n\n之前发的招聘贴，因为对方校招去了，暂停一下流\n还有一个从事大数据领域的客户，要求特别高，欢迎211/985的同学来挑战下。\n\n言归正传\n\n目前在替一家国内相对比较领先的从事区块链业务的公司招GO，\n说相对领先是因为与其他公司比，这家已经走的比较靠前，并且已经有相对比较成熟的产品，和行业内的客户应用（均是500强）。\n\n同时，也是最早加入https://github.com/hyperledger/hyperledger 的中国公司\n\n目前有两轮融资，大概3000W，新的一轮还在谈，金额不详\n\n人数还不多，算上北京的，就50人不到，不过大部分都是技术人员，还有不少搞密码学的\n\n岗位描述会比较简陋，各位请不要在意，用一句话概括就是用 使用GO语言参与进行区块链核心交易平台的开发工作\n\n薪水的话，抱歉啊，我也没有范围，但是从面试过的人的情况来看，公司对于求职者之前是否参与过一些比较成规模的项目会比较在意，而根据市场行情来看，公司需要的这种人，预估目前年收入应该在25W朝上了。\n\n或者是GO玩的比较溜的，但是玩的溜的，目前基本上也有这个数了应该。\n\n其他福利啥的，五险一金都会有\n\n工作地点在杨浦区\n\n估计许多人已经猜到了这是啥公司了，但是作为猎头，还是不能直接透露，操守还是很重要滴。\n\n详细的信息，可以私聊\n\n微信 lietoumai QQ 1735832445 邮箱 同左边\n\n\n\n\n\n\n\n\n\n",
    "body_html": "<p>中午好，看机会与不看机会的各位~</p>\n\n<p>之前发的招聘贴，因为对方校招去了，暂停一下流\n还有一个从事大数据领域的客户，要求特别高，欢迎 211/985 的同学来挑战下。</p>\n\n<p>言归正传</p>\n\n<p>目前在替一家国内相对比较领先的从事区块链业务的公司招 GO，\n说相对领先是因为与其他公司比，这家已经走的比较靠前，并且已经有相对比较成熟的产品，和行业内的客户应用（均是 500 强）。</p>\n\n<p>同时，也是最早加入<a href=\"https://github.com/hyperledger/hyperledger\" rel=\"nofollow\" target=\"_blank\">https://github.com/hyperledger/hyperledger</a> 的中国公司</p>\n\n<p>目前有两轮融资，大概 3000W，新的一轮还在谈，金额不详</p>\n\n<p>人数还不多，算上北京的，就 50 人不到，不过大部分都是技术人员，还有不少搞密码学的</p>\n\n<p>岗位描述会比较简陋，各位请不要在意，用一句话概括就是用 使用 GO 语言参与进行区块链核心交易平台的开发工作</p>\n\n<p>薪水的话，抱歉啊，我也没有范围，但是从面试过的人的情况来看，公司对于求职者之前是否参与过一些比较成规模的项目会比较在意，而根据市场行情来看，公司需要的这种人，预估目前年收入应该在 25W 朝上了。</p>\n\n<p>或者是 GO 玩的比较溜的，但是玩的溜的，目前基本上也有这个数了应该。</p>\n\n<p>其他福利啥的，五险一金都会有</p>\n\n<p>工作地点在杨浦区</p>\n\n<p>估计许多人已经猜到了这是啥公司了，但是作为猎头，还是不能直接透露，操守还是很重要滴。</p>\n\n<p>详细的信息，可以私聊</p>\n\n<p>微信 lietoumai QQ 1735832445 邮箱 同左边</p>",
    "hits": 479,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 645,
    "title": "【疑难杂症】【GC】Go 程序调用 Windows DLL 的正确姿势是什么？",
    "created_at": "2017-02-22 13:51:54",
    "updated_at": "2017-02-28 09:17:37",
    "replied_at": "2017-02-28 09:17:37",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1300,
    "last_reply_user_login": "RedMothball",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1639,
    "user": "{\"id\": 1639, \"name\": \"flw\", \"login\": \"flw\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "各位老师、前辈、同学们，大家好！\n\n(以下描述及代码都基于 Go 1.7，开发环境分别为 MacBook 和 Windows Server)\n我最近在使用 Go 语言调用 Windows dll 时遇到了一个问题，这个问题具体表现为 Go 语言中的字符串传递给 dll 之后，如果 dll 里的函数执行较为缓慢的话，则 Go 语言字符串里的内容可能会被 gc 回收掉，从而导致 dll 里的函数读取到的内容是错误的。\n\n下面是测试代码（go 语言部分）：\n\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;os&quot;\n\t&quot;syscall&quot;\n\t&quot;time&quot;\n\t&quot;unsafe&quot;\n)\n\nvar (\n\tfnFindBUG *syscall.Proc\n)\n\nfunc main() {\n\tdll := syscall.MustLoadDLL(&quot;foo.dll&quot;)\n\tfnFindBUG = dll.MustFindProc(&quot;foo&quot;)\n\n\tfor {\n\t\tgo Worker()\n\t\ttime.Sleep(time.Microsecond * 1)\n\t}\n}\n\nfunc Worker() {\n\tstr := &quot;A&quot;\n\tbin := make([]byte, len(str)+1)\n\tcopy(bin, str)\n\n\tret, _, _ := fnFindBUG.Call(1000, uintptr(unsafe.Pointer(&amp;bin[0])), uintptr(str[0]))\n\tif ret != 0 {\n\t\tfmt.Printf(&quot;FindBUG ret: %d\\n&quot;, int(ret))\n\t\tos.Exit(1)\n\t}\n}\n\n```\n\n下面是 dll 的源代码：\n\n```cpp\n#include &lt;stdio.h&gt;\n#include &quot;windows.h&quot;\n\nint foo(int ms, char *ptr, char ok)\n{\n\tif (ptr == NULL) {\n\t\tfprintf( stderr, &quot;ptr is null\\n&quot; );\n\t\treturn -1;\n\t}\n\n\tif (ms &gt; 0) {\n\t\tSleep(ms);\n\t}\n\n\tif (*ptr == ok) {\n\t\treturn 0;\n\t}\n\telse {\n\t\tfprintf( stderr, &quot;Found BUG: 0xx != 0xx\\n&quot;, *ptr, ok );\n\t}\n\n\treturn -1;\n}\n```\n\n我不知道这里如何上传文件，不然的话我这里有一个编译好的 dll 提供给没有环境的同学下载。\n\n好，我们继续。\n\n如同代码所示，dll 函数 foo 是一个测试函数，\n它接受三个参数：一个可选的延迟，一个待测试的内存地址，以及一个比较基准值。\n\n我在 Go 语言里通过 Go 标准库 syscall 来调用这个 dll 函数，\n通过不停地创建 go 程来触发 gc（哪位朋友有更好的触发 gc 的方法也可以告诉我，我试过 runtime.GC() 并不一定会触发这个 BUG）。\n\n当 gc 来临时，bin 变量的内容可能会被释放掉，这样 foo 就会检测到一个 BUG。\n\n在我的机器上这个 BUG 很容易就可以检测出来：\n\n```shell\n$ go run bug.go\nFindBUG ret: -1\nFound BUG: 0x10 != 0x41\nexit status 1\n```\n\n从打印输出上可以看到，我传入的值是 'A'（ASCII 码值是 0x41），但是 dll 接收到的是 0x10 ———— 每次测试的时候这个值都会变化，没有什么明显的规律。\n\n我之前在线下也做了一些努力，定位到这个问题可能是由于 unsafe.Pointer 或者 uintptr 的不正确使用造成的，于是我对这个测试程序做了一些改进，得到了一些新的进展。\n\n在下面这段代码里，我用 Go 语言来实现了 FindBUG，模拟了 dll 的行为，也复现了 BUG。\n\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;os&quot;\n\t&quot;time&quot;\n\t&quot;unsafe&quot;\n)\n\nfunc main() {\n\tfor {\n\t\tgo Worker()\n\t\ttime.Sleep(time.Microsecond * 1)\n\t}\n}\n\nfunc Worker() {\n\tstr := &quot;x&quot;\n\tbin := make([]byte, len(str)+1)\n\tcopy(bin, str)\n\n\tret := FindBUG(1000, uintptr(unsafe.Pointer(&amp;bin[0])), str[0])\n\tif ret != 0 {\n\t\tfmt.Printf(&quot;FindBUG ret: %d\\n&quot;, int(ret))\n\t\tos.Exit(1)\n\t}\n}\n\n// go:uintptrescapes\n//\n// FindBUG 用来测试代码是否存在 BUG\n// 返回 0 表示没有发现 BUG，返回 -1 表示存在 BUG。\n// 你可以把上面的注释中 &quot;go&quot; 前面的空格删除，这样就可以打开函数编译指示，就没 BUG 了。\n// 加上空格可以关闭这个编译指示（使其变为不带特殊含义的普通注释），这样就有 BUG。\n//\n// 更多内容请参见:\n// * 关于 uintptr: http://golang.org/pkg/unsafe/#Pointer\n// * 关于 go:uintptrescapes: https://golang.org/src/cmd/compile/internal/gc/lex.go\nfunc FindBUG(ms int, fooPtr uintptr, ok byte) int {\n\tif ms &gt; 0 {\n\t\ttime.Sleep(time.Microsecond * (time.Duration)(ms))\n\t}\n\n\ta := *(*byte)(unsafe.Pointer(fooPtr))\n\n\tif a != ok {\n\t\tfmt.Printf(&quot;Found BUG: %v != %v\\n&quot;, a, ok)\n\t\treturn -1\n\t}\n\n\treturn 0\n}\n```\n\n于是，我凭借 [unsafe 文档](http://golang.org/pkg/unsafe/#Pointer) 所描述的文字，判断问题是出在 uintptr 上，于是好奇 [syscall.Proc.Call 是如何做的](https://golang.org/src/syscall/dll_windows.go)？最后在 [Go 源代码](https://golang.org/src/cmd/compile/internal/gc/lex.go)里找到了如下内容：\n\n```go\n// Source file src/cmd/compile/internal/gc/lex.go\nfunc pragmaValue(verb string) Pragma {\n\tswitch verb {\n\t// 省略无关内容 ...\n\tcase &quot;go:uintptrescapes&quot;:\n\t\t// For the next function declared in the file\n\t\t// any uintptr arguments may be pointer values\n\t\t// converted to uintptr. This directive\n\t\t// ensures that the referenced allocated\n\t\t// object, if any, is retained and not moved\n\t\t// until the call completes, even though from\n\t\t// the types alone it would appear that the\n\t\t// object is no longer needed during the\n\t\t// call. The conversion to uintptr must appear\n\t\t// in the argument list.\n\t\t// Used in syscall/dll_windows.go.\n\t\treturn UintptrEscapes\n```\n\n然后我给代码里加了这个编译指示，问题果然就解决了。\n\n那么，我的问题来了：\n* 既然 syscall.Proc.Call 里也有 `go:uintptrescapes`，为什么仍然会有问题？\n* Go 语言下调用 Windows dll 的正确姿势是什么？如何安全地传递字符串给 dll？",
    "body_html": "<p>各位老师、前辈、同学们，大家好！</p>\n\n<p>(以下描述及代码都基于 Go 1.7，开发环境分别为 MacBook 和 Windows Server)\n我最近在使用 Go 语言调用 Windows dll 时遇到了一个问题，这个问题具体表现为 Go 语言中的字符串传递给 dll 之后，如果 dll 里的函数执行较为缓慢的话，则 Go 语言字符串里的内容可能会被 gc 回收掉，从而导致 dll 里的函数读取到的内容是错误的。</p>\n\n<p>下面是测试代码（go 语言部分）：</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">os</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">syscall</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">unsafe</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">var</span> <span class=\"p\">(</span>\n    <span class=\"n\">fnFindBUG</span> <span class=\"o\">*</span><span class=\"n\">syscall</span><span class=\"o\">.</span><span class=\"n\">Proc</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">dll</span> <span class=\"o\">:=</span> <span class=\"n\">syscall</span><span class=\"o\">.</span><span class=\"n\">MustLoadDLL</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">dll</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">fnFindBUG</span> <span class=\"o\">=</span> <span class=\"n\">dll</span><span class=\"o\">.</span><span class=\"n\">MustFindProc</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">foo</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n    <span class=\"k\">for</span> <span class=\"p\">{</span>\n        <span class=\"k\">go</span> <span class=\"n\">Worker</span><span class=\"p\">()</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Microsecond</span> <span class=\"o\">*</span> <span class=\"m\">1</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">Worker</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">str</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">A</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"n\">bin</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">([]</span><span class=\"kt\">byte</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">str</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"m\">1</span><span class=\"p\">)</span>\n    <span class=\"nb\">copy</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">str</span><span class=\"p\">)</span>\n\n    <span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">fnFindBUG</span><span class=\"o\">.</span><span class=\"n\">Call</span><span class=\"p\">(</span><span class=\"m\">1000</span><span class=\"p\">,</span> <span class=\"kt\">uintptr</span><span class=\"p\">(</span><span class=\"n\">unsafe</span><span class=\"o\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">bin</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">])),</span> <span class=\"kt\">uintptr</span><span class=\"p\">(</span><span class=\"n\">str</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]))</span>\n    <span class=\"k\">if</span> <span class=\"n\">ret</span> <span class=\"o\">!=</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">FindBUG</span> <span class=\"n\">ret</span><span class=\"o\">:</span> <span class=\"o\">%</span><span class=\"n\">d</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"kt\">int</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">))</span>\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Exit</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n</code></pre> \n<p>下面是 dll 的源代码：</p>\n <pre class=\"highlight cpp\"><code><span class=\"cp\">#include &amp;lt;stdio.h&amp;gt;\n#include &amp;quot;windows.h&amp;quot;\n</span>\n<span class=\"kt\">int</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">ms</span><span class=\"p\">,</span> <span class=\"kt\">char</span> <span class=\"o\">*</span><span class=\"n\">ptr</span><span class=\"p\">,</span> <span class=\"kt\">char</span> <span class=\"n\">ok</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">ptr</span> <span class=\"o\">==</span> <span class=\"nb\">NULL</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">fprintf</span><span class=\"p\">(</span> <span class=\"n\">stderr</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">ptr</span> <span class=\"n\">is</span> <span class=\"n\">null</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">);</span>\n        <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">ms</span> <span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"n\">ms</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">ptr</span> <span class=\"o\">==</span> <span class=\"n\">ok</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"n\">fprintf</span><span class=\"p\">(</span> <span class=\"n\">stderr</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Found</span> <span class=\"n\">BUG</span><span class=\"o\">:</span> <span class=\"mi\">0</span><span class=\"n\">xx</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"n\">xx</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">*</span><span class=\"n\">ptr</span><span class=\"p\">,</span> <span class=\"n\">ok</span> <span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>我不知道这里如何上传文件，不然的话我这里有一个编译好的 dll 提供给没有环境的同学下载。</p>\n\n<p>好，我们继续。</p>\n\n<p>如同代码所示，dll 函数 foo 是一个测试函数，\n它接受三个参数：一个可选的延迟，一个待测试的内存地址，以及一个比较基准值。</p>\n\n<p>我在 Go 语言里通过 Go 标准库 syscall 来调用这个 dll 函数，\n通过不停地创建 go 程来触发 gc（哪位朋友有更好的触发 gc 的方法也可以告诉我，我试过 runtime.GC() 并不一定会触发这个 BUG）。</p>\n\n<p>当 gc 来临时，bin 变量的内容可能会被释放掉，这样 foo 就会检测到一个 BUG。</p>\n\n<p>在我的机器上这个 BUG 很容易就可以检测出来：</p>\n <pre class=\"highlight shell\"><code><span class=\"nv\">$ </span>go run bug.go\nFindBUG ret: <span class=\"nt\">-1</span>\nFound BUG: 0x10 <span class=\"o\">!=</span> 0x41\n<span class=\"nb\">exit </span>status 1\n</code></pre> \n<p>从打印输出上可以看到，我传入的值是 'A'（ASCII 码值是 0x41），但是 dll 接收到的是 0x10 ———— 每次测试的时候这个值都会变化，没有什么明显的规律。</p>\n\n<p>我之前在线下也做了一些努力，定位到这个问题可能是由于 unsafe.Pointer 或者 uintptr 的不正确使用造成的，于是我对这个测试程序做了一些改进，得到了一些新的进展。</p>\n\n<p>在下面这段代码里，我用 Go 语言来实现了 FindBUG，模拟了 dll 的行为，也复现了 BUG。</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">os</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">unsafe</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"p\">{</span>\n        <span class=\"k\">go</span> <span class=\"n\">Worker</span><span class=\"p\">()</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Microsecond</span> <span class=\"o\">*</span> <span class=\"m\">1</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">Worker</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">str</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">x</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"n\">bin</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">([]</span><span class=\"kt\">byte</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">str</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"m\">1</span><span class=\"p\">)</span>\n    <span class=\"nb\">copy</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">str</span><span class=\"p\">)</span>\n\n    <span class=\"n\">ret</span> <span class=\"o\">:=</span> <span class=\"n\">FindBUG</span><span class=\"p\">(</span><span class=\"m\">1000</span><span class=\"p\">,</span> <span class=\"kt\">uintptr</span><span class=\"p\">(</span><span class=\"n\">unsafe</span><span class=\"o\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">bin</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">])),</span> <span class=\"n\">str</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">])</span>\n    <span class=\"k\">if</span> <span class=\"n\">ret</span> <span class=\"o\">!=</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">FindBUG</span> <span class=\"n\">ret</span><span class=\"o\">:</span> <span class=\"o\">%</span><span class=\"n\">d</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"kt\">int</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">))</span>\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Exit</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">// go:uintptrescapes</span>\n<span class=\"c\">//</span>\n<span class=\"c\">// FindBUG 用来测试代码是否存在 BUG</span>\n<span class=\"c\">// 返回 0 表示没有发现 BUG，返回 -1 表示存在 BUG。</span>\n<span class=\"c\">// 你可以把上面的注释中 &amp;quot;go&amp;quot; 前面的空格删除，这样就可以打开函数编译指示，就没 BUG 了。</span>\n<span class=\"c\">// 加上空格可以关闭这个编译指示（使其变为不带特殊含义的普通注释），这样就有 BUG。</span>\n<span class=\"c\">//</span>\n<span class=\"c\">// 更多内容请参见:</span>\n<span class=\"c\">// * 关于 uintptr: http://golang.org/pkg/unsafe/#Pointer</span>\n<span class=\"c\">// * 关于 go:uintptrescapes: https://golang.org/src/cmd/compile/internal/gc/lex.go</span>\n<span class=\"k\">func</span> <span class=\"n\">FindBUG</span><span class=\"p\">(</span><span class=\"n\">ms</span> <span class=\"kt\">int</span><span class=\"p\">,</span> <span class=\"n\">fooPtr</span> <span class=\"kt\">uintptr</span><span class=\"p\">,</span> <span class=\"n\">ok</span> <span class=\"kt\">byte</span><span class=\"p\">)</span> <span class=\"kt\">int</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"n\">ms</span> <span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Microsecond</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Duration</span><span class=\"p\">)(</span><span class=\"n\">ms</span><span class=\"p\">))</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"o\">*</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"kt\">byte</span><span class=\"p\">)(</span><span class=\"n\">unsafe</span><span class=\"o\">.</span><span class=\"n\">Pointer</span><span class=\"p\">(</span><span class=\"n\">fooPtr</span><span class=\"p\">))</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"o\">!=</span> <span class=\"n\">ok</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Found</span> <span class=\"n\">BUG</span><span class=\"o\">:</span> <span class=\"o\">%</span><span class=\"n\">v</span> <span class=\"o\">!=</span> <span class=\"o\">%</span><span class=\"n\">v</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">ok</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"m\">1</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"m\">0</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>于是，我凭借 <a href=\"http://golang.org/pkg/unsafe/#Pointer\" rel=\"nofollow\" target=\"_blank\" title=\"\">unsafe 文档</a> 所描述的文字，判断问题是出在 uintptr 上，于是好奇 <a href=\"https://golang.org/src/syscall/dll_windows.go\" rel=\"nofollow\" target=\"_blank\" title=\"\">syscall.Proc.Call 是如何做的</a>？最后在 <a href=\"https://golang.org/src/cmd/compile/internal/gc/lex.go\" rel=\"nofollow\" target=\"_blank\" title=\"\">Go 源代码</a>里找到了如下内容：</p>\n <pre class=\"highlight go\"><code><span class=\"c\">// Source file src/cmd/compile/internal/gc/lex.go</span>\n<span class=\"k\">func</span> <span class=\"n\">pragmaValue</span><span class=\"p\">(</span><span class=\"n\">verb</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"n\">Pragma</span> <span class=\"p\">{</span>\n    <span class=\"k\">switch</span> <span class=\"n\">verb</span> <span class=\"p\">{</span>\n    <span class=\"c\">// 省略无关内容 ...</span>\n    <span class=\"k\">case</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"k\">go</span><span class=\"o\">:</span><span class=\"n\">uintptrescapes</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span>\n        <span class=\"c\">// For the next function declared in the file</span>\n        <span class=\"c\">// any uintptr arguments may be pointer values</span>\n        <span class=\"c\">// converted to uintptr. This directive</span>\n        <span class=\"c\">// ensures that the referenced allocated</span>\n        <span class=\"c\">// object, if any, is retained and not moved</span>\n        <span class=\"c\">// until the call completes, even though from</span>\n        <span class=\"c\">// the types alone it would appear that the</span>\n        <span class=\"c\">// object is no longer needed during the</span>\n        <span class=\"c\">// call. The conversion to uintptr must appear</span>\n        <span class=\"c\">// in the argument list.</span>\n        <span class=\"c\">// Used in syscall/dll_windows.go.</span>\n        <span class=\"k\">return</span> <span class=\"n\">UintptrEscapes</span>\n</code></pre> \n<p>然后我给代码里加了这个编译指示，问题果然就解决了。</p>\n\n<p>那么，我的问题来了：</p>\n\n<ul>\n<li>既然 syscall.Proc.Call 里也有 <code>go:uintptrescapes</code>，为什么仍然会有问题？</li>\n<li>Go 语言下调用 Windows dll 的正确姿势是什么？如何安全地传递字符串给 dll？</li>\n</ul>",
    "hits": 602,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 646,
    "title": "Go 的 implicitly converted  会在 for 中失效？",
    "created_at": "2017-02-22 15:44:58",
    "updated_at": "2017-02-22 17:02:41",
    "replied_at": "2017-02-22 17:02:41",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1641,
    "last_reply_user_login": "trigged",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1641,
    "user": "{\"id\": 1641, \"name\": \"trigged\", \"login\": \"trigged\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Go  中对 receiver 的调用会自动 dereferecing 也会 implicitly converted ，但是在实际测试中  implicitly converted 会在 for 中失效，比如下面代码 如果不显示声明  `&amp;Cat{}` 则会报错，请问下是为什么\n\n```\npackage main\n\nimport (\n\t&quot;fmt&quot;\n)\n\ntype Animal interface {\n\tSpeak() string\n}\n\ntype Dog struct {\n}\n\nfunc (d Dog) Speak() string {\n\treturn &quot;Woof!&quot;\n}\n\ntype Cat struct {\n}\n\nfunc (c *Cat) Speak() string {\n\treturn &quot;Meow!&quot;\n}\n\ntype Llama struct {\n}\n\nfunc (l Llama) Speak() string {\n\treturn &quot;?????&quot;\n}\n\ntype JavaProgrammer struct {\n}\n\nfunc (j JavaProgrammer) Speak() string {\n\treturn &quot;Design patterns!&quot;\n}\n\nfunc main() {\n\t//receiver implicitly\n\tcat := Cat{}\n\tfmt.Println(cat.Speak())\n\t\n\t//implicitly failed \n\tanimals := []Animal{Dog{}, Cat{}, Llama{}, JavaProgrammer{}}\n\tfor _, animal := range animals {\n\t\tfmt.Println(animal.Speak())\n\t}\n\t \n\n}\n\n```\n\nhttps://play.golang.org/p/JzCzXdDEuc",
    "body_html": "<p>Go  中对 receiver 的调用会自动 dereferecing 也会 implicitly converted ，但是在实际测试中  implicitly converted 会在 for 中失效，比如下面代码 如果不显示声明  <code>&amp;amp;Cat{}</code> 则会报错，请问下是为什么</p>\n <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"n\">import</span> <span class=\"p\">(</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">type</span> <span class=\"n\">Animal</span> <span class=\"n\">interface</span> <span class=\"p\">{</span>\n    <span class=\"n\">Speak</span><span class=\"p\">()</span> <span class=\"k\">string</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">type</span> <span class=\"n\">Dog</span> <span class=\"n\">struct</span> <span class=\"p\">{</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"p\">(</span><span class=\"n\">d</span> <span class=\"n\">Dog</span><span class=\"p\">)</span> <span class=\"n\">Speak</span><span class=\"p\">()</span> <span class=\"k\">string</span> <span class=\"p\">{</span>\n    <span class=\"n\">return</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Woof</span><span class=\"c1\">!&amp;quot;\n</span><span class=\"p\">}</span>\n\n<span class=\"n\">type</span> <span class=\"n\">Cat</span> <span class=\"n\">struct</span> <span class=\"p\">{</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"p\">*</span><span class=\"n\">Cat</span><span class=\"p\">)</span> <span class=\"n\">Speak</span><span class=\"p\">()</span> <span class=\"k\">string</span> <span class=\"p\">{</span>\n    <span class=\"n\">return</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Meow</span><span class=\"c1\">!&amp;quot;\n</span><span class=\"p\">}</span>\n\n<span class=\"n\">type</span> <span class=\"n\">Llama</span> <span class=\"n\">struct</span> <span class=\"p\">{</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"p\">(</span><span class=\"n\">l</span> <span class=\"n\">Llama</span><span class=\"p\">)</span> <span class=\"n\">Speak</span><span class=\"p\">()</span> <span class=\"k\">string</span> <span class=\"p\">{</span>\n    <span class=\"n\">return</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;?????&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">type</span> <span class=\"n\">JavaProgrammer</span> <span class=\"n\">struct</span> <span class=\"p\">{</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"p\">(</span><span class=\"n\">j</span> <span class=\"n\">JavaProgrammer</span><span class=\"p\">)</span> <span class=\"n\">Speak</span><span class=\"p\">()</span> <span class=\"k\">string</span> <span class=\"p\">{</span>\n    <span class=\"n\">return</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Design</span> <span class=\"n\">patterns</span><span class=\"c1\">!&amp;quot;\n</span><span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"p\">//</span><span class=\"n\">receiver</span> <span class=\"n\">implicitly</span>\n    <span class=\"n\">cat</span> <span class=\"p\">:=</span> <span class=\"n\">Cat</span><span class=\"p\">{}</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">cat</span><span class=\"p\">.</span><span class=\"n\">Speak</span><span class=\"p\">())</span>\n\n    <span class=\"p\">//</span><span class=\"n\">implicitly</span> <span class=\"n\">failed</span> \n    <span class=\"n\">animals</span> <span class=\"p\">:=</span> <span class=\"p\">[]</span><span class=\"n\">Animal</span><span class=\"p\">{</span><span class=\"n\">Dog</span><span class=\"p\">{},</span> <span class=\"n\">Cat</span><span class=\"p\">{},</span> <span class=\"n\">Llama</span><span class=\"p\">{},</span> <span class=\"n\">JavaProgrammer</span><span class=\"p\">{}}</span>\n    <span class=\"n\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">animal</span> <span class=\"p\">:=</span> <span class=\"k\">range</span> <span class=\"n\">animals</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">animal</span><span class=\"p\">.</span><span class=\"n\">Speak</span><span class=\"p\">())</span>\n    <span class=\"p\">}</span>\n\n\n<span class=\"p\">}</span>\n\n</code></pre> \n<p><a href=\"https://play.golang.org/p/JzCzXdDEuc\" rel=\"nofollow\" target=\"_blank\">https://play.golang.org/p/JzCzXdDEuc</a></p>",
    "hits": 414,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 647,
    "title": "channle不应该传map，或者深拷贝、加锁避免并发读写，有没有更好的办法",
    "created_at": "2017-02-23 09:45:40",
    "updated_at": "2017-02-27 13:27:51",
    "replied_at": "2017-02-27 13:27:51",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1138,
    "last_reply_user_login": "ianwoolf",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1138,
    "user": "{\"id\": 1138, \"name\": \"ianwoolf\", \"login\": \"ianwoolf\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "从channle接到map指针，进行处理的时候，遇到了并发读问题。\n\n是否channle不应该传map，或者进行深拷贝、加锁以避免并发读，有木有更好的办法？\n\n其他类型呢，slice或其他指针呢，如果只读的话，应该可以不加锁吧。麻烦大神解答",
    "body_html": "<p>从 channle 接到 map 指针，进行处理的时候，遇到了并发读问题。</p>\n\n<p>是否 channle 不应该传 map，或者进行深拷贝、加锁以避免并发读，有木有更好的办法？</p>\n\n<p>其他类型呢，slice 或其他指针呢，如果只读的话，应该可以不加锁吧。麻烦大神解答</p>",
    "hits": 630,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 648,
    "title": "golang 如何实现``这种注释或者@这种注解的扫描",
    "created_at": "2017-02-23 11:13:42",
    "updated_at": "2017-02-28 09:14:32",
    "replied_at": "2017-02-28 09:14:32",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1300,
    "last_reply_user_login": "RedMothball",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1104,
    "user": "{\"id\": 1104, \"name\": \"dust\", \"login\": \"dust\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题",
    "body_html": "<p>如题</p>",
    "hits": 683,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 649,
    "title": "如何使用Gogland配置beego项目的调试功能",
    "created_at": "2017-02-23 17:52:52",
    "updated_at": "2021-01-16 21:20:38",
    "replied_at": "2019-02-25 16:46:52",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 7184,
    "last_reply_user_login": "ypdai",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 606,
    "user": "{\"id\": 606, \"name\": \"ivanzhang\", \"login\": \"ivanzhang\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题\n`gogland`支持go的调试，但是`beego`项目使用官方的`bee`工具编译运行，这样好像就没法用调试模式了。有没有知道如何配置这个工具的小伙伴，分享下使用经验。",
    "body_html": "<p>如题\n<code>gogland</code>支持 go 的调试，但是<code>beego</code>项目使用官方的<code>bee</code>工具编译运行，这样好像就没法用调试模式了。有没有知道如何配置这个工具的小伙伴，分享下使用经验。</p>",
    "hits": 533,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 650,
    "title": "1.8正式版已经发布，希望GoCN下载里面能同步上",
    "created_at": "2017-02-24 09:02:54",
    "updated_at": "2019-10-16 12:02:10",
    "replied_at": "2019-10-16 12:02:10",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 8301,
    "last_reply_user_login": "hhhhh2711",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 354,
    "user": "{\"id\": 354, \"name\": \"myml\", \"login\": \"myml\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "1.8正式版已经发布，希望GoCN下载里面能同步上",
    "body_html": "<p>1.8 正式版已经发布，希望 GoCN 下载里面能同步上</p>",
    "hits": 709,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 651,
    "title": "beego filter",
    "created_at": "2017-02-25 16:19:13",
    "updated_at": "2021-01-16 21:20:37",
    "replied_at": "2019-04-30 17:59:37",
    "replies_count": 4,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 7517,
    "last_reply_user_login": "imsilence",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1104,
    "user": "{\"id\": 1104, \"name\": \"dust\", \"login\": \"dust\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "beego 中filter beego.BeforeExec或者beego.FinishRouter时候，哪里能获取到即将执行的方法和控制器名\nctx.Input.RunController///////ctx.Input.RunMethod一直是nil",
    "body_html": "<p>beego 中 filter beego.BeforeExec 或者 beego.FinishRouter 时候，哪里能获取到即将执行的方法和控制器名\nctx.Input.RunController///////ctx.Input.RunMethod 一直是 nil</p>",
    "hits": 960,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 652,
    "title": "RobotGo v0.43.0 , Go 桌面自动化",
    "created_at": "2017-02-25 18:38:14",
    "updated_at": "2017-11-22 17:32:39",
    "replied_at": "2017-11-22 17:32:30",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 183,
    "last_reply_user_login": "veni",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 183,
    "user": "{\"id\": 183, \"name\": \"veni\", \"login\": \"veni\", \"avatar\": \"https://gocn.vip/system/letter_avatars/v.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "RobotGo v0.43.0 发布了，Golang 跨平台控制鼠标、键盘、位图、屏幕、窗口句柄以及全局事件监听。\n\n主要变更：\n- 增加 keys.md(键位文档)\n- 增加 Getpid\n- 增加 &quot;menu&quot; 键\n- 增加 GetBHandle\n\n更新:\n- 更新介绍\n- 更新 test\n- 更新 ascii art\n- 更新 Guidelines\n- 移动文档到 docs\n- 更新 godoc 和 docs\n- 更新并整理 example\n- 更新并整理 README.md\n\n修复:\n- 修复 GetHandle #46 : 增加GetBHandle\n\n安装:\n- go get -u github.com/go-vgo/robotgo\n\n项目地址:\n\nGithub:https://github.com/go-vgo/robotgo\n",
    "body_html": "<p>RobotGo v0.43.0 发布了，Golang 跨平台控制鼠标、键盘、位图、屏幕、窗口句柄以及全局事件监听。</p>\n\n<p>主要变更：</p>\n\n<ul>\n<li>增加 keys.md(键位文档)</li>\n<li>增加 Getpid</li>\n<li>增加 \"menu\" 键</li>\n<li>增加 GetBHandle</li>\n</ul>\n\n<p>更新:</p>\n\n<ul>\n<li>更新介绍</li>\n<li>更新 test</li>\n<li>更新 ascii art</li>\n<li>更新 Guidelines</li>\n<li>移动文档到 docs</li>\n<li>更新 godoc 和 docs</li>\n<li>更新并整理 example</li>\n<li>更新并整理 README.md</li>\n</ul>\n\n<p>修复:</p>\n\n<ul>\n<li>修复 GetHandle #46 : 增加 GetBHandle</li>\n</ul>\n\n<p>安装:</p>\n\n<ul>\n<li>go get -u github.com/go-vgo/robotgo</li>\n</ul>\n\n<p>项目地址:</p>\n\n<p>Github:<a href=\"https://github.com/go-vgo/robotgo\" rel=\"nofollow\" target=\"_blank\">https://github.com/go-vgo/robotgo</a></p>",
    "hits": 644,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 653,
    "title": "Go 做后端服务给 PHP 调用，是提供 HTTP 接口吗？",
    "created_at": "2017-02-26 19:29:53",
    "updated_at": "2017-05-09 10:33:32",
    "replied_at": "2017-05-09 10:33:32",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1339,
    "last_reply_user_login": "tonyjt",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1658,
    "user": "{\"id\": 1658, \"name\": \"tanteng\", \"login\": \"tanteng\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如果用 Go 做后端服务，前端业务逻辑仍然是 PHP 的话，那么 PHP 如何去调用 Go 的接口，一般采用什么方式？是 Go 提供 HTTP 接口吗？还是 socket 通信？\n\n刚开始学习 Go ，很多不明白的地方，请多指教！",
    "body_html": "<p>如果用 Go 做后端服务，前端业务逻辑仍然是 PHP 的话，那么 PHP 如何去调用 Go 的接口，一般采用什么方式？是 Go 提供 HTTP 接口吗？还是 socket 通信？</p>\n\n<p>刚开始学习 Go ，很多不明白的地方，请多指教！</p>",
    "hits": 492,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 654,
    "title": "beego xsrf cookie数据必须设置有效期吗？",
    "created_at": "2017-02-28 11:14:14",
    "updated_at": "2021-01-20 03:03:27",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1660,
    "user": "{\"id\": 1660, \"name\": \"onn\", \"login\": \"onn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/o.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "beego xsrf cookie数据必须设置有效期吗？这个有效期起到什么作用。 如果把有效期设置成浏览器关闭失效会有什么安全隐患？",
    "body_html": "<p>beego xsrf cookie 数据必须设置有效期吗？这个有效期起到什么作用。 如果把有效期设置成浏览器关闭失效会有什么安全隐患？</p>",
    "hits": 248,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 655,
    "title": "72行实现个简单的MapReduce",
    "created_at": "2017-02-28 15:30:37",
    "updated_at": "2017-02-28 15:30:37",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 354,
    "user": "{\"id\": 354, \"name\": \"myml\", \"login\": \"myml\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "# [EasyMapReduce](https://github.com/myml/EasyMapReduce/blob/master/easyMapReduce.go &quot;EasyMapReduce&quot;)\n一个简单的MapReduce实现\n## 使用\n简单的例子\n```\n\t//生成数据源\n\tvar data []int\n\tfor i := 0; i &lt; 1000; i++ {\n\t\tdata = append(data, i)\n\t}\n\tMap := func(i int) int {\n\t\treturn i * i\n\t}\n\tvar result []int\n\tReduce := func(r int) error {\n\t\tresult = append(result, r)\n\t\treturn nil\n\t}\n\terr := mapreduce(data, goroutineLimit, Map, Reduce)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tfmt.Println(result)\n```\t\t\t\n复杂一点的例子\n```\n\n\tsource := make(chan int)\n\tgo func() {\n\t\tfor i := 0; i &lt; 1000; i++ {\n\t\t\tsource &lt;- i\n\t\t}\n\t\t//！！！通道类型的源要自己关闭\n\t\tclose(source)\n\t}()\n\tMap := func(i int) *string {\n\t\tif i%2 == 0 {\n\t\t\treturn nil\n\t\t}\n\t\ts := strconv.Itoa(i)\n\t\treturn &amp;s\n\t}\n\tvar result []string\n\tReduce := func(r *string) error {\n\t\tif r != nil {\n\t\t\tresult = append(result, *r)\n\t\t}\n\t\treturn nil\n\t}\n\terr := mapreduce(source, goroutineLimit, Map, Reduce)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tfmt.Println(result)\n```\n## 说明\n只有一个mapreduce函数\n```\n\nfunc mapreduce(source interface{}, goroutineLimit int, Map interface{}, Reduce interface{})\n```\n以下说明中的T为任意类型\n* source:chan T or []T\t\t\n\t一个slice或chan类型\n* goroutineLimit:int\n\t并发限制，最多同时执行goroutineLimit个Map函数\n* Map:func(T)... \t\t\n\t只能有一个参数的函数，参数类型要为source中的元素类型,不限制返回值个数和类型，返回值会传给Reduce\n* Reduce:func(...)error\t\t\n\t参数类型和个数要和Map返回值相同\t\t\n\tReduce的返回值如不为空，则等待正在运行的Map结束后，退出mapreduce，返回值为Reduce的返回值\t\t\n\t在多线程执行Map函数后返回的结果传递给Reduce,Reduce时单线程执行，线程安全的",
    "body_html": "<h2 id=\"EasyMapReduce\"><a href=\"https://github.com/myml/EasyMapReduce/blob/master/easyMapReduce.go%20%22EasyMapReduce%22\" title=\"\">EasyMapReduce</a></h2>\n<p>一个简单的 MapReduce 实现</p>\n<h2 id=\"使用\">使用</h2>\n<p>简单的例子</p>\n <pre class=\"highlight plaintext\"><code>//生成数据源\nvar data []int\nfor i := 0; i &amp;lt; 1000; i++ {\n    data = append(data, i)\n}\nMap := func(i int) int {\n    return i * i\n}\nvar result []int\nReduce := func(r int) error {\n    result = append(result, r)\n    return nil\n}\nerr := mapreduce(data, goroutineLimit, Map, Reduce)\nif err != nil {\n    panic(err)\n}\nfmt.Println(result)\n</code></pre> \n<p>复杂一点的例子</p>\n <pre class=\"highlight plaintext\"><code>\nsource := make(chan int)\ngo func() {\n    for i := 0; i &amp;lt; 1000; i++ {\n        source &amp;lt;- i\n    }\n    //！！！通道类型的源要自己关闭\n    close(source)\n}()\nMap := func(i int) *string {\n    if i%2 == 0 {\n        return nil\n    }\n    s := strconv.Itoa(i)\n    return &amp;amp;s\n}\nvar result []string\nReduce := func(r *string) error {\n    if r != nil {\n        result = append(result, *r)\n    }\n    return nil\n}\nerr := mapreduce(source, goroutineLimit, Map, Reduce)\nif err != nil {\n    panic(err)\n}\nfmt.Println(result)\n</code></pre> <h2 id=\"说明\">说明</h2>\n<p>只有一个 mapreduce 函数</p>\n <pre class=\"highlight plaintext\"><code>\nfunc mapreduce(source interface{}, goroutineLimit int, Map interface{}, Reduce interface{})\n</code></pre> \n<p>以下说明中的 T 为任意类型</p>\n\n<ul>\n<li>source:chan T or [] T<br>\n一个 slice 或 chan 类型</li>\n<li>goroutineLimit:int\n并发限制，最多同时执行 goroutineLimit 个 Map 函数</li>\n<li>Map:func(T)...<br>\n只能有一个参数的函数，参数类型要为 source 中的元素类型,不限制返回值个数和类型，返回值会传给 Reduce</li>\n<li>Reduce:func(...) error<br>\n参数类型和个数要和 Map 返回值相同<br>\nReduce 的返回值如不为空，则等待正在运行的 Map 结束后，退出 mapreduce，返回值为 Reduce 的返回值<br>\n在多线程执行 Map 函数后返回的结果传递给 Reduce,Reduce 时单线程执行，线程安全的</li>\n</ul>",
    "hits": 522,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 656,
    "title": "Golang 怎样实现分布式跨机房 api 级别监控任务",
    "created_at": "2017-03-01 11:14:19",
    "updated_at": "2017-08-23 03:37:33",
    "replied_at": "2017-08-23 03:37:33",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2612,
    "last_reply_user_login": "zhipj",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1666,
    "user": "{\"id\": 1666, \"name\": \"netdxy\", \"login\": \"netdxy\", \"avatar\": \"https://gocn.vip/system/letter_avatars/n.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "最近在用 Golang 做一个分布式监控任务，主要是用来监控 api/url 的访问的情况，有些类似 17ce，基调等功能，比如 server 下发一个监测任务到各个 agent，监测 http://www.baidu.com 的访问的情况，各个 agent 将请求的访问的状态码，请求耗时等情况上报到 server 端来负责数据处理展示。\n\n自己 Google 了下该类似的问题，有的人推荐了一些开源的框架，比如小米的 open-falcon，还有  owl 等，但是看了下这类监控主要是用来针对监控主机的运行状态，比如 cpu，io 等情况，和我自己的要做的项目中的监控是不同的。\n\n另外，该项目也需要支持跨机房部署，想请假下技术大神帮忙给推荐一些比较好的符合该需求的开源的框架，或者是一些比较好的建议也都可以，多谢了。",
    "body_html": "<p>最近在用 Golang 做一个分布式监控任务，主要是用来监控 api/url 的访问的情况，有些类似 17ce，基调等功能，比如 server 下发一个监测任务到各个 agent，监测 <a href=\"http://www.baidu.com\" rel=\"nofollow\" target=\"_blank\">http://www.baidu.com</a> 的访问的情况，各个 agent 将请求的访问的状态码，请求耗时等情况上报到 server 端来负责数据处理展示。</p>\n\n<p>自己 Google 了下该类似的问题，有的人推荐了一些开源的框架，比如小米的 open-falcon，还有  owl 等，但是看了下这类监控主要是用来针对监控主机的运行状态，比如 cpu，io 等情况，和我自己的要做的项目中的监控是不同的。</p>\n\n<p>另外，该项目也需要支持跨机房部署，想请假下技术大神帮忙给推荐一些比较好的符合该需求的开源的框架，或者是一些比较好的建议也都可以，多谢了。</p>",
    "hits": 604,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 657,
    "title": "Golang  API 业务监控项目求大神指点",
    "created_at": "2017-03-01 14:11:34",
    "updated_at": "2017-08-22 09:20:27",
    "replied_at": "2017-08-22 09:20:27",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2469,
    "last_reply_user_login": "haoweishow",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1666,
    "user": "{\"id\": 1666, \"name\": \"netdxy\", \"login\": \"netdxy\", \"avatar\": \"https://gocn.vip/system/letter_avatars/n.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "最近在用 Golang 做一个分布式监控任务，主要是用来监控 api/url 的访问的情况，有些类似 17ce，基调，监控宝等云监控功能，比如 server 下发一个监测任务到各个 agent，监测 http://www.baidu.com 的访问的情况，各个 agent 将请求的访问的状态码，请求耗时等情况上报到 server 端来负责数据处理展示。\n\n自己 Google 了下该类似的问题，有的人推荐了一些开源的框架，比如小米的 open-falcon，还有  owl 等，但是看了下这类监控主要是用来针对监控主机的运行状态，比如 cpu，io 等情况，和我自己的要做的项目中的监控是不同的。\n\n另外，该项目也需要支持跨机房部署，想请假下技术大神帮忙给推荐一些比较好的符合该需求的开源的框架，或者是一些比较好的建议也都可以，多谢了。",
    "body_html": "<p>最近在用 Golang 做一个分布式监控任务，主要是用来监控 api/url 的访问的情况，有些类似 17ce，基调，监控宝等云监控功能，比如 server 下发一个监测任务到各个 agent，监测 <a href=\"http://www.baidu.com\" rel=\"nofollow\" target=\"_blank\">http://www.baidu.com</a> 的访问的情况，各个 agent 将请求的访问的状态码，请求耗时等情况上报到 server 端来负责数据处理展示。</p>\n\n<p>自己 Google 了下该类似的问题，有的人推荐了一些开源的框架，比如小米的 open-falcon，还有  owl 等，但是看了下这类监控主要是用来针对监控主机的运行状态，比如 cpu，io 等情况，和我自己的要做的项目中的监控是不同的。</p>\n\n<p>另外，该项目也需要支持跨机房部署，想请假下技术大神帮忙给推荐一些比较好的符合该需求的开源的框架，或者是一些比较好的建议也都可以，多谢了。</p>",
    "hits": 612,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 658,
    "title": "一个诡异的问题",
    "created_at": "2017-03-01 16:01:35",
    "updated_at": "2017-03-01 16:01:35",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1353,
    "user": "{\"id\": 1353, \"name\": \"songtianyi\", \"login\": \"songtianyi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在golang层，http responseWriter write正常，但是就是抓不到包，nginx也没收到这个回包。\n不是必现，但每次出现的时候会伴有arp请求。。\n\n有没有人遇到过？",
    "body_html": "<p>在 golang 层，http responseWriter write 正常，但是就是抓不到包，nginx 也没收到这个回包。\n不是必现，但每次出现的时候会伴有 arp 请求。。</p>\n\n<p>有没有人遇到过？</p>",
    "hits": 323,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 659,
    "title": "关于 二维码 解析",
    "created_at": "2017-03-01 16:47:07",
    "updated_at": "2017-07-22 09:33:28",
    "replied_at": "2017-07-22 09:33:28",
    "replies_count": 13,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1494,
    "last_reply_user_login": "stirlingx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1588,
    "user": "{\"id\": 1588, \"name\": \"zanjs\", \"login\": \"zanjs\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "golang 有没有 二维码 解析的 一些参考呢 ，想通过 二维码图片读取 二维码内容\n\n有大神 知道一下吗",
    "body_html": "<p>golang 有没有 二维码 解析的 一些参考呢 ，想通过 二维码图片读取 二维码内容</p>\n\n<p>有大神 知道一下吗</p>",
    "hits": 740,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 660,
    "title": " 召集：grpc服务docker化，给API-GATEWAY写example",
    "created_at": "2017-03-01 20:05:36",
    "updated_at": "2017-03-09 00:08:37",
    "replied_at": "2017-03-09 00:08:37",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1686,
    "last_reply_user_login": "donaduo",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1564,
    "user": "{\"id\": 1564, \"name\": \"jmzwcn\", \"login\": \"jmzwcn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "不知道哪位有兴趣，可以参与进来，写个服务封装的例子，应用已经写好了，只需要把他们docker化一下。也是作为API-GATEWAY usage的一部分。\n\n具体请参见:https://github.com/jmzwcn/api-gateway",
    "body_html": "<p>不知道哪位有兴趣，可以参与进来，写个服务封装的例子，应用已经写好了，只需要把他们 docker 化一下。也是作为 API-GATEWAY usage 的一部分。</p>\n\n<p>具体请参见:<a href=\"https://github.com/jmzwcn/api-gateway\" rel=\"nofollow\" target=\"_blank\">https://github.com/jmzwcn/api-gateway</a></p>",
    "hits": 405,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 661,
    "title": "初学go，看了雨痕老师的go语言学习笔记，看到最后有点问题",
    "created_at": "2017-03-02 11:44:15",
    "updated_at": "2017-03-03 22:02:20",
    "replied_at": "2017-03-03 22:02:20",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1663,
    "last_reply_user_login": "toyijiu",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 112,
    "user": "{\"id\": 112, \"name\": \"gch\", \"login\": \"gch\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "\t看雨痕老师的go语言学习笔记，上篇讲的基础大概都能看懂。讲下篇源码分析阶段，头大。有看这本书的同学没？\n\t之前写过小的demo，没有写过简单项目。考虑的是先写点demo，然后再慢慢分析源码。有好的建议没？",
    "body_html": "<p>看雨痕老师的 go 语言学习笔记，上篇讲的基础大概都能看懂。讲下篇源码分析阶段，头大。有看这本书的同学没？\n    之前写过小的 demo，没有写过简单项目。考虑的是先写点 demo，然后再慢慢分析源码。有好的建议没？</p>",
    "hits": 626,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 662,
    "title": "sftp如何递归创建目录",
    "created_at": "2017-03-03 22:24:42",
    "updated_at": "2017-03-06 10:02:54",
    "replied_at": "2017-03-06 10:02:28",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 544,
    "last_reply_user_login": "yougg",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1041,
    "user": "{\"id\": 1041, \"name\": \"bt\", \"login\": \"bt\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "各位大神，现想用sftp包实现将本地文件上传到服务器文件上，单个文件上传没有问题，但服务器上如果有目录没有创建的话，这个文件就上传不成功了，比如:\n\n/home/www/a/b/c/d.txt 上传到 服务器的/home/www目录，但服务器上www里没有a、b、c目录，这时候就上传不成功了。\n\n现在想先创建目录后再上传文件，但sftp包中没有找到MkdirAll这种的函数，难道要自己拆分路径一层层的递归创建目录吗，还有更好的方法吗？",
    "body_html": "<p>各位大神，现想用 sftp 包实现将本地文件上传到服务器文件上，单个文件上传没有问题，但服务器上如果有目录没有创建的话，这个文件就上传不成功了，比如:</p>\n\n<p>/home/www/a/b/c/d.txt 上传到 服务器的/home/www 目录，但服务器上 www 里没有 a、b、c 目录，这时候就上传不成功了。</p>\n\n<p>现在想先创建目录后再上传文件，但 sftp 包中没有找到 MkdirAll 这种的函数，难道要自己拆分路径一层层的递归创建目录吗，还有更好的方法吗？</p>",
    "hits": 529,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 663,
    "title": "请教下，websocket能否实现点对点的消息推送以及如何实现？",
    "created_at": "2017-03-04 18:24:56",
    "updated_at": "2017-03-09 20:55:04",
    "replied_at": "2017-03-09 20:55:04",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1344,
    "last_reply_user_login": "皇虫",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1344,
    "user": "{\"id\": 1344, \"name\": \"皇虫\", \"login\": \"1272881215\", \"avatar\": \"https://static.gocn.vip/user/avatar/1344/6acfae.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "假如有三个APP用户，分别是路人甲、乙、丙，都跟同一个websocket接口握手了，如何才能实现消息向指定的路人甲或者路人乙推送？",
    "body_html": "<p>假如有三个 APP 用户，分别是路人甲、乙、丙，都跟同一个 websocket 接口握手了，如何才能实现消息向指定的路人甲或者路人乙推送？</p>",
    "hits": 681,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 664,
    "title": "不同语言session能否共享？比如PHP和go，谁做过类似的东西",
    "created_at": "2017-03-05 13:58:46",
    "updated_at": "2018-03-09 12:54:52",
    "replied_at": "2018-03-09 12:54:52",
    "replies_count": 8,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 882,
    "last_reply_user_login": "chuzhaoqian",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 882,
    "user": "{\"id\": 882, \"name\": \"chuzhaoqian\", \"login\": \"chuzhaoqian\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "不同语言session能否共享？比如PHP和go，谁做过类似的\n\n有没有这方面的知识和意见分享一下\n\n",
    "body_html": "<p>不同语言 session 能否共享？比如 PHP 和 go，谁做过类似的</p>\n\n<p>有没有这方面的知识和意见分享一下</p>",
    "hits": 756,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 665,
    "title": "beego orm 支持存储过程的调用么？",
    "created_at": "2017-03-05 20:15:46",
    "updated_at": "2021-01-16 21:20:34",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 846,
    "user": "{\"id\": 846, \"name\": \"andy\", \"login\": \"andy\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "beego orm 支持mysql的存储过程调用么？ \ncall pro_xxx('xxx');\n翻了下文档，没找到。\n如果支持，如何用？\n\n如果beego orm 不支持，大家有什么其它用法来支持存储过程？\n",
    "body_html": "<p>beego orm 支持 mysql 的存储过程调用么？ \ncall pro_xxx('xxx');\n翻了下文档，没找到。\n如果支持，如何用？</p>\n\n<p>如果 beego orm 不支持，大家有什么其它用法来支持存储过程？</p>",
    "hits": 307,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 666,
    "title": "Golang如何实现文件下载断点续传问题？",
    "created_at": "2017-03-05 22:45:21",
    "updated_at": "2017-03-06 00:33:13",
    "replied_at": "2017-03-06 00:33:13",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 927,
    "last_reply_user_login": "tianzong",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1344,
    "user": "{\"id\": 1344, \"name\": \"皇虫\", \"login\": \"1272881215\", \"avatar\": \"https://static.gocn.vip/user/avatar/1344/6acfae.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题。\n在网上查找了资料，说是在请求头中增加一个Range,但是我加进去了，还是没法实现文件下载时的断点续传。\n比如这篇文章上的示例（示例代码是2011年的了，尽管它的代码在新版本的golang中不能正常运行，但是原理还是比较清晰）http://www.tuicool.com/articles/Yfqmuu",
    "body_html": "<p>如题。\n在网上查找了资料，说是在请求头中增加一个 Range,但是我加进去了，还是没法实现文件下载时的断点续传。\n比如这篇文章上的示例（示例代码是 2011 年的了，尽管它的代码在新版本的 golang 中不能正常运行，但是原理还是比较清晰）<a href=\"http://www.tuicool.com/articles/Yfqmuu\" rel=\"nofollow\" target=\"_blank\">http://www.tuicool.com/articles/Yfqmuu</a></p>",
    "hits": 253,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 667,
    "title": "golang 原生获取客户端ip",
    "created_at": "2017-03-06 12:52:14",
    "updated_at": "2017-03-07 13:14:01",
    "replied_at": "2017-03-07 13:14:01",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 45,
    "user": "{\"id\": 45, \"name\": \"小张的烦恼\", \"login\": \"zhangyumingtfr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "\n使用原生的go，怎么获取客户端的ip地址啊？使用remoteaddr或者http.Request.Remote??\n哪位大神能给段代码",
    "body_html": "<p>使用原生的 go，怎么获取客户端的 ip 地址啊？使用 remoteaddr 或者 http.Request.Remote??\n哪位大神能给段代码</p>",
    "hits": 473,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 668,
    "title": "Golang 的框架或者包有听说过有漏洞的么？",
    "created_at": "2017-03-07 09:43:56",
    "updated_at": "2017-03-07 13:00:07",
    "replied_at": "2017-03-07 13:00:07",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 124,
    "user": "{\"id\": 124, \"name\": \"mnhkahn\", \"login\": \"mnhkahn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "感觉 Golang 应用不算少了，居然还没听过有啥漏洞。大家听说过可以说来听听。",
    "body_html": "<p>感觉 Golang 应用不算少了，居然还没听过有啥漏洞。大家听说过可以说来听听。</p>",
    "hits": 404,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 669,
    "title": "求推荐或分享go并发编程方面的资源。谢谢",
    "created_at": "2017-03-07 17:03:03",
    "updated_at": "2017-03-09 21:34:54",
    "replied_at": "2017-03-09 21:34:54",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1438,
    "last_reply_user_login": "yang11",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1655,
    "user": "{\"id\": 1655, \"name\": \"hutaishi\", \"login\": \"hutaishi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题所述。谢谢大家",
    "body_html": "<p>如题所述。谢谢大家</p>",
    "hits": 391,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 670,
    "title": "我的pprof后生成的火焰图，大家帮忙分析分析",
    "created_at": "2017-03-07 17:51:29",
    "updated_at": "2017-03-07 21:18:27",
    "replied_at": "2017-03-07 21:18:27",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 271,
    "last_reply_user_login": "cholerae",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 124,
    "user": "{\"id\": 124, \"name\": \"mnhkahn\", \"login\": \"mnhkahn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "![](http://cyeam.qiniudn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20170307174551.png)\n\n如上图，我看最大的应该是`type..eq.runtime.Frame`搜了一通没找到`Frame`是啥，这个应该是runtime包里面的一个函数吧。大家都了解的么？\n\nGo 版本 1.5.2",
    "body_html": "<p><img src=\"http://cyeam.qiniudn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20170307174551.png\" title=\"\" alt=\"\"></p>\n\n<p>如上图，我看最大的应该是<code>type..eq.runtime.Frame</code>搜了一通没找到<code>Frame</code>是啥，这个应该是 runtime 包里面的一个函数吧。大家都了解的么？</p>\n\n<p>Go 版本 1.5.2</p>",
    "hits": 312,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 671,
    "title": "关于scan",
    "created_at": "2017-03-08 16:45:42",
    "updated_at": "2017-03-08 16:45:42",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1056,
    "user": "{\"id\": 1056, \"name\": \"lifesohard\", \"login\": \"lifesohard\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\nfunc main() {\n\t  var a int\n\t  fmt.Println(&quot;请输入数据&quot;)\n  // input qw10 10\n  // 好像是第一次读取错误后，第二个fscan是从qw10的w10开始的 第二次错误后第三次scan是从10开始的\n  // 怎么个原理\n\t  fmt.Fscan(os.Stdin,&amp;a)\n\t  fmt.Fscan(os.Stdin,&amp;a)\n\t  fmt.Fscan(os.Stdin,&amp;a)\n\t  fmt.Println(&quot;结果是&quot;,a)\n}\n\n```",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n      <span class=\"k\">var</span> <span class=\"n\">a</span> <span class=\"kt\">int</span>\n      <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">请输入数据</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n  <span class=\"c\">// input qw10 10</span>\n  <span class=\"c\">// 好像是第一次读取错误后，第二个fscan是从qw10的w10开始的 第二次错误后第三次scan是从10开始的</span>\n  <span class=\"c\">// 怎么个原理</span>\n      <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Fscan</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Stdin</span><span class=\"p\">,</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">a</span><span class=\"p\">)</span>\n      <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Fscan</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Stdin</span><span class=\"p\">,</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">a</span><span class=\"p\">)</span>\n      <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Fscan</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">Stdin</span><span class=\"p\">,</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">a</span><span class=\"p\">)</span>\n      <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">结果是</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n</code></pre> ",
    "hits": 327,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 672,
    "title": "goquery 怎么抓取https的网页内容? ",
    "created_at": "2017-03-09 09:49:01",
    "updated_at": "2017-03-09 10:42:11",
    "replied_at": "2017-03-09 10:42:11",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1353,
    "last_reply_user_login": "songtianyi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1472,
    "user": "{\"id\": 1472, \"name\": \"null\", \"login\": \"null\", \"avatar\": \"https://gocn.vip/system/letter_avatars/n.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题,  我在用goquery抓取网页的时候遇到https的网页无法获取到内容 怎么抓取https的网页内容? ",
    "body_html": "<p>如题,  我在用 goquery 抓取网页的时候遇到 https 的网页无法获取到内容 怎么抓取 https 的网页内容? </p>",
    "hits": 311,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 673,
    "title": "请问有没有比较好的分布式系统监控项目？",
    "created_at": "2017-03-10 14:04:51",
    "updated_at": "2017-08-21 10:41:27",
    "replied_at": "2017-08-21 10:40:52",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2252,
    "last_reply_user_login": "fiisio",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2,
    "user": "{\"id\": 2, \"name\": \"xiemengjun\", \"login\": \"xiemengjun\", \"avatar\": \"https://static.gocn.vip/user/avatar/2/9fa872.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "用途：\n\n解决这类问题： 项目故障频发，内部关系错综复杂，故障定位缓慢，甚至找不到问题根源。\n要求：不能影响现有系统的性能和稳定性。\n\n谢谢。",
    "body_html": "<p>用途：</p>\n\n<p>解决这类问题： 项目故障频发，内部关系错综复杂，故障定位缓慢，甚至找不到问题根源。\n要求：不能影响现有系统的性能和稳定性。</p>\n\n<p>谢谢。</p>",
    "hits": 643,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 674,
    "title": "求个不用ssh什么配置的git或者svn？一个项目哪需要这么大的版本控制系统",
    "created_at": "2017-03-11 08:13:23",
    "updated_at": "2017-03-11 22:07:28",
    "replied_at": "2017-03-11 22:07:28",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 545,
    "last_reply_user_login": "localvar",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "版本控制工具应当轻量\n如果，sqlite都装不下，估计也该上市了\n我们平时用用小点\n不要去配置什么ssh，浪费生命，谁来盗你哦。。",
    "body_html": "<p>版本控制工具应当轻量\n如果，sqlite 都装不下，估计也该上市了\n我们平时用用小点\n不要去配置什么 ssh，浪费生命，谁来盗你哦。。</p>",
    "hits": 418,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 675,
    "title": "关于go qt",
    "created_at": "2017-03-11 12:28:09",
    "updated_at": "2017-03-13 19:03:55",
    "replied_at": "2017-03-13 19:03:55",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1494,
    "last_reply_user_login": "stirlingx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 962,
    "user": "{\"id\": 962, \"name\": \"codinghxl\", \"login\": \"codinghxl\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "https://github.com/therecipe/qt\n这个项目是否做的不错，一直在更新，但是我感觉文档不好。\n配置起来挺麻烦，编译测试也很麻烦。\n论坛有人研究这个项目吗？或者其他Go-Qt项目，有比较全面的教程的。\n",
    "body_html": "<p><a href=\"https://github.com/therecipe/qt\" rel=\"nofollow\" target=\"_blank\">https://github.com/therecipe/qt</a>\n这个项目是否做的不错，一直在更新，但是我感觉文档不好。\n配置起来挺麻烦，编译测试也很麻烦。\n论坛有人研究这个项目吗？或者其他 Go-Qt 项目，有比较全面的教程的。</p>",
    "hits": 453,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 676,
    "title": "有什么点对点方案么，都是家用机的情况，最好不要中间服务器",
    "created_at": "2017-03-12 12:12:52",
    "updated_at": "2017-03-13 12:59:54",
    "replied_at": "2017-03-13 12:59:54",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 134,
    "last_reply_user_login": "九命猫",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 193,
    "user": "{\"id\": 193, \"name\": \"philosophia14\", \"login\": \"philosophia14\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "都没有公网固定ip\n我感觉是需要中转服务期的\n\n不知道有没有孤陋寡闻，不带中间服务器的",
    "body_html": "<p>都没有公网固定 ip\n我感觉是需要中转服务期的</p>\n\n<p>不知道有没有孤陋寡闻，不带中间服务器的</p>",
    "hits": 499,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 677,
    "title": "redis pool 设置多少合适",
    "created_at": "2017-03-14 15:19:44",
    "updated_at": "2017-03-14 15:19:44",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1331,
    "user": "{\"id\": 1331, \"name\": \"kakashi\", \"login\": \"kakashi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "用golang连接redis\n使用 github.com/mediocregopher/radix.v2 client\n其中 pool 依据什么来计算设置多少合适\n需要注意什么\n",
    "body_html": "<p>用 golang 连接 redis\n使用 github.com/mediocregopher/radix.v2 client\n其中 pool 依据什么来计算设置多少合适\n需要注意什么</p>",
    "hits": 337,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 678,
    "title": "Linux下使用syscall包 提示undefined: syscall.NewLazyDLL",
    "created_at": "2017-03-14 15:48:07",
    "updated_at": "2017-03-15 15:35:32",
    "replied_at": "2017-03-15 15:35:32",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1410,
    "last_reply_user_login": "fanyang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 40,
    "user": "{\"id\": 40, \"name\": \"SoloMagic\", \"login\": \"SoloMagic\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "百度查了下 好像只能window下用 那请问Linux怎么调用Dll啊\n小白一个 谢谢指教啊",
    "body_html": "<p>百度查了下 好像只能 window 下用 那请问 Linux 怎么调用 Dll 啊\n小白一个 谢谢指教啊</p>",
    "hits": 654,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 679,
    "title": "go http request reader 内存不释放  大神来分析分析",
    "created_at": "2017-03-14 16:47:47",
    "updated_at": "2017-03-15 16:33:45",
    "replied_at": "2017-03-15 16:32:04",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1700,
    "last_reply_user_login": "lwt",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1700,
    "user": "{\"id\": 1700, \"name\": \"lwt\", \"login\": \"lwt\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\n            nbuf := make([]byte, 0, len(buf))\n            num := copy(nbuf, buf) \n            fmt.Printf(&quot;-------copy num:%d\\n&quot;, num) \n            if req, err = http.NewRequest(&quot;POST&quot;, uri, bytes.NewReader(nbuf)); err != nil {\n                return\n            }    \n\n            for key, _ := range params {\n                req.Header.Set(key, params.Get(key))\n            }    \n            req.Header.Set(&quot;Content-Type&quot;, &quot;application/octet-stream&quot;)\n            req.Header.Set(&quot;Content-Length&quot;, strconv.Itoa(len(buf)))\n\n```",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"n\">nbuf</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">([]</span><span class=\"kt\">byte</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">))</span>\n<span class=\"n\">num</span> <span class=\"o\">:=</span> <span class=\"nb\">copy</span><span class=\"p\">(</span><span class=\"n\">nbuf</span><span class=\"p\">,</span> <span class=\"n\">buf</span><span class=\"p\">)</span> \n<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">-------</span><span class=\"nb\">copy</span> <span class=\"n\">num</span><span class=\"o\">:%</span><span class=\"n\">d</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">num</span><span class=\"p\">)</span> \n<span class=\"k\">if</span> <span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">NewRequest</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">POST</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">uri</span><span class=\"p\">,</span> <span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"n\">NewReader</span><span class=\"p\">(</span><span class=\"n\">nbuf</span><span class=\"p\">));</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span>\n<span class=\"p\">}</span>    \n\n<span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">params</span> <span class=\"p\">{</span>\n    <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">Header</span><span class=\"o\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">.</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>    \n<span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">Header</span><span class=\"o\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Content</span><span class=\"o\">-</span><span class=\"n\">Type</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">application</span><span class=\"o\">/</span><span class=\"n\">octet</span><span class=\"o\">-</span><span class=\"n\">stream</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">Header</span><span class=\"o\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Content</span><span class=\"o\">-</span><span class=\"n\">Length</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">strconv</span><span class=\"o\">.</span><span class=\"n\">Itoa</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">)))</span>\n\n</code></pre> ",
    "hits": 399,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 680,
    "title": "寻 Go 开源运维监控系统",
    "created_at": "2017-03-15 17:06:30",
    "updated_at": "2017-04-25 23:00:43",
    "replied_at": "2017-04-25 23:00:43",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1812,
    "last_reply_user_login": "t0n9",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 962,
    "user": "{\"id\": 962, \"name\": \"codinghxl\", \"login\": \"codinghxl\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "请问有开源的Golang写的运维监控系统吗？\n目前我需要功能有：\n1.监控每台服务器上的进程，如果进程挂了，发短信or邮件报警。\n2.监控新进程，比如突然多了一个新启动的进程，发短信or邮件报警。\n3.推送一个配置文件到指定服务器，指定目录。\n4.最好有运维界面。",
    "body_html": "<p>请问有开源的 Golang 写的运维监控系统吗？\n目前我需要功能有：\n1.监控每台服务器上的进程，如果进程挂了，发短信 or 邮件报警。\n2.监控新进程，比如突然多了一个新启动的进程，发短信 or 邮件报警。\n3.推送一个配置文件到指定服务器，指定目录。\n4.最好有运维界面。</p>",
    "hits": 457,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 681,
    "title": "beego 1.8.0 版本发布了？",
    "created_at": "2017-03-16 08:45:40",
    "updated_at": "2021-01-20 13:33:56",
    "replied_at": "2017-03-16 09:49:50",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 570,
    "last_reply_user_login": "kaixinmao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1344,
    "user": "{\"id\": 1344, \"name\": \"皇虫\", \"login\": \"1272881215\", \"avatar\": \"https://static.gocn.vip/user/avatar/1344/6acfae.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "昨晚打开beego官网( https://beego.me )，发现首页那里放出了stable 1.8.0，但是查看开发文档的“发布版本”却没看到相关内容。",
    "body_html": "<p>昨晚打开 beego 官网 ( <a href=\"https://beego.me\" rel=\"nofollow\" target=\"_blank\">https://beego.me</a> )，发现首页那里放出了 stable 1.8.0，但是查看开发文档的 “发布版本” 却没看到相关内容。</p>",
    "hits": 275,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 682,
    "title": "golang的三方包管理依赖",
    "created_at": "2017-03-16 12:03:42",
    "updated_at": "2017-03-16 17:28:17",
    "replied_at": "2017-03-16 17:27:47",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1337,
    "last_reply_user_login": "caibirdme",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1396,
    "user": "{\"id\": 1396, \"name\": \"rsj217\", \"login\": \"rsj217\", \"avatar\": \"https://gocn.vip/system/letter_avatars/r.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "求助 ， 老师们，你们都用什么管理golang的三方包。\n\n粗略的看了下Godep和gopm，那个更靠谱呢。\n\n还有一个网站 gopkg.in 。有一个应用依赖上面的一个包，而那个包无法下载，直接使用go get安装源码又出现在github.com的目录下。这种情况如何处理比较好呢？目前是手动copy github.com 目录下的包到 gopkg.in 的文件夹内。\n\n",
    "body_html": "<p>求助 ， 老师们，你们都用什么管理 golang 的三方包。</p>\n\n<p>粗略的看了下 Godep 和 gopm，那个更靠谱呢。</p>\n\n<p>还有一个网站 gopkg.in 。有一个应用依赖上面的一个包，而那个包无法下载，直接使用 go get 安装源码又出现在 github.com 的目录下。这种情况如何处理比较好呢？目前是手动 copy github.com 目录下的包到 gopkg.in 的文件夹内。</p>",
    "hits": 553,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 683,
    "title": "关于negroni框架的一些疑惑",
    "created_at": "2017-03-16 22:10:05",
    "updated_at": "2017-03-17 11:48:16",
    "replied_at": "2017-03-17 11:48:16",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 3,
    "last_reply_user_login": "傅小黑",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1663,
    "user": "{\"id\": 1663, \"name\": \"toyijiu\", \"login\": \"toyijiu\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "## 初学go，最近两天在看negroni的框架代码，现在看了个大概，有些地方不是很明白，有几个疑惑想请教下\n\n- 自定义的路由表用了middleware这个链表和handler的一个slice。用两个的目的是什么呢，用一个的话我理解也可以吧.我第一眼看到这个脑袋里冒出来的是Mark-Sweep算法。。。\n- 注释说handlers 是 can be，middleware 是 已评估的。这两个是什么意思呢，我看初始化的时候都是直接把注册的*ServeMux搞进去\n```go\n// Negroni is a stack of Middleware Handlers that can be invoked as an http.Handler.\n// Negroni middleware is evaluated in the order that they are added to the stack using\n// the Use and UseHandler methods.\ntype Negroni struct {\n\tmiddleware middleware\n\thandlers   []Handler\n}\n```\n\n```go\n// UseHandler adds a http.Handler onto the middleware stack. Handlers are invoked in the order they are added to a Negroni.\nfunc (n *Negroni) UseHandler(handler http.Handler) {\n\tn.Use(Wrap(handler))\n}\n```\n\n```go\n// Use adds a Handler onto the middleware stack. Handlers are invoked in the order they are added to a Negroni.\nfunc (n *Negroni) Use(handler Handler) {\n\tif handler == nil {\n\t\tpanic(&quot;handler cannot be nil&quot;)\n\t}\n\n\tn.handlers = append(n.handlers, handler)\n\tn.middleware = build(n.handlers)\n}\n```\n\n```go\nfunc build(handlers []Handler) middleware {\n\tvar next middleware\n\n\tif len(handlers) == 0 {\n\t\treturn voidMiddleware()\n\t} else if len(handlers) &gt; 1 {\n\t\tnext = build(handlers[1:])\n\t} else {\n\t\tnext = voidMiddleware()\n\t}\n\n\treturn middleware{handlers[0], &amp;next}\n}\n```",
    "body_html": "<h2 id=\"初学go，最近两天在看negroni的框架代码，现在看了个大概，有些地方不是很明白，有几个疑惑想请教下\">初学 go，最近两天在看 negroni 的框架代码，现在看了个大概，有些地方不是很明白，有几个疑惑想请教下</h2>\n<ul>\n<li>自定义的路由表用了 middleware 这个链表和 handler 的一个 slice。用两个的目的是什么呢，用一个的话我理解也可以吧.我第一眼看到这个脑袋里冒出来的是 Mark-Sweep 算法。。。</li>\n<li>注释说 handlers 是 can be，middleware 是 已评估的。这两个是什么意思呢，我看初始化的时候都是直接把注册的 *ServeMux 搞进去\n<code>go\n// Negroni is a stack of Middleware Handlers that can be invoked as an http.Handler.\n// Negroni middleware is evaluated in the order that they are added to the stack using\n// the Use and UseHandler methods.\ntype Negroni struct {\nmiddleware middleware\nhandlers   []Handler\n}\n</code>\n</li>\n</ul>\n <pre class=\"highlight go\"><code><span class=\"c\">// UseHandler adds a http.Handler onto the middleware stack. Handlers are invoked in the order they are added to a Negroni.</span>\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">*</span><span class=\"n\">Negroni</span><span class=\"p\">)</span> <span class=\"n\">UseHandler</span><span class=\"p\">(</span><span class=\"n\">handler</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Handler</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">Use</span><span class=\"p\">(</span><span class=\"n\">Wrap</span><span class=\"p\">(</span><span class=\"n\">handler</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n</code></pre>  <pre class=\"highlight go\"><code><span class=\"c\">// Use adds a Handler onto the middleware stack. Handlers are invoked in the order they are added to a Negroni.</span>\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">*</span><span class=\"n\">Negroni</span><span class=\"p\">)</span> <span class=\"n\">Use</span><span class=\"p\">(</span><span class=\"n\">handler</span> <span class=\"n\">Handler</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"n\">handler</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"nb\">panic</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">handler</span> <span class=\"n\">cannot</span> <span class=\"n\">be</span> <span class=\"no\">nil</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">handlers</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">handlers</span><span class=\"p\">,</span> <span class=\"n\">handler</span><span class=\"p\">)</span>\n    <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">middleware</span> <span class=\"o\">=</span> <span class=\"n\">build</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">handlers</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre>  <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">build</span><span class=\"p\">(</span><span class=\"n\">handlers</span> <span class=\"p\">[]</span><span class=\"n\">Handler</span><span class=\"p\">)</span> <span class=\"n\">middleware</span> <span class=\"p\">{</span>\n    <span class=\"k\">var</span> <span class=\"n\">next</span> <span class=\"n\">middleware</span>\n\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">handlers</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">voidMiddleware</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">handlers</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"m\">1</span> <span class=\"p\">{</span>\n        <span class=\"n\">next</span> <span class=\"o\">=</span> <span class=\"n\">build</span><span class=\"p\">(</span><span class=\"n\">handlers</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"o\">:</span><span class=\"p\">])</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"n\">next</span> <span class=\"o\">=</span> <span class=\"n\">voidMiddleware</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">middleware</span><span class=\"p\">{</span><span class=\"n\">handlers</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">],</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">next</span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 504,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 684,
    "title": "关于go_plinq代码中遇到的问题",
    "created_at": "2017-03-19 22:18:51",
    "updated_at": "2017-04-01 13:52:04",
    "replied_at": "2017-03-20 15:08:00",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1715,
    "last_reply_user_login": "fenghai_hhf",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1715,
    "user": "{\"id\": 1715, \"name\": \"fenghai_hhf\", \"login\": \"fenghai_hhf\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "下载了fanliao的go_plinq代码，其中有个问题一直困扰着我。代码中有一行是这样的：\n```go\nvar _ = fmt.Println //for debugger\n```\n这句话从注释来看是为了调试，实在没有理解这个语句的作用。请大家帮忙回答解释一下。",
    "body_html": "<p>下载了 fanliao 的 go_plinq 代码，其中有个问题一直困扰着我。代码中有一行是这样的：</p>\n <pre class=\"highlight go\"><code><span class=\"k\">var</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span> <span class=\"c\">//for debugger</span>\n</code></pre> \n<p>这句话从注释来看是为了调试，实在没有理解这个语句的作用。请大家帮忙回答解释一下。</p>",
    "hits": 619,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 685,
    "title": "不同方式导引代码导致一个变量有两个地址",
    "created_at": "2017-03-20 11:58:51",
    "updated_at": "2017-03-20 14:57:42",
    "replied_at": "2017-03-20 14:43:21",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1663,
    "last_reply_user_login": "toyijiu",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1716,
    "user": "{\"id\": 1716, \"name\": \"gogoa\", \"login\": \"gogoa\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "代码结构是这样的：\n\n- test\n\t- main.go\n\t- p1\n\t\t- test.go\n\t- p2\n\t\t- test.go\n\n\n`main.go`的代码是 \n```go\npackage main\nimport (\n\t_ &quot;./p1&quot;\n\t&quot;./p2&quot;\n)\nfunc main() {\n\tp2.Print()\n}\n\n```\n\n`p1.test.go `的代码是\n\n```go\npackage p1\nimport (\n\t&quot;test/p2&quot;\n)\nfunc init() {\n\tp2.Print()\n}\n\n```\n\n`p2.test.go`的代码是\n\n```go\npackage p2\n\nimport (\n\t&quot;fmt&quot;\n)\n\nvar a int\n\nfunc Print() {\n\tfmt.Printf(&quot;%p\\n&quot;, &amp;a)\n}\n\n```\n\n输出\n\n```\n0x1127ac0\n0x1127938\n```\n如果修改 `p1.test` 的导入方式为\n```\nimport (\n\t&quot;../p2&quot;\n)\n```\n就正常\n\n\n![截图](http://p1.bqimg.com/567571/d1e4f87f6c613053.jpg &quot;截图&quot;)\n\n",
    "body_html": "<p>代码结构是这样的：</p>\n\n<ul>\n<li>test\n\n<ul>\n<li>main.go</li>\n<li>p1\n\n<ul>\n<li>test.go</li>\n</ul>\n</li>\n<li>p2\n\n<ul>\n<li>test.go</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n\n<p><code>main.go</code>的代码是 </p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">_</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">./</span><span class=\"n\">p1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">./</span><span class=\"n\">p2</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">p2</span><span class=\"o\">.</span><span class=\"n\">Print</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n\n</code></pre> \n<p><code>p1.test.go</code>的代码是</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">p1</span>\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">p2</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n<span class=\"k\">func</span> <span class=\"n\">init</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">p2</span><span class=\"o\">.</span><span class=\"n\">Print</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n\n</code></pre> \n<p><code>p2.test.go</code>的代码是</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">p2</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">var</span> <span class=\"n\">a</span> <span class=\"kt\">int</span>\n\n<span class=\"k\">func</span> <span class=\"n\">Print</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">%</span><span class=\"n\">p</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n</code></pre> \n<p>输出</p>\n <pre class=\"highlight plaintext\"><code>0x1127ac0\n0x1127938\n</code></pre> \n<p>如果修改 <code>p1.test</code> 的导入方式为</p>\n <pre class=\"highlight plaintext\"><code>import (\n    &amp;quot;../p2&amp;quot;\n)\n</code></pre> \n<p>就正常</p>\n\n<p><img src=\"http://p1.bqimg.com/567571/d1e4f87f6c613053.jpg\" title=\"&quot;截图&quot;\" alt=\"截图\"></p>",
    "hits": 518,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 686,
    "title": "GopherChina大会门票多了一张, 转手, 要的联系",
    "created_at": "2017-03-20 15:27:40",
    "updated_at": "2017-04-10 11:49:53",
    "replied_at": "2017-04-10 11:49:53",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1073,
    "last_reply_user_login": "FancyGo",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1073,
    "user": "{\"id\": 1073, \"name\": \"FancyGo\", \"login\": \"FancyGo\", \"avatar\": \"https://static.gocn.vip/user/avatar/1073/a6d075.jpg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题, 联系qq717632318",
    "body_html": "<p>如题, 联系 qq717632318</p>",
    "hits": 323,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 687,
    "title": "Beego框架多点登陆只留最后一个，Session有关问题",
    "created_at": "2017-03-20 21:04:21",
    "updated_at": "2021-01-16 21:20:31",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1718,
    "user": "{\"id\": 1718, \"name\": \"jsharkc\", \"login\": \"jsharkc\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我用 map[]struct{} 做了一个用户id 和 用户结构的映射， session store 存在 用户结构 里边，我想，如果用同一个 id 登录，第二个登录时，把第一个登录的 session store 删除掉，好让第一个登录的被踢出去，可是 我用 controller.CruSession 存储到那个映射 map 里面去，Flush() 了以后，第一个登录的依然可以从 Session 中获取到数据，该怎么办呢，或者大家有什么更好的办法  告诉我一下！谢谢！~",
    "body_html": "<p>我用 map[] struct{} 做了一个用户 id 和 用户结构的映射， session store 存在 用户结构 里边，我想，如果用同一个 id 登录，第二个登录时，把第一个登录的 session store 删除掉，好让第一个登录的被踢出去，可是 我用 controller.CruSession 存储到那个映射 map 里面去，Flush() 了以后，第一个登录的依然可以从 Session 中获取到数据，该怎么办呢，或者大家有什么更好的办法  告诉我一下！谢谢！~</p>",
    "hits": 298,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 688,
    "title": "前端传一个数字，怎么转换成os.FileMode类型",
    "created_at": "2017-03-21 15:40:15",
    "updated_at": "2017-03-21 17:07:53",
    "replied_at": "2017-03-21 17:07:53",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1720,
    "last_reply_user_login": "kang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1720,
    "user": "{\"id\": 1720, \"name\": \"kang\", \"login\": \"kang\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "项目里有修改文件权限的功能，前端传一个数字，比如755，或者0755，调用os.chmod去修改权限。\n\n目前的代码转成出来少了前面的一个0，然后chmod出来的结果不对了。\n\tfunc chmod(w http.ResponseWriter, r *http.Request) {\n\t\tfileMode := myutils.Intval(r.FormValue(&quot;mod&quot;))\n\t\tf := os.FileMode(fileMode)\n\t｝\n有哪位做过类似功能的同学帮忙看看吗。多谢。",
    "body_html": "<p>项目里有修改文件权限的功能，前端传一个数字，比如 755，或者 0755，调用 os.chmod 去修改权限。</p>\n\n<p>目前的代码转成出来少了前面的一个 0，然后 chmod 出来的结果不对了。\n    func chmod(w http.ResponseWriter, r *http.Request) {\n        fileMode := myutils.Intval(r.FormValue(\"mod\"))\n        f := os.FileMode(fileMode)\n    ｝\n有哪位做过类似功能的同学帮忙看看吗。多谢。</p>",
    "hits": 85,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 689,
    "title": "【七牛云】Android OpenGL 开发工程师（上海）",
    "created_at": "2017-03-21 22:19:26",
    "updated_at": "2017-03-21 22:19:26",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 477,
    "user": "{\"id\": 477, \"name\": \"七小牛来招聘\", \"login\": \"xiamengru\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "# 岗位职责\n参与 Windows 多媒体 SDK 的设计与开发\n\n# 任职要求\n良好的数据结构和算法基础, 良好的工程素养以及关于 Paper, IETF RFC 与 Open Source 的基本阅读与理解能力\n精通 C/C++，熟悉 QT 应用开发框架\n熟悉 Windows 多媒体技术，熟悉 Windows下网络编程，多线程编程\n熟悉 TCP/IP 协议，有一定的网络通信开发经验\n拥有良好的编码习惯, 热爱多媒体研发工作, 喜欢创新挑战, 自我驱动能力强, 具备良好的沟通能力和团队协作精神\n\n# 加分项\n维护过开源项目\n有任意客户端 SDK 开发经验\n具备 OpenCV, OpenGL 开发经验\n熟悉 FFmpeg, GStreamer, VLC, WebRTC 等多媒体开源项目\n熟悉 H.264/HEVC, 熟悉 AAC、FLV、TS、MP4 等多媒体容器封装标准\n熟悉 WebRTC/RTP/RTMP/HLS/DASH 等相关协议规范\n\n期望薪资:13k-26k\n\n工作地点：上海上海浦东新区亮秀路112号Y1座310室\n简历投递：xiamengru@qiniu.com\n",
    "body_html": "<h2 id=\"岗位职责\">岗位职责</h2>\n<p>参与 Windows 多媒体 SDK 的设计与开发</p>\n<h2 id=\"任职要求\">任职要求</h2>\n<p>良好的数据结构和算法基础, 良好的工程素养以及关于 Paper, IETF RFC 与 Open Source 的基本阅读与理解能力\n精通 C/C++，熟悉 QT 应用开发框架\n熟悉 Windows 多媒体技术，熟悉 Windows 下网络编程，多线程编程\n熟悉 TCP/IP 协议，有一定的网络通信开发经验\n拥有良好的编码习惯, 热爱多媒体研发工作, 喜欢创新挑战, 自我驱动能力强, 具备良好的沟通能力和团队协作精神</p>\n<h2 id=\"加分项\">加分项</h2>\n<p>维护过开源项目\n有任意客户端 SDK 开发经验\n具备 OpenCV, OpenGL 开发经验\n熟悉 FFmpeg, GStreamer, VLC, WebRTC 等多媒体开源项目\n熟悉 H.264/HEVC, 熟悉 AAC、FLV、TS、MP4 等多媒体容器封装标准\n熟悉 WebRTC/RTP/RTMP/HLS/DASH 等相关协议规范</p>\n\n<p>期望薪资:13k-26k</p>\n\n<p>工作地点：上海上海浦东新区亮秀路 112 号 Y1 座 310 室\n简历投递：xiamengru@qiniu.com</p>",
    "hits": 345,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 690,
    "title": "基于 Gin 的 Go 前端组件化 web 框架",
    "created_at": "2017-03-21 22:49:33",
    "updated_at": "2017-03-23 14:49:21",
    "replied_at": "2017-03-23 14:48:50",
    "replies_count": 2,
    "node_name": "Gin",
    "node_id": 13,
    "last_reply_user_id": 183,
    "last_reply_user_login": "veni",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 183,
    "user": "{\"id\": 183, \"name\": \"veni\", \"login\": \"veni\", \"avatar\": \"https://gocn.vip/system/letter_avatars/v.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "基于 Gin 的 Go (风格)轻量高效的前端组件化 web 框架，这是一项正在完善的工作\n\nEgo 是一个用 Go 编写的全栈 Web 框架，轻量级和高效的前端组件解决方案\n\n前端编译执行，不影响后端效率\n\n项目地址: https://github.com/go-ego/ego\n\n安装:\n```\ngo get -u github.com/go-ego/ego\n```\n\n例子: https://github.com/go-ego/ego/tree/master/examples/ego\n\n路由\n\n```go\npackage main\n\nimport (\n\t&quot;github.com/go-ego/ego&quot;\n)\n\nfunc main() {\n\n\trouter := ego.Classic()\n\tego.UseRenders()\n\n\trouter.GlobHTML(&quot;views/html/*&quot;)\n\n\tparArr := [5]int{1, 2, 3, 4, 5}\n\trouter.Ego(&quot;/head/&quot;, &quot;head/head.html&quot;, ego.Map{\n\t\t&quot;head&quot;:   &quot;Test to load the HTML template&quot;,\n\t\t&quot;parArr&quot;: parArr,\n\t})\n\n\trouter.Run(&quot;:3100&quot;)\n}\n```\nicon.vgo\n\n```html\n&lt;div class=&quot;icon&quot;&gt;\n\t&lt;i class=&quot;iconfont {vclass}&quot; {node}&gt;&lt;/i&gt;\n\t&lt;p&gt;{prpo}&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;style&gt;\n\n.header-left{\n\tfloat:left;\n}\n\n.header-right{\n\tfloat:right;\n}\n\n.iconfont {\n  position: relative;\n  font-size:24px\n}\n&lt;/style&gt;\n```\nhead.vgo\n```\nimport (\n\t&quot;icons&quot;\n\ticon &quot;icons/icon.vgo&quot;\n\t)\n\n&lt;div class=&quot;head&quot;&gt;\n\t&lt;div&gt;ego:{{.head}}&lt;/div&gt;\n\n\t&lt;icon&gt;\n\t\tvclass={icon-share-to}\n\t\tnode={ id=&quot;slot1&quot;}\n\t\tprpo={node---1}\n\t&lt;/icon&gt;\n\n\t&lt;div&gt;\n\t\t{{range .parArr}}\n\t        &lt;p&gt;arr::: {{.}}&lt;/p&gt;\n\t\t{{end}}\n\t&lt;/div&gt;\n\n&lt;/div&gt;\n```\n\n效果图:\nhttps://github.com/go-ego/ego/blob/master/img/head.png\n\n另外写了一个Json预览和测试页面:\n```Go\npackage main\n\nimport (\n\t&quot;github.com/go-ego/ego&quot;\n)\n\nconst httpUrl string = &quot;http://127.0.0.1:3000&quot;\n\nfunc main() {\n\n  router := ego.Classic()\n\n  router.Static(&quot;/js&quot;, &quot;./views/js&quot;)\n  router.Static(&quot;/src&quot;, &quot;./views/src&quot;)\n  router.GlobHTML(&quot;views/html/*&quot;)\n\n  strUrl := httpUrl + &quot;/test/hlist&quot;\n  paramMap := ego.Map{\n    &quot;lon&quot;:  &quot;10.1010101&quot;,\n    &quot;lat&quot;:  &quot;20.202020&quot;,\n    &quot;type&quot;: &quot;1&quot;,\n  }\n  router.TestHtml(strUrl, paramMap)\n\n  router.Run(&quot;:3100&quot;)\n}\n```\n效果图:\nhttps://github.com/go-ego/ego/blob/master/img/test.png\n",
    "body_html": "<p>基于 Gin 的 Go (风格) 轻量高效的前端组件化 web 框架，这是一项正在完善的工作</p>\n\n<p>Ego 是一个用 Go 编写的全栈 Web 框架，轻量级和高效的前端组件解决方案</p>\n\n<p>前端编译执行，不影响后端效率</p>\n\n<p>项目地址: <a href=\"https://github.com/go-ego/ego\" rel=\"nofollow\" target=\"_blank\">https://github.com/go-ego/ego</a></p>\n\n<p>安装:</p>\n <pre class=\"highlight plaintext\"><code>go get -u github.com/go-ego/ego\n</code></pre> \n<p>例子: <a href=\"https://github.com/go-ego/ego/tree/master/examples/ego\" rel=\"nofollow\" target=\"_blank\">https://github.com/go-ego/ego/tree/master/examples/ego</a></p>\n\n<p>路由</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">-</span><span class=\"n\">ego</span><span class=\"o\">/</span><span class=\"n\">ego</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"n\">router</span> <span class=\"o\">:=</span> <span class=\"n\">ego</span><span class=\"o\">.</span><span class=\"n\">Classic</span><span class=\"p\">()</span>\n    <span class=\"n\">ego</span><span class=\"o\">.</span><span class=\"n\">UseRenders</span><span class=\"p\">()</span>\n\n    <span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">GlobHTML</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">views</span><span class=\"o\">/</span><span class=\"n\">html</span><span class=\"o\">/*&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n    <span class=\"n\">parArr</span> <span class=\"o\">:=</span> <span class=\"p\">[</span><span class=\"m\">5</span><span class=\"p\">]</span><span class=\"kt\">int</span><span class=\"p\">{</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">}</span>\n    <span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">Ego</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">head</span><span class=\"o\">/&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">head</span><span class=\"o\">/</span><span class=\"n\">head</span><span class=\"o\">.</span><span class=\"n\">html</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">ego</span><span class=\"o\">.</span><span class=\"n\">Map</span><span class=\"p\">{</span>\n        <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">head</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span>   <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Test</span> <span class=\"n\">to</span> <span class=\"n\">load</span> <span class=\"n\">the</span> <span class=\"n\">HTML</span> <span class=\"n\">template</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n        <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">parArr</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span> <span class=\"n\">parArr</span><span class=\"p\">,</span>\n    <span class=\"p\">})</span>\n\n    <span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">Run</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span><span class=\"m\">3100</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>icon.vgo</p>\n <pre class=\"highlight html\"><code><span class=\"ni\">&amp;lt;</span>div class=<span class=\"ni\">&amp;quot;</span>icon<span class=\"ni\">&amp;quot;&amp;gt;</span>\n    <span class=\"ni\">&amp;lt;</span>i class=<span class=\"ni\">&amp;quot;</span>iconfont {vclass}<span class=\"ni\">&amp;quot;</span> {node}<span class=\"ni\">&amp;gt;&amp;lt;</span>/i<span class=\"ni\">&amp;gt;</span>\n    <span class=\"ni\">&amp;lt;</span>p<span class=\"ni\">&amp;gt;</span>{prpo}<span class=\"ni\">&amp;lt;</span>/p<span class=\"ni\">&amp;gt;</span>\n<span class=\"ni\">&amp;lt;</span>/div<span class=\"ni\">&amp;gt;</span>\n\n<span class=\"ni\">&amp;lt;</span>style<span class=\"ni\">&amp;gt;</span>\n\n.header-left{\n    float:left;\n}\n\n.header-right{\n    float:right;\n}\n\n.iconfont {\n  position: relative;\n  font-size:24px\n}\n<span class=\"ni\">&amp;lt;</span>/style<span class=\"ni\">&amp;gt;</span>\n</code></pre> \n<p>head.vgo</p>\n <pre class=\"highlight plaintext\"><code>import (\n    &amp;quot;icons&amp;quot;\n    icon &amp;quot;icons/icon.vgo&amp;quot;\n    )\n\n&amp;lt;div class=&amp;quot;head&amp;quot;&amp;gt;\n    &amp;lt;div&amp;gt;ego:{{.head}}&amp;lt;/div&amp;gt;\n\n    &amp;lt;icon&amp;gt;\n        vclass={icon-share-to}\n        node={ id=&amp;quot;slot1&amp;quot;}\n        prpo={node---1}\n    &amp;lt;/icon&amp;gt;\n\n    &amp;lt;div&amp;gt;\n        {{range .parArr}}\n            &amp;lt;p&amp;gt;arr::: {{.}}&amp;lt;/p&amp;gt;\n        {{end}}\n    &amp;lt;/div&amp;gt;\n\n&amp;lt;/div&amp;gt;\n</code></pre> \n<p>效果图:\n<a href=\"https://github.com/go-ego/ego/blob/master/img/head.png\" rel=\"nofollow\" target=\"_blank\">https://github.com/go-ego/ego/blob/master/img/head.png</a></p>\n\n<p>另外写了一个 Json 预览和测试页面:</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">-</span><span class=\"n\">ego</span><span class=\"o\">/</span><span class=\"n\">ego</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">const</span> <span class=\"n\">httpUrl</span> <span class=\"kt\">string</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">http</span><span class=\"o\">:</span><span class=\"c\">//127.0.0.1:3000&amp;quot;</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n  <span class=\"n\">router</span> <span class=\"o\">:=</span> <span class=\"n\">ego</span><span class=\"o\">.</span><span class=\"n\">Classic</span><span class=\"p\">()</span>\n\n  <span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">Static</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">js</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">./</span><span class=\"n\">views</span><span class=\"o\">/</span><span class=\"n\">js</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n  <span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">Static</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">./</span><span class=\"n\">views</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n  <span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">GlobHTML</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">views</span><span class=\"o\">/</span><span class=\"n\">html</span><span class=\"o\">/*&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n  <span class=\"n\">strUrl</span> <span class=\"o\">:=</span> <span class=\"n\">httpUrl</span> <span class=\"o\">+</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">hlist</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n  <span class=\"n\">paramMap</span> <span class=\"o\">:=</span> <span class=\"n\">ego</span><span class=\"o\">.</span><span class=\"n\">Map</span><span class=\"p\">{</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">lon</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span>  <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"m\">10.1010101</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">lat</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span>  <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"m\">20.202020</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"k\">type</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"m\">1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n  <span class=\"p\">}</span>\n  <span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">TestHtml</span><span class=\"p\">(</span><span class=\"n\">strUrl</span><span class=\"p\">,</span> <span class=\"n\">paramMap</span><span class=\"p\">)</span>\n\n  <span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">Run</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span><span class=\"m\">3100</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>效果图:\n<a href=\"https://github.com/go-ego/ego/blob/master/img/test.png\" rel=\"nofollow\" target=\"_blank\">https://github.com/go-ego/ego/blob/master/img/test.png</a></p>",
    "hits": 867,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 691,
    "title": "云霁科技寻觅优秀gopher",
    "created_at": "2017-03-22 21:57:55",
    "updated_at": "2017-08-12 18:12:23",
    "replied_at": "2017-08-12 18:12:23",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 538,
    "last_reply_user_login": "linusning",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 845,
    "user": "{\"id\": 845, \"name\": \"voidint\", \"login\": \"voidint\", \"avatar\": \"https://static.gocn.vip/user/avatar/845/a0dbfd.jpg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "## golang开发工程师\n\n### 公司\n[杭州云霁科技有限公司](http://www.idcos.com/)\n\n### 岗位职责\n- 参与公司产品功能模块开发\n- 参与公司现有产品的持续功能改进及技术支持\n- 参与需求讨论\n- 编写面向技术人员的API文档\n- 编写面向用户的使用说明文档\n\n### 基本能力要求\n- 熟练掌握golang语法\n- 熟练掌握主流关系型数据库\n- 熟练掌握git基本操作\n- 熟悉HTTP协议\n- 熟悉HTML/javascript\n- 拥有阅读英文技术文档的能力\n\n### 偏好\n- 以*nix系统作主力开发环境\n- 有代码洁癖\n- 喜阅读优秀源代码\n- 拥有github较高活跃度\n- 能够设计和实现优雅REST API\n- 喜欢和善于总结并输出技术博客\n- 有C语言底蕴或者实际项目经验\n- 有良好的数据结构和算法素养\n- 熟悉TCP/IP协议\n\n### 加分项\n- 拥有云计算行业相关经验\n- 拥有运维行业相关经验\n\n\n### 职位诱惑\n- 五险一金\n- 年终奖\n- 商业保险\n- 人手Mac\n- 24寸显示器\n- 站立式办公桌\n- 人均几十平米的办公面积\n- 弹性工作时间\n\n### 薪资待遇\n面议\n\n### 工作地点\n杭州市余杭区仓前镇乐富海邦园\n\n### 简历投递\njob(at)idcos.com",
    "body_html": "<h2 id=\"golang开发工程师\">golang 开发工程师</h2><h3 id=\"公司\">公司</h3>\n<p><a href=\"http://www.idcos.com/\" rel=\"nofollow\" target=\"_blank\" title=\"\">杭州云霁科技有限公司</a></p>\n<h3 id=\"岗位职责\">岗位职责</h3>\n<ul>\n<li>参与公司产品功能模块开发</li>\n<li>参与公司现有产品的持续功能改进及技术支持</li>\n<li>参与需求讨论</li>\n<li>编写面向技术人员的 API 文档</li>\n<li>编写面向用户的使用说明文档</li>\n</ul>\n<h3 id=\"基本能力要求\">基本能力要求</h3>\n<ul>\n<li>熟练掌握 golang 语法</li>\n<li>熟练掌握主流关系型数据库</li>\n<li>熟练掌握 git 基本操作</li>\n<li>熟悉 HTTP 协议</li>\n<li>熟悉 HTML/javascript</li>\n<li>拥有阅读英文技术文档的能力</li>\n</ul>\n<h3 id=\"偏好\">偏好</h3>\n<ul>\n<li>以 *nix 系统作主力开发环境</li>\n<li>有代码洁癖</li>\n<li>喜阅读优秀源代码</li>\n<li>拥有 github 较高活跃度</li>\n<li>能够设计和实现优雅 REST API</li>\n<li>喜欢和善于总结并输出技术博客</li>\n<li>有 C 语言底蕴或者实际项目经验</li>\n<li>有良好的数据结构和算法素养</li>\n<li>熟悉 TCP/IP 协议</li>\n</ul>\n<h3 id=\"加分项\">加分项</h3>\n<ul>\n<li>拥有云计算行业相关经验</li>\n<li>拥有运维行业相关经验</li>\n</ul>\n<h3 id=\"职位诱惑\">职位诱惑</h3>\n<ul>\n<li>五险一金</li>\n<li>年终奖</li>\n<li>商业保险</li>\n<li>人手 Mac</li>\n<li>24 寸显示器</li>\n<li>站立式办公桌</li>\n<li>人均几十平米的办公面积</li>\n<li>弹性工作时间</li>\n</ul>\n<h3 id=\"薪资待遇\">薪资待遇</h3>\n<p>面议</p>\n<h3 id=\"工作地点\">工作地点</h3>\n<p>杭州市余杭区仓前镇乐富海邦园</p>\n<h3 id=\"简历投递\">简历投递</h3>\n<p>job(at) idcos.com</p>",
    "hits": 587,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 692,
    "title": "golang做为长连接游戏服务端,如何解决热更新问题?",
    "created_at": "2017-03-22 22:37:54",
    "updated_at": "2017-03-25 11:12:22",
    "replied_at": "2017-03-25 11:12:22",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1664,
    "last_reply_user_login": "liangdas",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 257,
    "user": "{\"id\": 257, \"name\": \"小平\", \"login\": \"lcp8888\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "1. 快速迭代开发\n2. 运营需要的新活动\n3. 上线前期的bug紧急修复",
    "body_html": "<ol>\n<li>快速迭代开发</li>\n<li>运营需要的新活动</li>\n<li>上线前期的 bug 紧急修复</li>\n</ol>",
    "hits": 894,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 693,
    "title": "beego1.8的文档还没更新么?",
    "created_at": "2017-03-23 10:31:41",
    "updated_at": "2021-02-19 02:46:56",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 570,
    "user": "{\"id\": 570, \"name\": \"kaixinmao\", \"login\": \"kaixinmao\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "\nhttps://beego.me/docs/intro/releases.md\n\n我看最新版本还是1.7.1的，首页已经标记是1.8.0了",
    "body_html": "<p><a href=\"https://beego.me/docs/intro/releases.md\" rel=\"nofollow\" target=\"_blank\">https://beego.me/docs/intro/releases.md</a></p>\n\n<p>我看最新版本还是 1.7.1 的，首页已经标记是 1.8.0 了</p>",
    "hits": 276,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 694,
    "title": "北京/10年老厂招聘GO高级工程师（营销大数据企业，年内上市）",
    "created_at": "2017-03-23 14:27:53",
    "updated_at": "2017-05-17 09:36:40",
    "replied_at": "2017-05-17 09:36:40",
    "replies_count": 3,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 82,
    "last_reply_user_login": "mikerr",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 82,
    "user": "{\"id\": 82, \"name\": \"mikerr\", \"login\": \"mikerr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "诸位好，首先想说，其实这岗位Java也行，当然最好是现在就在写go的，如果有多年java经验，想转Go的，也可以来试试。\n\nGolang工程师\n岗位职责：\n1：主要负责互联网高并发服务端应用开发、大规模数据实时处理分析、数据平台建设\n任职要求：\n1. 熟悉 Golang (或者 Java)； \n2. 熟悉TCP/IP协议，熟悉Linux基础配置和管理，熟悉Mysql、Redis等数据库；\n3. 有高并发处理经验、互联网系统架构设计经验者优先；\n4. 有网络及应用性能优化经验者优先；\n5. 有大数据存储、开发经验者优先；\n6. 至少熟练使用一门脚本语言（Python/Lua/NodeJS）。\n\n这家公司位于北京中关村附近，细分属于营销大数据领域(互联网广告），国内TOP3，很早就盈利了，年内上市\n\n我与对方合作近1年，推荐进去的人的反馈各种良好\n\n首先说福利待遇吧，对于高级工程师而言，他们给的是符合市场行情的，一年13-15薪\n五险一金全额缴纳并有补充医疗保险\n节假日比较多，甚至到法定休假的时候，规定周末调休的，他们可能就不调了，照常放，加班不多，有加班的都给报销车费。\n公司各种吃的应有尽有\n\n再说岗位本身吧，因为产品线比较多（10多条），所以公司使用的语言还挺多的，像golang，Java,python,node，C,C++ 都有，而现在招募的golang工程师，恰恰就是给他们最赚钱的广告产品线招聘，可以感受下。。。\n\n反正，大数据企业么，公司最不缺的就是数据（每月处理好几千亿），啊，他们还有招募做自然语言处理的工程师，阅读此文的同学，如果周围有搞这个的朋友，也欢迎推荐啊\n\n最后，因为是猎头招募，所以照例不能透露太多，而且公司因为做2B产品，说不定您现在的公司和他们家就有合作的，因而在推荐的过程中，我们也会小心谨慎的操作\n\n有意向的可以直接\n\n简历至   1735832445@qq.com\n微信电话 15221140600\n\nPS:招区块链的公司还在缺GO（上海），有兴趣的也来联系我啦。\n\n",
    "body_html": "<p>诸位好，首先想说，其实这岗位 Java 也行，当然最好是现在就在写 go 的，如果有多年 java 经验，想转 Go 的，也可以来试试。</p>\n\n<p>Golang 工程师\n岗位职责：\n1：主要负责互联网高并发服务端应用开发、大规模数据实时处理分析、数据平台建设\n任职要求：</p>\n\n<ol>\n<li>熟悉 Golang (或者 Java)； </li>\n<li>熟悉 TCP/IP 协议，熟悉 Linux 基础配置和管理，熟悉 Mysql、Redis 等数据库；</li>\n<li>有高并发处理经验、互联网系统架构设计经验者优先；</li>\n<li>有网络及应用性能优化经验者优先；</li>\n<li>有大数据存储、开发经验者优先；</li>\n<li>至少熟练使用一门脚本语言（Python/Lua/NodeJS）。</li>\n</ol>\n\n<p>这家公司位于北京中关村附近，细分属于营销大数据领域 (互联网广告），国内 TOP3，很早就盈利了，年内上市</p>\n\n<p>我与对方合作近 1 年，推荐进去的人的反馈各种良好</p>\n\n<p>首先说福利待遇吧，对于高级工程师而言，他们给的是符合市场行情的，一年 13-15 薪\n五险一金全额缴纳并有补充医疗保险\n节假日比较多，甚至到法定休假的时候，规定周末调休的，他们可能就不调了，照常放，加班不多，有加班的都给报销车费。\n公司各种吃的应有尽有</p>\n\n<p>再说岗位本身吧，因为产品线比较多（10 多条），所以公司使用的语言还挺多的，像 golang，Java,python,node，C,C++ 都有，而现在招募的 golang 工程师，恰恰就是给他们最赚钱的广告产品线招聘，可以感受下。。。</p>\n\n<p>反正，大数据企业么，公司最不缺的就是数据（每月处理好几千亿），啊，他们还有招募做自然语言处理的工程师，阅读此文的同学，如果周围有搞这个的朋友，也欢迎推荐啊</p>\n\n<p>最后，因为是猎头招募，所以照例不能透露太多，而且公司因为做 2B 产品，说不定您现在的公司和他们家就有合作的，因而在推荐的过程中，我们也会小心谨慎的操作</p>\n\n<p>有意向的可以直接</p>\n\n<p>简历至   1735832445@qq.com\n微信电话 15221140600</p>\n\n<p>PS:招区块链的公司还在缺 GO（上海），有兴趣的也来联系我啦。</p>",
    "hits": 688,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 695,
    "title": "如何实现Golang http 长连接",
    "created_at": "2017-03-23 19:41:59",
    "updated_at": "2017-03-27 22:01:04",
    "replied_at": "2017-03-27 22:01:04",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1100,
    "last_reply_user_login": "Rg",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1331,
    "user": "{\"id\": 1331, \"name\": \"kakashi\", \"login\": \"kakashi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 579,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 696,
    "title": "beego中路由参数中的controller传入问题",
    "created_at": "2017-03-24 22:03:24",
    "updated_at": "2021-01-20 02:22:41",
    "replied_at": "2017-03-24 23:48:36",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 779,
    "last_reply_user_login": "sundyli",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1623,
    "user": "{\"id\": 1623, \"name\": \"xwisen\", \"login\": \"xwisen\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\nbeego.Router(&quot;/&quot;, &amp;controllers.MainController{})\n```\n在golang中，如果要使用一个struct，必须先定义，然后实例化，才能当做函数参数传入。\n那么上面代码中`&amp;controllers.MainController{}`完成的功能就是实例化？\n\n那么下面这样也是可行的？\n```go\nc:=controllers.MainController{}\nbeego.Router(&quot;/&quot;, &amp;c)\n```\n\n最后，如果我的`controller`里面有其他参数，我想在传入前先初始化，比如是一个 `S string`\n```go\nc:=controllers.MainController{}\nc.S=&quot;hello xwisen&quot;\nbeego.Router(&quot;/&quot;, &amp;c)\n```\n在这种情况下，c.S的值是不能正常传入的(编译是可以通过的)，这是为什么呢？",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">Router</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">controllers</span><span class=\"o\">.</span><span class=\"n\">MainController</span><span class=\"p\">{})</span>\n</code></pre> \n<p>在 golang 中，如果要使用一个 struct，必须先定义，然后实例化，才能当做函数参数传入。\n那么上面代码中<code>&amp;amp;controllers.MainController{}</code>完成的功能就是实例化？</p>\n\n<p>那么下面这样也是可行的？</p>\n <pre class=\"highlight go\"><code><span class=\"n\">c</span><span class=\"o\">:=</span><span class=\"n\">controllers</span><span class=\"o\">.</span><span class=\"n\">MainController</span><span class=\"p\">{}</span>\n<span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">Router</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">c</span><span class=\"p\">)</span>\n</code></pre> \n<p>最后，如果我的<code>controller</code>里面有其他参数，我想在传入前先初始化，比如是一个 <code>S string</code></p>\n <pre class=\"highlight go\"><code><span class=\"n\">c</span><span class=\"o\">:=</span><span class=\"n\">controllers</span><span class=\"o\">.</span><span class=\"n\">MainController</span><span class=\"p\">{}</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">S</span><span class=\"o\">=&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">hello</span> <span class=\"n\">xwisen</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">Router</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">c</span><span class=\"p\">)</span>\n</code></pre> \n<p>在这种情况下，c.S 的值是不能正常传入的 (编译是可以通过的)，这是为什么呢？</p>",
    "hits": 408,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 697,
    "title": "数据库底层设计models层",
    "created_at": "2017-03-28 11:52:21",
    "updated_at": "2017-03-28 13:30:55",
    "replied_at": "2017-03-28 13:30:55",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1364,
    "last_reply_user_login": "lrita",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 52,
    "user": "{\"id\": 52, \"name\": \"小蚂蚁\", \"login\": \"18368870825\", \"avatar\": \"https://gocn.vip/system/letter_avatars/1.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "想将公司的models;整合一起，有没有好的设计方案",
    "body_html": "<p>想将公司的 models;整合一起，有没有好的设计方案</p>",
    "hits": 301,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 698,
    "title": "web后端动态匹配模型查询",
    "created_at": "2017-03-28 16:38:09",
    "updated_at": "2017-04-06 17:46:57",
    "replied_at": "2017-04-06 17:46:57",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1410,
    "last_reply_user_login": "fanyang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 173,
    "user": "{\"id\": 173, \"name\": \"moss\", \"login\": \"moss\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我有一个问题一时想不到很好的解决方案，只能求助大家了。\n我想根据请求的路径去获得不同的模型并查询数据库\n\n路由匹配的路径为/getObj/?:modelName\n\n/getObj/user?id=1\n则返回id为1的用户数据\n/getOBj/card?id=1\n则返回id为1的卡信息\n/getOBj/book?id=1\n则返回id为1的书信息\n…………\n以此类推，有很多种这样的模型（200+），我应该怎样处理这个问题？",
    "body_html": "<p>我有一个问题一时想不到很好的解决方案，只能求助大家了。\n我想根据请求的路径去获得不同的模型并查询数据库</p>\n\n<p>路由匹配的路径为/getObj/?:modelName</p>\n\n<p>/getObj/user?id=1\n则返回 id 为 1 的用户数据\n/getOBj/card?id=1\n则返回 id 为 1 的卡信息\n/getOBj/book?id=1\n则返回 id 为 1 的书信息\n…………\n以此类推，有很多种这样的模型（200+），我应该怎样处理这个问题？</p>",
    "hits": 437,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 699,
    "title": "升级 mac os 10.12.4 后 beego 跑不起来了",
    "created_at": "2017-03-28 17:09:00",
    "updated_at": "2021-01-16 19:37:46",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 657,
    "user": "{\"id\": 657, \"name\": \"uuapp\", \"login\": \"uuapp\", \"avatar\": \"https://gocn.vip/system/letter_avatars/u.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\n2017/03/28 17:06:08 SUCCESS  ▶ 0009 Built Successfully!\n2017/03/28 17:06:08 INFO     ▶ 0010 Restarting 'medsearch'...\n2017/03/28 17:06:08 SUCCESS  ▶ 0011 './medsearch' is running...\n```\n\n一直在 running 状态，服务没起来\n有遇到这个问题的没",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"m\">2017</span><span class=\"o\">/</span><span class=\"m\">03</span><span class=\"o\">/</span><span class=\"m\">28</span> <span class=\"m\">17</span><span class=\"o\">:</span><span class=\"m\">06</span><span class=\"o\">:</span><span class=\"m\">08</span> <span class=\"n\">SUCCESS</span>  <span class=\"err\">▶</span> <span class=\"m\">0009</span> <span class=\"n\">Built</span> <span class=\"n\">Successfully</span><span class=\"o\">!</span>\n<span class=\"m\">2017</span><span class=\"o\">/</span><span class=\"m\">03</span><span class=\"o\">/</span><span class=\"m\">28</span> <span class=\"m\">17</span><span class=\"o\">:</span><span class=\"m\">06</span><span class=\"o\">:</span><span class=\"m\">08</span> <span class=\"n\">INFO</span>     <span class=\"err\">▶</span> <span class=\"m\">0010</span> <span class=\"n\">Restarting</span> <span class=\"err\">'</span><span class=\"n\">medsearch</span><span class=\"err\">'</span><span class=\"o\">...</span>\n<span class=\"m\">2017</span><span class=\"o\">/</span><span class=\"m\">03</span><span class=\"o\">/</span><span class=\"m\">28</span> <span class=\"m\">17</span><span class=\"o\">:</span><span class=\"m\">06</span><span class=\"o\">:</span><span class=\"m\">08</span> <span class=\"n\">SUCCESS</span>  <span class=\"err\">▶</span> <span class=\"m\">0011</span> <span class=\"err\">'</span><span class=\"o\">./</span><span class=\"n\">medsearch</span><span class=\"err\">'</span> <span class=\"n\">is</span> <span class=\"n\">running</span><span class=\"o\">...</span>\n</code></pre> \n<p>一直在 running 状态，服务没起来\n有遇到这个问题的没</p>",
    "hits": 391,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 700,
    "title": "求一个golang +UEditor(ckeditor)+七牛的例子",
    "created_at": "2017-03-28 19:20:40",
    "updated_at": "2018-04-18 13:52:40",
    "replied_at": "2018-04-18 13:52:40",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 5627,
    "last_reply_user_login": "aspwebchh",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 88,
    "user": "{\"id\": 88, \"name\": \"qi19901212\", \"login\": \"qi19901212\", \"avatar\": \"https://static.gocn.vip/user/avatar/88/4a10d7.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "求一个golang +UEditor(ckeditor)+七牛的例子。网上也有些例子只不过不全。比如\nhttps://github.com/3xxx/UEditor-golang （beego版本的）\nhttps://github.com/jimmykuu/Go-UEditor\n",
    "body_html": "<p>求一个 golang +UEditor(ckeditor)+ 七牛的例子。网上也有些例子只不过不全。比如\n<a href=\"https://github.com/3xxx/UEditor-golang\" rel=\"nofollow\" target=\"_blank\">https://github.com/3xxx/UEditor-golang</a>（beego 版本的）\n<a href=\"https://github.com/jimmykuu/Go-UEditor\" rel=\"nofollow\" target=\"_blank\">https://github.com/jimmykuu/Go-UEditor</a></p>",
    "hits": 501,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 701,
    "title": "NSQ 源码阅读",
    "created_at": "2017-03-29 15:06:10",
    "updated_at": "2017-03-31 17:20:30",
    "replied_at": "2017-03-31 17:20:30",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 337,
    "last_reply_user_login": "fzbing",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 337,
    "user": "{\"id\": 337, \"name\": \"fzbing\", \"login\": \"fzbing\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "有没有同志，在阅读NSQ源码呢。有问题可以讨论一下~",
    "body_html": "<p>有没有同志，在阅读 NSQ 源码呢。有问题可以讨论一下~</p>",
    "hits": 455,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 702,
    "title": "GopherChina大会门票多了一张,早鸟票， 原价转手, 要的联系 ",
    "created_at": "2017-03-30 14:40:20",
    "updated_at": "2017-03-30 14:40:20",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1745,
    "user": "{\"id\": 1745, \"name\": \"wanghe4096\", \"login\": \"wanghe4096\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "公司团队组织参加， 自己手里就多了一张早鸟票， 要的联系我哈 ， 18612372380, 加我微信",
    "body_html": "<p>公司团队组织参加， 自己手里就多了一张早鸟票， 要的联系我哈 ， 18612372380, 加我微信</p>",
    "hits": 318,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 703,
    "title": "转让 golang china conference 早鸟票一张【已转】",
    "created_at": "2017-03-30 19:41:59",
    "updated_at": "2017-04-01 14:44:40",
    "replied_at": "2017-04-01 14:44:40",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1747,
    "last_reply_user_login": "freewave",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1747,
    "user": "{\"id\": 1747, \"name\": \"freewave\", \"login\": \"freewave\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "很早买了这个票， 由于当天有事不能去了， 所以转让。 \n早鸟票， 包含一golang china定制的T恤。  \n地址： 上海市杨浦区小南国酒店",
    "body_html": "<p>很早买了这个票， 由于当天有事不能去了， 所以转让。 \n早鸟票， 包含一 golang china 定制的 T 恤。<br>\n地址： 上海市杨浦区小南国酒店</p>",
    "hits": 365,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 704,
    "title": "请问我部署完go web应用之后，执行命令之后，浏览器打开为404，请问是怎么回事",
    "created_at": "2017-03-30 21:36:33",
    "updated_at": "2017-03-31 17:52:16",
    "replied_at": "2017-03-31 17:52:16",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 931,
    "last_reply_user_login": "lifei6671",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1748,
    "user": "{\"id\": 1748, \"name\": \"phpgolanger\", \"login\": \"phpgolanger\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "执行 go run wiki.go 之后\n打开浏览器http://localhost:8081/\n报404错误，我怀疑是配置问题，但是没打到具体原因。\n404 page not found \n另外我在beego框架下的项目，执行命令之后为：\nhttp server Running on http://:8080\n不能截图。谢谢。\n",
    "body_html": "<p>执行 go run wiki.go 之后\n打开浏览器<a href=\"http://localhost:8081/\" rel=\"nofollow\" target=\"_blank\">http://localhost:8081/</a>\n报 404 错误，我怀疑是配置问题，但是没打到具体原因。\n404 page not found \n另外我在 beego 框架下的项目，执行命令之后为：\nhttp server Running on http://:8080\n不能截图。谢谢。</p>",
    "hits": 551,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 705,
    "title": "template的使用问题",
    "created_at": "2017-03-31 16:54:40",
    "updated_at": "2017-04-06 17:01:29",
    "replied_at": "2017-04-06 17:01:29",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1410,
    "last_reply_user_login": "fanyang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 407,
    "user": "{\"id\": 407, \"name\": \"lucyne\", \"login\": \"lucyne\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "test1.html内容：\n{{define &quot;T1&quot;}}ONE{{end}}\n\ntest.html内容：\n{{template &quot;T1&quot;}}\n\n\nmain.go相关内容：\nfunc main() {\n\thttp.Handle(&quot;/&quot;, http.FileServer(http.Dir(&quot;static&quot;)))\n\thttp.HandleFunc(&quot;/index&quot;, index)\n\thttp.ListenAndServe(&quot;:8080&quot;, nil)\n}\nfunc index(w http.ResponseWriter, r *http.Request) {\n\tt, _ = template.ParseFiles(&quot;views/test.html&quot;)\n\tt.Execute(w, nil)\n}\n\n\n最后为啥页面为空？？？\n\ndefine 不能在另一个模板中使用{{template &quot;T1&quot;}}引用吗？谢谢",
    "body_html": "<p>test1.html 内容：\n{{define \"T1\"}}ONE{{end}}</p>\n\n<p>test.html 内容：\n{{template \"T1\"}}</p>\n\n<p>main.go 相关内容：\nfunc main() {\n    http.Handle(\"/\", http.FileServer(http.Dir(\"static\")))\n    http.HandleFunc(\"/index\", index)\n    http.ListenAndServe(\":8080\", nil)\n}\nfunc index(w http.ResponseWriter, r *http.Request) {\n    t, _ = template.ParseFiles(\"views/test.html\")\n    t.Execute(w, nil)\n}</p>\n\n<p>最后为啥页面为空？？？</p>\n\n<p>define 不能在另一个模板中使用{{template \"T1\"}}引用吗？谢谢</p>",
    "hits": 431,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 706,
    "title": "nsq 源码中的疑问",
    "created_at": "2017-03-31 17:24:25",
    "updated_at": "2017-03-31 17:24:25",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 337,
    "user": "{\"id\": 337, \"name\": \"fzbing\", \"login\": \"fzbing\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "NSQD 结构体中的 tcpListener httpListener httpsListener 三个字段，为什么要使用 NSQD 的读写锁？\n\n因为上面三个字段，只有在NSQD.Main中被写。（只需要在Main函数中，调整为 先给三个值赋值，再启动服务，就不会出现并发读写问题）。\n\n[https://gocn.io/question/701](https://gocn.io/question/701)",
    "body_html": "<p>NSQD 结构体中的 tcpListener httpListener httpsListener 三个字段，为什么要使用 NSQD 的读写锁？</p>\n\n<p>因为上面三个字段，只有在 NSQD.Main 中被写。（只需要在 Main 函数中，调整为 先给三个值赋值，再启动服务，就不会出现并发读写问题）。</p>\n\n<p><a href=\"https://gocn.io/question/701\" rel=\"nofollow\" target=\"_blank\" title=\"\">https://gocn.io/question/701</a></p>",
    "hits": 312,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 707,
    "title": "go env 的默认值问题",
    "created_at": "2017-04-01 05:59:10",
    "updated_at": "2017-04-07 17:53:11",
    "replied_at": "2017-04-07 17:53:11",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1581,
    "last_reply_user_login": "asdfsx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1727,
    "user": "{\"id\": 1727, \"name\": \"lbb4511\", \"login\": \"lbb4511\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "启动一个shell或zsh\n输入`go env`\n```sh\n➜  ~ go env\nGOARCH=&quot;amd64&quot;\nGOBIN=&quot;&quot;\nGOEXE=&quot;&quot;\nGOHOSTARCH=&quot;amd64&quot;\nGOHOSTOS=&quot;linux&quot;\nGOOS=&quot;linux&quot;\nGOPATH=&quot;/home/lbb/go&quot;\nGORACE=&quot;&quot;\nGOROOT=&quot;/usr/local/go&quot;\nGOTOOLDIR=&quot;/usr/local/go/pkg/tool/linux_amd64&quot;\nGCCGO=&quot;gccgo&quot;\nCC=&quot;gcc&quot;\nGOGCCFLAGS=&quot;-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build042193492=/tmp/go-build -gno-record-gcc-switches&quot;\nCXX=&quot;g++&quot;\nCGO_ENABLED=&quot;1&quot;\nPKG_CONFIG=&quot;pkg-config&quot;\nCGO_CFLAGS=&quot;-g -O2&quot;\nCGO_CPPFLAGS=&quot;&quot;\nCGO_CXXFLAGS=&quot;-g -O2&quot;\nCGO_FFLAGS=&quot;-g -O2&quot;\nCGO_LDFLAGS=&quot;-g -O2&quot;\n```\n然后输入`. /etc/profile`\n再输入`go env` GOPATH才能生效\n```sh\n➜  ~ . /etc/profile\n$ go env\nGOARCH=&quot;amd64&quot;\nGOBIN=&quot;&quot;\nGOEXE=&quot;&quot;\nGOHOSTARCH=&quot;amd64&quot;\nGOHOSTOS=&quot;linux&quot;\nGOOS=&quot;linux&quot;\nGOPATH=&quot;/home/lbb/go/go_wheel:/home/lbb/go/go_ide:/home/lbb/go/go_work:/home/lbb/go/go_study&quot;\nGORACE=&quot;&quot;\nGOROOT=&quot;/usr/local/go&quot;\nGOTOOLDIR=&quot;/usr/local/go/pkg/tool/linux_amd64&quot;\nGCCGO=&quot;gccgo&quot;\nCC=&quot;gcc&quot;\nGOGCCFLAGS=&quot;-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build946063677=/tmp/go-build -gno-record-gcc-switches&quot;\nCXX=&quot;g++&quot;\nCGO_ENABLED=&quot;1&quot;\nPKG_CONFIG=&quot;pkg-config&quot;\nCGO_CFLAGS=&quot;-g -O2&quot;\nCGO_CPPFLAGS=&quot;&quot;\nCGO_CXXFLAGS=&quot;-g -O2&quot;\nCGO_FFLAGS=&quot;-g -O2&quot;\nCGO_LDFLAGS=&quot;-g -O2&quot;\n```\n这个问题怎么你有没有？",
    "body_html": "<p>启动一个 shell 或 zsh\n输入<code>go env</code></p>\n <pre class=\"highlight shell\"><code>➜  ~ go <span class=\"nb\">env\n</span><span class=\"nv\">GOARCH</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>amd64&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOBIN</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOEXE</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOHOSTARCH</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>amd64&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOHOSTOS</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>linux&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOOS</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>linux&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOPATH</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>/home/lbb/go&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GORACE</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOROOT</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>/usr/local/go&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOTOOLDIR</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>/usr/local/go/pkg/tool/linux_amd64&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GCCGO</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>gccgo&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">CC</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>gcc&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOGCCFLAGS</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span><span class=\"nt\">-fPIC</span> <span class=\"nt\">-m64</span> <span class=\"nt\">-pthread</span> <span class=\"nt\">-fmessage-length</span><span class=\"o\">=</span>0 <span class=\"nt\">-fdebug-prefix-map</span><span class=\"o\">=</span>/tmp/go-build042193492<span class=\"o\">=</span>/tmp/go-build <span class=\"nt\">-gno-record-gcc-switches</span>&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">CXX</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>g++&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">CGO_ENABLED</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>1&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">PKG_CONFIG</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>pkg-config&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">CGO_CFLAGS</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span><span class=\"nt\">-g</span> <span class=\"nt\">-O2</span>&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">CGO_CPPFLAGS</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">CGO_CXXFLAGS</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span><span class=\"nt\">-g</span> <span class=\"nt\">-O2</span>&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">CGO_FFLAGS</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span><span class=\"nt\">-g</span> <span class=\"nt\">-O2</span>&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">CGO_LDFLAGS</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span><span class=\"nt\">-g</span> <span class=\"nt\">-O2</span>&amp;quot<span class=\"p\">;</span>\n</code></pre> \n<p>然后输入<code>. /etc/profile</code>\n再输入<code>go env</code> GOPATH 才能生效</p>\n <pre class=\"highlight shell\"><code>➜  ~ <span class=\"nb\">.</span> /etc/profile\n<span class=\"nv\">$ </span>go <span class=\"nb\">env\n</span><span class=\"nv\">GOARCH</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>amd64&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOBIN</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOEXE</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOHOSTARCH</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>amd64&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOHOSTOS</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>linux&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOOS</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>linux&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOPATH</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>/home/lbb/go/go_wheel:/home/lbb/go/go_ide:/home/lbb/go/go_work:/home/lbb/go/go_study&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GORACE</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOROOT</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>/usr/local/go&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOTOOLDIR</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>/usr/local/go/pkg/tool/linux_amd64&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GCCGO</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>gccgo&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">CC</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>gcc&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">GOGCCFLAGS</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span><span class=\"nt\">-fPIC</span> <span class=\"nt\">-m64</span> <span class=\"nt\">-pthread</span> <span class=\"nt\">-fmessage-length</span><span class=\"o\">=</span>0 <span class=\"nt\">-fdebug-prefix-map</span><span class=\"o\">=</span>/tmp/go-build946063677<span class=\"o\">=</span>/tmp/go-build <span class=\"nt\">-gno-record-gcc-switches</span>&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">CXX</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>g++&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">CGO_ENABLED</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>1&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">PKG_CONFIG</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>pkg-config&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">CGO_CFLAGS</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span><span class=\"nt\">-g</span> <span class=\"nt\">-O2</span>&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">CGO_CPPFLAGS</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span>&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">CGO_CXXFLAGS</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span><span class=\"nt\">-g</span> <span class=\"nt\">-O2</span>&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">CGO_FFLAGS</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span><span class=\"nt\">-g</span> <span class=\"nt\">-O2</span>&amp;quot<span class=\"p\">;</span>\n<span class=\"nv\">CGO_LDFLAGS</span><span class=\"o\">=</span>&amp;quot<span class=\"p\">;</span><span class=\"nt\">-g</span> <span class=\"nt\">-O2</span>&amp;quot<span class=\"p\">;</span>\n</code></pre> \n<p>这个问题怎么你有没有？</p>",
    "hits": 716,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 708,
    "title": "http.NewRequest自定义header头键值对，如何让keyName首字母不大写？",
    "created_at": "2017-04-01 16:47:43",
    "updated_at": "2018-10-08 21:51:20",
    "replied_at": "2018-10-08 21:49:19",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 6536,
    "last_reply_user_login": "wdxxl",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 55,
    "user": "{\"id\": 55, \"name\": \"itsky365\", \"login\": \"itsky365\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "今天在开发 个推push时，发现一个坑，和官方反馈，得到的消息是，他们不兼容header中keyName首字母大小写的问题。让开发人员自行解决。\n\n发起请求的部分代码如下：\n\n```\nreq, err := http.NewRequest(&quot;POST&quot;, url, body)\n\treq.Header.Add(&quot;authtoken&quot;, auth_token)\n\n```\n打印的日志如下：\n```\n&amp;{POST https://restapi.getui.com/v1/hxzW1engjT6GEzDwU3YSpA/push_single HTTP/1.1 1 1 map[Authtoken:[151af1b9d4ba2d57f126b30d59b4ec585dd72d8e8980e5d63131e67478cd9702] Content-Type:[application/json]]\n```\n\n这里输出的 **Authtoken**是首字母**大写**的，并不是小写的，导致 个推 返回错误信息\n```\nrespResult  {&quot;result&quot;:&quot;not_auth&quot;}\n```\n\n个推示例代码：\n\n```\ncurl -H &quot;Content-Type: application/json&quot; \\\n     -H &quot;authtoken:eef0742e9bb7aa52bd1ede66a0a20c68057208656e5f558c020fb24aa5b98586&quot; \\\n     https://restapi.getui.com/v1/CKWfvgBDRF9aSnGrvD7IJ4/push_single \\\n     -XPOST -d '{\n                    &quot;message&quot;:{\n                                &quot;appkey&quot;:&quot;pMEgGQ9bgz5LVAPX8q8WH4&quot;,\n                                &quot;is_offline&quot;:false,\n                                &quot;msgtype&quot;:&quot;notification&quot;\n                               },\n                    &quot;notification&quot;:{\n                                    &quot;text&quot;:&quot;text&quot;,\n                                    &quot;title&quot;:&quot;tttt&quot;,\n                                    &quot;transmission_type&quot;:true,\n                                    &quot;transmission_content&quot;:&quot;透传内容&quot;\n                                    },\n                    &quot;cid&quot;:&quot;1fa0795a57c863ecc9a9ea6437b8924f&quot;,\n                    &quot;requestid&quot;:&quot;123456789&quot;\n                 }'\n```\n\n用curl返回结果\n```\n{&quot;result&quot;:&quot;ok&quot;, &quot;taskid&quot;:&quot;RASS_0109_3ed7bcb9904a2d8208261d0c78a1e999&quot;, &quot;status&quot;:&quot;successed_offline&quot;}\n```\n\n参考链接\n\nhttp://docs.getui.com/server/rest/push/#3",
    "body_html": "<p>今天在开发 个推 push 时，发现一个坑，和官方反馈，得到的消息是，他们不兼容 header 中 keyName 首字母大小写的问题。让开发人员自行解决。</p>\n\n<p>发起请求的部分代码如下：</p>\n <pre class=\"highlight plaintext\"><code>req, err := http.NewRequest(&amp;quot;POST&amp;quot;, url, body)\n    req.Header.Add(&amp;quot;authtoken&amp;quot;, auth_token)\n\n</code></pre> \n<p>打印的日志如下：</p>\n <pre class=\"highlight plaintext\"><code>&amp;amp;{POST https://restapi.getui.com/v1/hxzW1engjT6GEzDwU3YSpA/push_single HTTP/1.1 1 1 map[Authtoken:[151af1b9d4ba2d57f126b30d59b4ec585dd72d8e8980e5d63131e67478cd9702] Content-Type:[application/json]]\n</code></pre> \n<p>这里输出的 <strong>Authtoken</strong>是首字母<strong>大写</strong>的，并不是小写的，导致 个推 返回错误信息</p>\n <pre class=\"highlight plaintext\"><code>respResult  {&amp;quot;result&amp;quot;:&amp;quot;not_auth&amp;quot;}\n</code></pre> \n<p>个推示例代码：</p>\n <pre class=\"highlight plaintext\"><code>curl -H &amp;quot;Content-Type: application/json&amp;quot; \\\n     -H &amp;quot;authtoken:eef0742e9bb7aa52bd1ede66a0a20c68057208656e5f558c020fb24aa5b98586&amp;quot; \\\n     https://restapi.getui.com/v1/CKWfvgBDRF9aSnGrvD7IJ4/push_single \\\n     -XPOST -d '{\n                    &amp;quot;message&amp;quot;:{\n                                &amp;quot;appkey&amp;quot;:&amp;quot;pMEgGQ9bgz5LVAPX8q8WH4&amp;quot;,\n                                &amp;quot;is_offline&amp;quot;:false,\n                                &amp;quot;msgtype&amp;quot;:&amp;quot;notification&amp;quot;\n                               },\n                    &amp;quot;notification&amp;quot;:{\n                                    &amp;quot;text&amp;quot;:&amp;quot;text&amp;quot;,\n                                    &amp;quot;title&amp;quot;:&amp;quot;tttt&amp;quot;,\n                                    &amp;quot;transmission_type&amp;quot;:true,\n                                    &amp;quot;transmission_content&amp;quot;:&amp;quot;透传内容&amp;quot;\n                                    },\n                    &amp;quot;cid&amp;quot;:&amp;quot;1fa0795a57c863ecc9a9ea6437b8924f&amp;quot;,\n                    &amp;quot;requestid&amp;quot;:&amp;quot;123456789&amp;quot;\n                 }'\n</code></pre> \n<p>用 curl 返回结果</p>\n <pre class=\"highlight plaintext\"><code>{&amp;quot;result&amp;quot;:&amp;quot;ok&amp;quot;, &amp;quot;taskid&amp;quot;:&amp;quot;RASS_0109_3ed7bcb9904a2d8208261d0c78a1e999&amp;quot;, &amp;quot;status&amp;quot;:&amp;quot;successed_offline&amp;quot;}\n</code></pre> \n<p>参考链接</p>\n\n<p><a href=\"http://docs.getui.com/server/rest/push/#3\" rel=\"nofollow\" target=\"_blank\">http://docs.getui.com/server/rest/push/#3</a></p>",
    "hits": 925,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 709,
    "title": "关于字典和数组的疑问",
    "created_at": "2017-04-03 22:21:59",
    "updated_at": "2017-04-08 16:21:42",
    "replied_at": "2017-04-08 16:21:42",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 173,
    "last_reply_user_login": "moss",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1756,
    "user": "{\"id\": 1756, \"name\": \"fhefh\", \"login\": \"fhefh\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```\n数组：\n[1, 3, 2, &quot;a book&quot;, &quot;game&quot;]\n字典\n{&quot;book&quot;: &quot;buy a book&quot;, &quot;age&quot;: 10}\n```\n用go如何声明这个数组和字典\n谷歌了好长时间，都没有找到方法",
    "body_html": " <pre class=\"highlight plaintext\"><code>数组：\n[1, 3, 2, &amp;quot;a book&amp;quot;, &amp;quot;game&amp;quot;]\n字典\n{&amp;quot;book&amp;quot;: &amp;quot;buy a book&amp;quot;, &amp;quot;age&amp;quot;: 10}\n</code></pre> \n<p>用 go 如何声明这个数组和字典\n谷歌了好长时间，都没有找到方法</p>",
    "hits": 556,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 710,
    "title": "go 1.8 xml解析不支持cdata",
    "created_at": "2017-04-05 11:23:27",
    "updated_at": "2017-04-05 14:02:43",
    "replied_at": "2017-04-05 14:02:43",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1171,
    "last_reply_user_login": "hmly",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1494,
    "user": "{\"id\": 1494, \"name\": \"stirlingx\", \"login\": \"stirlingx\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "go 1.8 xml解析不支持cdata， 但是go1.2是支持的，这是bug？\n\n```go\npackage main\n\nimport (\n\t&quot;encoding/xml&quot;\n\t&quot;fmt&quot;\n\t&quot;runtime&quot;\n)\n\ntype WechatNotifyInfo struct {\n\tXMLName        xml.Name `xml:&quot;xml&quot;`\n\tAppid          string `xml:&quot;appid,cdata&quot;`\n}\n\nvar Text =\n\t`&lt;xml&gt;\n\t&lt;appid&gt;&lt;![CDATA[wx0f0df4fda4ff1937]]&gt;&lt;/appid&gt;\n\t&lt;/xml&gt;\n\t`\n\nfunc main() {\n\tfmt.Println(&quot;version&quot;, runtime.Version())\n\n\tmsg := &amp;WechatNotifyInfo{}\n\terr := xml.Unmarshal([]byte(Text), msg)\n\tif err != nil{\n\t\tfmt.Println(err)\n\t}\n\n\tfmt.Println(fmt.Sprintf(&quot;%#v&quot;, msg))\n}\n```\n\n这个是go1.8运行结果\n```go\nversion go1.8\nxml: invalid tag in field Appid of type main.WechatNotifyInfo: &quot;appid,cdata&quot;\n&amp;main.WechatNotifyInfo{XMLName:xml.Name{Space:&quot;&quot;, Local:&quot;&quot;}, Appid:&quot;&quot;}\n\n```\n这个是go1.2.1运行结果\n```go\nversion go1.2.1\n&amp;main.WechatNotifyInfo{XMLName:xml.Name{Space:&quot;&quot;, Local:&quot;xml&quot;}, Appid:&quot;wx0f0df4fda4ff1937&quot;}\n```",
    "body_html": "<p>go 1.8 xml 解析不支持 cdata， 但是 go1.2 是支持的，这是 bug？</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">encoding</span><span class=\"o\">/</span><span class=\"n\">xml</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">runtime</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">type</span> <span class=\"n\">WechatNotifyInfo</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">XMLName</span>        <span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">Name</span> <span class=\"s\">`xml:&amp;quot;xml&amp;quot;`</span>\n    <span class=\"n\">Appid</span>          <span class=\"kt\">string</span> <span class=\"s\">`xml:&amp;quot;appid,cdata&amp;quot;`</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">var</span> <span class=\"n\">Text</span> <span class=\"o\">=</span>\n    <span class=\"s\">`&amp;lt;xml&amp;gt;\n    &amp;lt;appid&amp;gt;&amp;lt;![CDATA[wx0f0df4fda4ff1937]]&amp;gt;&amp;lt;/appid&amp;gt;\n    &amp;lt;/xml&amp;gt;\n    `</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">version</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">Version</span><span class=\"p\">())</span>\n\n    <span class=\"n\">msg</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">WechatNotifyInfo</span><span class=\"p\">{}</span>\n    <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">Unmarshal</span><span class=\"p\">([]</span><span class=\"kt\">byte</span><span class=\"p\">(</span><span class=\"n\">Text</span><span class=\"p\">),</span> <span class=\"n\">msg</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span><span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Sprintf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">%</span><span class=\"err\">#</span><span class=\"n\">v</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">msg</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>这个是 go1.8 运行结果</p>\n <pre class=\"highlight go\"><code><span class=\"n\">version</span> <span class=\"n\">go1</span><span class=\"m\">.8</span>\n<span class=\"n\">xml</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">tag</span> <span class=\"n\">in</span> <span class=\"n\">field</span> <span class=\"n\">Appid</span> <span class=\"n\">of</span> <span class=\"k\">type</span> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">WechatNotifyInfo</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">appid</span><span class=\"p\">,</span><span class=\"n\">cdata</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">WechatNotifyInfo</span><span class=\"p\">{</span><span class=\"n\">XMLName</span><span class=\"o\">:</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">{</span><span class=\"n\">Space</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">Local</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;},</span> <span class=\"n\">Appid</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}</span>\n\n</code></pre> \n<p>这个是 go1.2.1 运行结果</p>\n <pre class=\"highlight go\"><code><span class=\"n\">version</span> <span class=\"n\">go1</span><span class=\"m\">.2.1</span>\n<span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">WechatNotifyInfo</span><span class=\"p\">{</span><span class=\"n\">XMLName</span><span class=\"o\">:</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">{</span><span class=\"n\">Space</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">Local</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">xml</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;},</span> <span class=\"n\">Appid</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">wx0f0df4fda4ff1937</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}</span>\n</code></pre> ",
    "hits": 596,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 711,
    "title": "关于项目内模块引用的问题",
    "created_at": "2017-04-07 14:58:11",
    "updated_at": "2017-04-17 19:45:26",
    "replied_at": "2017-04-17 19:45:26",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1581,
    "last_reply_user_login": "asdfsx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1751,
    "user": "{\"id\": 1751, \"name\": \"kenticny\", \"login\": \"kenticny\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "新人弱弱的问个关于项目内模块引用的问题，看了几个开源的project，发现里面引用自己项目的模块也是通过 `github.com/xxx` 这种方式去引用的，想问下这种方式在开发的时候是需要将项目代码都组织到 `src/github.com` 下面么，这种方式和使用相对路径去引用模块的方法相比有什么好处么？",
    "body_html": "<p>新人弱弱的问个关于项目内模块引用的问题，看了几个开源的 project，发现里面引用自己项目的模块也是通过 <code>github.com/xxx</code> 这种方式去引用的，想问下这种方式在开发的时候是需要将项目代码都组织到 <code>src/github.com</code> 下面么，这种方式和使用相对路径去引用模块的方法相比有什么好处么？</p>",
    "hits": 435,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 712,
    "title": "在终端显示进度是怎么搞得？",
    "created_at": "2017-04-07 15:13:39",
    "updated_at": "2017-04-07 17:30:46",
    "replied_at": "2017-04-07 17:30:46",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 833,
    "last_reply_user_login": "CodyGuo",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1629,
    "user": "{\"id\": 1629, \"name\": \"dyllen\", \"login\": \"dyllen\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "比如git clone的时候，有个进度，上面的数字是不断刷新的，怎么样才能够不断的刷新终端的内容？",
    "body_html": "<p>比如 git clone 的时候，有个进度，上面的数字是不断刷新的，怎么样才能够不断的刷新终端的内容？</p>",
    "hits": 456,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 713,
    "title": "golang swith case",
    "created_at": "2017-04-07 19:09:06",
    "updated_at": "2017-04-08 16:14:41",
    "replied_at": "2017-04-08 16:14:05",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 173,
    "last_reply_user_login": "moss",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1765,
    "user": "{\"id\": 1765, \"name\": \"michael123\", \"login\": \"michael123\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "golang小白  请教个问题\n\ntype myInt int\n\nfunc (e *myInt) String() string {\n\tswitch e {   **#background和todo不是变量名字吗 为何可用放在case后面**\n\tcase background: \n\t\treturn &quot;context.Background&quot;\n\tcase todo:\n\t\treturn &quot;context.TODO&quot;\n\t}\n\treturn &quot;unknown empty Context&quot;\n}\n\nvar (\n\tbackground = new(myInt)\n\ttodo       = new(myInt)\n)\n\nfunc main() {\n\tfmt.Println(background.String())\n}\n\n",
    "body_html": "<p>golang 小白  请教个问题</p>\n\n<p>type myInt int</p>\n\n<p>func (e <em>myInt) String() string {\n    switch e {   *</em>#background 和 todo 不是变量名字吗 为何可用放在 case 后面 **\n    case background: \n        return \"context.Background\"\n    case todo:\n        return \"context.TODO\"\n    }\n    return \"unknown empty Context\"\n}</p>\n\n<p>var (\n    background = new(myInt)\n    todo       = new(myInt)\n)</p>\n\n<p>func main() {\n    fmt.Println(background.String())\n}</p>",
    "hits": 234,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 714,
    "title": "出gopher大会早鸟票",
    "created_at": "2017-04-10 14:30:10",
    "updated_at": "2017-04-14 10:04:03",
    "replied_at": "2017-04-14 10:04:03",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 627,
    "last_reply_user_login": "go、go、go",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1083,
    "user": "{\"id\": 1083, \"name\": \"skylzyd\", \"login\": \"skylzyd\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "临时有事去不了了",
    "body_html": "<p>临时有事去不了了</p>",
    "hits": 511,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 715,
    "title": "请问下有用过caddy server的吗",
    "created_at": "2017-04-11 21:27:00",
    "updated_at": "2017-09-25 17:22:07",
    "replied_at": "2017-09-25 17:22:07",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2802,
    "last_reply_user_login": "ddatsh",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 962,
    "user": "{\"id\": 962, \"name\": \"codinghxl\", \"login\": \"codinghxl\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "用go写web，大家都用的什么框架和server容器啊？caddy有用过的吗，感觉怎么样？我看介绍有点类似apache httpd",
    "body_html": "<p>用 go 写 web，大家都用的什么框架和 server 容器啊？caddy 有用过的吗，感觉怎么样？我看介绍有点类似 apache httpd</p>",
    "hits": 347,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 716,
    "title": "beego orm.insertMulti插入后，对象id没有像insert那样给对象加上",
    "created_at": "2017-04-12 12:09:54",
    "updated_at": "2021-01-20 02:22:42",
    "replied_at": "2019-09-05 00:12:56",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 8071,
    "last_reply_user_login": "hiramjoyce",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 458,
    "user": "{\"id\": 458, \"name\": \"luischan\", \"login\": \"luischan\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\n_, err = o.InsertMulti(len(s.Jobs), s.Jobs)\n\tif err != nil {\n\t\to.Rollback()\n\t\treturn err\n\t}\n\tfor _, job := range s.Jobs {\n\t\tfmt.Println(&quot;job&quot;, job.Id)\n\t}\n```\n这里打印出来的id均是0。但是调用insert方法，打印对象的id是有值的。请问大家有遇到过这个问题吗？",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">InsertMulti</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">Jobs</span><span class=\"p\">),</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">Jobs</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">Rollback</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">err</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">job</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">Jobs</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">job</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">Id</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n</code></pre> \n<p>这里打印出来的 id 均是 0。但是调用 insert 方法，打印对象的 id 是有值的。请问大家有遇到过这个问题吗？</p>",
    "hits": 995,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 717,
    "title": "这要怎么写才不报错 docker client api",
    "created_at": "2017-04-12 17:38:02",
    "updated_at": "2017-04-13 14:47:11",
    "replied_at": "2017-04-13 14:47:11",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1783,
    "last_reply_user_login": "喻星星",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1783,
    "user": "{\"id\": 1783, \"name\": \"喻星星\", \"login\": \"986118933\", \"avatar\": \"https://gocn.vip/system/letter_avatars/9.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```\npackage main\n\nimport (\n\t&quot;context&quot;\n\t&quot;fmt&quot;\n\t&quot;os&quot;\n\n\t&quot;github.com/docker/docker/api/types&quot;\n\t&quot;github.com/docker/docker/client&quot;\n)\nfunc BuildImageFromDockerfile(dockerfilePath string, tag string) (reb types.ImageBuildResponse,err error) {\n\tdefaultHeaders := map[string]string{&quot;User-Agent&quot;: &quot;engine-api-cli-1.0&quot;}\n\tclient,err:=client.NewClient(&quot;unix:///var/run/docker.sock&quot;,&quot;1.24&quot;,nil,defaultHeaders)\n\t//fmt.Println(client.ImageList(context.Background(),types.ImageListOptions{All:true}))\n\tif err!=nil {\n\t\treturn\n\t}\n\topt := types.ImageBuildOptions{\n\t\tDockerfile:  dockerfilePath,\n\t\tTags:        []string{tag},\n\t\tNoCache:     true,\n\t\tPullParent:true,\n\t\tSuppressOutput:true,\n\t\tForceRemove: true,\n\t}\n\tdockerBuildContext, err := os.Open(&quot;/root/yuxing/tarfile.tar&quot;)\n\tdefer dockerBuildContext.Close()\n\treb,err=client.ImageBuild(context.Background(), dockerBuildContext, opt)\n\treturn\n}\nfunc main() {\n\tret,err := BuildImageFromDockerfile(&quot;/root/yuxing/Dockerfile&quot;,&quot;aaaa&quot;)\n\tfmt.Println(ret,err)\n}\n\n```\n\n错误如下：\n```\nerror during connect: Post http://%2Fvar%2Frun%2Fdocker.sock/v1.24/build?buildargs=null&amp;cachefrom=null&amp;cgroupparent=&amp;cpuperiod=0&amp;cpuquota=0&amp;cpusetcpus=&amp;cpusetmems=&amp;cpushares=0&amp;dockerfile=%2Froot%2Fyuxi\nng%2FDockerfile&amp;forcerm=1&amp;labels=null&amp;memory=0&amp;memswap=0&amp;networkmode=&amp;nocache=1&amp;pull=1&amp;q=1&amp;rm=0&amp;shmsize=0&amp;t=aaaa&amp;ulimits=null: invalid argument\n```\n\nDockerfile内容：\n```\nFROM centos\nMAINTAINER yuxing\nRUN ln -s /server/nginx/sbin/nginx /bin\nRUN ln -s /server/php/sbin/php-fpm /bin\nRUN mkdir /www\nADD http://10.0.5.6/php7.1.3-bin.tar.gz /www\nWORKDIR /www\nRUN tar -xf /www/php7.1.3-bin.tar.gz\nRUN mv -f /www/php7.1.3-bin/lib64/* /usr/lib64\nRUN mv /www/php7.1.3-bin/server /\nRUN mv /www/php7.1.3-bin/npstart /bin\nRUN rm -f /www/php7.1.3-bin.tar.gz\nRUN rm -rf /www/php7.1.3-bin\nRUN chmod +x /bin/npstart\nCMD [&quot;npstart&quot;]\n```\n\n执行获取镜像列表都是没问题的",
    "body_html": " <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"n\">import</span> <span class=\"p\">(</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">context</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">os</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">/</span><span class=\"n\">docker</span><span class=\"p\">/</span><span class=\"n\">docker</span><span class=\"p\">/</span><span class=\"n\">api</span><span class=\"p\">/</span><span class=\"n\">types</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">/</span><span class=\"n\">docker</span><span class=\"p\">/</span><span class=\"n\">docker</span><span class=\"p\">/</span><span class=\"n\">client</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n<span class=\"n\">func</span> <span class=\"n\">BuildImageFromDockerfile</span><span class=\"p\">(</span><span class=\"n\">dockerfilePath</span> <span class=\"k\">string</span><span class=\"p\">,</span> <span class=\"n\">tag</span> <span class=\"k\">string</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"n\">reb</span> <span class=\"n\">types</span><span class=\"p\">.</span><span class=\"n\">ImageBuildResponse</span><span class=\"p\">,</span><span class=\"n\">err</span> <span class=\"n\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">defaultHeaders</span> <span class=\"p\">:=</span> <span class=\"n\">map</span><span class=\"p\">[</span><span class=\"k\">string</span><span class=\"p\">]</span><span class=\"k\">string</span><span class=\"p\">{&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">User</span><span class=\"p\">-</span><span class=\"n\">Agent</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;:</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">engine</span><span class=\"p\">-</span><span class=\"n\">api</span><span class=\"p\">-</span><span class=\"n\">cli</span><span class=\"p\">-</span><span class=\"m\">1.0</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}</span>\n    <span class=\"n\">client</span><span class=\"p\">,</span><span class=\"n\">err</span><span class=\"p\">:=</span><span class=\"n\">client</span><span class=\"p\">.</span><span class=\"n\">NewClient</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">unix</span><span class=\"p\">:///</span><span class=\"n\">var</span><span class=\"p\">/</span><span class=\"nf\">run</span><span class=\"p\">/</span><span class=\"n\">docker</span><span class=\"p\">.</span><span class=\"n\">sock</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"m\">1.24</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span><span class=\"n\">nil</span><span class=\"p\">,</span><span class=\"n\">defaultHeaders</span><span class=\"p\">)</span>\n    <span class=\"p\">//</span><span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">.</span><span class=\"n\">ImageList</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">.</span><span class=\"n\">Background</span><span class=\"p\">(),</span><span class=\"n\">types</span><span class=\"p\">.</span><span class=\"n\">ImageListOptions</span><span class=\"p\">{</span><span class=\"n\">All</span><span class=\"p\">:</span><span class=\"nb\">true</span><span class=\"p\">}))</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span><span class=\"c1\">!=nil {\n</span>        <span class=\"n\">return</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">opt</span> <span class=\"p\">:=</span> <span class=\"n\">types</span><span class=\"p\">.</span><span class=\"n\">ImageBuildOptions</span><span class=\"p\">{</span>\n        <span class=\"n\">Dockerfile</span><span class=\"p\">:</span>  <span class=\"n\">dockerfilePath</span><span class=\"p\">,</span>\n        <span class=\"n\">Tags</span><span class=\"p\">:</span>        <span class=\"p\">[]</span><span class=\"k\">string</span><span class=\"p\">{</span><span class=\"n\">tag</span><span class=\"p\">},</span>\n        <span class=\"n\">NoCache</span><span class=\"p\">:</span>     <span class=\"nb\">true</span><span class=\"p\">,</span>\n        <span class=\"n\">PullParent</span><span class=\"p\">:</span><span class=\"nb\">true</span><span class=\"p\">,</span>\n        <span class=\"n\">SuppressOutput</span><span class=\"p\">:</span><span class=\"nb\">true</span><span class=\"p\">,</span>\n        <span class=\"n\">ForceRemove</span><span class=\"p\">:</span> <span class=\"nb\">true</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">dockerBuildContext</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"p\">:=</span> <span class=\"n\">os</span><span class=\"p\">.</span><span class=\"n\">Open</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;/</span><span class=\"n\">root</span><span class=\"p\">/</span><span class=\"n\">yuxing</span><span class=\"p\">/</span><span class=\"n\">tarfile</span><span class=\"p\">.</span><span class=\"n\">tar</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">defer</span> <span class=\"n\">dockerBuildContext</span><span class=\"p\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n    <span class=\"n\">reb</span><span class=\"p\">,</span><span class=\"n\">err</span><span class=\"p\">=</span><span class=\"n\">client</span><span class=\"p\">.</span><span class=\"n\">ImageBuild</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">.</span><span class=\"n\">Background</span><span class=\"p\">(),</span> <span class=\"n\">dockerBuildContext</span><span class=\"p\">,</span> <span class=\"n\">opt</span><span class=\"p\">)</span>\n    <span class=\"n\">return</span>\n<span class=\"p\">}</span>\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">ret</span><span class=\"p\">,</span><span class=\"n\">err</span> <span class=\"p\">:=</span> <span class=\"n\">BuildImageFromDockerfile</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;/</span><span class=\"n\">root</span><span class=\"p\">/</span><span class=\"n\">yuxing</span><span class=\"p\">/</span><span class=\"n\">Dockerfile</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">aaaa</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">,</span><span class=\"n\">err</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n</code></pre> \n<p>错误如下：</p>\n <pre class=\"highlight plaintext\"><code>error during connect: Post http://%2Fvar%2Frun%2Fdocker.sock/v1.24/build?buildargs=null&amp;amp;cachefrom=null&amp;amp;cgroupparent=&amp;amp;cpuperiod=0&amp;amp;cpuquota=0&amp;amp;cpusetcpus=&amp;amp;cpusetmems=&amp;amp;cpushares=0&amp;amp;dockerfile=%2Froot%2Fyuxi\nng%2FDockerfile&amp;amp;forcerm=1&amp;amp;labels=null&amp;amp;memory=0&amp;amp;memswap=0&amp;amp;networkmode=&amp;amp;nocache=1&amp;amp;pull=1&amp;amp;q=1&amp;amp;rm=0&amp;amp;shmsize=0&amp;amp;t=aaaa&amp;amp;ulimits=null: invalid argument\n</code></pre> \n<p>Dockerfile 内容：</p>\n <pre class=\"highlight plaintext\"><code>FROM centos\nMAINTAINER yuxing\nRUN ln -s /server/nginx/sbin/nginx /bin\nRUN ln -s /server/php/sbin/php-fpm /bin\nRUN mkdir /www\nADD http://10.0.5.6/php7.1.3-bin.tar.gz /www\nWORKDIR /www\nRUN tar -xf /www/php7.1.3-bin.tar.gz\nRUN mv -f /www/php7.1.3-bin/lib64/* /usr/lib64\nRUN mv /www/php7.1.3-bin/server /\nRUN mv /www/php7.1.3-bin/npstart /bin\nRUN rm -f /www/php7.1.3-bin.tar.gz\nRUN rm -rf /www/php7.1.3-bin\nRUN chmod +x /bin/npstart\nCMD [&amp;quot;npstart&amp;quot;]\n</code></pre> \n<p>执行获取镜像列表都是没问题的</p>",
    "hits": 456,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 718,
    "title": "golang程序崩溃获取不到异常信息求指教",
    "created_at": "2017-04-13 12:26:27",
    "updated_at": "2017-04-17 14:13:35",
    "replied_at": "2017-04-17 14:13:35",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 124,
    "last_reply_user_login": "mnhkahn",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1261,
    "user": "{\"id\": 1261, \"name\": \"cjmxp\", \"login\": \"cjmxp\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "golang程序崩溃获取不到异常信息求指教\nrecover 也获取不到任何错误信息,貌似根本就没走defer 直进程被杀死一样\nlinux 下 用 ./xx &gt; log.txt 启动程序并不能获取错误信息\n求大大指教困扰我许久",
    "body_html": "<p>golang 程序崩溃获取不到异常信息求指教\nrecover 也获取不到任何错误信息,貌似根本就没走 defer 直进程被杀死一样\nlinux 下 用 ./xx &gt; log.txt 启动程序并不能获取错误信息\n求大大指教困扰我许久</p>",
    "hits": 681,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 719,
    "title": "我擦，PHP转GO找不到工作呀！",
    "created_at": "2017-04-14 21:47:13",
    "updated_at": "2017-05-03 12:41:40",
    "replied_at": "2017-05-03 12:41:40",
    "replies_count": 12,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1655,
    "last_reply_user_login": "hutaishi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1629,
    "user": "{\"id\": 1629, \"name\": \"dyllen\", \"login\": \"dyllen\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "go语言想转，去投了下，我日，我这种一开始就写脚本语言的好像没人要。看招聘要求，感觉还是java，c，c++这类程序员，转的话，应该比较好找。",
    "body_html": "<p>go 语言想转，去投了下，我日，我这种一开始就写脚本语言的好像没人要。看招聘要求，感觉还是 java，c，c++ 这类程序员，转的话，应该比较好找。</p>",
    "hits": 858,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 720,
    "title": "惊奇发现，[个性网址]变成只接受4~20位的了，那我现在3位的岂不是得好好珍惜",
    "created_at": "2017-04-17 12:01:45",
    "updated_at": "2017-04-17 12:01:45",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 220,
    "user": "{\"id\": 220, \"name\": \"Thomas\", \"login\": \"Thomas\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "大家注意到了么？还是说，虽然注意点写了4~20位的，其实是可以输入3位的？",
    "body_html": "<p>大家注意到了么？还是说，虽然注意点写了 4~20 位的，其实是可以输入 3 位的？</p>",
    "hits": 292,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 721,
    "title": "大家都用什么web框架",
    "created_at": "2017-04-18 09:42:53",
    "updated_at": "2018-09-04 09:41:09",
    "replied_at": "2018-09-04 09:41:09",
    "replies_count": 31,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 6368,
    "last_reply_user_login": "viewer",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1494,
    "user": "{\"id\": 1494, \"name\": \"stirlingx\", \"login\": \"stirlingx\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我们公司用的是[martini](https://github.com/go-martini/martini),你们呢",
    "body_html": "<p>我们公司用的是<a href=\"https://github.com/go-martini/martini\" rel=\"nofollow\" target=\"_blank\" title=\"\">martini</a>,你们呢</p>",
    "hits": 689,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 722,
    "title": "beego orm 中 表字段怎么设置 字段注释???",
    "created_at": "2017-04-18 16:11:38",
    "updated_at": "2021-01-20 03:09:53",
    "replied_at": "2017-05-04 10:41:48",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 931,
    "last_reply_user_login": "lifei6671",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1055,
    "user": "{\"id\": 1055, \"name\": \"hlj2722\", \"login\": \"hlj2722\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 327,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 723,
    "title": "为什么gRPC客户端不提供连接池？",
    "created_at": "2017-04-19 15:54:32",
    "updated_at": "2019-10-03 02:58:37",
    "replied_at": "2019-10-03 02:53:54",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2153,
    "last_reply_user_login": "tsingson",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1494,
    "user": "{\"id\": 1494, \"name\": \"stirlingx\", \"login\": \"stirlingx\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "为什么[grpc-go](https://github.com/grpc/grpc-go)不提供连接池？是因为底层采用了http2，支持多路复用，并发量已经足够高了？",
    "body_html": "<p>为什么<a href=\"https://github.com/grpc/grpc-go\" rel=\"nofollow\" target=\"_blank\" title=\"\">grpc-go</a>不提供连接池？是因为底层采用了 http2，支持多路复用，并发量已经足够高了？</p>",
    "hits": 1654,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 724,
    "title": "[坐标上海]寻求golang工程师，Are you ready to go ?",
    "created_at": "2017-04-20 09:23:32",
    "updated_at": "2017-04-24 20:12:15",
    "replied_at": "2017-04-24 20:12:15",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 271,
    "last_reply_user_login": "cholerae",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1800,
    "user": "{\"id\": 1800, \"name\": \"karfield\", \"login\": \"karfield\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "岗位描述：\n##管你是GO还是C/C++，或者是最好的PHP，「够浪就行」\n**又到了加需求的季节**\n---\nWeb开发工程师和金融系统开发工程师是我们正在寻找的小伙伴之一。\n**如果你具备以下技能，并且渴望在一家充满年轻活力的技术型公司快速成长，我们将会用代码感动你。**\n* 具有高并发系统开发经验，熟悉http、tcp协议，\n* 了解nginx、 apache、lighttpd或任何一款开源web服务；\n* 熟悉数据结构与算法，熟悉Redis、Oracle、Mysql等数据库；\n* 了解Go语言，擅长C/C++加分。金融行业开发经验，或相关系统。\n**这里特别欢迎乐于在技术社区分享知识的极客青年，具备文艺特长也将会是不错的加分项。**\n{我们不生产代码}\n{这里是黑科技的实验基地}\n待遇：20k-30k\n公司：汇宜金融\n有意请将简历发至：lilh@huiepay.com\n",
    "body_html": "<p>岗位描述：\n## 管你是 GO 还是 C/C++，或者是最好的 PHP，「够浪就行」</p>\n<h2 id=\"又到了加需求的季节\"><strong>又到了加需求的季节</strong></h2>\n<p>Web 开发工程师和金融系统开发工程师是我们正在寻找的小伙伴之一。\n<strong>如果你具备以下技能，并且渴望在一家充满年轻活力的技术型公司快速成长，我们将会用代码感动你。</strong></p>\n\n<ul>\n<li>具有高并发系统开发经验，熟悉 http、tcp 协议，</li>\n<li>了解 nginx、 apache、lighttpd 或任何一款开源 web 服务；</li>\n<li>熟悉数据结构与算法，熟悉 Redis、Oracle、Mysql 等数据库；</li>\n<li>了解 Go 语言，擅长 C/C++ 加分。金融行业开发经验，或相关系统。\n<strong>这里特别欢迎乐于在技术社区分享知识的极客青年，具备文艺特长也将会是不错的加分项。</strong>\n{我们不生产代码}\n{这里是黑科技的实验基地}\n待遇：20k-30k\n公司：汇宜金融\n有意请将简历发至：lilh@huiepay.com</li>\n</ul>",
    "hits": 254,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 725,
    "title": "如何使用golang实现可透传原请求的header的反向代理？ ",
    "created_at": "2017-04-20 14:09:40",
    "updated_at": "2017-04-21 12:09:38",
    "replied_at": "2017-04-20 23:34:04",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1194,
    "last_reply_user_login": "dcb9",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1221,
    "user": "{\"id\": 1221, \"name\": \"Anjie\", \"login\": \"Anjie\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "使用golang中的func NewSingleHostReverseProxy(target *url.URL) *ReverseProxy {} 可以实现反向代理，但是查看该法的的源码发现，这种代理是不会带上原请求的header中各值对的，有什么好办法可以通过golang实现反向代理同时也会带上原请求的header？【问题场景：原始请求的相关参数（如 http Authorization的授权认证是 通过 header 传递的，这点不得改变——即必须保留对这种做法的支持】",
    "body_html": "<p>使用 golang 中的 func NewSingleHostReverseProxy(target *url.URL) *ReverseProxy {} 可以实现反向代理，但是查看该法的的源码发现，这种代理是不会带上原请求的 header 中各值对的，有什么好办法可以通过 golang 实现反向代理同时也会带上原请求的 header？【问题场景：原始请求的相关参数（如 http Authorization 的授权认证是 通过 header 传递的，这点不得改变——即必须保留对这种做法的支持】</p>",
    "hits": 976,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 726,
    "title": "程序使用内存一直飙升",
    "created_at": "2017-04-22 01:23:58",
    "updated_at": "2017-04-22 22:39:55",
    "replied_at": "2017-04-22 22:39:55",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 96,
    "last_reply_user_login": "sheepbao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1344,
    "user": "{\"id\": 1344, \"name\": \"皇虫\", \"login\": \"1272881215\", \"avatar\": \"https://static.gocn.vip/user/avatar/1344/6acfae.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "\nweb框架使用的是beego1.7.2\n\nGo版本是1.7.3\n\n我使用ubuntu在本地做开发，然后程序开发完成后，使用apachebench（ab）在本地环境ubuntu下做压力测试，内存虽然飙升，但是并发在一定范围内的时候，内存的使用也会稳定在一定的范围内。\n\n但是在把ubuntu环境下编译好的程序丢到centos上运行的时候，用户访问量变化不大的情况下，程序的使用内存却一直在飙升，直至因内存使用达到服务器负载极限而导致程序挂掉。。。\n\n不知道大家有没有遇到过这种问题？是不是程序编译环境导致的？按理说我的ubuntu和centos，都是amd64，不应该是编译环境问题。\n\n折腾了好几天了，还找不到原因。麻烦大家帮忙分析一下。谢谢。",
    "body_html": "<p>web 框架使用的是 beego1.7.2</p>\n\n<p>Go 版本是 1.7.3</p>\n\n<p>我使用 ubuntu 在本地做开发，然后程序开发完成后，使用 apachebench（ab）在本地环境 ubuntu 下做压力测试，内存虽然飙升，但是并发在一定范围内的时候，内存的使用也会稳定在一定的范围内。</p>\n\n<p>但是在把 ubuntu 环境下编译好的程序丢到 centos 上运行的时候，用户访问量变化不大的情况下，程序的使用内存却一直在飙升，直至因内存使用达到服务器负载极限而导致程序挂掉。。。</p>\n\n<p>不知道大家有没有遇到过这种问题？是不是程序编译环境导致的？按理说我的 ubuntu 和 centos，都是 amd64，不应该是编译环境问题。</p>\n\n<p>折腾了好几天了，还找不到原因。麻烦大家帮忙分析一下。谢谢。</p>",
    "hits": 270,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 727,
    "title": "图片和文字同时上传解析问题（关键在于数据在body体里面）",
    "created_at": "2017-04-22 16:51:40",
    "updated_at": "2017-04-22 16:51:40",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 45,
    "user": "{\"id\": 45, \"name\": \"小张的烦恼\", \"login\": \"zhangyumingtfr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "各位大神我这边现在前端用http post请求传过来数据（里面包含图片），我这样解析\n// string 类型转为 json 对象\nfunc StringToStruct(data string) (json *simplejson.Json, err error) {\n\tjson, err = simplejson.NewJson([]byte(data))\n\treturn json, err\n}\n\nfunc ParseDatas(ctx *iris.Context) *simplejson.Json {\n\tlo, _ := ioutil.ReadAll(ctx.Request.Body)\n\tlogindatas := string(lo)\n\tfmt.Println(logindatas, &quot;logindatas&quot;)\n\tjs, err := StringToStruct(logindatas)\n\tif err != nil {\n\n\t}\n\treturn js\n}\n当然我可以在simplejson解析之前拿到图片，但是图片还是在啊，进入simplejson解析的 时候还是会出错，，\n但是这样解析的话，图片解析会失败(simplejson好像是不能解析图片的)，我要怎样才能同时解析呢（那个也不能解析到struct，因为每个post请求都要经过这里，数据是不一样的），或者用其他什么方式？？用的iris框架,",
    "body_html": "<p>各位大神我这边现在前端用 http post 请求传过来数据（里面包含图片），我这样解析\n// string 类型转为 json 对象\nfunc StringToStruct(data string) (json *simplejson.Json, err error) {\n    json, err = simplejson.NewJson([] byte(data))\n    return json, err\n}</p>\n\n<p>func ParseDatas(ctx *iris.Context) *simplejson.Json {\n    lo, _ := ioutil.ReadAll(ctx.Request.Body)\n    logindatas := string(lo)\n    fmt.Println(logindatas, \"logindatas\")\n    js, err := StringToStruct(logindatas)\n    if err != nil {</p>\n\n<p>}\n    return js\n}\n当然我可以在 simplejson 解析之前拿到图片，但是图片还是在啊，进入 simplejson 解析的 时候还是会出错，，\n但是这样解析的话，图片解析会失败 (simplejson 好像是不能解析图片的)，我要怎样才能同时解析呢（那个也不能解析到 struct，因为每个 post 请求都要经过这里，数据是不一样的），或者用其他什么方式？？用的 iris 框架,</p>",
    "hits": 340,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 728,
    "title": "gogland如何设置跳转仅限于本项目",
    "created_at": "2017-04-25 10:32:52",
    "updated_at": "2017-04-25 10:32:52",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 723,
    "user": "{\"id\": 723, \"name\": \"CTO\", \"login\": \"CTO\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "经常在gogland中跳转查看定义和用处，但是弹窗显示的很多都是其他项目的，如何将候选仅限到本项目和GOROOT",
    "body_html": "<p>经常在 gogland 中跳转查看定义和用处，但是弹窗显示的很多都是其他项目的，如何将候选仅限到本项目和 GOROOT</p>",
    "hits": 308,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 729,
    "title": "GoCN 每日新闻(2017-04-25)",
    "created_at": "2017-04-25 21:27:22",
    "updated_at": "2017-04-25 21:27:22",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GopherChina 每日新闻(2017-04-25)：\n\n1. Golang泛型编程初体验： https://mp.weixin.qq.com/s/EEUtTykcrXhcM2hJT01SoQ\n2. Go HTTP Redirect的知识点总结： http://colobu.com/2017/04/19/go-http-redirect\n3. 全球Gopher学生交流社群：https://github.com/gostudent/GoStudents\n4. https://blog.filippo.io/reproducing-go-binaries-byte-by-byte/\n5. 一个用Go实现的类似Ruby的语言 https://github.com/rooby-lang/rooby\n\n编辑：Asta",
    "body_html": "<p>GopherChina 每日新闻 (2017-04-25)：</p>\n\n<ol>\n<li>Golang 泛型编程初体验： <a href=\"https://mp.weixin.qq.com/s/EEUtTykcrXhcM2hJT01SoQ\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/EEUtTykcrXhcM2hJT01SoQ</a>\n</li>\n<li>Go HTTP Redirect 的知识点总结： <a href=\"http://colobu.com/2017/04/19/go-http-redirect\" rel=\"nofollow\" target=\"_blank\">http://colobu.com/2017/04/19/go-http-redirect</a>\n</li>\n<li>全球 Gopher 学生交流社群：<a href=\"https://github.com/gostudent/GoStudents\" rel=\"nofollow\" target=\"_blank\">https://github.com/gostudent/GoStudents</a>\n</li>\n<li><a href=\"https://blog.filippo.io/reproducing-go-binaries-byte-by-byte/\" rel=\"nofollow\" target=\"_blank\">https://blog.filippo.io/reproducing-go-binaries-byte-by-byte/</a></li>\n<li>一个用 Go 实现的类似 Ruby 的语言 <a href=\"https://github.com/rooby-lang/rooby\" rel=\"nofollow\" target=\"_blank\">https://github.com/rooby-lang/rooby</a>\n</li>\n</ol>\n\n<p>编辑：Asta</p>",
    "hits": 476,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 730,
    "title": "go 怎么处理一个未知异常？？",
    "created_at": "2017-04-26 18:28:54",
    "updated_at": "2017-10-18 16:10:16",
    "replied_at": "2017-10-18 16:10:16",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1827,
    "last_reply_user_login": "xiaodizi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 962,
    "user": "{\"id\": 962, \"name\": \"codinghxl\", \"login\": \"codinghxl\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "项目如果出现一个未知异常，怎么防止go进程退出，还有怎么打印出未知异常的详细堆栈信息呢？",
    "body_html": "<p>项目如果出现一个未知异常，怎么防止 go 进程退出，还有怎么打印出未知异常的详细堆栈信息呢？</p>",
    "hits": 607,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 731,
    "title": "GoCN 每日新闻(2017-04-27)",
    "created_at": "2017-04-27 13:06:27",
    "updated_at": "2017-04-27 16:03:40",
    "replied_at": "2017-04-27 16:03:40",
    "replies_count": 1,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 1831,
    "last_reply_user_login": "aaronwu",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN 每日新闻(2017-04-27)\n\n1. [gRPC-Web: 迁移REST+JSON到类型安全的API](https://spatialos.improbable.io/games/grpc-web-moving-past-restjson-towards-type-safe-web-apis) \n2. [fasthttp中的协程池实现](https://segmentfault.com/a/1190000009133154)\n3. [Go安全编程指南](https://github.com/Checkmarx/Go-SCP)\n4. [深入理解Go的指针](https://dave.cheney.net/2017/04/26/understand-go-pointers-in-less-than-800-words-or-your-money-back)\n5. [Go实现的2D游戏引擎: Pixel](https://github.com/faiface/pixel)\n\n编辑: Asta \n",
    "body_html": "<p>GoCN 每日新闻 (2017-04-27)</p>\n\n<ol>\n<li>\n<a href=\"https://spatialos.improbable.io/games/grpc-web-moving-past-restjson-towards-type-safe-web-apis\" rel=\"nofollow\" target=\"_blank\" title=\"\">gRPC-Web: 迁移 REST+JSON 到类型安全的 API</a> </li>\n<li><a href=\"https://segmentfault.com/a/1190000009133154\" rel=\"nofollow\" target=\"_blank\" title=\"\">fasthttp 中的协程池实现</a></li>\n<li><a href=\"https://github.com/Checkmarx/Go-SCP\" rel=\"nofollow\" target=\"_blank\" title=\"\">Go 安全编程指南</a></li>\n<li><a href=\"https://dave.cheney.net/2017/04/26/understand-go-pointers-in-less-than-800-words-or-your-money-back\" rel=\"nofollow\" target=\"_blank\" title=\"\">深入理解 Go 的指针</a></li>\n<li><a href=\"https://github.com/faiface/pixel\" rel=\"nofollow\" target=\"_blank\" title=\"\">Go 实现的 2D 游戏引擎: Pixel</a></li>\n</ol>\n\n<p>编辑: Asta </p>",
    "hits": 595,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 732,
    "title": "beego rest ful  请求参数为JSON怎么获取",
    "created_at": "2017-04-27 15:13:44",
    "updated_at": "2021-02-09 05:24:58",
    "replied_at": "2018-02-10 14:38:48",
    "replies_count": 5,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 3962,
    "last_reply_user_login": "xtceetg",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1783,
    "user": "{\"id\": 1783, \"name\": \"喻星星\", \"login\": \"986118933\", \"avatar\": \"https://gocn.vip/system/letter_avatars/9.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```\nlog.Println(string(this.Ctx.Input.RequestBody))\n结果\n{\n    &quot;name&quot;: &quot;yuxing&quot;\n}\n```\n这是官网的demo\n```\nfunc (this *ObjectController) Post() {\n    var ob models.Object\n    json.Unmarshal(this.Ctx.Input.RequestBody, &amp;ob)\n    objectid := models.AddOne(ob)\n    this.Data[&quot;json&quot;] = &quot;{\\&quot;ObjectId\\&quot;:\\&quot;&quot; + objectid + &quot;\\&quot;}&quot;\n    this.ServeJSON()\n}\n```\n\n有没有类似GetInt GetString 这样的方法  直接提取JSON里面的数据 (好像有点不太现实)",
    "body_html": "<pre class=\"highlight plaintext\"><code>log.Println(string(this.Ctx.Input.RequestBody))\n结果\n{\n    &amp;quot;name&amp;quot;: &amp;quot;yuxing&amp;quot;\n}\n</code></pre>\n<p>这是官网的 demo</p>\n<pre class=\"highlight plaintext\"><code>func (this *ObjectController) Post() {\n    var ob models.Object\n    json.Unmarshal(this.Ctx.Input.RequestBody, &amp;amp;ob)\n    objectid := models.AddOne(ob)\n    this.Data[&amp;quot;json&amp;quot;] = &amp;quot;{\\&amp;quot;ObjectId\\&amp;quot;:\\&amp;quot;&amp;quot; + objectid + &amp;quot;\\&amp;quot;}&amp;quot;\n    this.ServeJSON()\n}\n</code></pre>\n<p>有没有类似 GetInt GetString 这样的方法  直接提取 JSON 里面的数据 (好像有点不太现实)</p>",
    "hits": 519,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 8,
    "collect_count": 0
  },
  {
    "id": 733,
    "title": "bytes.makeSlice问题",
    "created_at": "2017-04-28 11:37:43",
    "updated_at": "2018-12-25 12:04:30",
    "replied_at": "2018-12-25 12:04:30",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1364,
    "last_reply_user_login": "lrita",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1344,
    "user": "{\"id\": 1344, \"name\": \"皇虫\", \"login\": \"1272881215\", \"avatar\": \"https://static.gocn.vip/user/avatar/1344/6acfae.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "程序内存一直在飙升，然后使用golang的pprof做分析，发现bytes.makeSlice占用内存最多，执行：go tool  pprof --text http://localhost:6060/debug/pprof/heap ，结果如下，大家帮忙分析下问题，纠结了好久，不知道问题在什么地方。\n\n```go\n83.94MB of 83.94MB total (  100%)\nDropped 282 nodes (cum &lt;= 0.42MB)\n      flat  flat%   sum%        cum   cum%\n   78.39MB 93.39% 93.39%    78.39MB 93.39%  bytes.makeSlice\n       1MB  1.19% 94.58%        1MB  1.19%  github.com/astaxie/beego/orm.newFieldInfo\n       1MB  1.19% 95.77%        1MB  1.19%  reflect.Value.call\n    0.52MB  0.62% 96.40%     0.52MB  0.62%  github.com/go-sql-driver/mysql.(*mysqlConn).writeCommandPacketStr\n    0.52MB  0.61% 97.01%     0.52MB  0.61%  regexp.(*bitState).reset\n    0.51MB   0.6% 97.62%     0.51MB   0.6%  fmt.(*fmt).padString\n    0.50MB   0.6% 98.21%     0.50MB   0.6%  text/template.addValueFuncs\n    0.50MB   0.6% 98.81%     0.50MB   0.6%  github.com/astaxie/beego/orm.(*fields).Add\n    0.50MB   0.6% 99.40%     0.50MB   0.6%  text/template/parse.(*Tree).newField\n    0.50MB   0.6%   100%        1MB  1.19%  text/template/parse.(*Tree).textOrAction\n         0     0%   100%    78.39MB 93.39%  bytes.(*Buffer).Write\n         0     0%   100%    78.39MB 93.39%  bytes.(*Buffer).grow\n         0     0%   100%     0.52MB  0.62%  database/sql.(*DB).Query\n         0     0%   100%     0.52MB  0.62%  database/sql.(*DB).query\n         0     0%   100%     0.52MB  0.62%  database/sql.(*DB).queryConn\n         0     0%   100%     0.51MB   0.6%  fmt.(*fmt).fmt_s\n         0     0%   100%     0.51MB   0.6%  fmt.(*pp).doPrint\n         0     0%   100%     0.51MB   0.6%  fmt.(*pp).fmtString\n         0     0%   100%     0.51MB   0.6%  fmt.(*pp).printArg\n         0     0%   100%     0.51MB   0.6%  fmt.Fprint\n         0     0%   100%     2.53MB  3.01%  github.com/astaxie/beego.(*Controller).Render\n         0     0%   100%     2.53MB  3.01%  github.com/astaxie/beego.(*Controller).RenderBytes\n         0     0%   100%     1.50MB  1.79%  github.com/astaxie/beego.(*Controller).renderTemplate\n         0     0%   100%     0.52MB  0.61%  github.com/astaxie/beego.(*ControllerRegister).FindRouter\n         0     0%   100%    80.41MB 95.80%  github.com/astaxie/beego.(*ControllerRegister).ServeHTTP\n         0     0%   100%     0.52MB  0.61%  github.com/astaxie/beego.(*Tree).Match\n         0     0%   100%     0.52MB  0.61%  github.com/astaxie/beego.(*Tree).match\n         0     0%   100%     0.52MB  0.61%  github.com/astaxie/beego.(*leafInfo).match\n         0     0%   100%     1.50MB  1.79%  github.com/astaxie/beego.BuildTemplate\n         0     0%   100%     2.53MB  3.01%  github.com/astaxie/beego.ExecuteTemplate\n         0     0%   100%     1.50MB  1.79%  github.com/astaxie/beego.Run\n         0     0%   100%     1.50MB  1.79%  github.com/astaxie/beego.getTemplate\n         0     0%   100%        1MB  1.19%  github.com/astaxie/beego.getTplDeep\n         0     0%   100%     1.50MB  1.79%  github.com/astaxie/beego.initBeforeHTTPRun\n         0     0%   100%    77.37MB 92.18%  github.com/astaxie/beego.openFile\n         0     0%   100%     1.50MB  1.79%  github.com/astaxie/beego.registerTemplate\n         0     0%   100%    77.37MB 92.18%  github.com/astaxie/beego.serverStaticRouter\n         0     0%   100%    77.37MB 92.18%  github.com/astaxie/beego/context.(*nopResetWriter).Write\n         0     0%   100%    77.37MB 92.18%  github.com/astaxie/beego/context.WriteFile\n         0     0%   100%    77.37MB 92.18%  github.com/astaxie/beego/context.writeLevel\n         0     0%   100%     0.52MB  0.62%  github.com/astaxie/beego/orm.(*rawSet).Values\n         0     0%   100%     0.52MB  0.62%  github.com/astaxie/beego/orm.(*rawSet).readValues\n         0     0%   100%     1.50MB  1.79%  github.com/astaxie/beego/orm.RegisterModelWithPrefix\n         0     0%   100%     1.50MB  1.79%  github.com/astaxie/beego/orm.addModelFields\n         0     0%   100%     1.50MB  1.79%  github.com/astaxie/beego/orm.newModelInfo\n         0     0%   100%     1.50MB  1.79%  github.com/astaxie/beego/orm.registerModel\n         0     0%   100%     0.52MB  0.62%  github.com/go-sql-driver/mysql.(*mysqlConn).Query\n         0     0%   100%     2.53MB  3.01%  html/template.(*Template).ExecuteTemplate\n         0     0%   100%     0.50MB   0.6%  html/template.(*Template).Funcs\n         0     0%   100%        1MB  1.19%  html/template.(*Template).Parse\n         0     0%   100%    77.37MB 92.18%  io.Copy\n         0     0%   100%    77.37MB 92.18%  io.copyBuffer\n         0     0%   100%     1.50MB  1.79%  main.init\n         0     0%   100%     1.50MB  1.79%  main.init.1\n         0     0%   100%     1.50MB  1.79%  main.main\n         0     0%   100%    79.91MB 95.20%  net/http.(*conn).serve\n         0     0%   100%    80.41MB 95.80%  net/http.serverHandler.ServeHTTP\n         0     0%   100%        1MB  1.19%  reflect.Value.Call\n         0     0%   100%     0.52MB  0.61%  regexp.(*Regexp).MatchString\n         0     0%   100%     0.52MB  0.61%  regexp.(*Regexp).doExecute\n         0     0%   100%     0.52MB  0.61%  regexp.(*machine).backtrack\n         0     0%   100%    83.44MB 99.40%  runtime.goexit\n         0     0%   100%        3MB  3.58%  runtime.main\n         0     0%   100%     2.53MB  3.01%  text/template.(*Template).Execute\n         0     0%   100%     0.50MB   0.6%  text/template.(*Template).Funcs\n         0     0%   100%        1MB  1.19%  text/template.(*Template).Parse\n         0     0%   100%     2.53MB  3.01%  text/template.(*Template).execute\n         0     0%   100%     0.50MB   0.6%  text/template.(*state).evalArg\n         0     0%   100%        1MB  1.19%  text/template.(*state).evalCall\n         0     0%   100%        1MB  1.19%  text/template.(*state).evalCommand\n         0     0%   100%        1MB  1.19%  text/template.(*state).evalFunction\n         0     0%   100%        1MB  1.19%  text/template.(*state).evalPipeline\n         0     0%   100%     0.51MB   0.6%  text/template.(*state).printValue\n         0     0%   100%     2.53MB  3.01%  text/template.(*state).walk\n         0     0%   100%     1.52MB  1.81%  text/template.(*state).walkRange\n         0     0%   100%     1.52MB  1.81%  text/template.(*state).walkRange.func1\n         0     0%   100%     0.52MB  0.61%  text/template.(*state).walkTemplate\n         0     0%   100%        1MB  1.19%  text/template/parse.(*Tree).Parse\n         0     0%   100%        1MB  1.19%  text/template/parse.(*Tree).action\n         0     0%   100%     0.50MB   0.6%  text/template/parse.(*Tree).command\n         0     0%   100%     0.50MB   0.6%  text/template/parse.(*Tree).ifControl\n         0     0%   100%     0.50MB   0.6%  text/template/parse.(*Tree).itemList\n         0     0%   100%     0.50MB   0.6%  text/template/parse.(*Tree).operand\n         0     0%   100%        1MB  1.19%  text/template/parse.(*Tree).parse\n         0     0%   100%     0.50MB   0.6%  text/template/parse.(*Tree).parseControl\n         0     0%   100%     0.50MB   0.6%  text/template/parse.(*Tree).pipeline\n         0     0%   100%        1MB  1.19%  text/template/parse.Parse\n         0     0%   100%     0.52MB  0.62%  wangpan/models.(*Share).GetByIds\n         0     0%   100%     1.50MB  1.79%  wangpan/models.Init\n         0     0%   100%     1.50MB  1.79%  wangpan/models.RegisterDB\n         0     0%   100%     0.52MB  0.62%  wangpan/models.SitemapUpdate\n         0     0%   100%     0.52MB  0.62%  wangpan/models.SitemapUpdate.func1\n         0     0%   100%     0.52MB  0.62%  wangpan/models.Tmp2data\n         0     0%   100%     0.52MB  0.62%  wangpan/models.sitemapBuild\n```",
    "body_html": "<p>程序内存一直在飙升，然后使用 golang 的 pprof 做分析，发现 bytes.makeSlice 占用内存最多，执行：go tool  pprof --text <a href=\"http://localhost:6060/debug/pprof/heap\" rel=\"nofollow\" target=\"_blank\">http://localhost:6060/debug/pprof/heap</a> ，结果如下，大家帮忙分析下问题，纠结了好久，不知道问题在什么地方。</p>\n <pre class=\"highlight go\"><code><span class=\"m\">83.94</span><span class=\"n\">MB</span> <span class=\"n\">of</span> <span class=\"m\">83.94</span><span class=\"n\">MB</span> <span class=\"n\">total</span> <span class=\"p\">(</span>  <span class=\"m\">100</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"n\">Dropped</span> <span class=\"m\">282</span> <span class=\"n\">nodes</span> <span class=\"p\">(</span><span class=\"n\">cum</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">=</span> <span class=\"m\">0.42</span><span class=\"n\">MB</span><span class=\"p\">)</span>\n      <span class=\"n\">flat</span>  <span class=\"n\">flat</span><span class=\"o\">%</span>   <span class=\"n\">sum</span><span class=\"o\">%</span>        <span class=\"n\">cum</span>   <span class=\"n\">cum</span><span class=\"o\">%</span>\n   <span class=\"m\">78.39</span><span class=\"n\">MB</span> <span class=\"m\">93.39</span><span class=\"o\">%</span> <span class=\"m\">93.39</span><span class=\"o\">%</span>    <span class=\"m\">78.39</span><span class=\"n\">MB</span> <span class=\"m\">93.39</span><span class=\"o\">%</span>  <span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"n\">makeSlice</span>\n       <span class=\"m\">1</span><span class=\"n\">MB</span>  <span class=\"m\">1.19</span><span class=\"o\">%</span> <span class=\"m\">94.58</span><span class=\"o\">%</span>        <span class=\"m\">1</span><span class=\"n\">MB</span>  <span class=\"m\">1.19</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">newFieldInfo</span>\n       <span class=\"m\">1</span><span class=\"n\">MB</span>  <span class=\"m\">1.19</span><span class=\"o\">%</span> <span class=\"m\">95.77</span><span class=\"o\">%</span>        <span class=\"m\">1</span><span class=\"n\">MB</span>  <span class=\"m\">1.19</span><span class=\"o\">%</span>  <span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">call</span>\n    <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.62</span><span class=\"o\">%</span> <span class=\"m\">96.40</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.62</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">-</span><span class=\"n\">sql</span><span class=\"o\">-</span><span class=\"n\">driver</span><span class=\"o\">/</span><span class=\"n\">mysql</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">mysqlConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">writeCommandPacketStr</span>\n    <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.61</span><span class=\"o\">%</span> <span class=\"m\">97.01</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.61</span><span class=\"o\">%</span>  <span class=\"n\">regexp</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">bitState</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reset</span>\n    <span class=\"m\">0.51</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span> <span class=\"m\">97.62</span><span class=\"o\">%</span>     <span class=\"m\">0.51</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">fmt</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">padString</span>\n    <span class=\"m\">0.50</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span> <span class=\"m\">98.21</span><span class=\"o\">%</span>     <span class=\"m\">0.50</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">addValueFuncs</span>\n    <span class=\"m\">0.50</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span> <span class=\"m\">98.81</span><span class=\"o\">%</span>     <span class=\"m\">0.50</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">fields</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Add</span>\n    <span class=\"m\">0.50</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span> <span class=\"m\">99.40</span><span class=\"o\">%</span>     <span class=\"m\">0.50</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">/</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Tree</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">newField</span>\n    <span class=\"m\">0.50</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>        <span class=\"m\">1</span><span class=\"n\">MB</span>  <span class=\"m\">1.19</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">/</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Tree</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">textOrAction</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>    <span class=\"m\">78.39</span><span class=\"n\">MB</span> <span class=\"m\">93.39</span><span class=\"o\">%</span>  <span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Buffer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Write</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>    <span class=\"m\">78.39</span><span class=\"n\">MB</span> <span class=\"m\">93.39</span><span class=\"o\">%</span>  <span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Buffer</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">grow</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.62</span><span class=\"o\">%</span>  <span class=\"n\">database</span><span class=\"o\">/</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">DB</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Query</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.62</span><span class=\"o\">%</span>  <span class=\"n\">database</span><span class=\"o\">/</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">DB</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">query</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.62</span><span class=\"o\">%</span>  <span class=\"n\">database</span><span class=\"o\">/</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">DB</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">queryConn</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.51</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">fmt</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fmt_s</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.51</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pp</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">doPrint</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.51</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pp</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fmtString</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.51</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pp</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">printArg</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.51</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Fprint</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">2.53</span><span class=\"n\">MB</span>  <span class=\"m\">3.01</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Controller</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Render</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">2.53</span><span class=\"n\">MB</span>  <span class=\"m\">3.01</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Controller</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">RenderBytes</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">1.50</span><span class=\"n\">MB</span>  <span class=\"m\">1.79</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Controller</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">renderTemplate</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.61</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">ControllerRegister</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">FindRouter</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>    <span class=\"m\">80.41</span><span class=\"n\">MB</span> <span class=\"m\">95.80</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">ControllerRegister</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ServeHTTP</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.61</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Tree</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Match</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.61</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Tree</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">match</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.61</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">leafInfo</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">match</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">1.50</span><span class=\"n\">MB</span>  <span class=\"m\">1.79</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">BuildTemplate</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">2.53</span><span class=\"n\">MB</span>  <span class=\"m\">3.01</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">ExecuteTemplate</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">1.50</span><span class=\"n\">MB</span>  <span class=\"m\">1.79</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">Run</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">1.50</span><span class=\"n\">MB</span>  <span class=\"m\">1.79</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">getTemplate</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>        <span class=\"m\">1</span><span class=\"n\">MB</span>  <span class=\"m\">1.19</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">getTplDeep</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">1.50</span><span class=\"n\">MB</span>  <span class=\"m\">1.79</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">initBeforeHTTPRun</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>    <span class=\"m\">77.37</span><span class=\"n\">MB</span> <span class=\"m\">92.18</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">openFile</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">1.50</span><span class=\"n\">MB</span>  <span class=\"m\">1.79</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">registerTemplate</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>    <span class=\"m\">77.37</span><span class=\"n\">MB</span> <span class=\"m\">92.18</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">serverStaticRouter</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>    <span class=\"m\">77.37</span><span class=\"n\">MB</span> <span class=\"m\">92.18</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">nopResetWriter</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Write</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>    <span class=\"m\">77.37</span><span class=\"n\">MB</span> <span class=\"m\">92.18</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">WriteFile</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>    <span class=\"m\">77.37</span><span class=\"n\">MB</span> <span class=\"m\">92.18</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">writeLevel</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.62</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">rawSet</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Values</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.62</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">rawSet</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readValues</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">1.50</span><span class=\"n\">MB</span>  <span class=\"m\">1.79</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">RegisterModelWithPrefix</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">1.50</span><span class=\"n\">MB</span>  <span class=\"m\">1.79</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">addModelFields</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">1.50</span><span class=\"n\">MB</span>  <span class=\"m\">1.79</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">newModelInfo</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">1.50</span><span class=\"n\">MB</span>  <span class=\"m\">1.79</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">astaxie</span><span class=\"o\">/</span><span class=\"n\">beego</span><span class=\"o\">/</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">registerModel</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.62</span><span class=\"o\">%</span>  <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">-</span><span class=\"n\">sql</span><span class=\"o\">-</span><span class=\"n\">driver</span><span class=\"o\">/</span><span class=\"n\">mysql</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">mysqlConn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Query</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">2.53</span><span class=\"n\">MB</span>  <span class=\"m\">3.01</span><span class=\"o\">%</span>  <span class=\"n\">html</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Template</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ExecuteTemplate</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.50</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">html</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Template</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Funcs</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>        <span class=\"m\">1</span><span class=\"n\">MB</span>  <span class=\"m\">1.19</span><span class=\"o\">%</span>  <span class=\"n\">html</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Template</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Parse</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>    <span class=\"m\">77.37</span><span class=\"n\">MB</span> <span class=\"m\">92.18</span><span class=\"o\">%</span>  <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">Copy</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>    <span class=\"m\">77.37</span><span class=\"n\">MB</span> <span class=\"m\">92.18</span><span class=\"o\">%</span>  <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">copyBuffer</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">1.50</span><span class=\"n\">MB</span>  <span class=\"m\">1.79</span><span class=\"o\">%</span>  <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">init</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">1.50</span><span class=\"n\">MB</span>  <span class=\"m\">1.79</span><span class=\"o\">%</span>  <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"m\">.1</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">1.50</span><span class=\"n\">MB</span>  <span class=\"m\">1.79</span><span class=\"o\">%</span>  <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">main</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>    <span class=\"m\">79.91</span><span class=\"n\">MB</span> <span class=\"m\">95.20</span><span class=\"o\">%</span>  <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">conn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">serve</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>    <span class=\"m\">80.41</span><span class=\"n\">MB</span> <span class=\"m\">95.80</span><span class=\"o\">%</span>  <span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">serverHandler</span><span class=\"o\">.</span><span class=\"n\">ServeHTTP</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>        <span class=\"m\">1</span><span class=\"n\">MB</span>  <span class=\"m\">1.19</span><span class=\"o\">%</span>  <span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">Call</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.61</span><span class=\"o\">%</span>  <span class=\"n\">regexp</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Regexp</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">MatchString</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.61</span><span class=\"o\">%</span>  <span class=\"n\">regexp</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Regexp</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">doExecute</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.61</span><span class=\"o\">%</span>  <span class=\"n\">regexp</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">machine</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">backtrack</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>    <span class=\"m\">83.44</span><span class=\"n\">MB</span> <span class=\"m\">99.40</span><span class=\"o\">%</span>  <span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">goexit</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>        <span class=\"m\">3</span><span class=\"n\">MB</span>  <span class=\"m\">3.58</span><span class=\"o\">%</span>  <span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">main</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">2.53</span><span class=\"n\">MB</span>  <span class=\"m\">3.01</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Template</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Execute</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.50</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Template</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Funcs</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>        <span class=\"m\">1</span><span class=\"n\">MB</span>  <span class=\"m\">1.19</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Template</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Parse</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">2.53</span><span class=\"n\">MB</span>  <span class=\"m\">3.01</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Template</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">execute</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.50</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">state</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">evalArg</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>        <span class=\"m\">1</span><span class=\"n\">MB</span>  <span class=\"m\">1.19</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">state</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">evalCall</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>        <span class=\"m\">1</span><span class=\"n\">MB</span>  <span class=\"m\">1.19</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">state</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">evalCommand</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>        <span class=\"m\">1</span><span class=\"n\">MB</span>  <span class=\"m\">1.19</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">state</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">evalFunction</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>        <span class=\"m\">1</span><span class=\"n\">MB</span>  <span class=\"m\">1.19</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">state</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">evalPipeline</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.51</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">state</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">printValue</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">2.53</span><span class=\"n\">MB</span>  <span class=\"m\">3.01</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">state</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">walk</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">1.52</span><span class=\"n\">MB</span>  <span class=\"m\">1.81</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">state</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">walkRange</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">1.52</span><span class=\"n\">MB</span>  <span class=\"m\">1.81</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">state</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">walkRange</span><span class=\"o\">.</span><span class=\"n\">func1</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.61</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">state</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">walkTemplate</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>        <span class=\"m\">1</span><span class=\"n\">MB</span>  <span class=\"m\">1.19</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">/</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Tree</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Parse</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>        <span class=\"m\">1</span><span class=\"n\">MB</span>  <span class=\"m\">1.19</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">/</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Tree</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">action</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.50</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">/</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Tree</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">command</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.50</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">/</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Tree</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ifControl</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.50</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">/</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Tree</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">itemList</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.50</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">/</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Tree</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">operand</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>        <span class=\"m\">1</span><span class=\"n\">MB</span>  <span class=\"m\">1.19</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">/</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Tree</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">parse</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.50</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">/</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Tree</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">parseControl</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.50</span><span class=\"n\">MB</span>   <span class=\"m\">0.6</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">/</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Tree</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pipeline</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>        <span class=\"m\">1</span><span class=\"n\">MB</span>  <span class=\"m\">1.19</span><span class=\"o\">%</span>  <span class=\"n\">text</span><span class=\"o\">/</span><span class=\"n\">template</span><span class=\"o\">/</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"n\">Parse</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.62</span><span class=\"o\">%</span>  <span class=\"n\">wangpan</span><span class=\"o\">/</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Share</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetByIds</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">1.50</span><span class=\"n\">MB</span>  <span class=\"m\">1.79</span><span class=\"o\">%</span>  <span class=\"n\">wangpan</span><span class=\"o\">/</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Init</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">1.50</span><span class=\"n\">MB</span>  <span class=\"m\">1.79</span><span class=\"o\">%</span>  <span class=\"n\">wangpan</span><span class=\"o\">/</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">RegisterDB</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.62</span><span class=\"o\">%</span>  <span class=\"n\">wangpan</span><span class=\"o\">/</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">SitemapUpdate</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.62</span><span class=\"o\">%</span>  <span class=\"n\">wangpan</span><span class=\"o\">/</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">SitemapUpdate</span><span class=\"o\">.</span><span class=\"n\">func1</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.62</span><span class=\"o\">%</span>  <span class=\"n\">wangpan</span><span class=\"o\">/</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Tmp2data</span>\n         <span class=\"m\">0</span>     <span class=\"m\">0</span><span class=\"o\">%</span>   <span class=\"m\">100</span><span class=\"o\">%</span>     <span class=\"m\">0.52</span><span class=\"n\">MB</span>  <span class=\"m\">0.62</span><span class=\"o\">%</span>  <span class=\"n\">wangpan</span><span class=\"o\">/</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">sitemapBuild</span>\n</code></pre> ",
    "hits": 690,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 734,
    "title": "GoCN 每日新闻(2017-04-28)",
    "created_at": "2017-04-28 15:40:17",
    "updated_at": "2017-04-28 15:40:17",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN 每日新闻(2017-04-28)\n\n1. Go的一年体会 https://bugfender.com/one-year-using-go\n2. Go开源书籍合集 https://www.ossblog.org/assimilate-go-programming-open-source-books/\n3. Go模块化设计的思考 https://medium.com/@ryankurte/thoughts-on-writing-modular-go-1-8-6e47f2fd20af\n4. GopherChina大会PPT https://github.com/gopherchina/conference/tree/master/2017\n5. Go数据分析和数据工具集合 http://gopherdata.io/\n\n招聘信息：\n1. 【北京】360导航事业部招聘Go工程师 https://gocn.io/article/308\n2. 【上海】appcoachs招聘golang工程师 https://gocn.io/article/309\n\n编辑：Asta &amp; 傅小黑\n",
    "body_html": "<p>GoCN 每日新闻 (2017-04-28)</p>\n\n<ol>\n<li>Go 的一年体会 <a href=\"https://bugfender.com/one-year-using-go\" rel=\"nofollow\" target=\"_blank\">https://bugfender.com/one-year-using-go</a>\n</li>\n<li>Go 开源书籍合集 <a href=\"https://www.ossblog.org/assimilate-go-programming-open-source-books/\" rel=\"nofollow\" target=\"_blank\">https://www.ossblog.org/assimilate-go-programming-open-source-books/</a>\n</li>\n<li>Go 模块化设计的思考 <a href=\"https://medium.com/@ryankurte/thoughts-on-writing-modular-go-1-8-6e47f2fd20af\" rel=\"nofollow\" target=\"_blank\">https://medium.com/@ryankurte/thoughts-on-writing-modular-go-1-8-6e47f2fd20af</a>\n</li>\n<li>GopherChina 大会 PPT <a href=\"https://github.com/gopherchina/conference/tree/master/2017\" rel=\"nofollow\" target=\"_blank\">https://github.com/gopherchina/conference/tree/master/2017</a>\n</li>\n<li>Go 数据分析和数据工具集合 <a href=\"http://gopherdata.io/\" rel=\"nofollow\" target=\"_blank\">http://gopherdata.io/</a>\n</li>\n</ol>\n\n<p>招聘信息：</p>\n\n<ol>\n<li>【北京】360 导航事业部招聘 Go 工程师 <a href=\"https://gocn.io/article/308\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/308</a>\n</li>\n<li>【上海】appcoachs 招聘 golang 工程师 <a href=\"https://gocn.io/article/309\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/309</a>\n</li>\n</ol>\n\n<p>编辑：Asta &amp; 傅小黑</p>",
    "hits": 654,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 735,
    "title": "【有码】go并发操作map的错误用例",
    "created_at": "2017-04-28 17:30:11",
    "updated_at": "2017-04-30 10:56:22",
    "replied_at": "2017-04-30 10:56:22",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 271,
    "last_reply_user_login": "cholerae",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1331,
    "user": "{\"id\": 1331, \"name\": \"kakashi\", \"login\": \"kakashi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "map在并发中是不安全的，需要用锁。\n错误的用锁，依旧会报错，如下代码是错误的用法，那么问题来了，正确的应该是啥呢？\n\n```\nfatal error: concurrent map read and map write\n```\n\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;math&quot;\n\t&quot;sync&quot;\n\t&quot;time&quot;\n)\n\nconst MAX_TRFFIC uint64 = 10\n\ntype IpTriffic struct {\n\tNum    uint64\n\tPeriod int\n}\n\ntype Trffic struct {\n\tsync.Mutex\n\tPeriod int\n\tList   map[string]uint64\n}\n\nfunc (m *Trffic) GetPeriod() int {\n\tperiod := math.Ceil(float64(time.Now().Unix() / 600))\n\treturn int(period)\n}\n\nfunc (m *Trffic) ClearList() {\n\tm.Lock()\n\tm.List = make(map[string]uint64)\n\tm.Unlock()\n}\n\nfunc (m *Trffic) IncByKey(key string) {\n\tm.Lock()\n\n\tif _, ok := m.List[key]; !ok {\n\t\tm.List[key] = 1\n\t} else {\n\t\tm.List[key]++\n\n\t\tif m.List[key] &gt; MAX_TRFFIC {\n\t\t\tfmt.Println(&quot;超过最大值&quot;, m.List[key])\n\t\t} else {\n\t\t\tfmt.Println(m.List[key])\n\t\t}\n\t}\n\tm.Unlock()\n}\n\nfunc (m *Trffic) Passport(key string) {\n\n\tperiod := m.GetPeriod()\n\tfmt.Println(period)\n\n\t/*if m.Period != period {\n\t\tm.ClearList()\n\t}\n\t*/\n\tm.IncByKey(key)\n}\n\nvar tc *Trffic\n\nfunc init() {\n\ttc = &amp;Trffic{}\n\ttc.Period = int(time.Now().Unix() / 600)\n\ttc.List = make(map[string]uint64)\n}\n\nfunc main() {\n\n\tfor i := 0; i &lt; 10000; i++ {\n\t\tgo func() {\n\t\t\ttc.Passport(&quot;golang&quot;)\n\t\t}()\n\t}\n\n\tfmt.Println(tc.List, tc.Period)\n\n}\n\n```",
    "body_html": "<p>map 在并发中是不安全的，需要用锁。\n错误的用锁，依旧会报错，如下代码是错误的用法，那么问题来了，正确的应该是啥呢？</p>\n <pre class=\"highlight plaintext\"><code>fatal error: concurrent map read and map write\n</code></pre>  <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">math</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">sync</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">const</span> <span class=\"n\">MAX_TRFFIC</span> <span class=\"kt\">uint64</span> <span class=\"o\">=</span> <span class=\"m\">10</span>\n\n<span class=\"k\">type</span> <span class=\"n\">IpTriffic</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Num</span>    <span class=\"kt\">uint64</span>\n    <span class=\"n\">Period</span> <span class=\"kt\">int</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">type</span> <span class=\"n\">Trffic</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">sync</span><span class=\"o\">.</span><span class=\"n\">Mutex</span>\n    <span class=\"n\">Period</span> <span class=\"kt\">int</span>\n    <span class=\"n\">List</span>   <span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"kt\">uint64</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">m</span> <span class=\"o\">*</span><span class=\"n\">Trffic</span><span class=\"p\">)</span> <span class=\"n\">GetPeriod</span><span class=\"p\">()</span> <span class=\"kt\">int</span> <span class=\"p\">{</span>\n    <span class=\"n\">period</span> <span class=\"o\">:=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">Ceil</span><span class=\"p\">(</span><span class=\"kt\">float64</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Unix</span><span class=\"p\">()</span> <span class=\"o\">/</span> <span class=\"m\">600</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"kt\">int</span><span class=\"p\">(</span><span class=\"n\">period</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">m</span> <span class=\"o\">*</span><span class=\"n\">Trffic</span><span class=\"p\">)</span> <span class=\"n\">ClearList</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Lock</span><span class=\"p\">()</span>\n    <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"kt\">uint64</span><span class=\"p\">)</span>\n    <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Unlock</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">m</span> <span class=\"o\">*</span><span class=\"n\">Trffic</span><span class=\"p\">)</span> <span class=\"n\">IncByKey</span><span class=\"p\">(</span><span class=\"n\">key</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Lock</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">ok</span> <span class=\"o\">:=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">];</span> <span class=\"o\">!</span><span class=\"n\">ok</span> <span class=\"p\">{</span>\n        <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">1</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span><span class=\"o\">++</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span> <span class=\"n\">MAX_TRFFIC</span> <span class=\"p\">{</span>\n            <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">超过最大值</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">])</span>\n        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n            <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">])</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Unlock</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">m</span> <span class=\"o\">*</span><span class=\"n\">Trffic</span><span class=\"p\">)</span> <span class=\"n\">Passport</span><span class=\"p\">(</span><span class=\"n\">key</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n    <span class=\"n\">period</span> <span class=\"o\">:=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">GetPeriod</span><span class=\"p\">()</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">period</span><span class=\"p\">)</span>\n\n    <span class=\"c\">/*if m.Period != period {\n        m.ClearList()\n    }\n    */</span>\n    <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">IncByKey</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">var</span> <span class=\"n\">tc</span> <span class=\"o\">*</span><span class=\"n\">Trffic</span>\n\n<span class=\"k\">func</span> <span class=\"n\">init</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">tc</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">Trffic</span><span class=\"p\">{}</span>\n    <span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">Period</span> <span class=\"o\">=</span> <span class=\"kt\">int</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Unix</span><span class=\"p\">()</span> <span class=\"o\">/</span> <span class=\"m\">600</span><span class=\"p\">)</span>\n    <span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"kt\">uint64</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"m\">10000</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n        <span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n            <span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">Passport</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">golang</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"p\">}()</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">Period</span><span class=\"p\">)</span>\n\n<span class=\"p\">}</span>\n\n</code></pre> ",
    "hits": 439,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 736,
    "title": "怎么解决VSCODE调试控制台exec: go: executable file not found in %PATH%",
    "created_at": "2017-04-29 09:35:20",
    "updated_at": "2017-05-06 11:43:01",
    "replied_at": "2017-05-06 11:43:01",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 960,
    "last_reply_user_login": "tupunco",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1807,
    "user": "{\"id\": 1807, \"name\": \"chenhui7373\", \"login\": \"chenhui7373\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "感谢您花时间阅读我的问题。\n\ngoogle baidu都用上了没找到症结。\n\ngo env\nset GOPATH=C:\\mygo\nset GOROOT=C:\\Go\n\npath=%GOROOT%\\bin;%path%\n\n目前解决办法是打开windows环境变量不做任何改动点击确定，重启vscode，这个错误消除了。\n\n好像和集成终端没关系吧？设置成powershell了。",
    "body_html": "<p>感谢您花时间阅读我的问题。</p>\n\n<p>google baidu 都用上了没找到症结。</p>\n\n<p>go env\nset GOPATH=C:\\mygo\nset GOROOT=C:\\Go</p>\n\n<p>path=%GOROOT%\\bin;%path%</p>\n\n<p>目前解决办法是打开 windows 环境变量不做任何改动点击确定，重启 vscode，这个错误消除了。</p>\n\n<p>好像和集成终端没关系吧？设置成 powershell 了。</p>",
    "hits": 615,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 737,
    "title": "GoCN 每日新闻(2017-04-29)",
    "created_at": "2017-04-29 10:06:59",
    "updated_at": "2017-04-29 11:12:52",
    "replied_at": "2017-04-29 11:12:52",
    "replies_count": 1,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 1817,
    "last_reply_user_login": "kennethgao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN 每日新闻(2017-04-29)\n\n1. GopherChina 大会视频  http://stuq.org/course/1183/study\n2. Golang服务器的网络层实现 http://www.pchou.info/open-source/2016/05/16/golang-network.html\n3. 使用多场景参数制作最小的Go docker image https://medium.com/travis-on-docker/multi-stage-docker-builds-for-creating-tiny-go-images-e0e1867efe5a\n4. 微服务CI/CD的范本技术解读 http://www.infoq.com/cn/articles/devops-landing-in-changba\n5. Go项目体检器 https://goreportcard.com/\n\n招聘信息：\n1. 【上海】哔哩哔哩招聘Go开发工程师 https://gocn.io/article/310\n2. 【杭州】云霁科技寻觅优秀gopher https://gocn.io/question/691\n\n编辑 Asta   ",
    "body_html": "<p>GoCN 每日新闻 (2017-04-29)</p>\n\n<ol>\n<li>GopherChina 大会视频  <a href=\"http://stuq.org/course/1183/study\" rel=\"nofollow\" target=\"_blank\">http://stuq.org/course/1183/study</a>\n</li>\n<li>Golang 服务器的网络层实现 <a href=\"http://www.pchou.info/open-source/2016/05/16/golang-network.html\" rel=\"nofollow\" target=\"_blank\">http://www.pchou.info/open-source/2016/05/16/golang-network.html</a>\n</li>\n<li>使用多场景参数制作最小的 Go docker image <a href=\"https://medium.com/travis-on-docker/multi-stage-docker-builds-for-creating-tiny-go-images-e0e1867efe5a\" rel=\"nofollow\" target=\"_blank\">https://medium.com/travis-on-docker/multi-stage-docker-builds-for-creating-tiny-go-images-e0e1867efe5a</a>\n</li>\n<li>微服务 CI/CD 的范本技术解读 <a href=\"http://www.infoq.com/cn/articles/devops-landing-in-changba\" rel=\"nofollow\" target=\"_blank\">http://www.infoq.com/cn/articles/devops-landing-in-changba</a>\n</li>\n<li>Go 项目体检器 <a href=\"https://goreportcard.com/\" rel=\"nofollow\" target=\"_blank\">https://goreportcard.com/</a>\n</li>\n</ol>\n\n<p>招聘信息：</p>\n\n<ol>\n<li>【上海】哔哩哔哩招聘 Go 开发工程师 <a href=\"https://gocn.io/article/310\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/310</a>\n</li>\n<li>【杭州】云霁科技寻觅优秀 gopher <a href=\"https://gocn.io/question/691\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/691</a>\n</li>\n</ol>\n\n<p>编辑 Asta   </p>",
    "hits": 576,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 738,
    "title": "每日新闻邮件订阅",
    "created_at": "2017-04-30 18:39:05",
    "updated_at": "2019-05-10 01:47:34",
    "replied_at": "2019-05-10 01:47:34",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 7489,
    "last_reply_user_login": "hanyajun",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "刚咨询了池建强老师关于邮件订阅，搞了一个GoCN每日新闻的邮件订阅，大家有兴趣的可以订阅，我们也会每日邮件推送。http://tinyletter.com/gocn",
    "body_html": "<p>刚咨询了池建强老师关于邮件订阅，搞了一个 GoCN 每日新闻的邮件订阅，大家有兴趣的可以订阅，我们也会每日邮件推送。<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 632,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 739,
    "title": "GoCN每日新闻(2017-05-01)",
    "created_at": "2017-05-01 09:28:17",
    "updated_at": "2017-05-01 09:28:17",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-01)\n\n1. Go程序如何容器化 https://www.safaribooksonline.com/library/view/how-to-containerize/9781491982310/\n2. Go没有引用传值 https://dave.cheney.net/2017/04/29/there-is-no-pass-by-reference-in-go\n3. Golang 在mac上用VSCode开发、Delve调试 http://www.cnblogs.com/ficow/p/6785905.html\n4. GopherChina参会感悟 http://fuxiaohei.me/2017/4/22/gopherchina-2017.html\n5. Gopher 多地Meetup即将举行，北京、上海、杭州、深圳、广州、厦门、成都即将在5-7月举行 \n\n招聘\n1. 【上海】汇宜金融 招聘Gopher https://gocn.io/question/724\n2. 【北京】10年老厂招聘GO高级工程师 https://gocn.io/question/694\n\n编辑 Asta &amp; 傅小黑\n\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-01)</p>\n\n<ol>\n<li>Go 程序如何容器化 <a href=\"https://www.safaribooksonline.com/library/view/how-to-containerize/9781491982310/\" rel=\"nofollow\" target=\"_blank\">https://www.safaribooksonline.com/library/view/how-to-containerize/9781491982310/</a>\n</li>\n<li>Go 没有引用传值 <a href=\"https://dave.cheney.net/2017/04/29/there-is-no-pass-by-reference-in-go\" rel=\"nofollow\" target=\"_blank\">https://dave.cheney.net/2017/04/29/there-is-no-pass-by-reference-in-go</a>\n</li>\n<li>Golang 在 mac 上用 VSCode 开发、Delve 调试 <a href=\"http://www.cnblogs.com/ficow/p/6785905.html\" rel=\"nofollow\" target=\"_blank\">http://www.cnblogs.com/ficow/p/6785905.html</a>\n</li>\n<li>GopherChina 参会感悟 <a href=\"http://fuxiaohei.me/2017/4/22/gopherchina-2017.html\" rel=\"nofollow\" target=\"_blank\">http://fuxiaohei.me/2017/4/22/gopherchina-2017.html</a>\n</li>\n<li>Gopher 多地 Meetup 即将举行，北京、上海、杭州、深圳、广州、厦门、成都即将在 5-7 月举行 </li>\n</ol>\n\n<p>招聘</p>\n\n<ol>\n<li>【上海】汇宜金融 招聘 Gopher <a href=\"https://gocn.io/question/724\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/724</a>\n</li>\n<li>【北京】10 年老厂招聘 GO 高级工程师 <a href=\"https://gocn.io/question/694\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/694</a>\n</li>\n</ol>\n\n<p>编辑 Asta &amp; 傅小黑</p>\n\n<p>订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 555,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 740,
    "title": "GoCN每日新闻(2017-05-02)",
    "created_at": "2017-05-02 09:32:26",
    "updated_at": "2017-05-02 09:32:26",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-02)\n\n  1. Go程序的套路\thttp://www.jianshu.com/p/215510810c59\n  2. 用 goquery 解析 HTML\thttp://liyangliang.me/posts/2016/03/zhihu-go-insight-parsing-html-with-goquery/\n  3. 年度语言 golang 使用感受\thttps://zhuanlan.zhihu.com/p/24898723\n  4. Go 实现 Ruby\thttps://github.com/goruby/goruby\n  5. GopherJS 的 React 绑定\thttps://github.com/myitcv/react/wiki\n\n\n编辑 傅小黑\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-02)</p>\n\n<ol>\n<li>Go 程序的套路  <a href=\"http://www.jianshu.com/p/215510810c59\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/215510810c59</a>\n</li>\n<li>用 goquery 解析 HTML    <a href=\"http://liyangliang.me/posts/2016/03/zhihu-go-insight-parsing-html-with-goquery/\" rel=\"nofollow\" target=\"_blank\">http://liyangliang.me/posts/2016/03/zhihu-go-insight-parsing-html-with-goquery/</a>\n</li>\n<li>年度语言 golang 使用感受   <a href=\"https://zhuanlan.zhihu.com/p/24898723\" rel=\"nofollow\" target=\"_blank\">https://zhuanlan.zhihu.com/p/24898723</a>\n</li>\n<li>Go 实现 Ruby <a href=\"https://github.com/goruby/goruby\" rel=\"nofollow\" target=\"_blank\">https://github.com/goruby/goruby</a>\n</li>\n<li>GopherJS 的 React 绑定  <a href=\"https://github.com/myitcv/react/wiki\" rel=\"nofollow\" target=\"_blank\">https://github.com/myitcv/react/wiki</a>\n</li>\n</ol>\n\n<p>编辑 傅小黑\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 532,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 741,
    "title": "mongo连接池",
    "created_at": "2017-05-02 15:31:12",
    "updated_at": "2017-05-07 21:41:37",
    "replied_at": "2017-05-07 21:41:37",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 817,
    "last_reply_user_login": "pathbox",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 496,
    "user": "{\"id\": 496, \"name\": \"wings\", \"login\": \"wings\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "go mongo的连接池 gopkg.in/mgo.v2\n\n如何实现连接池的功能呢？ mongodb重启了 程序如何重连\n\n连接URL的maxPoolSize已经加好了",
    "body_html": "<p>go mongo 的连接池 gopkg.in/mgo.v2</p>\n\n<p>如何实现连接池的功能呢？ mongodb 重启了 程序如何重连</p>\n\n<p>连接 URL 的 maxPoolSize 已经加好了</p>",
    "hits": 308,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 742,
    "title": "求个语音合成的demo或者github",
    "created_at": "2017-05-02 17:31:05",
    "updated_at": "2017-05-02 17:31:05",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1850,
    "user": "{\"id\": 1850, \"name\": \"mrzhoong\", \"login\": \"mrzhoong\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "其他语音有如TTS 或者科大讯飞的语音合成，好用的都要收费；golang是否有人写过语音合成的东西（文字转语音文件），希望有人能解答下",
    "body_html": "<p>其他语音有如 TTS 或者科大讯飞的语音合成，好用的都要收费；golang 是否有人写过语音合成的东西（文字转语音文件），希望有人能解答下</p>",
    "hits": 300,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 743,
    "title": "VSCODE 使用 delv 有遇到 Cannot read property 'currentGoroutine' of null 错误吗？",
    "created_at": "2017-05-03 10:11:44",
    "updated_at": "2017-05-12 17:03:20",
    "replied_at": "2017-05-12 17:03:20",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1807,
    "last_reply_user_login": "chenhui7373",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1807,
    "user": "{\"id\": 1807, \"name\": \"chenhui7373\", \"login\": \"chenhui7373\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "https://github.com/Microsoft/vscode-go/issues/219 \n\n拉到最后 vscode developer 似乎遇到问题了，Mar 22。。。 \n\n小弟这哑巴英语不懂得回复。。。\n\n\nhttp://stackoverflow.com/questions/40025553/enter-data-in-visual-studio-code-with-go-extension",
    "body_html": "<p><a href=\"https://github.com/Microsoft/vscode-go/issues/219\" rel=\"nofollow\" target=\"_blank\">https://github.com/Microsoft/vscode-go/issues/219</a> </p>\n\n<p>拉到最后 vscode developer 似乎遇到问题了，Mar 22。。。 </p>\n\n<p>小弟这哑巴英语不懂得回复。。。</p>\n\n<p><a href=\"http://stackoverflow.com/questions/40025553/enter-data-in-visual-studio-code-with-go-extension\" rel=\"nofollow\" target=\"_blank\">http://stackoverflow.com/questions/40025553/enter-data-in-visual-studio-code-with-go-extension</a></p>",
    "hits": 674,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 744,
    "title": "GoCN每日新闻(2017-05-03)",
    "created_at": "2017-05-03 10:32:05",
    "updated_at": "2017-05-03 11:46:54",
    "replied_at": "2017-05-03 11:46:31",
    "replies_count": 1,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 1494,
    "last_reply_user_login": "stirlingx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 74,
    "user": "{\"id\": 74, \"name\": \"xieyanke\", \"login\": \"xieyanke\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-03)：\n\n1. [Go 实战经验分享](http://blog.tamizhvendan.in/blog/2017/05/01/using-golang-in-production-my-experiences/)\n1. [Go 安全编程指南](https://checkmarx.gitbooks.io/go-scp/)\n1. [基于 Go Kit 的微服务示例](http://gokit.io/examples/stringsvc.html)\n1. [使用 Elastic Stack 来监控和调优 Golang 应用程序](https://my.oschina.net/u/569210/blog/852351)\n1. [一款不一样的缓存组件](https://github.com/golang/groupcache)\n\n编辑：谢烟客 &amp; 傅小黑\n订阅新闻：http://tinyletter.com/gocn\n",
    "body_html": "<p>GoCN 每日新闻 (2017-05-03)：</p>\n\n<ol>\n<li><a href=\"http://blog.tamizhvendan.in/blog/2017/05/01/using-golang-in-production-my-experiences/\" rel=\"nofollow\" target=\"_blank\" title=\"\">Go 实战经验分享</a></li>\n<li><a href=\"https://checkmarx.gitbooks.io/go-scp/\" rel=\"nofollow\" target=\"_blank\" title=\"\">Go 安全编程指南</a></li>\n<li><a href=\"http://gokit.io/examples/stringsvc.html\" rel=\"nofollow\" target=\"_blank\" title=\"\">基于 Go Kit 的微服务示例</a></li>\n<li><a href=\"https://my.oschina.net/u/569210/blog/852351\" rel=\"nofollow\" target=\"_blank\" title=\"\">使用 Elastic Stack 来监控和调优 Golang 应用程序</a></li>\n<li><a href=\"https://github.com/golang/groupcache\" rel=\"nofollow\" target=\"_blank\" title=\"\">一款不一样的缓存组件</a></li>\n</ol>\n\n<p>编辑：谢烟客 &amp; 傅小黑\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 559,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 745,
    "title": "两年后端程序员的困惑，关于后端开发的整体感知",
    "created_at": "2017-05-03 12:35:29",
    "updated_at": "2017-11-14 08:56:06",
    "replied_at": "2017-11-14 08:56:06",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 960,
    "last_reply_user_login": "tupunco",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1851,
    "user": "{\"id\": 1851, \"name\": \"zuly\", \"login\": \"zuly\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "即将迎来工作两年的结点，说实话一直在进行纯粹的开发工作，使用各种工具，调用各种API，实现各种工作，然后熟悉各种第三方。课余时间在学习一些自己喜欢的东西，搞一些游戏编程，看一下其他的内功书籍比如重构，简洁代码。。。\n但是随着公司团队的变更和技术栈的改变，有时间来沉淀一下，发现一个严重困扰我的问题，而且我觉得会影响到我的职业发展！\n\n——我对于整体的后端服务开发并没有一个整体的认识和感知。\n\n可能有点空洞。具体来说，这个问题是新团队在阐述具体后端架构设计时候产生的。讲到了包括API和Service的层次分离，边界确定；在用golang设计框架时候使用的一些中间件；关于高性能IO，重试策略，性能监控等等等。。。只是大致知道字面意思，而我发现很多我是听不懂的。。。从而我突然发现我将近两年的时间我一直在真正意义上的搬砖，而不是对软件开发我还是不甚了解。。。。\n\nso，请各位大神，解惑，我想这个问题应该也是一部分同学的问题吧。\n\nPS：这些知识应该如何补救呢？\n\n跪谢！",
    "body_html": "<p>即将迎来工作两年的结点，说实话一直在进行纯粹的开发工作，使用各种工具，调用各种 API，实现各种工作，然后熟悉各种第三方。课余时间在学习一些自己喜欢的东西，搞一些游戏编程，看一下其他的内功书籍比如重构，简洁代码。。。\n但是随着公司团队的变更和技术栈的改变，有时间来沉淀一下，发现一个严重困扰我的问题，而且我觉得会影响到我的职业发展！</p>\n\n<p>——我对于整体的后端服务开发并没有一个整体的认识和感知。</p>\n\n<p>可能有点空洞。具体来说，这个问题是新团队在阐述具体后端架构设计时候产生的。讲到了包括 API 和 Service 的层次分离，边界确定；在用 golang 设计框架时候使用的一些中间件；关于高性能 IO，重试策略，性能监控等等等。。。只是大致知道字面意思，而我发现很多我是听不懂的。。。从而我突然发现我将近两年的时间我一直在真正意义上的搬砖，而不是对软件开发我还是不甚了解。。。。</p>\n\n<p>so，请各位大神，解惑，我想这个问题应该也是一部分同学的问题吧。</p>\n\n<p>PS：这些知识应该如何补救呢？</p>\n\n<p>跪谢！</p>",
    "hits": 665,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 746,
    "title": "GoCN每日新闻(2017-05-04)",
    "created_at": "2017-05-04 09:58:00",
    "updated_at": "2017-05-04 09:58:00",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-04)\n\n1. 类型的安全还是便利   https://lanreadelowo.com/blog/2017/05/02/type-safety-or-convenience/\n2. Go的内存管理 http://www.tapirgames.com/blog/golang-memory-management\n3. 两年后端程序员的困惑https://gocn.io/question/745\n4. 数据库访问层upperDB https://upper.io/db.v3\n5. Go和Java的interface有什么不同 https://gocn.io/question/73\n\n编辑 Asta\n订阅新闻：http://tinyletter.com/gocn\n\n\n",
    "body_html": "<p>GoCN 每日新闻 (2017-05-04)</p>\n\n<ol>\n<li>类型的安全还是便利   <a href=\"https://lanreadelowo.com/blog/2017/05/02/type-safety-or-convenience/\" rel=\"nofollow\" target=\"_blank\">https://lanreadelowo.com/blog/2017/05/02/type-safety-or-convenience/</a>\n</li>\n<li>Go 的内存管理 <a href=\"http://www.tapirgames.com/blog/golang-memory-management\" rel=\"nofollow\" target=\"_blank\">http://www.tapirgames.com/blog/golang-memory-management</a>\n</li>\n<li>两年后端程序员的困惑<a href=\"https://gocn.io/question/745\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/745</a>\n</li>\n<li>数据库访问层 upperDB <a href=\"https://upper.io/db.v3\" rel=\"nofollow\" target=\"_blank\">https://upper.io/db.v3</a>\n</li>\n<li>Go 和 Java 的 interface 有什么不同 <a href=\"https://gocn.io/question/73\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/73</a>\n</li>\n</ol>\n\n<p>编辑 Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 477,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 747,
    "title": "垃圾回收gctrace信息含义",
    "created_at": "2017-05-05 10:13:59",
    "updated_at": "2017-05-05 10:13:59",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 124,
    "user": "{\"id\": 124, \"name\": \"mnhkahn\", \"login\": \"mnhkahn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "通过`GODEBUG=gctrace=1`开启了gctrace，打印出来的信息：\n\n&gt; inuse: #     MB used or partially used spans\n&gt; idle: #      MB spans pending scavenging\n&gt; sys: #       MB mapped from the system\n&gt; released: #  MB released to the system\n&gt; consumed: #  MB allocated from the system\n\n\tscvg8485: inuse: 30714, idle: 21179, sys: 51893, released: 18458, consumed: 33434 (MB)\n\n我的理解是consumed是占用内存空间，sys类似于虚拟地址空间。但是通过`ps`查看内存，真是占用的内存`RES`和`VIRT`都要比这个大很多，求科普。",
    "body_html": "<p>通过<code>GODEBUG=gctrace=1</code>开启了 gctrace，打印出来的信息：</p>\n\n<p>&gt; inuse: #     MB used or partially used spans\n&gt; idle: #      MB spans pending scavenging\n&gt; sys: #       MB mapped from the system\n&gt; released: #  MB released to the system\n&gt; consumed: #  MB allocated from the system</p>\n\n<p>scvg8485: inuse: 30714, idle: 21179, sys: 51893, released: 18458, consumed: 33434 (MB)</p>\n\n<p>我的理解是 consumed 是占用内存空间，sys 类似于虚拟地址空间。但是通过<code>ps</code>查看内存，真是占用的内存<code>RES</code>和<code>VIRT</code>都要比这个大很多，求科普。</p>",
    "hits": 355,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 748,
    "title": "GoCN每日新闻(2017-05-05)",
    "created_at": "2017-05-05 10:41:20",
    "updated_at": "2017-05-05 10:41:20",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 74,
    "user": "{\"id\": 74, \"name\": \"xieyanke\", \"login\": \"xieyanke\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-05):\n\n1. Golang 中的连续栈 http://blog.shiwuliang.com/2017/02/25/Go%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84Continuous%20Stack(%E8%BF%9E%E7%BB%AD%E6%A0%88)/\n2. goroutine,channel和CSP http://www.moye.me/2017/05/05/go-concurrency-patterns/\n3. NSQ 作为微服务的消息总线 https://yami.io/golang-nsq/\n4. 使用 docker 部署 Golang web app 与 couchbase https://blog.couchbase.com/deploy-golang-web-application-couchbase-docker-containers/\n5. 一款 Go 的大数据 Query 框架 https://github.com/pilosa\n\n编辑：Asta &amp; 谢烟客\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-05):</p>\n\n<ol>\n<li>Golang 中的连续栈 <a href=\"http://blog.shiwuliang.com/2017/02/25/Go%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84Continuous%20Stack%E8%BF%9E%E7%BB%AD%E6%A0%88)/\" rel=\"nofollow\" target=\"_blank\">http://blog.shiwuliang.com/2017/02/25/Go%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84Continuous%20Stack%E8%BF%9E%E7%BB%AD%E6%A0%88)/</a>(</li>\n<li>goroutine,channel 和 CSP <a href=\"http://www.moye.me/2017/05/05/go-concurrency-patterns/\" rel=\"nofollow\" target=\"_blank\">http://www.moye.me/2017/05/05/go-concurrency-patterns/</a>\n</li>\n<li>NSQ 作为微服务的消息总线 <a href=\"https://yami.io/golang-nsq/\" rel=\"nofollow\" target=\"_blank\">https://yami.io/golang-nsq/</a>\n</li>\n<li>使用 docker 部署 Golang web app 与 couchbase <a href=\"https://blog.couchbase.com/deploy-golang-web-application-couchbase-docker-containers/\" rel=\"nofollow\" target=\"_blank\">https://blog.couchbase.com/deploy-golang-web-application-couchbase-docker-containers/</a>\n</li>\n<li>一款 Go 的大数据 Query 框架 <a href=\"https://github.com/pilosa\" rel=\"nofollow\" target=\"_blank\">https://github.com/pilosa</a>\n</li>\n</ol>\n\n<p>编辑：Asta &amp; 谢烟客\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 538,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 749,
    "title": "抱团取暖，golang都有哪些QQ群呢？",
    "created_at": "2017-05-05 16:43:39",
    "updated_at": "2017-05-05 17:29:15",
    "replied_at": "2017-05-05 17:29:15",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1858,
    "last_reply_user_login": "zsy619",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1807,
    "user": "{\"id\": 1807, \"name\": \"chenhui7373\", \"login\": \"chenhui7373\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Tim现在挺好用",
    "body_html": "<p>Tim 现在挺好用</p>",
    "hits": 408,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 750,
    "title": "请问大家用什么来做配置管理",
    "created_at": "2017-05-05 22:05:44",
    "updated_at": "2017-05-08 10:19:49",
    "replied_at": "2017-05-08 10:19:49",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1868,
    "last_reply_user_login": "xkey",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 723,
    "user": "{\"id\": 723, \"name\": \"CTO\", \"login\": \"CTO\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "不是很清楚confd的作用是什么，如果仅仅是按照模板来渲染的话，感觉我自己把完整的配置文件写入etcd也可以呀",
    "body_html": "<p>不是很清楚 confd 的作用是什么，如果仅仅是按照模板来渲染的话，感觉我自己把完整的配置文件写入 etcd 也可以呀</p>",
    "hits": 341,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 751,
    "title": "GoCN每日新闻(2017-05-06):",
    "created_at": "2017-05-06 09:09:39",
    "updated_at": "2017-05-06 09:09:39",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 74,
    "user": "{\"id\": 74, \"name\": \"xieyanke\", \"login\": \"xieyanke\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-06):\n\n1. [Helpful tips for gophers](http://blog.stablekernel.com/go-quickstart-helpful-tips-for-experienced-programmers)\n2. [Simplistic go web app](https://grisha.org/blog/2017/04/27/simplistic-go-web-app/)\n3. [Synchronizing state with mutex in Go](https://kylewbanks.com/blog/tutorial-synchronizing-state-with-mutexes-golang)\n4. [Code boilerplate: Is it always bad?](https://medium.com/shazow/code-boilerplate-is-it-always-bad-934827efcfc7)\n5. [OpenGL with Go](https://kylewbanks.com/blog/tutorial-opengl-with-golang-part-1-hello-opengl)\n\n编辑：Asta &amp; 傅小黑 &amp; 谢烟客\n订阅新闻：http://tinyletter.com/gocn\n",
    "body_html": "<p>GoCN 每日新闻 (2017-05-06):</p>\n\n<ol>\n<li><a href=\"http://blog.stablekernel.com/go-quickstart-helpful-tips-for-experienced-programmers\" rel=\"nofollow\" target=\"_blank\" title=\"\">Helpful tips for gophers</a></li>\n<li><a href=\"https://grisha.org/blog/2017/04/27/simplistic-go-web-app/\" rel=\"nofollow\" target=\"_blank\" title=\"\">Simplistic go web app</a></li>\n<li><a href=\"https://kylewbanks.com/blog/tutorial-synchronizing-state-with-mutexes-golang\" rel=\"nofollow\" target=\"_blank\" title=\"\">Synchronizing state with mutex in Go</a></li>\n<li><a href=\"https://medium.com/shazow/code-boilerplate-is-it-always-bad-934827efcfc7\" rel=\"nofollow\" target=\"_blank\" title=\"\">Code boilerplate: Is it always bad?</a></li>\n<li><a href=\"https://kylewbanks.com/blog/tutorial-opengl-with-golang-part-1-hello-opengl\" rel=\"nofollow\" target=\"_blank\" title=\"\">OpenGL with Go</a></li>\n</ol>\n\n<p>编辑：Asta &amp; 傅小黑 &amp; 谢烟客\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 520,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 752,
    "title": "GoCN每日新闻(2017-05-07)",
    "created_at": "2017-05-07 11:41:58",
    "updated_at": "2017-05-07 14:02:35",
    "replied_at": "2017-05-07 14:02:35",
    "replies_count": 1,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 1363,
    "last_reply_user_login": "raindylong",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-07)\n\n1. API 版本管理最佳实战 http://stackoverflow.com/questions/389169/best-practices-for-api-versioning\n2. Node程序员的Go经验 https://medium.com/@chrisgregori/i-wrote-some-golang-and-it-felt-great-3c3367a67db5\n3. vscode-go最新版本支持Codelens https://github.com/Microsoft/vscode-go/releases/tag/0.6.60\n4. 理解Go Context机制 http://lanlingzi.cn/post/technical/2016/0802_go_context/\n5. MGOB - A MongoDB backup automation tool https://stefanprodan.com/2017/mgob-mongodb-backup-automation-tool\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-07)</p>\n\n<ol>\n<li>API 版本管理最佳实战 <a href=\"http://stackoverflow.com/questions/389169/best-practices-for-api-versioning\" rel=\"nofollow\" target=\"_blank\">http://stackoverflow.com/questions/389169/best-practices-for-api-versioning</a>\n</li>\n<li>Node 程序员的 Go 经验 <a href=\"https://medium.com/@chrisgregori/i-wrote-some-golang-and-it-felt-great-3c3367a67db5\" rel=\"nofollow\" target=\"_blank\">https://medium.com/@chrisgregori/i-wrote-some-golang-and-it-felt-great-3c3367a67db5</a>\n</li>\n<li>vscode-go 最新版本支持 Codelens <a href=\"https://github.com/Microsoft/vscode-go/releases/tag/0.6.60\" rel=\"nofollow\" target=\"_blank\">https://github.com/Microsoft/vscode-go/releases/tag/0.6.60</a>\n</li>\n<li>理解 Go Context 机制 <a href=\"http://lanlingzi.cn/post/technical/2016/0802_go_context/\" rel=\"nofollow\" target=\"_blank\">http://lanlingzi.cn/post/technical/2016/0802_go_context/</a>\n</li>\n<li>MGOB - A MongoDB backup automation tool <a href=\"https://stefanprodan.com/2017/mgob-mongodb-backup-automation-tool\" rel=\"nofollow\" target=\"_blank\">https://stefanprodan.com/2017/mgob-mongodb-backup-automation-tool</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 601,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 753,
    "title": "GoCN每日新闻(2017-05-08)",
    "created_at": "2017-05-08 09:42:10",
    "updated_at": "2017-05-08 10:12:21",
    "replied_at": "2017-05-08 10:12:21",
    "replies_count": 2,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 1885,
    "last_reply_user_login": "shibengen",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-08)\n\n1. 深入理解HTTPS原理、过程与实践 https://zhuanlan.zhihu.com/p/26682342\n2. 并发之痛 Thread，go语言的Goroutine，akka的Actor http://www.iigrowing.cn/bing_fa_zhi_tong_threadgo_yu_yan_de_goroutineakka_de_actor.html\n3. Golang编码规范 http://www.jianshu.com/p/ea7dfe61f705\n4. JSON加速库 https://github.com/pquerna/ffjson\n5. 如何优雅地关闭Go channel http://www.tapirgames.com/blog/golang-channel-closing\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-08)</p>\n\n<ol>\n<li>深入理解 HTTPS 原理、过程与实践 <a href=\"https://zhuanlan.zhihu.com/p/26682342\" rel=\"nofollow\" target=\"_blank\">https://zhuanlan.zhihu.com/p/26682342</a>\n</li>\n<li>并发之痛 Thread，go 语言的 Goroutine，akka 的 Actor <a href=\"http://www.iigrowing.cn/bing_fa_zhi_tong_threadgo_yu_yan_de_goroutineakka_de_actor.html\" rel=\"nofollow\" target=\"_blank\">http://www.iigrowing.cn/bing_fa_zhi_tong_threadgo_yu_yan_de_goroutineakka_de_actor.html</a>\n</li>\n<li>Golang 编码规范 <a href=\"http://www.jianshu.com/p/ea7dfe61f705\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/ea7dfe61f705</a>\n</li>\n<li>JSON 加速库 <a href=\"https://github.com/pquerna/ffjson\" rel=\"nofollow\" target=\"_blank\">https://github.com/pquerna/ffjson</a>\n</li>\n<li>如何优雅地关闭 Go channel <a href=\"http://www.tapirgames.com/blog/golang-channel-closing\" rel=\"nofollow\" target=\"_blank\">http://www.tapirgames.com/blog/golang-channel-closing</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 539,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 754,
    "title": "如果给 web 应用 .exe 添加图标",
    "created_at": "2017-05-08 16:08:47",
    "updated_at": "2017-05-08 20:22:54",
    "replied_at": "2017-05-08 20:22:54",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 931,
    "last_reply_user_login": "lifei6671",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1588,
    "user": "{\"id\": 1588, \"name\": \"zanjs\", \"login\": \"zanjs\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 416,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 755,
    "title": "如何拆分这类命令行参数？",
    "created_at": "2017-05-08 22:13:34",
    "updated_at": "2017-05-09 08:20:26",
    "replied_at": "2017-05-09 08:20:26",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1194,
    "last_reply_user_login": "dcb9",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 845,
    "user": "{\"id\": 845, \"name\": \"voidint\", \"login\": \"voidint\", \"avatar\": \"https://static.gocn.vip/user/avatar/845/a0dbfd.jpg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "对于用户输入的命令，如`go build -gcflags='-N -l'`，如何拆分成`go`、`build`、`-gcflags='-N -l'`？由于`-N -l`中包含空格，因此无法直接使用`strings.Fields`函数拆分。\n\n下面有一些命令和拆分方式的举例\n- `go build -gcflags '-N -l'`--&gt;`[&quot;go&quot;,&quot;build&quot;,&quot;-gcflags&quot;,&quot;-N -l&quot;]`\n- `go build --gcflags=&quot;-N -l&quot; -ldflags '-w'`--&gt;`[&quot;go&quot;,&quot;build&quot;,&quot;--gcflags=\\&quot;-N -l\\&quot;&quot;,&quot;-ldflags&quot;,&quot;-w&quot;]`",
    "body_html": "<p>对于用户输入的命令，如<code>go build -gcflags='-N -l'</code>，如何拆分成<code>go</code>、<code>build</code>、<code>-gcflags='-N -l'</code>？由于<code>-N -l</code>中包含空格，因此无法直接使用<code>strings.Fields</code>函数拆分。</p>\n\n<p>下面有一些命令和拆分方式的举例</p>\n\n<ul>\n<li>\n<code>go build -gcflags '-N -l'</code>--&gt;<code>[&amp;quot;go&amp;quot;,&amp;quot;build&amp;quot;,&amp;quot;-gcflags&amp;quot;,&amp;quot;-N -l&amp;quot;]</code>\n</li>\n<li>\n<code>go build --gcflags=&amp;quot;-N -l&amp;quot; -ldflags '-w'</code>--&gt;<code>[&amp;quot;go&amp;quot;,&amp;quot;build&amp;quot;,&amp;quot;--gcflags=\\&amp;quot;-N -l\\&amp;quot;&amp;quot;,&amp;quot;-ldflags&amp;quot;,&amp;quot;-w&amp;quot;]</code>\n</li>\n</ul>",
    "hits": 457,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 756,
    "title": "GoCN每日新闻(2017-05-09)",
    "created_at": "2017-05-09 08:57:46",
    "updated_at": "2017-05-09 08:57:46",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-09)\n\n1. 微服务 &amp; API 网关 https://www.nginx.com/blog/microservices-api-gateways-part-1-why-an-api-gateway/\n2. Golang IO包的妙用 http://www.jianshu.com/p/8c33f7c84509\n3. 如何用Go思维设计程序 https://www.reddit.com/r/golang/comments/69u782/help_with_thinking_the_go_way/\n4. 如何不走寻常路的学习新语言 https://dev.to/sahildua2305/unconventional-way-of-learning-a-new-programming-language\n5. API设计中三个误区 https://www.programmableweb.com/news/three-common-api-design-mistakes-and-how-to-overcome-them/analysis/2017/03/10\n\n编辑： Asta\n订阅新闻：http://tinyletter.com/gocn\n",
    "body_html": "<p>GoCN 每日新闻 (2017-05-09)</p>\n\n<ol>\n<li>微服务 &amp; API 网关 <a href=\"https://www.nginx.com/blog/microservices-api-gateways-part-1-why-an-api-gateway/\" rel=\"nofollow\" target=\"_blank\">https://www.nginx.com/blog/microservices-api-gateways-part-1-why-an-api-gateway/</a>\n</li>\n<li>Golang IO 包的妙用 <a href=\"http://www.jianshu.com/p/8c33f7c84509\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/8c33f7c84509</a>\n</li>\n<li>如何用 Go 思维设计程序 <a href=\"https://www.reddit.com/r/golang/comments/69u782/help_with_thinking_the_go_way/\" rel=\"nofollow\" target=\"_blank\">https://www.reddit.com/r/golang/comments/69u782/help_with_thinking_the_go_way/</a>\n</li>\n<li>如何不走寻常路的学习新语言 <a href=\"https://dev.to/sahildua2305/unconventional-way-of-learning-a-new-programming-language\" rel=\"nofollow\" target=\"_blank\">https://dev.to/sahildua2305/unconventional-way-of-learning-a-new-programming-language</a>\n</li>\n<li>API 设计中三个误区 <a href=\"https://www.programmableweb.com/news/three-common-api-design-mistakes-and-how-to-overcome-them/analysis/2017/03/10\" rel=\"nofollow\" target=\"_blank\">https://www.programmableweb.com/news/three-common-api-design-mistakes-and-how-to-overcome-them/analysis/2017/03/10</a>\n</li>\n</ol>\n\n<p>编辑： Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 527,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 757,
    "title": "最后抛个砖 构想:在Goroutine上实现Actor？",
    "created_at": "2017-05-09 10:42:24",
    "updated_at": "2017-05-18 09:37:01",
    "replied_at": "2017-05-18 09:37:01",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1664,
    "last_reply_user_login": "liangdas",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 119,
    "user": "{\"id\": 119, \"name\": \"ckex\", \"login\": \"ckex\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "\n如题...\n\nhttp://www.iigrowing.cn/bing_fa_zhi_tong_threadgo_yu_yan_de_goroutineakka_de_actor.html",
    "body_html": "<p>如题...</p>\n\n<p><a href=\"http://www.iigrowing.cn/bing_fa_zhi_tong_threadgo_yu_yan_de_goroutineakka_de_actor.html\" rel=\"nofollow\" target=\"_blank\">http://www.iigrowing.cn/bing_fa_zhi_tong_threadgo_yu_yan_de_goroutineakka_de_actor.html</a></p>",
    "hits": 437,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 758,
    "title": "GoCN每日新闻(2017-05-10)",
    "created_at": "2017-05-10 09:31:07",
    "updated_at": "2017-05-10 09:31:07",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-10)\n\n1. 程序员面试宝典 https://github.com/jwasham/coding-interview-university\n2. 其他语言怎么调用Go函数 https://medium.com/learning-the-go-programming-language/calling-go-functions-from-other-languages-4c7d8bcc69bf\n3. 一张图改变你学习编码的姿势  https://medium.freecodecamp.com/this-picture-will-change-the-way-you-learn-to-code-557ac1e109bd\n4. 高性能JSON解析库  https://github.com/tidwall/gjson\n5. 为什么我从Python切换到Go https://hackernoon.com/5-reasons-why-we-switched-from-python-to-go-4414d5f42690\n\n\n活动预告：\n\nGopher北京meetup   时间：6-25   \n - 今日头条 分享头条的微服务\n - 美图  分享美图im的Go实现\n - 滴滴 分享滴滴的基于open-falcon的监控\n - 智链 分享Go在区块链的实战\n报名地址：http://www.bagevent.com/event/569069\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-10)</p>\n\n<ol>\n<li>程序员面试宝典 <a href=\"https://github.com/jwasham/coding-interview-university\" rel=\"nofollow\" target=\"_blank\">https://github.com/jwasham/coding-interview-university</a>\n</li>\n<li>其他语言怎么调用 Go 函数 <a href=\"https://medium.com/learning-the-go-programming-language/calling-go-functions-from-other-languages-4c7d8bcc69bf\" rel=\"nofollow\" target=\"_blank\">https://medium.com/learning-the-go-programming-language/calling-go-functions-from-other-languages-4c7d8bcc69bf</a>\n</li>\n<li>一张图改变你学习编码的姿势  <a href=\"https://medium.freecodecamp.com/this-picture-will-change-the-way-you-learn-to-code-557ac1e109bd\" rel=\"nofollow\" target=\"_blank\">https://medium.freecodecamp.com/this-picture-will-change-the-way-you-learn-to-code-557ac1e109bd</a>\n</li>\n<li>高性能 JSON 解析库  <a href=\"https://github.com/tidwall/gjson\" rel=\"nofollow\" target=\"_blank\">https://github.com/tidwall/gjson</a>\n</li>\n<li>为什么我从 Python 切换到 Go <a href=\"https://hackernoon.com/5-reasons-why-we-switched-from-python-to-go-4414d5f42690\" rel=\"nofollow\" target=\"_blank\">https://hackernoon.com/5-reasons-why-we-switched-from-python-to-go-4414d5f42690</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<p>Gopher 北京 meetup   时间：6-25   </p>\n\n<ul>\n<li>今日头条 分享头条的微服务</li>\n<li>美图  分享美图 im 的 Go 实现</li>\n<li>滴滴 分享滴滴的基于 open-falcon 的监控</li>\n<li>智链 分享 Go 在区块链的实战\n报名地址：<a href=\"http://www.bagevent.com/event/569069\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569069</a>\n</li>\n</ul>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 511,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 759,
    "title": "如何通过reflect为值为nil的指针创建实例",
    "created_at": "2017-05-10 15:46:47",
    "updated_at": "2017-05-12 10:18:03",
    "replied_at": "2017-05-12 10:17:17",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1867,
    "last_reply_user_login": "winlin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1541,
    "user": "{\"id\": 1541, \"name\": \"meilihao\", \"login\": \"meilihao\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如何用reflect创建t指向的实例?\n```\ntype T struct {\n\tX, Y int\n}\n\nvar t *T\n```",
    "body_html": "<p>如何用 reflect 创建 t 指向的实例?</p>\n <pre class=\"highlight plaintext\"><code>type T struct {\n    X, Y int\n}\n\nvar t *T\n</code></pre> ",
    "hits": 462,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 760,
    "title": "关于统一格式 json 返回 map 的 value 定义",
    "created_at": "2017-05-10 17:51:13",
    "updated_at": "2017-05-10 23:40:04",
    "replied_at": "2017-05-10 23:40:04",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1906,
    "last_reply_user_login": "PureWhite",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1588,
    "user": "{\"id\": 1588, \"name\": \"zanjs\", \"login\": \"zanjs\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "有一个 map\n\n```go\niMap = map[string]interface{\n\t\t&quot;code&quot;:    0,\n\t\t&quot;data&quot;:    data,\n\t\t&quot;message&quot;: &quot;&quot;,\n\t}\n```\n\n这个 code 为整形， message 为 字符串 ， data 可能是 数组，也可能是 对象\n\n三个不同的 类型 放在 map 统一返回  ， map 该如何写\n\n\n```go\niMap := make(map[string]interface{})\niMap[&quot;Code&quot;] = 0\niMap[&quot;Message&quot;] = &quot;world&quot;\niMap[&quot;Data&quot;] = string(data)\n```\ndata 是一个 struct 类型 ， 需要转为 string 类型 后再 加到 iMap 的 data key 里面\n\n但结果数据显示如下 \n\n```json\n{\n  &quot;code&quot;: 1,\n  &quot;message&quot;: &quot;world&quot;,\n  &quot;data&quot;: &quot;{\\&quot;code\\&quot;:1,\\&quot;data\\&quot;:\\&quot;sss\\&quot;,\\&quot;message\\&quot;:\\&quot;eee\\&quot;}&quot;\n}\n```\n\n在使用 返回 json 嵌套时   不希望 data 显示 字符串呢\n",
    "body_html": "<p>有一个 map</p>\n<pre class=\"highlight go\"><code><span class=\"n\">iMap</span> <span class=\"o\">=</span> <span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"k\">interface</span><span class=\"p\">{</span>\n        <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">code</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span>    <span class=\"m\">0</span><span class=\"p\">,</span>\n        <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">data</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span>    <span class=\"n\">data</span><span class=\"p\">,</span>\n        <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">message</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n    <span class=\"p\">}</span>\n</code></pre>\n<p>这个 code 为整形， message 为 字符串 ， data 可能是 数组，也可能是 对象</p>\n\n<p>三个不同的 类型 放在 map 统一返回 ， map 该如何写</p>\n<pre class=\"highlight go\"><code><span class=\"n\">iMap</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"k\">interface</span><span class=\"p\">{})</span>\n<span class=\"n\">iMap</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Code</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;]</span> <span class=\"o\">=</span> <span class=\"m\">0</span>\n<span class=\"n\">iMap</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Message</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;]</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">world</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"n\">iMap</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Data</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;]</span> <span class=\"o\">=</span> <span class=\"kt\">string</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</code></pre>\n<p>data 是一个 struct 类型 ， 需要转为 string 类型 后再 加到 iMap 的 data key 里面</p>\n\n<p>但结果数据显示如下 </p>\n<pre class=\"highlight json\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"err\">&amp;quot;code&amp;quot;:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"err\">&amp;quot;message&amp;quot;:</span><span class=\"w\"> </span><span class=\"err\">&amp;quot;world&amp;quot;</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"err\">&amp;quot;data&amp;quot;:</span><span class=\"w\"> </span><span class=\"err\">&amp;quot;</span><span class=\"p\">{</span><span class=\"err\">\\&amp;quot;code\\&amp;quot;:</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"err\">\\&amp;quot;data\\&amp;quot;:\\&amp;quot;sss\\&amp;quot;</span><span class=\"p\">,</span><span class=\"err\">\\&amp;quot;message\\&amp;quot;:\\&amp;quot;eee\\&amp;quot;</span><span class=\"p\">}</span><span class=\"err\">&amp;quot;</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre>\n<p>在使用 返回 json 嵌套时   不希望 data 显示 字符串呢</p>",
    "hits": 521,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 761,
    "title": "golang 白痴求各位大神指点迷津",
    "created_at": "2017-05-10 23:00:08",
    "updated_at": "2017-05-22 10:20:50",
    "replied_at": "2017-05-22 10:20:50",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 887,
    "last_reply_user_login": "haohongfan",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1902,
    "user": "{\"id\": 1902, \"name\": \"hoosin\", \"login\": \"hoosin\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "作为 golang 新手，用 go 来干点什么会比较好呢？或者有没有好点的开源的东西可以学习一下？\n\n",
    "body_html": "<p>作为 golang 新手，用 go 来干点什么会比较好呢？或者有没有好点的开源的东西可以学习一下？</p>",
    "hits": 546,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 762,
    "title": "GoCN每日新闻(2017-05-11)",
    "created_at": "2017-05-11 08:38:47",
    "updated_at": "2017-05-11 08:38:47",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-11)\n\n1. REST API的CORS指南 https://www.programmableweb.com/news/authoritative-guide-to-cors-cross-origin-resource-sharing-rest-apis/how-to/2017/03/08\n2. 怎么说服你的主管使用Go https://www.reddit.com/r/golang/comments/6ac48b/how_did_you_convince_your_teammanager_to_try_go/\n3. Go IOT实现 https://gobot.io/\n4. kubernetes handbook 中文书 https://github.com/rootsongjc/kubernetes-handbook\n5. Go里面如何用代码生成替代泛型 https://www.calhoun.io/using-code-generation-to-survive-without-generics-in-go/\n\n招聘信息\n1. 【上海】饿了么 https://gocn.io/article/320\n2. 【南京】孩子王 https://gocn.io/article/317\n\n活动预告：\n\n新时代下的高效运维之道   时间：5-13\n \t- 七牛 《To B 企业运维的机遇和挑战》\n \t- OneAPM 《百万并发云压测平台的关键技术》\n\t- 唱吧 《敏捷性的传承》\n\t- 天特信 《看着难，做着更难 —— IP 库背后的故事》\n\n报名地址：http://www.huodongxing.com/event/5384593355500\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-11)</p>\n\n<ol>\n<li>REST API 的 CORS 指南 <a href=\"https://www.programmableweb.com/news/authoritative-guide-to-cors-cross-origin-resource-sharing-rest-apis/how-to/2017/03/08\" rel=\"nofollow\" target=\"_blank\">https://www.programmableweb.com/news/authoritative-guide-to-cors-cross-origin-resource-sharing-rest-apis/how-to/2017/03/08</a>\n</li>\n<li>怎么说服你的主管使用 Go <a href=\"https://www.reddit.com/r/golang/comments/6ac48b/how_did_you_convince_your_teammanager_to_try_go/\" rel=\"nofollow\" target=\"_blank\">https://www.reddit.com/r/golang/comments/6ac48b/how_did_you_convince_your_teammanager_to_try_go/</a>\n</li>\n<li>Go IOT 实现 <a href=\"https://gobot.io/\" rel=\"nofollow\" target=\"_blank\">https://gobot.io/</a>\n</li>\n<li>kubernetes handbook 中文书 <a href=\"https://github.com/rootsongjc/kubernetes-handbook\" rel=\"nofollow\" target=\"_blank\">https://github.com/rootsongjc/kubernetes-handbook</a>\n</li>\n<li>Go 里面如何用代码生成替代泛型 <a href=\"https://www.calhoun.io/using-code-generation-to-survive-without-generics-in-go/\" rel=\"nofollow\" target=\"_blank\">https://www.calhoun.io/using-code-generation-to-survive-without-generics-in-go/</a>\n</li>\n</ol>\n\n<p>招聘信息</p>\n\n<ol>\n<li>【上海】饿了么 <a href=\"https://gocn.io/article/320\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/320</a>\n</li>\n<li>【南京】孩子王 <a href=\"https://gocn.io/article/317\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/317</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<p>新时代下的高效运维之道   时间：5-13\n    - 七牛《To B&nbsp;企业运维的机遇和挑战》\n    - OneAPM《百万并发云压测平台的关键技术》\n    - 唱吧《敏捷性的传承》\n    - 天特信《看着难，做着更难&nbsp;—— IP&nbsp;库背后的故事》</p>\n\n<p>报名地址：<a href=\"http://www.huodongxing.com/event/5384593355500\" rel=\"nofollow\" target=\"_blank\">http://www.huodongxing.com/event/5384593355500</a></p>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 516,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 763,
    "title": "protobuf的一个问题",
    "created_at": "2017-05-11 10:10:52",
    "updated_at": "2017-05-11 11:30:02",
    "replied_at": "2017-05-11 11:30:02",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1364,
    "last_reply_user_login": "lrita",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1494,
    "user": "{\"id\": 1494, \"name\": \"stirlingx\", \"login\": \"stirlingx\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "protobuf编译成go之后，默认自带 json omitempty tag，如果把它作为api数据返回给客户端，当code=0， message=&quot;&quot;时，返回一个空的json，显现不是我们想要的。\n\n```go\nmessage Status {\n  int32 code = 1;\n  string message = 2;\n}\n```\n\n```go\ntype Status struct {\n  Code int32 `protobuf:&quot;varint,1,opt,name=code&quot; json:&quot;code,omitempty&quot;`\n  Message string `protobuf:&quot;bytes,2,opt,name=message&quot; json:&quot;message,omitempty&quot;`\n}\n```\n\n想去掉omitempty，但却没有方法。因为源码里面omitempty居然是硬编码的。\nhttps://github.com/golang/protobuf/blob/1687f003bf0280bd6182a5a1c7241856b269a6c0/protoc-gen-go/generator/generator.go#L1788\n\n谷歌这么设计，好吗",
    "body_html": "<p>protobuf 编译成 go 之后，默认自带 json omitempty tag，如果把它作为 api 数据返回给客户端，当 code=0， message=\"\"时，返回一个空的 json，显现不是我们想要的。</p>\n <pre class=\"highlight go\"><code><span class=\"n\">message</span> <span class=\"n\">Status</span> <span class=\"p\">{</span>\n  <span class=\"kt\">int32</span> <span class=\"n\">code</span> <span class=\"o\">=</span> <span class=\"m\">1</span><span class=\"p\">;</span>\n  <span class=\"kt\">string</span> <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"m\">2</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre>  <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">Status</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n  <span class=\"n\">Code</span> <span class=\"kt\">int32</span> <span class=\"s\">`protobuf:&amp;quot;varint,1,opt,name=code&amp;quot; json:&amp;quot;code,omitempty&amp;quot;`</span>\n  <span class=\"n\">Message</span> <span class=\"kt\">string</span> <span class=\"s\">`protobuf:&amp;quot;bytes,2,opt,name=message&amp;quot; json:&amp;quot;message,omitempty&amp;quot;`</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>想去掉 omitempty，但却没有方法。因为源码里面 omitempty 居然是硬编码的。\n<a href=\"https://github.com/golang/protobuf/blob/1687f003bf0280bd6182a5a1c7241856b269a6c0/protoc-gen-go/generator/generator.go#L1788\" rel=\"nofollow\" target=\"_blank\">https://github.com/golang/protobuf/blob/1687f003bf0280bd6182a5a1c7241856b269a6c0/protoc-gen-go/generator/generator.go#L1788</a></p>\n\n<p>谷歌这么设计，好吗</p>",
    "hits": 485,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 764,
    "title": "go调试的问题。",
    "created_at": "2017-05-11 17:18:04",
    "updated_at": "2017-05-12 10:20:25",
    "replied_at": "2017-05-12 10:20:25",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1867,
    "last_reply_user_login": "winlin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1660,
    "user": "{\"id\": 1660, \"name\": \"onn\", \"login\": \"onn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/o.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "各位用的是什么工具调试go的？调试过程有没碰到一些蛋疼的问题\n比如：\n1.断点需要在debug之前就打才能生效\n2.运行过程中断点去掉后还会断到。\n3.单步调试会跳来跳去、（这个在调试beego的controler的时候比较容易碰到）\n\n我用JetBrains的idea和Goglang、同事用的是vscode，都有碰到调试问题。\n\n编译器用的是delve\n试过几个版本的delve都没有相对完美的，有的断点可以在运行过程中打，但是简单逻辑的单步调试要很久4 5秒那种。\n\n想问下各位用的什么调试工具和编译器，调试过程中有没有这些蛋疼的问题？",
    "body_html": "<p>各位用的是什么工具调试 go 的？调试过程有没碰到一些蛋疼的问题\n比如：\n1.断点需要在 debug 之前就打才能生效\n2.运行过程中断点去掉后还会断到。\n3.单步调试会跳来跳去、（这个在调试 beego 的 controler 的时候比较容易碰到）</p>\n\n<p>我用 JetBrains 的 idea 和 Goglang、同事用的是 vscode，都有碰到调试问题。</p>\n\n<p>编译器用的是 delve\n试过几个版本的 delve 都没有相对完美的，有的断点可以在运行过程中打，但是简单逻辑的单步调试要很久 4 5 秒那种。</p>\n\n<p>想问下各位用的什么调试工具和编译器，调试过程中有没有这些蛋疼的问题？</p>",
    "hits": 696,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 765,
    "title": "发现一个有关error的非常奇怪的问题",
    "created_at": "2017-05-11 17:51:53",
    "updated_at": "2017-05-12 10:31:06",
    "replied_at": "2017-05-12 10:31:06",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1867,
    "last_reply_user_login": "winlin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 646,
    "user": "{\"id\": 646, \"name\": \"deepzz\", \"login\": \"deepzz\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "可能是个人知识点有限，遇到这个非常奇怪的问题。\n\nmain 函数里通过 `errors.New()` 初始化了一个 err。\nError() 函数返回了一个 `*Err` 的空指针 nil。\n\n问题来了，fmt.Println() 中的打印结果是 `&lt;nil&gt;, true`。\n\nwhy，为什么 `err != nil` 是 true？？那是不是其它场景也会出现？\n\n```\npackage main\n\nimport (\n\t&quot;errors&quot;\n\t&quot;fmt&quot;\n)\n\ntype Err struct {\n\terr string\n}\n\nfunc (e *Err) Error() string {\n\treturn e.err\n}\n\nfunc Error() *Err {\n\treturn nil\n}\n\nfunc main() {\n\tvar err = errors.New(&quot;init error&quot;)\n\n\terr = Error()\n\tfmt.Println(err, err != nil)\n}\n```",
    "body_html": "<p>可能是个人知识点有限，遇到这个非常奇怪的问题。</p>\n\n<p>main 函数里通过 <code>errors.New()</code> 初始化了一个 err。\nError() 函数返回了一个 <code>*Err</code> 的空指针 nil。</p>\n\n<p>问题来了，fmt.Println() 中的打印结果是 <code>&amp;lt;nil&amp;gt;, true</code>。</p>\n\n<p>why，为什么 <code>err != nil</code> 是 true？？那是不是其它场景也会出现？</p>\n <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"n\">import</span> <span class=\"p\">(</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">errors</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">type</span> <span class=\"n\">Err</span> <span class=\"n\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">err</span> <span class=\"k\">string</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"p\">(</span><span class=\"n\">e</span> <span class=\"p\">*</span><span class=\"n\">Err</span><span class=\"p\">)</span> <span class=\"n\">Error</span><span class=\"p\">()</span> <span class=\"k\">string</span> <span class=\"p\">{</span>\n    <span class=\"n\">return</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">err</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">Error</span><span class=\"p\">()</span> <span class=\"p\">*</span><span class=\"n\">Err</span> <span class=\"p\">{</span>\n    <span class=\"n\">return</span> <span class=\"n\">nil</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">var</span> <span class=\"n\">err</span> <span class=\"p\">=</span> <span class=\"n\">errors</span><span class=\"p\">.</span><span class=\"n\">New</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">init</span> <span class=\"n\">error</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n    <span class=\"n\">err</span> <span class=\"p\">=</span> <span class=\"n\">Error</span><span class=\"p\">()</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"c1\">!= nil)\n</span><span class=\"p\">}</span>\n</code></pre> ",
    "hits": 507,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 766,
    "title": "[北京]滴滴招聘golang工程师-特征系统[长期]",
    "created_at": "2017-05-11 19:04:07",
    "updated_at": "2018-03-27 13:03:10",
    "replied_at": "2018-03-27 13:03:10",
    "replies_count": 49,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 2432,
    "last_reply_user_login": "zhaohu",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 159,
    "user": "{\"id\": 159, \"name\": \"Xargin\", \"login\": \"Xargin\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "工作职责：\n1.  负责滴滴各种特征(乘客、司机)系统的设计、核心代码研发工作；\n2.  梳理业务需求，提出业务规划和系统架构方案；\n3.  攻克复杂业务模型、高并发、高可用等技术难关；\n\n任职资格：\n1.  熟悉分布式系统架构和异步消息通信机制；\n2.  有高并发业务系统研发经验优先；\n\n滴滴处在成熟化和规范化的过程中，现在加入可以让你了解到一个公司从创业公司到独角兽再到巨头要经历的技术变革，体会到和公司一起成长的乐趣。\n\n特征系统在业务系统中是非常高qps的系统(6位数)，能够帮助你建立高并发环境下的知识体系。不再在技术领域低人一头。\n\n有兴趣的话简历请发至 ：\ncaochunhui@didichuxing.com",
    "body_html": "<p>工作职责：</p>\n\n<ol>\n<li> 负责滴滴各种特征 (乘客、司机) 系统的设计、核心代码研发工作；</li>\n<li> 梳理业务需求，提出业务规划和系统架构方案；</li>\n<li> 攻克复杂业务模型、高并发、高可用等技术难关；</li>\n</ol>\n\n<p>任职资格：</p>\n\n<ol>\n<li> 熟悉分布式系统架构和异步消息通信机制；</li>\n<li> 有高并发业务系统研发经验优先；</li>\n</ol>\n\n<p>滴滴处在成熟化和规范化的过程中，现在加入可以让你了解到一个公司从创业公司到独角兽再到巨头要经历的技术变革，体会到和公司一起成长的乐趣。</p>\n\n<p>特征系统在业务系统中是非常高 qps 的系统 (6 位数)，能够帮助你建立高并发环境下的知识体系。不再在技术领域低人一头。</p>\n\n<p>有兴趣的话简历请发至 ：\ncaochunhui@didichuxing.com</p>",
    "hits": 766,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 767,
    "title": "GoCN每日新闻(2017-05-12)",
    "created_at": "2017-05-12 10:09:40",
    "updated_at": "2017-05-12 10:09:40",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-12)\n\n1. Golang实现的在线文档管理系统 https://github.com/lifei6671/godoc\n2. 如何从零开始重构单体软件到微服务架构 https://blog.poki.com/from-monolith-to-microservices-b16bae1d6c9d\n3. 高度可定制化的监控系统 https://github.com/open-falcon/falcon-plus\n4. Uber开源的分布式跟踪系统：jaeger https://medium.com/opentracing/take-opentracing-for-a-hotrod-ride-f6e3141f7941\n5. Go中处理error的模式 https://mijailovic.net/2017/05/09/error-handling-patterns-in-go/\n\n\n招聘信息：\n1. 【北京】滴滴 https://gocn.io/question/766\n\n活动预告：\n\nGopher北京meetup   时间：6-25   \n\t- 今日头条 分享头条的微服务\n\t- 美图  分享美图im的Go实现\n\t- 滴滴 分享滴滴的基于open-falcon的监控\n\t- 智链 分享Go在区块链的实战\n报名地址：http://www.bagevent.com/event/569069\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-12)</p>\n\n<ol>\n<li>Golang 实现的在线文档管理系统 <a href=\"https://github.com/lifei6671/godoc\" rel=\"nofollow\" target=\"_blank\">https://github.com/lifei6671/godoc</a>\n</li>\n<li>如何从零开始重构单体软件到微服务架构 <a href=\"https://blog.poki.com/from-monolith-to-microservices-b16bae1d6c9d\" rel=\"nofollow\" target=\"_blank\">https://blog.poki.com/from-monolith-to-microservices-b16bae1d6c9d</a>\n</li>\n<li>高度可定制化的监控系统 <a href=\"https://github.com/open-falcon/falcon-plus\" rel=\"nofollow\" target=\"_blank\">https://github.com/open-falcon/falcon-plus</a>\n</li>\n<li>Uber 开源的分布式跟踪系统：jaeger <a href=\"https://medium.com/opentracing/take-opentracing-for-a-hotrod-ride-f6e3141f7941\" rel=\"nofollow\" target=\"_blank\">https://medium.com/opentracing/take-opentracing-for-a-hotrod-ride-f6e3141f7941</a>\n</li>\n<li>Go 中处理 error 的模式 <a href=\"https://mijailovic.net/2017/05/09/error-handling-patterns-in-go/\" rel=\"nofollow\" target=\"_blank\">https://mijailovic.net/2017/05/09/error-handling-patterns-in-go/</a>\n</li>\n</ol>\n\n<p>招聘信息：</p>\n\n<ol>\n<li>【北京】滴滴 <a href=\"https://gocn.io/question/766\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/766</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<p>Gopher 北京 meetup   时间：6-25<br>\n    - 今日头条 分享头条的微服务\n    - 美图  分享美图 im 的 Go 实现\n    - 滴滴 分享滴滴的基于 open-falcon 的监控\n    - 智链 分享 Go 在区块链的实战\n报名地址：<a href=\"http://www.bagevent.com/event/569069\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569069</a></p>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 568,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 768,
    "title": "go 如何优雅的实现这个面试题",
    "created_at": "2017-05-12 11:05:20",
    "updated_at": "2018-04-09 16:57:01",
    "replied_at": "2018-04-09 16:57:01",
    "replies_count": 35,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 5542,
    "last_reply_user_login": "xianghanhuang",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1917,
    "user": "{\"id\": 1917, \"name\": \"loplop\", \"login\": \"loplop\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "有四个线程1、2、3、4。线程1的功能就是输出1，线程2的功能就是输出2，以此类推.........现在有四个文件ABCD。初始都为空。现要让四个文件呈如下格式：\n\nA：1 2 3 4 1 2....\n\nB：2 3 4 1 2 3....\n\nC：3 4 1 2 3 4....\n\nD：4 1 2 3 4 1....\n\ngo 如何实现？大牛们请上代码",
    "body_html": "<p>有四个线程 1、2、3、4。线程 1 的功能就是输出 1，线程 2 的功能就是输出 2，以此类推.........现在有四个文件 ABCD。初始都为空。现要让四个文件呈如下格式：</p>\n\n<p>A：1 2 3 4 1 2....</p>\n\n<p>B：2 3 4 1 2 3....</p>\n\n<p>C：3 4 1 2 3 4....</p>\n\n<p>D：4 1 2 3 4 1....</p>\n\n<p>go 如何实现？大牛们请上代码</p>",
    "hits": 783,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 769,
    "title": "问题已经解决",
    "created_at": "2017-05-12 13:32:34",
    "updated_at": "2017-05-12 13:32:34",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1331,
    "user": "{\"id\": 1331, \"name\": \"kakashi\", \"login\": \"kakashi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 277,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 770,
    "title": "用 beego手工搭建的博客 大家支持一下吧",
    "created_at": "2017-05-12 19:12:46",
    "updated_at": "2021-01-16 18:59:40",
    "replied_at": "2017-05-16 19:24:29",
    "replies_count": 6,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 112,
    "last_reply_user_login": "gch",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1923,
    "user": "{\"id\": 1923, \"name\": \"mygogo\", \"login\": \"mygogo\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "用 beego手工搭建的博客 请大家支持一下,欢迎拍砖\nhttp://www.sunaloe.cn/",
    "body_html": "<p>用 beego 手工搭建的博客 请大家支持一下,欢迎拍砖\n<a href=\"http://www.sunaloe.cn/\" rel=\"nofollow\" target=\"_blank\">http://www.sunaloe.cn/</a></p>",
    "hits": 461,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 771,
    "title": "GoCN每日新闻(2017-05-13)",
    "created_at": "2017-05-13 12:25:07",
    "updated_at": "2017-05-13 12:25:07",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-13)\n\n1. HTTPs：和速度影响 https://fly.io/articles/fly-fundamentals-https/\n2. JS代码转成Go https://github.com/jingweno/godzilla\n3. 基于ElasticSearch的实时日志系统实践 https://mp.weixin.qq.com/s/eSCZc5P2ad8QL8VMJgM03Q\n4. logging的设计理念 https://www.goinggo.net/2017/05/design-philosophy-on-logging.html\n5. Node、PHP、Java和Go在服务器端IO的性能对比 https://www.toptal.com/back-end/server-side-io-performance-node-php-java-go\n\n招聘信息\n1. 【上海】Strikingly https://gocn.io/article/323\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-13)</p>\n\n<ol>\n<li>HTTPs：和速度影响 <a href=\"https://fly.io/articles/fly-fundamentals-https/\" rel=\"nofollow\" target=\"_blank\">https://fly.io/articles/fly-fundamentals-https/</a>\n</li>\n<li>JS 代码转成 Go <a href=\"https://github.com/jingweno/godzilla\" rel=\"nofollow\" target=\"_blank\">https://github.com/jingweno/godzilla</a>\n</li>\n<li>基于 ElasticSearch 的实时日志系统实践 <a href=\"https://mp.weixin.qq.com/s/eSCZc5P2ad8QL8VMJgM03Q\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/eSCZc5P2ad8QL8VMJgM03Q</a>\n</li>\n<li>logging 的设计理念 <a href=\"https://www.goinggo.net/2017/05/design-philosophy-on-logging.html\" rel=\"nofollow\" target=\"_blank\">https://www.goinggo.net/2017/05/design-philosophy-on-logging.html</a>\n</li>\n<li>Node、PHP、Java 和 Go 在服务器端 IO 的性能对比 <a href=\"https://www.toptal.com/back-end/server-side-io-performance-node-php-java-go\" rel=\"nofollow\" target=\"_blank\">https://www.toptal.com/back-end/server-side-io-performance-node-php-java-go</a>\n</li>\n</ol>\n\n<p>招聘信息</p>\n\n<ol>\n<li>【上海】Strikingly <a href=\"https://gocn.io/article/323\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/323</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 508,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 772,
    "title": "GoCN每日新闻(2017-05-14)",
    "created_at": "2017-05-14 11:33:59",
    "updated_at": "2017-05-14 11:33:59",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-14)\n\n1. cloudflare每秒100w的DNS分析 https://blog.cloudflare.com/how-cloudflare-analyzes-1m-dns-queries-per-second/\n2. Idiomatic Go文章列表 https://pocketgophers.com/idiomatic-go/\n3. http server测试库 https://golang.org/pkg/net/http/httptest/\n4. 突破限制,访问其它Go package中的私有函数 http://colobu.com/2017/05/12/call-private-functions-in-other-packages/\n5. RESTful架构风格下的4大常见安全问题 http://www.jianshu.com/p/b5966899c435\n\n活动预告：\n\nGopher北京meetup   时间：6-25  最后20张入场券 \n\t- 今日头条 分享头条的微服务\n\t- 美图  分享美图im的Go实现\n\t- 滴滴 分享滴滴的基于open-falcon的监控\n\t- 智链 分享Go在区块链的实战\n报名地址：http://www.bagevent.com/event/569069\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-14)</p>\n\n<ol>\n<li>cloudflare 每秒 100w 的 DNS 分析 <a href=\"https://blog.cloudflare.com/how-cloudflare-analyzes-1m-dns-queries-per-second/\" rel=\"nofollow\" target=\"_blank\">https://blog.cloudflare.com/how-cloudflare-analyzes-1m-dns-queries-per-second/</a>\n</li>\n<li>Idiomatic Go 文章列表 <a href=\"https://pocketgophers.com/idiomatic-go/\" rel=\"nofollow\" target=\"_blank\">https://pocketgophers.com/idiomatic-go/</a>\n</li>\n<li>http server 测试库 <a href=\"https://golang.org/pkg/net/http/httptest/\" rel=\"nofollow\" target=\"_blank\">https://golang.org/pkg/net/http/httptest/</a>\n</li>\n<li>突破限制,访问其它 Go package 中的私有函数 <a href=\"http://colobu.com/2017/05/12/call-private-functions-in-other-packages/\" rel=\"nofollow\" target=\"_blank\">http://colobu.com/2017/05/12/call-private-functions-in-other-packages/</a>\n</li>\n<li>RESTful 架构风格下的 4 大常见安全问题 <a href=\"http://www.jianshu.com/p/b5966899c435\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/b5966899c435</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<p>Gopher 北京 meetup   时间：6-25  最后 20 张入场券 \n    - 今日头条 分享头条的微服务\n    - 美图  分享美图 im 的 Go 实现\n    - 滴滴 分享滴滴的基于 open-falcon 的监控\n    - 智链 分享 Go 在区块链的实战\n报名地址：<a href=\"http://www.bagevent.com/event/569069\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569069</a></p>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 548,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 773,
    "title": "GoCN每日新闻(2017-05-15)",
    "created_at": "2017-05-15 13:19:58",
    "updated_at": "2017-05-15 13:19:58",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-15)\n\n1. Go代码工具集 https://github.com/dominikh/go-tools\n2. SQl格式化工具 https://github.com/jackc/sqlfmt\n3. 谈谈API网关 http://www.jianshu.com/p/b52a2773e75f\n4. 对称加密算法和分组密码的模式 http://www.jianshu.com/p/b63095c59361\n5. Badger:纯Go实现的高性能的kv存储 https://open.dgraph.io/post/badger/\n\n\n招聘信息:\n1. 【北京】与你科技 https://gocn.io/article/324\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-15)</p>\n\n<ol>\n<li>Go 代码工具集 <a href=\"https://github.com/dominikh/go-tools\" rel=\"nofollow\" target=\"_blank\">https://github.com/dominikh/go-tools</a>\n</li>\n<li>SQl 格式化工具 <a href=\"https://github.com/jackc/sqlfmt\" rel=\"nofollow\" target=\"_blank\">https://github.com/jackc/sqlfmt</a>\n</li>\n<li>谈谈 API 网关 <a href=\"http://www.jianshu.com/p/b52a2773e75f\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/b52a2773e75f</a>\n</li>\n<li>对称加密算法和分组密码的模式 <a href=\"http://www.jianshu.com/p/b63095c59361\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/b63095c59361</a>\n</li>\n<li>Badger:纯 Go 实现的高性能的 kv 存储 <a href=\"https://open.dgraph.io/post/badger/\" rel=\"nofollow\" target=\"_blank\">https://open.dgraph.io/post/badger/</a>\n</li>\n</ol>\n\n<p>招聘信息:</p>\n\n<ol>\n<li>【北京】与你科技 <a href=\"https://gocn.io/article/324\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/324</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 514,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 774,
    "title": "FormFile获取到的File如何解压",
    "created_at": "2017-05-15 13:26:48",
    "updated_at": "2017-05-15 20:34:46",
    "replied_at": "2017-05-15 20:34:46",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 631,
    "last_reply_user_login": "Xanthus",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 255,
    "user": "{\"id\": 255, \"name\": \"haoc7\", \"login\": \"haoc7\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```\nfile, fileheader, err1 := r.FormFile(&quot;File&quot;)\n```\n获取到的file是压缩后的文件，怎样将其解压呢？",
    "body_html": " <pre class=\"highlight plaintext\"><code>file, fileheader, err1 := r.FormFile(&amp;quot;File&amp;quot;)\n</code></pre> \n<p>获取到的 file 是压缩后的文件，怎样将其解压呢？</p>",
    "hits": 449,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 775,
    "title": "为什么导入syslog包后，一直显示undefine？",
    "created_at": "2017-05-15 20:42:23",
    "updated_at": "2017-05-16 09:29:51",
    "replied_at": "2017-05-16 09:29:51",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 845,
    "last_reply_user_login": "voidint",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1939,
    "user": "{\"id\": 1939, \"name\": \"Trevor\", \"login\": \"Trevor\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 386,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 776,
    "title": "GoCN每日新闻(2017-05-16)",
    "created_at": "2017-05-16 10:03:31",
    "updated_at": "2017-05-16 10:03:31",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-16):\n\n1. go package 的规范指南 https://rakyll.org/style-packages/\n2. go structs 的并发安全 http://bbengfort.github.io/snippets/2017/02/21/synchronizing-structs.html\n3. go TCP 详解 http://blog.csdn.net/hacker00011000/article/category/6645676\n4. go tool trace https://making.pusher.com/go-tool-trace/\n5. 不喜欢 CGO 的可以试试 C2Go https://github.com/elliotchance/c2go\n\n活动预告：【深圳】\n\n1. 李帅 随手记 《Go Context原理及其典型适用场景》\n2. 陈日燊 美图 《gRPC 在美图微服务中的应用》\n3. 崔英杰， 玉米广告CTO《如何搭建GO的持续集成开发环境》\n4. 彭秦中  平安科技 《基于open-falcon的平安云监控》\u2028\n报名地址：http://www.bagevent.com/event/575820\n\n编辑：谢烟客\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-16):</p>\n\n<ol>\n<li>go package 的规范指南&nbsp;<a href=\"https://rakyll.org/style-packages/\" rel=\"nofollow\" target=\"_blank\">https://rakyll.org/style-packages/</a>\n</li>\n<li>go structs 的并发安全&nbsp;<a href=\"http://bbengfort.github.io/snippets/2017/02/21/synchronizing-structs.html\" rel=\"nofollow\" target=\"_blank\">http://bbengfort.github.io/snippets/2017/02/21/synchronizing-structs.html</a>\n</li>\n<li>go TCP 详解&nbsp;<a href=\"http://blog.csdn.net/hacker00011000/article/category/6645676\" rel=\"nofollow\" target=\"_blank\">http://blog.csdn.net/hacker00011000/article/category/6645676</a>\n</li>\n<li>go tool trace <a href=\"https://making.pusher.com/go-tool-trace/\" rel=\"nofollow\" target=\"_blank\">https://making.pusher.com/go-tool-trace/</a>\n</li>\n<li>不喜欢 CGO 的可以试试 C2Go&nbsp;<a href=\"https://github.com/elliotchance/c2go\" rel=\"nofollow\" target=\"_blank\">https://github.com/elliotchance/c2go</a>\n</li>\n</ol>\n\n<p>活动预告：【深圳】</p>\n\n<ol>\n<li>李帅 随手记《Go Context 原理及其典型适用场景》</li>\n<li>陈日燊 美图《gRPC&nbsp;在美图微服务中的应用》</li>\n<li>崔英杰，&nbsp;玉米广告 CTO《如何搭建 GO 的持续集成开发环境》</li>\n<li>彭秦中 &nbsp;平安科技《基于 open-falcon 的平安云监控》\u2028\n报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n</ol>\n\n<p>编辑：谢烟客\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 497,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 777,
    "title": "GoCN每日新闻(2017-05-17)",
    "created_at": "2017-05-17 09:16:56",
    "updated_at": "2017-05-17 09:16:56",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-17)\n\n1. 分布式Job系统 https://github.com/shunfei/cronsun\n2. HTTP 关于安全的header信息 https://blog.appcanary.com/2017/http-security-headers.html\n3. FSQL - 使用SQL相似的方法来查询搜索文件系统 https://github.com/kshvmdn/fsql\n4. Go学习资源 https://github.com/golang/go/wiki/Learn\n5. 压力测试工具 https://k6.io/\n\n活动预告：【深圳Gopher Meetup】\n\n1. 李帅 随手记 《Go Context原理及其典型适用场景》\n2. 陈日燊 美图 《gRPC 在美图微服务中的应用》\n3. 崔英杰， 玉米广告CTO《如何搭建GO的持续集成开发环境》\n4. 彭秦中  平安科技 《基于open-falcon的平安云监控》\u2028\n报名地址：http://www.bagevent.com/event/575820\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-17)</p>\n\n<ol>\n<li>分布式 Job 系统 <a href=\"https://github.com/shunfei/cronsun\" rel=\"nofollow\" target=\"_blank\">https://github.com/shunfei/cronsun</a>\n</li>\n<li>HTTP 关于安全的 header 信息 <a href=\"https://blog.appcanary.com/2017/http-security-headers.html\" rel=\"nofollow\" target=\"_blank\">https://blog.appcanary.com/2017/http-security-headers.html</a>\n</li>\n<li>FSQL - 使用 SQL 相似的方法来查询搜索文件系统 <a href=\"https://github.com/kshvmdn/fsql\" rel=\"nofollow\" target=\"_blank\">https://github.com/kshvmdn/fsql</a>\n</li>\n<li>Go 学习资源 <a href=\"https://github.com/golang/go/wiki/Learn\" rel=\"nofollow\" target=\"_blank\">https://github.com/golang/go/wiki/Learn</a>\n</li>\n<li>压力测试工具 <a href=\"https://k6.io/\" rel=\"nofollow\" target=\"_blank\">https://k6.io/</a>\n</li>\n</ol>\n\n<p>活动预告：【深圳 Gopher Meetup】</p>\n\n<ol>\n<li>李帅 随手记《Go Context 原理及其典型适用场景》</li>\n<li>陈日燊 美图《gRPC&nbsp;在美图微服务中的应用》</li>\n<li>崔英杰，&nbsp;玉米广告 CTO《如何搭建 GO 的持续集成开发环境》</li>\n<li>彭秦中 &nbsp;平安科技《基于 open-falcon 的平安云监控》\u2028\n报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 531,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 778,
    "title": "gokit不支持ETCD V3最新版本作为服务发现吗？",
    "created_at": "2017-05-17 17:23:45",
    "updated_at": "2017-05-17 17:47:47",
    "replied_at": "2017-05-17 17:47:47",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1257,
    "last_reply_user_login": "elvin5",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1257,
    "user": "{\"id\": 1257, \"name\": \"elvin5\", \"login\": \"elvin5\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题．．\n",
    "body_html": "<p>如题．．</p>",
    "hits": 498,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 779,
    "title": "用gokit写服务实在太繁琐了，要不停的对方法进行封装，一层层的像个裹脚布，大家有什么好的是使用实践吗？",
    "created_at": "2017-05-17 17:26:15",
    "updated_at": "2018-05-09 21:53:59",
    "replied_at": "2018-05-09 21:53:59",
    "replies_count": 9,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 238,
    "last_reply_user_login": "kevin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1257,
    "user": "{\"id\": 1257, \"name\": \"elvin5\", \"login\": \"elvin5\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 783,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 780,
    "title": "GoCN每日新闻(2017-05-18)",
    "created_at": "2017-05-18 09:40:35",
    "updated_at": "2017-05-18 19:57:12",
    "replied_at": "2017-05-18 19:57:12",
    "replies_count": 1,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 1959,
    "last_reply_user_login": "pleas",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-18)\n\n1. Go为什么不使用分代GC https://groups.google.com/forum/m/#!topic/golang-nuts/KJiyv2mV2pU\n2. Go重写分析追踪系统 https://engineering.skroutz.gr/blog/rewriting-web-analytics-tracking-in-go/\n3. GRPC中间件 https://github.com/grpc-ecosystem/go-grpc-middleware\n4. 快速搭建轻量级微服务架构 http://www.infoq.com/cn/presentations/building-lightweight-micro-service-architecture\n5. casbin 一个RBAC ACL ABAC权限管理系统 https://github.com/casbin/casbin\n\n招聘信息：\n1. 【深圳】小恩爱 https://gocn.io/article/330\n\n活动预告：【深圳Gopher Meetup】\n\n1. 李帅 随手记 《Go Context原理及其典型适用场景》\n2. 陈日燊 美图 《gRPC 在美图微服务中的应用》\n3. 崔英杰， 玉米广告CTO《如何搭建GO的持续集成开发环境》\n4. 彭秦中  平安科技 《基于open-falcon的平安云监控》\u2028\n报名地址：http://www.bagevent.com/event/575820\n\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-18)</p>\n\n<ol>\n<li>Go 为什么不使用分代 GC <a href=\"https://groups.google.com/forum/m/#!topic/golang-nuts/KJiyv2mV2pU\" rel=\"nofollow\" target=\"_blank\">https://groups.google.com/forum/m/#! topic/golang-nuts/KJiyv2mV2pU</a>\n</li>\n<li>Go 重写分析追踪系统 <a href=\"https://engineering.skroutz.gr/blog/rewriting-web-analytics-tracking-in-go/\" rel=\"nofollow\" target=\"_blank\">https://engineering.skroutz.gr/blog/rewriting-web-analytics-tracking-in-go/</a>\n</li>\n<li>GRPC 中间件 <a href=\"https://github.com/grpc-ecosystem/go-grpc-middleware\" rel=\"nofollow\" target=\"_blank\">https://github.com/grpc-ecosystem/go-grpc-middleware</a>\n</li>\n<li>快速搭建轻量级微服务架构 <a href=\"http://www.infoq.com/cn/presentations/building-lightweight-micro-service-architecture\" rel=\"nofollow\" target=\"_blank\">http://www.infoq.com/cn/presentations/building-lightweight-micro-service-architecture</a>\n</li>\n<li>casbin 一个 RBAC ACL ABAC 权限管理系统 <a href=\"https://github.com/casbin/casbin\" rel=\"nofollow\" target=\"_blank\">https://github.com/casbin/casbin</a>\n</li>\n</ol>\n\n<p>招聘信息：</p>\n\n<ol>\n<li>【深圳】小恩爱 <a href=\"https://gocn.io/article/330\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/330</a>\n</li>\n</ol>\n\n<p>活动预告：【深圳 Gopher Meetup】</p>\n\n<ol>\n<li>李帅 随手记《Go Context 原理及其典型适用场景》</li>\n<li>陈日燊 美图《gRPC&nbsp;在美图微服务中的应用》</li>\n<li>崔英杰，&nbsp;玉米广告 CTO《如何搭建 GO 的持续集成开发环境》</li>\n<li>彭秦中 &nbsp;平安科技《基于 open-falcon 的平安云监控》\u2028\n报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 639,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 781,
    "title": "怎么获取beego查询的的结果，Students这个里面的结果为啥是初始化的？",
    "created_at": "2017-05-18 13:56:07",
    "updated_at": "2021-01-20 02:34:14",
    "replied_at": "2017-05-18 23:23:22",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1957,
    "user": "{\"id\": 1957, \"name\": \"heshaofeng\", \"login\": \"heshaofeng\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```\npackage main\n\nimport (\n    &quot;fmt&quot;\n    _ &quot;github.com/go-sql-driver/mysql&quot;  //引入mysql驱动\n    &quot;github.com/astaxie/beego/orm&quot; //对应的beego/orm库 可以通过 go get来获取到本地GOPATH路径下\n    &quot;time&quot;\n)\n\n//与数据库学生表映射的结构体\ntype studentinfo struct {\n    Id          int    `pk:&quot;auto&quot;`\n    Stuname     string `orm:&quot;size(20)&quot;`\n    Stuidentify string `orm:&quot;size(30)&quot;`\n    Stubirth    time.Time\n    Stuclass    string `orm:&quot;size(30)&quot;`\n    Stumajor    string `orm:&quot;size(30)&quot;`\n}\n//数据库连对象需要的信息\nvar (\n    dbuser string = &quot;root&quot;\n    dbpwd  string = &quot;pingan&quot;\n    dbname string = &quot;takephoto&quot;\n)\n\nvar Students []studentinfo\n//初始化orm\nfunc init() {\n    Students = make([]studentinfo, 10240)\n    conn := dbuser + &quot;:&quot; + dbpwd + &quot;@tcp(192.168.1.15:3306)/&quot; + dbname + &quot;?charset=utf8&quot;  // 组合成连接串\n    orm.RegisterModel(new(studentinfo))                             // 注册表studentinfo 如果没有会自动创建\n    orm.RegisterDriver(&quot;mysql&quot;, orm.DRMySQL)                        // 注册mysql驱动\n    orm.RegisterDataBase(&quot;default&quot;, &quot;mysql&quot;, conn)                  // 设置conn中的数据库为默认使用数据库\n    orm.RunSyncdb(&quot;default&quot;, false, true)                          // 后一个使用true会带上很多打印信息，数据库操作和建表操作的；第二个为true代表强制创建表\n}\n\nfunc main() {\n    orm.Debug = true        // true 打印数据库操作日志信息\n    dbObj := orm.NewOrm()   // 实例化数据库操作对象\n    time := time.Now().Format(&quot;2006-01-02 15:04:05&quot;)\n    sql := fmt.Sprintf(&quot;insert into studentinfo(Id,Stuname, Stuidentify, Stubirth, Stuclass, Stumajor)&quot; +\n    &quot; values(1, 'rjx', 'xxx319928xxx', '%s', '信管1班', '信息管理与信息系统')&quot;, time)\n    fmt.Println(sql)\n    _, err := dbObj.Raw(sql).Exec()\n    if err != nil {\n        fmt.Println(&quot;插入数据至：t_studentInfo出错&quot;)\n    }\n\n    sql = fmt.Sprintf(&quot;insert into studentinfo(Id, Stuname, Stuidentify, Stubirth, Stuclass, Stumajor)&quot;+\n    &quot; values(2, 'qcy', 'xxx319918xxx', '%s', 'XXX', 'YYYYYY')&quot;, time)\n    _, err = dbObj.Raw(sql).Exec()\n    if err != nil {\n        fmt.Println(&quot;插入数据至：t_studentInfo出错&quot;)\n    }\n\n    //更新数据\n    sql = &quot;update studentinfo set Stuname='qcym' where Id = 2&quot;\n    _, err = dbObj.Raw(sql).Exec()\n    if err != nil {\n        fmt.Println(&quot;更新t_studentInfo表出错&quot;)\n    }\n\n    //通过事务方式来进行数据插入\n    err = dbObj.Begin()\n    sql = fmt.Sprintf(&quot;insert into studentinfo(Id, Stuname, Stuidentify, Stubirth, Stuclass, Stumajor)&quot;+\n    &quot; values(3, 'loe', 'xxx319918xxx', '%s', 'zzzz', 'TTTT')&quot;, time)\n    _, err = dbObj.Raw(sql).Exec()\n    if err != nil {\n        dbObj.Rollback()\n        fmt.Println(&quot;插入t_studentInfo表出错,事务回滚&quot;)\n    } else {\n        dbObj.Commit()\n        fmt.Println(&quot;插入t_studenInfo表成功,事务提交&quot;)\n    }\n\n    //查询数据库\n    sql = &quot;select Id, Stuname, Stuidentify, Stubirth, Stuclass, Stumajor from studentinfo&quot;\n    fmt.Println(sql)\n    num, er := dbObj.Raw(sql).QueryRows(&amp;Students)\n    if er != nil {\n        fmt.Println(&quot;查询学生信息条数出错&quot;)\n    } else {\n        fmt.Printf(&quot;从t_studenInfo表中共查询到记录:%d条\\n&quot;, num)\n        fmt.Printf(&quot;students2 is : %v\\n&quot;, Students)\n        for index, _ := range Students {\n            fmt.Printf(&quot;第%d个学生个人信息：&quot;, index + 1)\n            fmt.Printf(&quot;用户Id : %d, 姓名 : %s, 身份证号 : %s, 出生日期 : %s, 班级 : %s, 专业 : %s\\n&quot;, Students[index].Id, Students[index].Stuname, Students[index].Stuidentify, Students[index].Stubirth, Students[index].Stuclass, Students[index].Stumajor)\n        }\n    }\n}\n```",
    "body_html": " <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"n\">import</span> <span class=\"p\">(</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"n\">_</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">/</span><span class=\"n\">go</span><span class=\"p\">-</span><span class=\"n\">sql</span><span class=\"p\">-</span><span class=\"n\">driver</span><span class=\"p\">/</span><span class=\"n\">mysql</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>  <span class=\"p\">//</span><span class=\"err\">引入</span><span class=\"n\">mysql</span><span class=\"err\">驱动</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">/</span><span class=\"n\">astaxie</span><span class=\"p\">/</span><span class=\"n\">beego</span><span class=\"p\">/</span><span class=\"n\">orm</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">//</span><span class=\"err\">对应的</span><span class=\"n\">beego</span><span class=\"p\">/</span><span class=\"n\">orm</span><span class=\"err\">库</span> <span class=\"err\">可以通过</span> <span class=\"n\">go</span> <span class=\"n\">get</span><span class=\"err\">来获取到本地</span><span class=\"n\">GOPATH</span><span class=\"err\">路径下</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"p\">//</span><span class=\"err\">与数据库学生表映射的结构体</span>\n<span class=\"n\">type</span> <span class=\"n\">studentinfo</span> <span class=\"n\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span>          <span class=\"n\">int</span>    <span class=\"p\">`</span><span class=\"n\">pk</span><span class=\"p\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">auto</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;`</span>\n    <span class=\"n\">Stuname</span>     <span class=\"k\">string</span> <span class=\"p\">`</span><span class=\"n\">orm</span><span class=\"p\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"m\">20</span><span class=\"p\">)&amp;</span><span class=\"n\">quot</span><span class=\"p\">;`</span>\n    <span class=\"n\">Stuidentify</span> <span class=\"k\">string</span> <span class=\"p\">`</span><span class=\"n\">orm</span><span class=\"p\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"m\">30</span><span class=\"p\">)&amp;</span><span class=\"n\">quot</span><span class=\"p\">;`</span>\n    <span class=\"n\">Stubirth</span>    <span class=\"n\">time</span><span class=\"p\">.</span><span class=\"n\">Time</span>\n    <span class=\"n\">Stuclass</span>    <span class=\"k\">string</span> <span class=\"p\">`</span><span class=\"n\">orm</span><span class=\"p\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"m\">30</span><span class=\"p\">)&amp;</span><span class=\"n\">quot</span><span class=\"p\">;`</span>\n    <span class=\"n\">Stumajor</span>    <span class=\"k\">string</span> <span class=\"p\">`</span><span class=\"n\">orm</span><span class=\"p\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"m\">30</span><span class=\"p\">)&amp;</span><span class=\"n\">quot</span><span class=\"p\">;`</span>\n<span class=\"p\">}</span>\n<span class=\"p\">//</span><span class=\"err\">数据库连对象需要的信息</span>\n<span class=\"n\">var</span> <span class=\"p\">(</span>\n    <span class=\"n\">dbuser</span> <span class=\"k\">string</span> <span class=\"p\">=</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">root</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"n\">dbpwd</span>  <span class=\"k\">string</span> <span class=\"p\">=</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">pingan</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"n\">dbname</span> <span class=\"k\">string</span> <span class=\"p\">=</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">takephoto</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">var</span> <span class=\"n\">Students</span> <span class=\"p\">[]</span><span class=\"n\">studentinfo</span>\n<span class=\"p\">//</span><span class=\"err\">初始化</span><span class=\"n\">orm</span>\n<span class=\"n\">func</span> <span class=\"n\">init</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">Students</span> <span class=\"p\">=</span> <span class=\"n\">make</span><span class=\"p\">([]</span><span class=\"n\">studentinfo</span><span class=\"p\">,</span> <span class=\"m\">10240</span><span class=\"p\">)</span>\n    <span class=\"n\">conn</span> <span class=\"p\">:=</span> <span class=\"n\">dbuser</span> <span class=\"p\">+</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">+</span> <span class=\"n\">dbpwd</span> <span class=\"p\">+</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;@</span><span class=\"n\">tcp</span><span class=\"p\">(</span><span class=\"m\">192.168.1.15</span><span class=\"p\">:</span><span class=\"m\">3306</span><span class=\"p\">)/&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">+</span> <span class=\"n\">dbname</span> <span class=\"p\">+</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;?</span><span class=\"n\">charset</span><span class=\"p\">=</span><span class=\"n\">utf8</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>  <span class=\"p\">//</span> <span class=\"err\">组合成连接串</span>\n    <span class=\"n\">orm</span><span class=\"p\">.</span><span class=\"n\">RegisterModel</span><span class=\"p\">(</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">studentinfo</span><span class=\"p\">))</span>                             <span class=\"p\">//</span> <span class=\"err\">注册表</span><span class=\"n\">studentinfo</span> <span class=\"err\">如果没有会自动创建</span>\n    <span class=\"n\">orm</span><span class=\"p\">.</span><span class=\"n\">RegisterDriver</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">mysql</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">orm</span><span class=\"p\">.</span><span class=\"n\">DRMySQL</span><span class=\"p\">)</span>                        <span class=\"p\">//</span> <span class=\"err\">注册</span><span class=\"n\">mysql</span><span class=\"err\">驱动</span>\n    <span class=\"n\">orm</span><span class=\"p\">.</span><span class=\"n\">RegisterDataBase</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">default</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">mysql</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">conn</span><span class=\"p\">)</span>                  <span class=\"p\">//</span> <span class=\"err\">设置</span><span class=\"n\">conn</span><span class=\"err\">中的数据库为默认使用数据库</span>\n    <span class=\"n\">orm</span><span class=\"p\">.</span><span class=\"n\">RunSyncdb</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">default</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"nb\">false</span><span class=\"p\">,</span> <span class=\"nb\">true</span><span class=\"p\">)</span>                          <span class=\"p\">//</span> <span class=\"err\">后一个使用</span><span class=\"n\">true</span><span class=\"err\">会带上很多打印信息，数据库操作和建表操作的；第二个为</span><span class=\"n\">true</span><span class=\"err\">代表强制创建表</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">orm</span><span class=\"p\">.</span><span class=\"n\">Debug</span> <span class=\"p\">=</span> <span class=\"nb\">true</span>        <span class=\"p\">//</span> <span class=\"nb\">true</span> <span class=\"err\">打印数据库操作日志信息</span>\n    <span class=\"n\">dbObj</span> <span class=\"p\">:=</span> <span class=\"n\">orm</span><span class=\"p\">.</span><span class=\"n\">NewOrm</span><span class=\"p\">()</span>   <span class=\"p\">//</span> <span class=\"err\">实例化数据库操作对象</span>\n    <span class=\"n\">time</span> <span class=\"p\">:=</span> <span class=\"n\">time</span><span class=\"p\">.</span><span class=\"n\">Now</span><span class=\"p\">().</span><span class=\"n\">Format</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"m\">2006</span><span class=\"p\">-</span><span class=\"m\">01</span><span class=\"p\">-</span><span class=\"m\">02</span> <span class=\"m\">15</span><span class=\"p\">:</span><span class=\"m\">04</span><span class=\"p\">:</span><span class=\"m\">05</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">sql</span> <span class=\"p\">:=</span> <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Sprintf</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">insert</span> <span class=\"n\">into</span> <span class=\"n\">studentinfo</span><span class=\"p\">(</span><span class=\"n\">Id</span><span class=\"p\">,</span><span class=\"n\">Stuname</span><span class=\"p\">,</span> <span class=\"n\">Stuidentify</span><span class=\"p\">,</span> <span class=\"n\">Stubirth</span><span class=\"p\">,</span> <span class=\"n\">Stuclass</span><span class=\"p\">,</span> <span class=\"n\">Stumajor</span><span class=\"p\">)&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">+</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"n\">values</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"s1\">'rjx'</span><span class=\"p\">,</span> <span class=\"s1\">'xxx319928xxx'</span><span class=\"p\">,</span> <span class=\"s1\">'%s'</span><span class=\"p\">,</span> <span class=\"s1\">'信管1班'</span><span class=\"p\">,</span> <span class=\"s1\">'信息管理与信息系统'</span><span class=\"p\">)&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">time</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">sql</span><span class=\"p\">)</span>\n    <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"p\">:=</span> <span class=\"n\">dbObj</span><span class=\"p\">.</span><span class=\"n\">Raw</span><span class=\"p\">(</span><span class=\"n\">sql</span><span class=\"p\">).</span><span class=\"n\">Exec</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"c1\">!= nil {\n</span>        <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">插入数据至：</span><span class=\"n\">t_studentInfo</span><span class=\"err\">出错</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">sql</span> <span class=\"p\">=</span> <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Sprintf</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">insert</span> <span class=\"n\">into</span> <span class=\"n\">studentinfo</span><span class=\"p\">(</span><span class=\"n\">Id</span><span class=\"p\">,</span> <span class=\"n\">Stuname</span><span class=\"p\">,</span> <span class=\"n\">Stuidentify</span><span class=\"p\">,</span> <span class=\"n\">Stubirth</span><span class=\"p\">,</span> <span class=\"n\">Stuclass</span><span class=\"p\">,</span> <span class=\"n\">Stumajor</span><span class=\"p\">)&amp;</span><span class=\"n\">quot</span><span class=\"p\">;+</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"n\">values</span><span class=\"p\">(</span><span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"s1\">'qcy'</span><span class=\"p\">,</span> <span class=\"s1\">'xxx319918xxx'</span><span class=\"p\">,</span> <span class=\"s1\">'%s'</span><span class=\"p\">,</span> <span class=\"s1\">'XXX'</span><span class=\"p\">,</span> <span class=\"s1\">'YYYYYY'</span><span class=\"p\">)&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">time</span><span class=\"p\">)</span>\n    <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"p\">=</span> <span class=\"n\">dbObj</span><span class=\"p\">.</span><span class=\"n\">Raw</span><span class=\"p\">(</span><span class=\"n\">sql</span><span class=\"p\">).</span><span class=\"n\">Exec</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"c1\">!= nil {\n</span>        <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">插入数据至：</span><span class=\"n\">t_studentInfo</span><span class=\"err\">出错</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"p\">//</span><span class=\"err\">更新数据</span>\n    <span class=\"n\">sql</span> <span class=\"p\">=</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">update</span> <span class=\"n\">studentinfo</span> <span class=\"k\">set</span> <span class=\"n\">Stuname</span><span class=\"p\">=</span><span class=\"s1\">'qcym'</span> <span class=\"n\">where</span> <span class=\"n\">Id</span> <span class=\"p\">=</span> <span class=\"m\">2</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"p\">=</span> <span class=\"n\">dbObj</span><span class=\"p\">.</span><span class=\"n\">Raw</span><span class=\"p\">(</span><span class=\"n\">sql</span><span class=\"p\">).</span><span class=\"n\">Exec</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"c1\">!= nil {\n</span>        <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">更新</span><span class=\"n\">t_studentInfo</span><span class=\"err\">表出错</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"p\">//</span><span class=\"err\">通过事务方式来进行数据插入</span>\n    <span class=\"n\">err</span> <span class=\"p\">=</span> <span class=\"n\">dbObj</span><span class=\"p\">.</span><span class=\"n\">Begin</span><span class=\"p\">()</span>\n    <span class=\"n\">sql</span> <span class=\"p\">=</span> <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Sprintf</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">insert</span> <span class=\"n\">into</span> <span class=\"n\">studentinfo</span><span class=\"p\">(</span><span class=\"n\">Id</span><span class=\"p\">,</span> <span class=\"n\">Stuname</span><span class=\"p\">,</span> <span class=\"n\">Stuidentify</span><span class=\"p\">,</span> <span class=\"n\">Stubirth</span><span class=\"p\">,</span> <span class=\"n\">Stuclass</span><span class=\"p\">,</span> <span class=\"n\">Stumajor</span><span class=\"p\">)&amp;</span><span class=\"n\">quot</span><span class=\"p\">;+</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"n\">values</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"s1\">'loe'</span><span class=\"p\">,</span> <span class=\"s1\">'xxx319918xxx'</span><span class=\"p\">,</span> <span class=\"s1\">'%s'</span><span class=\"p\">,</span> <span class=\"s1\">'zzzz'</span><span class=\"p\">,</span> <span class=\"s1\">'TTTT'</span><span class=\"p\">)&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">time</span><span class=\"p\">)</span>\n    <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"p\">=</span> <span class=\"n\">dbObj</span><span class=\"p\">.</span><span class=\"n\">Raw</span><span class=\"p\">(</span><span class=\"n\">sql</span><span class=\"p\">).</span><span class=\"n\">Exec</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"c1\">!= nil {\n</span>        <span class=\"n\">dbObj</span><span class=\"p\">.</span><span class=\"n\">Rollback</span><span class=\"p\">()</span>\n        <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">插入</span><span class=\"n\">t_studentInfo</span><span class=\"err\">表出错</span><span class=\"p\">,</span><span class=\"err\">事务回滚</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"n\">dbObj</span><span class=\"p\">.</span><span class=\"n\">Commit</span><span class=\"p\">()</span>\n        <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">插入</span><span class=\"n\">t_studenInfo</span><span class=\"err\">表成功</span><span class=\"p\">,</span><span class=\"err\">事务提交</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"p\">//</span><span class=\"err\">查询数据库</span>\n    <span class=\"n\">sql</span> <span class=\"p\">=</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">select</span> <span class=\"n\">Id</span><span class=\"p\">,</span> <span class=\"n\">Stuname</span><span class=\"p\">,</span> <span class=\"n\">Stuidentify</span><span class=\"p\">,</span> <span class=\"n\">Stubirth</span><span class=\"p\">,</span> <span class=\"n\">Stuclass</span><span class=\"p\">,</span> <span class=\"n\">Stumajor</span> <span class=\"k\">from</span> <span class=\"n\">studentinfo</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">sql</span><span class=\"p\">)</span>\n    <span class=\"n\">num</span><span class=\"p\">,</span> <span class=\"n\">er</span> <span class=\"p\">:=</span> <span class=\"n\">dbObj</span><span class=\"p\">.</span><span class=\"n\">Raw</span><span class=\"p\">(</span><span class=\"n\">sql</span><span class=\"p\">).</span><span class=\"n\">QueryRows</span><span class=\"p\">(&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">Students</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">er</span> <span class=\"c1\">!= nil {\n</span>        <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">查询学生信息条数出错</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Printf</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">从</span><span class=\"n\">t_studenInfo</span><span class=\"err\">表中共查询到记录</span><span class=\"p\">:%</span><span class=\"n\">d</span><span class=\"err\">条</span><span class=\"p\">\\</span><span class=\"n\">n</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">num</span><span class=\"p\">)</span>\n        <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Printf</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">students2</span> <span class=\"n\">is</span> <span class=\"p\">:</span> <span class=\"p\">%</span><span class=\"n\">v</span><span class=\"p\">\\</span><span class=\"n\">n</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">Students</span><span class=\"p\">)</span>\n        <span class=\"n\">for</span> <span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"p\">:=</span> <span class=\"k\">range</span> <span class=\"n\">Students</span> <span class=\"p\">{</span>\n            <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Printf</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">第</span><span class=\"p\">%</span><span class=\"n\">d</span><span class=\"err\">个学生个人信息：</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">index</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">)</span>\n            <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Printf</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">用户</span><span class=\"n\">Id</span> <span class=\"p\">:</span> <span class=\"p\">%</span><span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"err\">姓名</span> <span class=\"p\">:</span> <span class=\"p\">%</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"err\">身份证号</span> <span class=\"p\">:</span> <span class=\"p\">%</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"err\">出生日期</span> <span class=\"p\">:</span> <span class=\"p\">%</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"err\">班级</span> <span class=\"p\">:</span> <span class=\"p\">%</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"err\">专业</span> <span class=\"p\">:</span> <span class=\"p\">%</span><span class=\"n\">s</span><span class=\"p\">\\</span><span class=\"n\">n</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">Students</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">].</span><span class=\"n\">Id</span><span class=\"p\">,</span> <span class=\"n\">Students</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">].</span><span class=\"n\">Stuname</span><span class=\"p\">,</span> <span class=\"n\">Students</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">].</span><span class=\"n\">Stuidentify</span><span class=\"p\">,</span> <span class=\"n\">Students</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">].</span><span class=\"n\">Stubirth</span><span class=\"p\">,</span> <span class=\"n\">Students</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">].</span><span class=\"n\">Stuclass</span><span class=\"p\">,</span> <span class=\"n\">Students</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">].</span><span class=\"n\">Stumajor</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 533,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 782,
    "title": "图片验证码代码分享",
    "created_at": "2017-05-18 15:52:09",
    "updated_at": "2017-09-15 17:55:50",
    "replied_at": "2017-09-15 17:55:50",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2741,
    "last_reply_user_login": "jajijo",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1868,
    "user": "{\"id\": 1868, \"name\": \"xkey\", \"login\": \"xkey\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "项目地址： https://github.com/xkeyideal/captcha\n\n该项目由https://github.com/dchest/captcha 改写的， 生成图片的核心代码直接拷贝，自己添加了如下特性：\n1、删除了Store interface， 个人觉得这个接口没有意义，只要获得需要的数据，存储自己定义会更佳灵活\n2、图片的生成使用goroutine+channel，效率很高\n3、添加context，方便自主控制图片生成服务的终止\n4、将原有的panic全部改为error返回\n5、使用uuid代替原有的randomId(),保证高并发情况下，id不会出现重复\n6、删除了Audio音频验证码的实现\n\n欢迎大家使用， 在此代码基础上增加更多功能",
    "body_html": "<p>项目地址： <a href=\"https://github.com/xkeyideal/captcha\" rel=\"nofollow\" target=\"_blank\">https://github.com/xkeyideal/captcha</a></p>\n\n<p>该项目由<a href=\"https://github.com/dchest/captcha\" rel=\"nofollow\" target=\"_blank\">https://github.com/dchest/captcha</a> 改写的， 生成图片的核心代码直接拷贝，自己添加了如下特性：\n1、删除了 Store interface， 个人觉得这个接口没有意义，只要获得需要的数据，存储自己定义会更佳灵活\n2、图片的生成使用 goroutine+channel，效率很高\n3、添加 context，方便自主控制图片生成服务的终止\n4、将原有的 panic 全部改为 error 返回\n5、使用 uuid 代替原有的 randomId(),保证高并发情况下，id 不会出现重复\n6、删除了 Audio 音频验证码的实现</p>\n\n<p>欢迎大家使用， 在此代码基础上增加更多功能</p>",
    "hits": 624,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 783,
    "title": "上海某土豪公司在招一个3年以上的golang薪资15k-30k",
    "created_at": "2017-05-18 19:55:47",
    "updated_at": "2017-05-18 19:55:47",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1959,
    "user": "{\"id\": 1959, \"name\": \"pleas\", \"login\": \"pleas\", \"avatar\": \"https://gocn.vip/system/letter_avatars/p.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "\n\n上海某b轮酉金资本投递数千万美元的技术驱动游戏社交公司\n在招一个3年以上的golang薪资15k-30k，办公环境犹如网咖，\n工作地点在上海徐汇区越界·创意园区附近有很多地铁站\n有考虑的同学可以给我发邮件要具体的信息，\n我的邮箱是3503982355@qq.com",
    "body_html": "<p>上海某 b 轮酉金资本投递数千万美元的技术驱动游戏社交公司\n在招一个 3 年以上的 golang 薪资 15k-30k，办公环境犹如网咖，\n工作地点在上海徐汇区越界·创意园区附近有很多地铁站\n有考虑的同学可以给我发邮件要具体的信息，\n我的邮箱是 3503982355@qq.com</p>",
    "hits": 291,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 784,
    "title": "GoCN每日新闻(2017-05-19)",
    "created_at": "2017-05-19 10:49:26",
    "updated_at": "2017-05-19 10:49:26",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 74,
    "user": "{\"id\": 74, \"name\": \"xieyanke\", \"login\": \"xieyanke\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-19):\n\n1. go 的错误处理模式 https://mijailovic.net/2017/05/09/error-handling-patterns-in-go/\n2. go 的中间件 https://lanreadelowo.com/blog/2017/04/25/go-middleware/\n3. Using code generation to survive without generics in Go  https://www.calhoun.io/using-code-generation-to-survive-without-generics-in-go/\n4. NSQ 入门简介 http://m.xfenglin.com/a/12010968060.html\n5. 一款 go 的 3D 游戏引擎 https://github.com/g3n/engine\n\n招聘信息：\n\n1. 招聘go工程师，坐标济南，薪资8-10K https://gocn.io/question/631\n\n编辑：谢烟客\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-19):</p>\n\n<ol>\n<li>go 的错误处理模式 <a href=\"https://mijailovic.net/2017/05/09/error-handling-patterns-in-go/\" rel=\"nofollow\" target=\"_blank\">https://mijailovic.net/2017/05/09/error-handling-patterns-in-go/</a>\n</li>\n<li>go 的中间件 <a href=\"https://lanreadelowo.com/blog/2017/04/25/go-middleware/\" rel=\"nofollow\" target=\"_blank\">https://lanreadelowo.com/blog/2017/04/25/go-middleware/</a>\n</li>\n<li>Using code generation to survive without generics in Go  <a href=\"https://www.calhoun.io/using-code-generation-to-survive-without-generics-in-go/\" rel=\"nofollow\" target=\"_blank\">https://www.calhoun.io/using-code-generation-to-survive-without-generics-in-go/</a>\n</li>\n<li>NSQ 入门简介 <a href=\"http://m.xfenglin.com/a/12010968060.html\" rel=\"nofollow\" target=\"_blank\">http://m.xfenglin.com/a/12010968060.html</a>\n</li>\n<li>一款 go 的 3D 游戏引擎 <a href=\"https://github.com/g3n/engine\" rel=\"nofollow\" target=\"_blank\">https://github.com/g3n/engine</a>\n</li>\n</ol>\n\n<p>招聘信息：</p>\n\n<ol>\n<li>招聘 go 工程师，坐标济南，薪资 8-10K <a href=\"https://gocn.io/question/631\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/631</a>\n</li>\n</ol>\n\n<p>编辑：谢烟客\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 838,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 785,
    "title": "回复评论的时候不能ctrl + enter快捷键发送啊",
    "created_at": "2017-05-19 18:07:23",
    "updated_at": "2017-05-19 20:37:54",
    "replied_at": "2017-05-19 20:37:54",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 931,
    "last_reply_user_login": "lifei6671",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1359,
    "user": "{\"id\": 1359, \"name\": \"mozhata\", \"login\": \"mozhata\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 244,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 786,
    "title": "关于Goroutine执行顺序",
    "created_at": "2017-05-19 21:34:59",
    "updated_at": "2017-11-29 23:16:36",
    "replied_at": "2017-11-29 23:13:57",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 810,
    "last_reply_user_login": "simple",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 21,
    "user": "{\"id\": 21, \"name\": \"angelina\", \"login\": \"angelina\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "下面这段代码在设置了GOMAXPROCS为1后，为什么执行的结果是先打印出b,再打印出a,难道不是顺序执行吗？(go 版本:1.8)\n```go\nfunc main() {\n\truntime.GOMAXPROCS(1)\n\tvar wg sync.WaitGroup\n\twg.Add(2)\n\tgo func() {\n\t\tfmt.Println(&quot;a&quot;)\n\t\twg.Done()\n\t}()\n\tgo func() {\n\t\tfmt.Println(&quot;b&quot;)\n\t\twg.Done()\n\t}()\n\twg.Wait()\n}\n```\n\n",
    "body_html": "<p>下面这段代码在设置了 GOMAXPROCS 为 1 后，为什么执行的结果是先打印出 b,再打印出 a,难道不是顺序执行吗？(go 版本:1.8)</p>\n<pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">GOMAXPROCS</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">var</span> <span class=\"n\">wg</span> <span class=\"n\">sync</span><span class=\"o\">.</span><span class=\"n\">WaitGroup</span>\n    <span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"m\">2</span><span class=\"p\">)</span>\n    <span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">a</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Done</span><span class=\"p\">()</span>\n    <span class=\"p\">}()</span>\n    <span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">b</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Done</span><span class=\"p\">()</span>\n    <span class=\"p\">}()</span>\n    <span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</code></pre>",
    "hits": 828,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 787,
    "title": "GoCN每日新闻(2017-05-20)",
    "created_at": "2017-05-20 10:26:57",
    "updated_at": "2017-05-20 10:26:57",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-20)\n\n1. Go1.9介绍 https://talks.golang.org/2017/state-of-go-may.slide#1\n2. Go 里面如何SQL注入 https://dev.to/joncalhoun/what-is-sql-injection-and-how-do-i-avoid-it-in-go\n3. 应用扩展的安全性 https://www.dotconferences.com/2017/04/mitchell-hashimoto-scaling-security\n4. 什么才是微服务呢？https://dzone.com/articles/what-are-microservices-actually\n5. 使用mariadb docker go搭建微服务架构 https://mariadb.com/resources/blog/how-create-microservices-and-set-microservice-architecture-mariadb-docker-and-go\n\n\n活动预告：【深圳Gopher Meetup】\n\n1. 李帅 随手记 《Go Context原理及其典型适用场景》\n2. 陈日燊 美图 《gRPC 在美图微服务中的应用》\n3. 崔英杰， 玉米广告CTO《如何搭建GO的持续集成开发环境》\n4. 彭秦中  平安科技 《基于open-falcon的平安云监控》\u2028\n报名地址：http://www.bagevent.com/event/575820\n\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-20)</p>\n\n<ol>\n<li>Go1.9 介绍 <a href=\"https://talks.golang.org/2017/state-of-go-may.slide#1\" rel=\"nofollow\" target=\"_blank\">https://talks.golang.org/2017/state-of-go-may.slide#1</a>\n</li>\n<li>Go 里面如何 SQL 注入 <a href=\"https://dev.to/joncalhoun/what-is-sql-injection-and-how-do-i-avoid-it-in-go\" rel=\"nofollow\" target=\"_blank\">https://dev.to/joncalhoun/what-is-sql-injection-and-how-do-i-avoid-it-in-go</a>\n</li>\n<li>应用扩展的安全性 <a href=\"https://www.dotconferences.com/2017/04/mitchell-hashimoto-scaling-security\" rel=\"nofollow\" target=\"_blank\">https://www.dotconferences.com/2017/04/mitchell-hashimoto-scaling-security</a>\n</li>\n<li>什么才是微服务呢？<a href=\"https://dzone.com/articles/what-are-microservices-actually\" rel=\"nofollow\" target=\"_blank\">https://dzone.com/articles/what-are-microservices-actually</a>\n</li>\n<li>使用 mariadb docker go 搭建微服务架构 <a href=\"https://mariadb.com/resources/blog/how-create-microservices-and-set-microservice-architecture-mariadb-docker-and-go\" rel=\"nofollow\" target=\"_blank\">https://mariadb.com/resources/blog/how-create-microservices-and-set-microservice-architecture-mariadb-docker-and-go</a>\n</li>\n</ol>\n\n<p>活动预告：【深圳 Gopher Meetup】</p>\n\n<ol>\n<li>李帅 随手记《Go Context 原理及其典型适用场景》</li>\n<li>陈日燊 美图《gRPC&nbsp;在美图微服务中的应用》</li>\n<li>崔英杰，&nbsp;玉米广告 CTO《如何搭建 GO 的持续集成开发环境》</li>\n<li>彭秦中 &nbsp;平安科技《基于 open-falcon 的平安云监控》\u2028\n报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 573,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 788,
    "title": "求用beego开发的小项目？",
    "created_at": "2017-05-20 22:19:11",
    "updated_at": "2021-01-16 19:06:52",
    "replied_at": "2017-05-21 14:12:39",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 931,
    "last_reply_user_login": "lifei6671",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1967,
    "user": "{\"id\": 1967, \"name\": \"gogogoboy\", \"login\": \"gogogoboy\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "已经完成beego开发的博客了，求其他的小项目，如果有详细说明就更好了",
    "body_html": "<p>已经完成 beego 开发的博客了，求其他的小项目，如果有详细说明就更好了</p>",
    "hits": 233,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 789,
    "title": "GoCN每日新闻(2017-05-21)",
    "created_at": "2017-05-21 10:22:22",
    "updated_at": "2017-05-21 10:22:22",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-21)\n\n1. Go指南系列 https://golangbot.com/learn-golang-series/\n2. Zookeeper 转 etcd https://github.com/coreos/zetcd\n3. 目前支持最丰富路由及高性能的Go路由  https://github.com/beego/mux\n4. 写可测试的Go代码 https://engineering.aircto.com/writing-testable-code-in-golang/\n5. Go 视频教程《Mastering Go Programming》 https://www.youtube.com/playlist?list=PLTgRMOcmRb3PqppNpItFFQO_E0r2ARN1m\n\n\n活动预告：【深圳Gopher Meetup】\n\n1. 李帅 随手记 《Go Context原理及其典型适用场景》\n2. 陈日燊 美图 《gRPC 在美图微服务中的应用》\n3. 崔英杰， 玉米广告CTO《如何搭建GO的持续集成开发环境》\n4. 彭秦中  平安科技 《基于open-falcon的平安云监控》\u2028\n报名地址：http://www.bagevent.com/event/575820\n\n\n编辑：Asta &amp; 傅小黑\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-21)</p>\n\n<ol>\n<li>Go 指南系列 <a href=\"https://golangbot.com/learn-golang-series/\" rel=\"nofollow\" target=\"_blank\">https://golangbot.com/learn-golang-series/</a>\n</li>\n<li>Zookeeper 转 etcd <a href=\"https://github.com/coreos/zetcd\" rel=\"nofollow\" target=\"_blank\">https://github.com/coreos/zetcd</a>\n</li>\n<li>目前支持最丰富路由及高性能的 Go 路由  <a href=\"https://github.com/beego/mux\" rel=\"nofollow\" target=\"_blank\">https://github.com/beego/mux</a>\n</li>\n<li>写可测试的 Go 代码 <a href=\"https://engineering.aircto.com/writing-testable-code-in-golang/\" rel=\"nofollow\" target=\"_blank\">https://engineering.aircto.com/writing-testable-code-in-golang/</a>\n</li>\n<li>Go 视频教程《Mastering Go Programming》<a href=\"https://www.youtube.com/playlist?list=PLTgRMOcmRb3PqppNpItFFQO_E0r2ARN1m\" rel=\"nofollow\" target=\"_blank\">https://www.youtube.com/playlist?list=PLTgRMOcmRb3PqppNpItFFQO_E0r2ARN1m</a>\n</li>\n</ol>\n\n<p>活动预告：【深圳 Gopher Meetup】</p>\n\n<ol>\n<li>李帅 随手记《Go Context 原理及其典型适用场景》</li>\n<li>陈日燊 美图《gRPC&nbsp;在美图微服务中的应用》</li>\n<li>崔英杰，&nbsp;玉米广告 CTO《如何搭建 GO 的持续集成开发环境》</li>\n<li>彭秦中 &nbsp;平安科技《基于 open-falcon 的平安云监控》\u2028\n报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n</ol>\n\n<p>编辑：Asta &amp; 傅小黑\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 518,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 790,
    "title": "regexp MatchString 的注意点",
    "created_at": "2017-05-21 13:24:06",
    "updated_at": "2017-05-22 10:17:44",
    "replied_at": "2017-05-22 10:17:44",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1709,
    "last_reply_user_login": "tanxiaolong",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "这两天在写beego/mux，昨天正好小黑帮我测试，他给我反馈了这样的问题：\n\n注册路由如下\n\n```\nmx.Get(&quot;/abc/?:id:int&quot;, func(w http.ResponseWriter, r *http.Request) {\n\t\tparams := r.Context().Value(mux.RouteParamsID)\n\t\tfmt.Fprintf(w, &quot;hello, params %v&quot;, params)\n\t})\n```\n\n但是当访问如下三个URL的时候居然都是匹配的\n\n```\nurls := []string{\n\t&quot;http://127.0.0.1:9999/abc&quot;,\n\t&quot;http://127.0.0.1:9999/abc/123&quot;,\n\t&quot;http://127.0.0.1:9999/abc/xyz&quot;,\n}\n```\n\n照理来说第三条是肯定不能匹配的，经过我深入的debug，我发现针对`:int`的正则是`([0-9]*)`，然后我在正则匹配里面是这样写的`r.MatchString(segment)`,这个结果居然是true。\n\n也就是说如下的测试代码返回的结果是true\n\n```\nr := regexp.MustCompile(`([0-9]*)`)\nfmt.Println(r.MatchString(&quot;zzz&quot;))\n```\n\n这让我恨不能理解了，这个正则应该是什么都没有匹配到啊，但是当我把正则修改成如下就正确了\n\n```\nr := regexp.MustCompile(`([0-9]+)`)\nfmt.Println(r.MatchString(&quot;zzz&quot;))\n```\n\n这个一眼看上去还是有点费解的",
    "body_html": "<p>这两天在写 beego/mux，昨天正好小黑帮我测试，他给我反馈了这样的问题：</p>\n\n<p>注册路由如下</p>\n<pre class=\"highlight plaintext\"><code>mx.Get(&amp;quot;/abc/?:id:int&amp;quot;, func(w http.ResponseWriter, r *http.Request) {\n        params := r.Context().Value(mux.RouteParamsID)\n        fmt.Fprintf(w, &amp;quot;hello, params %v&amp;quot;, params)\n    })\n</code></pre>\n<p>但是当访问如下三个 URL 的时候居然都是匹配的</p>\n<pre class=\"highlight plaintext\"><code>urls := []string{\n    &amp;quot;http://127.0.0.1:9999/abc&amp;quot;,\n    &amp;quot;http://127.0.0.1:9999/abc/123&amp;quot;,\n    &amp;quot;http://127.0.0.1:9999/abc/xyz&amp;quot;,\n}\n</code></pre>\n<p>照理来说第三条是肯定不能匹配的，经过我深入的 debug，我发现针对<code>:int</code>的正则是<code>([0-9]*)</code>，然后我在正则匹配里面是这样写的<code>r.MatchString(segment)</code>,这个结果居然是 true。</p>\n\n<p>也就是说如下的测试代码返回的结果是 true</p>\n<pre class=\"highlight plaintext\"><code>r := regexp.MustCompile(`([0-9]*)`)\nfmt.Println(r.MatchString(&amp;quot;zzz&amp;quot;))\n</code></pre>\n<p>这让我恨不能理解了，这个正则应该是什么都没有匹配到啊，但是当我把正则修改成如下就正确了</p>\n<pre class=\"highlight plaintext\"><code>r := regexp.MustCompile(`([0-9]+)`)\nfmt.Println(r.MatchString(&amp;quot;zzz&amp;quot;))\n</code></pre>\n<p>这个一眼看上去还是有点费解的</p>",
    "hits": 500,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 791,
    "title": "GoCN每日新闻(2017-05-22)",
    "created_at": "2017-05-22 11:20:50",
    "updated_at": "2017-05-22 11:20:50",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-22)\n\n1. 微服务的模式语言 http://microservices.io/patterns/cn/index.html\n2. Go编程规范 http://kilabit.info/journal/2017/05/Go_Informal_Coding_Style\n3. 常见的网站服务器架构有哪些？https://www.zhihu.com/question/20657269\n4. C汇编转成Go汇编 https://github.com/minio/c2goasm\n5. Go测试包的命名 https://lanreadelowo.com/blog/2017/05/17/on-package-naming-for-tests/\n\n\n活动预告：【深圳Gopher Meetup】\n\n1. 李帅 随手记 《Go Context原理及其典型适用场景》\n2. 陈日燊 美图 《gRPC 在美图微服务中的应用》\n3. 崔英杰， 玉米广告CTO《如何搭建GO的持续集成开发环境》\n4. 彭秦中  平安科技 《基于open-falcon的平安云监控》\u2028\n报名地址：http://www.bagevent.com/event/575820\n\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-22)</p>\n\n<ol>\n<li>微服务的模式语言 <a href=\"http://microservices.io/patterns/cn/index.html\" rel=\"nofollow\" target=\"_blank\">http://microservices.io/patterns/cn/index.html</a>\n</li>\n<li>Go 编程规范 <a href=\"http://kilabit.info/journal/2017/05/Go_Informal_Coding_Style\" rel=\"nofollow\" target=\"_blank\">http://kilabit.info/journal/2017/05/Go_Informal_Coding_Style</a>\n</li>\n<li>常见的网站服务器架构有哪些？<a href=\"https://www.zhihu.com/question/20657269\" rel=\"nofollow\" target=\"_blank\">https://www.zhihu.com/question/20657269</a>\n</li>\n<li>C 汇编转成 Go 汇编 <a href=\"https://github.com/minio/c2goasm\" rel=\"nofollow\" target=\"_blank\">https://github.com/minio/c2goasm</a>\n</li>\n<li>Go 测试包的命名 <a href=\"https://lanreadelowo.com/blog/2017/05/17/on-package-naming-for-tests/\" rel=\"nofollow\" target=\"_blank\">https://lanreadelowo.com/blog/2017/05/17/on-package-naming-for-tests/</a>\n</li>\n</ol>\n\n<p>活动预告：【深圳 Gopher Meetup】</p>\n\n<ol>\n<li>李帅 随手记《Go Context 原理及其典型适用场景》</li>\n<li>陈日燊 美图《gRPC&nbsp;在美图微服务中的应用》</li>\n<li>崔英杰，&nbsp;玉米广告 CTO《如何搭建 GO 的持续集成开发环境》</li>\n<li>彭秦中 &nbsp;平安科技《基于 open-falcon 的平安云监控》\u2028\n报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 560,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 792,
    "title": "宕机，找不到原因，请各位指点下解题思路",
    "created_at": "2017-05-22 11:44:21",
    "updated_at": "2017-05-31 16:44:25",
    "replied_at": "2017-05-31 16:44:25",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1974,
    "last_reply_user_login": "xw_heng",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1974,
    "user": "{\"id\": 1974, \"name\": \"xw_heng\", \"login\": \"xw_heng\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "####程序启动方式\n程序是以启动子进程的方式启动程序，让父进程ID变为1，来实现的守护进程（参考：[http://blog.csdn.net/ghost911_slb/article/details/7831540](http://blog.csdn.net/ghost911_slb/article/details/7831540)）。\n\n####问题\n程序运行一周后，莫名其妙的就自己挂了，日志上没有任何非正常信息。\n程序中所有协程都加了异常捕获，但都没捕获到任何信息。\n唯一找到的信息，是在/var/log/messages中（cat messages | grep 30439）找到的，如下（不会上传图片，我把日志手工输出）：\nsystemd-login: New session 30439 of user myuser.\nsystemd: Started session 30439 of user myuser.\nsystemd: Starting session 30439 of user myuser.\nsystemd-login: Removed session 30439.\n\n###请各位指点下该怎么解决或分析这个问题？",
    "body_html": "<p>#### 程序启动方式\n程序是以启动子进程的方式启动程序，让父进程 ID 变为 1，来实现的守护进程（参考：<a href=\"http://blog.csdn.net/ghost911_slb/article/details/7831540\" rel=\"nofollow\" target=\"_blank\" title=\"\">http://blog.csdn.net/ghost911_slb/article/details/7831540</a>）。</p>\n\n<p>#### 问题\n程序运行一周后，莫名其妙的就自己挂了，日志上没有任何非正常信息。\n程序中所有协程都加了异常捕获，但都没捕获到任何信息。\n唯一找到的信息，是在/var/log/messages 中（cat messages | grep 30439）找到的，如下（不会上传图片，我把日志手工输出）：\nsystemd-login: New session 30439 of user myuser.\nsystemd: Started session 30439 of user myuser.\nsystemd: Starting session 30439 of user myuser.\nsystemd-login: Removed session 30439.</p>\n\n<p>### 请各位指点下该怎么解决或分析这个问题？</p>",
    "hits": 637,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 793,
    "title": "beego orm目前貌似没有软删除，谁已经造了轮子呢？",
    "created_at": "2017-05-22 14:14:22",
    "updated_at": "2021-01-20 02:43:18",
    "replied_at": "2017-05-23 09:26:52",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 99,
    "last_reply_user_login": "small145900",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1973,
    "user": "{\"id\": 1973, \"name\": \"kouga\", \"login\": \"kouga\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "beego orm目前貌似没有软删除，谁已经造了轮子呢？",
    "body_html": "<p>beego orm 目前貌似没有软删除，谁已经造了轮子呢？</p>",
    "hits": 443,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 794,
    "title": "vscode问题",
    "created_at": "2017-05-22 16:47:51",
    "updated_at": "2017-05-27 10:44:28",
    "replied_at": "2017-05-27 10:44:28",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 310,
    "last_reply_user_login": "james4e",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1917,
    "user": "{\"id\": 1917, \"name\": \"loplop\", \"login\": \"loplop\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "使用 vscode 经常在写代码的时候，停顿时间稍微长一点，代码自动格式化就会进行，有些时候打的字符就自动选中了，经常打错，哪位知道怎么配置。谢谢",
    "body_html": "<p>使用 vscode 经常在写代码的时候，停顿时间稍微长一点，代码自动格式化就会进行，有些时候打的字符就自动选中了，经常打错，哪位知道怎么配置。谢谢</p>",
    "hits": 444,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 795,
    "title": "GoCN每日新闻(2017-05-23)",
    "created_at": "2017-05-23 11:35:37",
    "updated_at": "2017-05-23 16:50:30",
    "replied_at": "2017-05-23 16:50:30",
    "replies_count": 1,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 1194,
    "last_reply_user_login": "dcb9",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-23)\n\n1. Github 发布了 Market Place ， 提供了很多面向开发者的服务 https://github.com/blog/2359-introducing-github-marketplace-and-more-tools-to-customize-your-workflow\n2. 每个服务器必备的3个工具 https://bsima.me/clog/server-tools.html\n3. linux下非阻塞io库 epoll https://zhuanlan.zhihu.com/p/27050330\n4. 从PHP到Go：代码，性能和一些常识 https://www.sitepoint.com/moving-php-go/\n5. 致讨厌写测试代码的人 https://www.oschina.net/translate/testing-for-people-who-hate-testing\n\n\n招聘信息：\n1. 【北京】百度外卖 https://gocn.io/article/336\n\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-23)</p>\n\n<ol>\n<li>Github 发布了 Market Place ， 提供了很多面向开发者的服务 <a href=\"https://github.com/blog/2359-introducing-github-marketplace-and-more-tools-to-customize-your-workflow\" rel=\"nofollow\" target=\"_blank\">https://github.com/blog/2359-introducing-github-marketplace-and-more-tools-to-customize-your-workflow</a>\n</li>\n<li>每个服务器必备的 3 个工具 <a href=\"https://bsima.me/clog/server-tools.html\" rel=\"nofollow\" target=\"_blank\">https://bsima.me/clog/server-tools.html</a>\n</li>\n<li>linux 下非阻塞 io 库 epoll <a href=\"https://zhuanlan.zhihu.com/p/27050330\" rel=\"nofollow\" target=\"_blank\">https://zhuanlan.zhihu.com/p/27050330</a>\n</li>\n<li>从 PHP 到 Go：代码，性能和一些常识 <a href=\"https://www.sitepoint.com/moving-php-go/\" rel=\"nofollow\" target=\"_blank\">https://www.sitepoint.com/moving-php-go/</a>\n</li>\n<li>致讨厌写测试代码的人 <a href=\"https://www.oschina.net/translate/testing-for-people-who-hate-testing\" rel=\"nofollow\" target=\"_blank\">https://www.oschina.net/translate/testing-for-people-who-hate-testing</a>\n</li>\n</ol>\n\n<p>招聘信息：</p>\n\n<ol>\n<li>【北京】百度外卖 <a href=\"https://gocn.io/article/336\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/336</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 591,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 796,
    "title": "用windows开发，没有人用JetBrains goland吗？",
    "created_at": "2017-05-23 14:35:01",
    "updated_at": "2017-11-24 21:49:56",
    "replied_at": "2017-11-24 21:49:56",
    "replies_count": 15,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 3148,
    "last_reply_user_login": "yang1339",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1949,
    "user": "{\"id\": 1949, \"name\": \"jasonleeoffice\", \"login\": \"jasonleeoffice\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 609,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 797,
    "title": "有人在用go-micro吗 ",
    "created_at": "2017-05-23 16:51:22",
    "updated_at": "2017-05-24 21:45:05",
    "replied_at": "2017-05-24 21:45:05",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1446,
    "last_reply_user_login": "chrislee",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1494,
    "user": "{\"id\": 1494, \"name\": \"stirlingx\", \"login\": \"stirlingx\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "最近读了[go-micro](https://github.com/micro/go-micro)的源码，发现代码结构很赞，但是有些功能还不完善。比如服务发现，每一次rpc调用都要去registry获取服务器列表，而不是使用watch更新机制；还有提供的grpc插件，客户端每次RPC调用都重新Dial服务器。\n\n这个项目的作者一直在完善之中，本人很看好这个项目，但目前还不敢用于生产实践。",
    "body_html": "<p>最近读了<a href=\"https://github.com/micro/go-micro\" rel=\"nofollow\" target=\"_blank\" title=\"\">go-micro</a>的源码，发现代码结构很赞，但是有些功能还不完善。比如服务发现，每一次 rpc 调用都要去 registry 获取服务器列表，而不是使用 watch 更新机制；还有提供的 grpc 插件，客户端每次 RPC 调用都重新 Dial 服务器。</p>\n\n<p>这个项目的作者一直在完善之中，本人很看好这个项目，但目前还不敢用于生产实践。</p>",
    "hits": 526,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 798,
    "title": "GoCN每日新闻(2017-05-24)",
    "created_at": "2017-05-24 10:16:48",
    "updated_at": "2017-05-24 10:48:12",
    "replied_at": "2017-05-24 10:48:12",
    "replies_count": 1,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 2,
    "last_reply_user_login": "itfanr",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-24)\n\n1. stack-overflow的https升级之路 https://nickcraver.com/blog/2017/05/22/https-on-stack-overflow/\n2.  [security] Go发布Go 1.7.6 和 Go 1.8.2 https://golang.org/dl/\n3. 生产环境中MySQL迁移到TiDB https://pingcap.github.io/blog/2017/05/22/Comparison-between-MySQL-and-TiDB-with-tens-of-millions-of-data-per-day/\n4. 写给程序员的 Unicode 入门介绍 http://blog.jobbole.com/111261/\n5. 编程书单列表 http://blog.didiaoyuan.com/2017/04/18/%E6%80%BB%E6%9C%89%E4%BD%A0%E8%A6%81%E7%9A%84%E7%BC%96%E7%A8%8B%E4%B9%A6%E5%8D%95%EF%BC%88GitHub-%EF%BC%89/\n\n活动预告：【深圳Gopher Meetup】\n\n1. 李帅 随手记 《Go Context原理及其典型适用场景》\n2. 陈日燊 美图 《gRPC 在美图微服务中的应用》\n3. 崔英杰， 玉米广告CTO《如何搭建GO的持续集成开发环境》\n4. 彭秦中  平安科技 《基于open-falcon的平安云监控》\u2028\n报名地址：http://www.bagevent.com/event/575820\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-24)</p>\n\n<ol>\n<li>stack-overflow 的 https 升级之路 <a href=\"https://nickcraver.com/blog/2017/05/22/https-on-stack-overflow/\" rel=\"nofollow\" target=\"_blank\">https://nickcraver.com/blog/2017/05/22/https-on-stack-overflow/</a>\n</li>\n<li> [security] Go 发布 Go 1.7.6 和 Go 1.8.2 <a href=\"https://golang.org/dl/\" rel=\"nofollow\" target=\"_blank\">https://golang.org/dl/</a>\n</li>\n<li>生产环境中 MySQL 迁移到 TiDB <a href=\"https://pingcap.github.io/blog/2017/05/22/Comparison-between-MySQL-and-TiDB-with-tens-of-millions-of-data-per-day/\" rel=\"nofollow\" target=\"_blank\">https://pingcap.github.io/blog/2017/05/22/Comparison-between-MySQL-and-TiDB-with-tens-of-millions-of-data-per-day/</a>\n</li>\n<li>写给程序员的 Unicode 入门介绍 <a href=\"http://blog.jobbole.com/111261/\" rel=\"nofollow\" target=\"_blank\">http://blog.jobbole.com/111261/</a>\n</li>\n<li>编程书单列表 <a href=\"http://blog.didiaoyuan.com/2017/04/18/%E6%80%BB%E6%9C%89%E4%BD%A0%E8%A6%81%E7%9A%84%E7%BC%96%E7%A8%8B%E4%B9%A6%E5%8D%95%EF%BC%88GitHub-%EF%BC%89/\" rel=\"nofollow\" target=\"_blank\">http://blog.didiaoyuan.com/2017/04/18/%E6%80%BB%E6%9C%89%E4%BD%A0%E8%A6%81%E7%9A%84%E7%BC%96%E7%A8%8B%E4%B9%A6%E5%8D%95%EF%BC%88GitHub-%EF%BC%89/</a>\n</li>\n</ol>\n\n<p>活动预告：【深圳 Gopher Meetup】</p>\n\n<ol>\n<li>李帅 随手记《Go Context 原理及其典型适用场景》</li>\n<li>陈日燊 美图《gRPC&nbsp;在美图微服务中的应用》</li>\n<li>崔英杰，&nbsp;玉米广告 CTO《如何搭建 GO 的持续集成开发环境》</li>\n<li>彭秦中 &nbsp;平安科技《基于 open-falcon 的平安云监控》\u2028\n报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 618,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 799,
    "title": "在windows下开发go 用什么工具",
    "created_at": "2017-05-24 23:27:09",
    "updated_at": "2018-11-04 22:14:58",
    "replied_at": "2018-11-04 22:14:58",
    "replies_count": 21,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 3232,
    "last_reply_user_login": "hujianxin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1353,
    "user": "{\"id\": 1353, \"name\": \"songtianyi\", \"login\": \"songtianyi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "用了两天gitbash，代码错误也能编译通过。。。\nvscode 编译也怪怪的，修改的代码不生效。",
    "body_html": "<p>用了两天 gitbash，代码错误也能编译通过。。。\nvscode 编译也怪怪的，修改的代码不生效。</p>",
    "hits": 823,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 800,
    "title": "什么时候出个app，手机看太难受了",
    "created_at": "2017-05-24 23:36:11",
    "updated_at": "2017-05-27 10:45:29",
    "replied_at": "2017-05-27 10:45:29",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 310,
    "last_reply_user_login": "james4e",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 87,
    "user": "{\"id\": 87, \"name\": \"lychee\", \"login\": \"lychee\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "谢大，什么时候出个app，手机看网页太难受了",
    "body_html": "<p>谢大，什么时候出个 app，手机看网页太难受了</p>",
    "hits": 453,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 801,
    "title": "什么时候出个app，手机看太难受了",
    "created_at": "2017-05-24 23:36:33",
    "updated_at": "2017-05-25 08:07:59",
    "replied_at": "2017-05-25 08:07:59",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 960,
    "last_reply_user_login": "tupunco",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 87,
    "user": "{\"id\": 87, \"name\": \"lychee\", \"login\": \"lychee\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "谢大，什么时候出个app，手机看网页太难受了",
    "body_html": "<p>谢大，什么时候出个 app，手机看网页太难受了</p>",
    "hits": 484,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 802,
    "title": "GoCN每日新闻(2017-05-25)",
    "created_at": "2017-05-25 07:57:34",
    "updated_at": "2017-05-25 07:57:34",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-25)\n\n1. Go调度详解 https://zhuanlan.zhihu.com/goroutine\n2. Go写单元测试的五个技巧 https://medium.com/@matryer/5-simple-tips-and-tricks-for-writing-unit-tests-in-golang-619653f90742\n3. 简单的反射库 https://github.com/gigawattio/metaflector\n4. SOLID 设计原则 https://youtu.be/zzAdEt3xZ1M\n5. 一个wechat机器人二次开发框架 wechat-go https://github.com/songtianyi/wechat-go\n\n活动预告：【深圳Gopher Meetup】\n\n1. 李帅 随手记 《Go Context原理及其典型适用场景》\n2. 陈日燊 美图 《gRPC 在美图微服务中的应用》\n3. 崔英杰， 玉米广告CTO《如何搭建GO的持续集成开发环境》\n4. 彭秦中  平安科技 《基于open-falcon的平安云监控》\u2028\n报名地址：http://www.bagevent.com/event/575820\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn\n",
    "body_html": "<p>GoCN 每日新闻 (2017-05-25)</p>\n\n<ol>\n<li>Go 调度详解 <a href=\"https://zhuanlan.zhihu.com/goroutine\" rel=\"nofollow\" target=\"_blank\">https://zhuanlan.zhihu.com/goroutine</a>\n</li>\n<li>Go 写单元测试的五个技巧 <a href=\"https://medium.com/@matryer/5-simple-tips-and-tricks-for-writing-unit-tests-in-golang-619653f90742\" rel=\"nofollow\" target=\"_blank\">https://medium.com/@matryer/5-simple-tips-and-tricks-for-writing-unit-tests-in-golang-619653f90742</a>\n</li>\n<li>简单的反射库 <a href=\"https://github.com/gigawattio/metaflector\" rel=\"nofollow\" target=\"_blank\">https://github.com/gigawattio/metaflector</a>\n</li>\n<li>SOLID 设计原则<span class=\"embed-responsive embed-responsive-16by9\"><iframe class=\"embed-responsive-item\" src=\"//www.youtube.com/embed/zzAdEt3xZ1M\" allowfullscreen=\"\"></iframe></span>\n</li>\n<li>一个 wechat 机器人二次开发框架 wechat-go <a href=\"https://github.com/songtianyi/wechat-go\" rel=\"nofollow\" target=\"_blank\">https://github.com/songtianyi/wechat-go</a>\n</li>\n</ol>\n\n<p>活动预告：【深圳 Gopher Meetup】</p>\n\n<ol>\n<li>李帅 随手记《Go Context 原理及其典型适用场景》</li>\n<li>陈日燊 美图《gRPC&nbsp;在美图微服务中的应用》</li>\n<li>崔英杰，&nbsp;玉米广告 CTO《如何搭建 GO 的持续集成开发环境》</li>\n<li>彭秦中 &nbsp;平安科技《基于 open-falcon 的平安云监控》\u2028\n报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 554,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 803,
    "title": "cgo类型转换问题",
    "created_at": "2017-05-25 09:02:50",
    "updated_at": "2017-05-25 10:58:36",
    "replied_at": "2017-05-25 10:56:31",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1494,
    "last_reply_user_login": "stirlingx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 269,
    "user": "{\"id\": 269, \"name\": \"cz000\", \"login\": \"cz000\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "调用C的函数\n\tvoid test_method(char *p);\n并且知道该函数的参数为一个 指向32个字节的指针。\n用Go调用参数该如何设置？",
    "body_html": "<p>调用 C 的函数\n    void test_method(char *p);\n并且知道该函数的参数为一个 指向 32 个字节的指针。\n用 Go 调用参数该如何设置？</p>",
    "hits": 453,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 804,
    "title": "本站使用go写的吗？",
    "created_at": "2017-05-25 09:37:11",
    "updated_at": "2017-05-26 18:08:46",
    "replied_at": "2017-05-26 18:08:46",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1902,
    "last_reply_user_login": "hoosin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1990,
    "user": "{\"id\": 1990, \"name\": \"tpkeeper\", \"login\": \"tpkeeper\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "开放源码吗？",
    "body_html": "<p>开放源码吗？</p>",
    "hits": 509,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 805,
    "title": "复制文件时如何保留文件最后修改时间？",
    "created_at": "2017-05-25 11:26:17",
    "updated_at": "2017-05-25 11:44:07",
    "replied_at": "2017-05-25 11:44:07",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1494,
    "last_reply_user_login": "stirlingx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 971,
    "user": "{\"id\": 971, \"name\": \"zhjphp\", \"login\": \"zhjphp\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "想写个增量备份小脚本，碰到个棘手问题\n使用 copy 方法复制文件时，新复制的文件的最后修改时间被改成最新的了，\n这样就很难与源文件比较文件是否更新过，\n\n求助：\n1.有没有什么办法在复制时像系统一样可以保留文件的最后修改时间？\n2.如果不能保留最后修改时间，有没有什么好办法可以知道源文件和备份的文件是否一致。",
    "body_html": "<p>想写个增量备份小脚本，碰到个棘手问题\n使用 copy 方法复制文件时，新复制的文件的最后修改时间被改成最新的了，\n这样就很难与源文件比较文件是否更新过，</p>\n\n<p>求助：\n1.有没有什么办法在复制时像系统一样可以保留文件的最后修改时间？\n2.如果不能保留最后修改时间，有没有什么好办法可以知道源文件和备份的文件是否一致。</p>",
    "hits": 323,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 806,
    "title": "想了一下，还是搞一个 golang 微信群",
    "created_at": "2017-05-26 11:49:59",
    "updated_at": "2017-05-27 17:05:52",
    "replied_at": "2017-05-27 17:05:52",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1949,
    "last_reply_user_login": "jasonleeoffice",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1902,
    "user": "{\"id\": 1902, \"name\": \"hoosin\", \"login\": \"hoosin\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我是 Nodejs 转过来的，之前的社区有很多活跃的圈子。\n\n我有一个需求，保证每天的阅读量，希望有更多的干货文章，最好是有关技术的。\n但这些文章挺难找的。\n微博上的好东西传送门挺不错，V2ex也不错。但还不够理想。\n希望具有如下的特点：\n\n\n1. 真的是技术人员筛选出来的\n2. 要实时\n3. 要能够讨论起来\n\n\n所以想到微信群，应该是一个好办法。于是就建了一个，试试呗。\n.\n.\n.\n.\n.\n.\n.\n.\nps：当然，小龙虾季到了，我们还可以约小龙虾。\n\n\n\n![](http://i4.buimg.com/588926/dd3810dd40f1e8c6.jpg)\n\n如果满了或者失效，加我微信，也可以，ihoosin",
    "body_html": "<p>我是 Nodejs 转过来的，之前的社区有很多活跃的圈子。</p>\n\n<p>我有一个需求，保证每天的阅读量，希望有更多的干货文章，最好是有关技术的。\n但这些文章挺难找的。\n微博上的好东西传送门挺不错，V2ex 也不错。但还不够理想。\n希望具有如下的特点：</p>\n\n<ol>\n<li>真的是技术人员筛选出来的</li>\n<li>要实时</li>\n<li>要能够讨论起来</li>\n</ol>\n\n<p>所以想到微信群，应该是一个好办法。于是就建了一个，试试呗。\n.\n.\n.\n.\n.\n.\n.\n.\nps：当然，小龙虾季到了，我们还可以约小龙虾。</p>\n\n<p><img src=\"http://i4.buimg.com/588926/dd3810dd40f1e8c6.jpg\" title=\"\" alt=\"\"></p>\n\n<p>如果满了或者失效，加我微信，也可以，ihoosin</p>",
    "hits": 564,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 807,
    "title": "GoCN每日新闻(2017-05-26)",
    "created_at": "2017-05-26 12:04:01",
    "updated_at": "2017-05-26 12:04:01",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-26)\n\n1. 2017年开发者之路 https://github.com/kamranahmedse/developer-roadmap\n2. Go微服务开源平台 https://github.com/istio/istio\n3. Go1.8.3 发布了 https://golang.org/dl/\n4. Go里面指针和堆的关系 https://www.goinggo.net/2017/05/language-mechanics-on-stacks-and-pointers.html\n5. 用Go替代mapreduce来处理大数据 https://thinkfaster.co/2017/05/big-data-with-golang-instead-of-mapreduce/\n\n活动预告：【深圳Gopher Meetup】\n\n1. 李帅 随手记 《Go Context原理及其典型适用场景》\n2. 陈日燊 美图 《gRPC 在美图微服务中的应用》\n3. 崔英杰， 玉米广告CTO《如何搭建GO的持续集成开发环境》\n4. 彭秦中  平安科技 《基于open-falcon的平安云监控》\u2028\n报名地址：http://www.bagevent.com/event/575820\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-26)</p>\n\n<ol>\n<li>2017 年开发者之路 <a href=\"https://github.com/kamranahmedse/developer-roadmap\" rel=\"nofollow\" target=\"_blank\">https://github.com/kamranahmedse/developer-roadmap</a>\n</li>\n<li>Go 微服务开源平台 <a href=\"https://github.com/istio/istio\" rel=\"nofollow\" target=\"_blank\">https://github.com/istio/istio</a>\n</li>\n<li>Go1.8.3 发布了 <a href=\"https://golang.org/dl/\" rel=\"nofollow\" target=\"_blank\">https://golang.org/dl/</a>\n</li>\n<li>Go 里面指针和堆的关系 <a href=\"https://www.goinggo.net/2017/05/language-mechanics-on-stacks-and-pointers.html\" rel=\"nofollow\" target=\"_blank\">https://www.goinggo.net/2017/05/language-mechanics-on-stacks-and-pointers.html</a>\n</li>\n<li>用 Go 替代 mapreduce 来处理大数据 <a href=\"https://thinkfaster.co/2017/05/big-data-with-golang-instead-of-mapreduce/\" rel=\"nofollow\" target=\"_blank\">https://thinkfaster.co/2017/05/big-data-with-golang-instead-of-mapreduce/</a>\n</li>\n</ol>\n\n<p>活动预告：【深圳 Gopher Meetup】</p>\n\n<ol>\n<li>李帅 随手记《Go Context 原理及其典型适用场景》</li>\n<li>陈日燊 美图《gRPC&nbsp;在美图微服务中的应用》</li>\n<li>崔英杰，&nbsp;玉米广告 CTO《如何搭建 GO 的持续集成开发环境》</li>\n<li>彭秦中 &nbsp;平安科技《基于 open-falcon 的平安云监控》\u2028\n报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 557,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 808,
    "title": "GoCN每日新闻(2017-05-27)",
    "created_at": "2017-05-27 09:39:30",
    "updated_at": "2017-05-27 09:39:30",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-27)\n\n1. Go里面数据库时间处理 http://pliutau.com/working-with-db-time-in-go/\n2. 地球最大git repo的实现 https://blogs.msdn.microsoft.com/bharry/2017/05/24/the-largest-git-repo-on-the-planet/\n3. prometheus-2.0 动态磁盘扩展的优化 https://coreos.com/blog/prometheus-2.0-storage-layer-optimization\n4. Go team试图提供一个标准的trace接口：Go Tracing Roadmap http://t.cn/RSZfbjP\n5. Go桌面应用 Electron 实现https://github.com/Equanox/gotron\n\n\n编辑：Asta &amp; 傅小黑\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-27)</p>\n\n<ol>\n<li>Go 里面数据库时间处理 <a href=\"http://pliutau.com/working-with-db-time-in-go/\" rel=\"nofollow\" target=\"_blank\">http://pliutau.com/working-with-db-time-in-go/</a>\n</li>\n<li>地球最大 git repo 的实现 <a href=\"https://blogs.msdn.microsoft.com/bharry/2017/05/24/the-largest-git-repo-on-the-planet/\" rel=\"nofollow\" target=\"_blank\">https://blogs.msdn.microsoft.com/bharry/2017/05/24/the-largest-git-repo-on-the-planet/</a>\n</li>\n<li>prometheus-2.0 动态磁盘扩展的优化 <a href=\"https://coreos.com/blog/prometheus-2.0-storage-layer-optimization\" rel=\"nofollow\" target=\"_blank\">https://coreos.com/blog/prometheus-2.0-storage-layer-optimization</a>\n</li>\n<li>Go team 试图提供一个标准的 trace 接口：Go Tracing Roadmap <a href=\"http://t.cn/RSZfbjP\" rel=\"nofollow\" target=\"_blank\">http://t.cn/RSZfbjP</a>\n</li>\n<li>Go 桌面应用 Electron 实现<a href=\"https://github.com/Equanox/gotron\" rel=\"nofollow\" target=\"_blank\">https://github.com/Equanox/gotron</a>\n</li>\n</ol>\n\n<p>编辑：Asta &amp; 傅小黑\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 479,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 809,
    "title": "大家写go的时候用什么样的思想去写呢",
    "created_at": "2017-05-27 15:45:28",
    "updated_at": "2017-05-28 11:37:09",
    "replied_at": "2017-05-28 11:36:20",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 96,
    "last_reply_user_login": "sheepbao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1999,
    "user": "{\"id\": 1999, \"name\": \"KKH\", \"login\": \"KKH\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "背景描述：\n编程新手，java基础\n刚好公司有一内部模块需要用go重写，原本是java版\n\n在重写的时候发现原本在java中，一切都是对象的使用\n我在写go的时候反而写的像c语言一样，很多时候像的都是写个函数，然后传参数，再使用\n\n感觉没有用到 面向对象的思想，然后interface等一些特性就没用上，感觉没有用到go的优势或特性\n我这个方式有什么地方需要改进的吗\n请问各位大神，你们在使用go编程的时候用什么样的思想去写呢，是本身就带着面向对象去写吗\n还是go语言本身就是面向对象语言呢\n新人一头雾水\n",
    "body_html": "<p>背景描述：\n编程新手，java 基础\n刚好公司有一内部模块需要用 go 重写，原本是 java 版</p>\n\n<p>在重写的时候发现原本在 java 中，一切都是对象的使用\n我在写 go 的时候反而写的像 c 语言一样，很多时候像的都是写个函数，然后传参数，再使用</p>\n\n<p>感觉没有用到 面向对象的思想，然后 interface 等一些特性就没用上，感觉没有用到 go 的优势或特性\n我这个方式有什么地方需要改进的吗\n请问各位大神，你们在使用 go 编程的时候用什么样的思想去写呢，是本身就带着面向对象去写吗\n还是 go 语言本身就是面向对象语言呢\n新人一头雾水</p>",
    "hits": 446,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 810,
    "title": "beego如何设置controller方法的超时",
    "created_at": "2017-05-27 18:07:33",
    "updated_at": "2021-01-16 21:40:45",
    "replied_at": "2017-05-28 10:44:54",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 124,
    "user": "{\"id\": 124, \"name\": \"mnhkahn\", \"login\": \"mnhkahn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "目前支持的`ServerTimeOut`看起来像是对tcp读写设置的超时，如果controller计算超时这种情况能中断么？",
    "body_html": "<p>目前支持的<code>ServerTimeOut</code>看起来像是对 tcp 读写设置的超时，如果 controller 计算超时这种情况能中断么？</p>",
    "hits": 654,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 811,
    "title": "GoCN每日新闻(2017-05-28)",
    "created_at": "2017-05-28 11:11:55",
    "updated_at": "2017-05-28 15:46:12",
    "replied_at": "2017-05-28 15:46:12",
    "replies_count": 1,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 1973,
    "last_reply_user_login": "kouga",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-28)\n\n1. 项目内存泄露排查 + 使用Go pprof定位内存泄露 https://gocn.io/article/340\n2. Go HTTP 超时完全指南 https://blog.cloudflare.com/the-complete-guide-to-golang-net-http-timeouts/\n3. gollvm From Google https://go.googlesource.com/gollvm/\n4. Golang hashmap的使用及实现 https://www.goinggo.net/2013/12/macro-view-of-map-internals-in-go.html\n5. goimportdot : 一个帮你迅速了解 golang 项目结构的工具 https://github.com/yqylovy/goimportdot/blob/master/docs/examples-cn/goimportdot_guide.md\n\n活动预告：【深圳Gopher Meetup】\n\n1. 李帅 随手记 《Go Context原理及其典型适用场景》\n2. 陈日燊 美图 《gRPC 在美图微服务中的应用》\n3. 崔英杰， 玉米广告CTO《如何搭建GO的持续集成开发环境》\n4. 彭秦中  平安科技 《基于open-falcon的平安云监控》\u2028\n报名地址：http://www.bagevent.com/event/575820\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-28)</p>\n\n<ol>\n<li>项目内存泄露排查 + 使用 Go pprof 定位内存泄露 <a href=\"https://gocn.io/article/340\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/340</a>\n</li>\n<li>Go HTTP 超时完全指南 <a href=\"https://blog.cloudflare.com/the-complete-guide-to-golang-net-http-timeouts/\" rel=\"nofollow\" target=\"_blank\">https://blog.cloudflare.com/the-complete-guide-to-golang-net-http-timeouts/</a>\n</li>\n<li>gollvm From Google <a href=\"https://go.googlesource.com/gollvm/\" rel=\"nofollow\" target=\"_blank\">https://go.googlesource.com/gollvm/</a>\n</li>\n<li>Golang hashmap 的使用及实现 <a href=\"https://www.goinggo.net/2013/12/macro-view-of-map-internals-in-go.html\" rel=\"nofollow\" target=\"_blank\">https://www.goinggo.net/2013/12/macro-view-of-map-internals-in-go.html</a>\n</li>\n<li>goimportdot : 一个帮你迅速了解 golang 项目结构的工具 <a href=\"https://github.com/yqylovy/goimportdot/blob/master/docs/examples-cn/goimportdot_guide.md\" rel=\"nofollow\" target=\"_blank\">https://github.com/yqylovy/goimportdot/blob/master/docs/examples-cn/goimportdot_guide.md</a>\n</li>\n</ol>\n\n<p>活动预告：【深圳 Gopher Meetup】</p>\n\n<ol>\n<li>李帅 随手记《Go Context 原理及其典型适用场景》</li>\n<li>陈日燊 美图《gRPC&nbsp;在美图微服务中的应用》</li>\n<li>崔英杰，&nbsp;玉米广告 CTO《如何搭建 GO 的持续集成开发环境》</li>\n<li>彭秦中 &nbsp;平安科技《基于 open-falcon 的平安云监控》\u2028\n报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 657,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 812,
    "title": "RobotGo v0.44.0 发布，Go 桌面自动化",
    "created_at": "2017-05-29 00:03:07",
    "updated_at": "2017-05-29 00:03:07",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 183,
    "user": "{\"id\": 183, \"name\": \"veni\", \"login\": \"veni\", \"avatar\": \"https://gocn.vip/system/letter_avatars/v.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "RobotGo v0.44.0 发布了，Golang 跨平台控制鼠标、键盘、位图、屏幕、窗口句柄以及全局事件监听。\n\n主要变更：\n\n- 增加 CHANGELOG.md\n- 格式化代码\n- 增加 fedora 依赖文档\n\n更新:\n\n- 更新 Test\n- 更新 Guidelines\n- 更新 godoc 和 docs\n- 更新并分割 examples\n- 更新并整理 README.md\n\n修复:\n\n- 修排版和MD显示错误\n- 修复 fedora 添加事件内存问题\n- 修复 doc.md 和 README.md 显示问题\n\n安装:\n\n- go get -u github.com/go-vgo/robotgo\n\n\n项目地址:\n\nGithub: https://github.com/go-vgo/robotgo\n",
    "body_html": "<p>RobotGo v0.44.0 发布了，Golang 跨平台控制鼠标、键盘、位图、屏幕、窗口句柄以及全局事件监听。</p>\n\n<p>主要变更：</p>\n\n<ul>\n<li>增加 CHANGELOG.md</li>\n<li>格式化代码</li>\n<li>增加 fedora 依赖文档</li>\n</ul>\n\n<p>更新:</p>\n\n<ul>\n<li>更新 Test</li>\n<li>更新 Guidelines</li>\n<li>更新 godoc 和 docs</li>\n<li>更新并分割 examples</li>\n<li>更新并整理 README.md</li>\n</ul>\n\n<p>修复:</p>\n\n<ul>\n<li>修排版和 MD 显示错误</li>\n<li>修复 fedora 添加事件内存问题</li>\n<li>修复 doc.md 和 README.md 显示问题</li>\n</ul>\n\n<p>安装:</p>\n\n<ul>\n<li>go get -u github.com/go-vgo/robotgo</li>\n</ul>\n\n<p>项目地址:</p>\n\n<p>Github: <a href=\"https://github.com/go-vgo/robotgo\" rel=\"nofollow\" target=\"_blank\">https://github.com/go-vgo/robotgo</a></p>",
    "hits": 657,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 813,
    "title": "GoCN每日新闻(2017-05-29)",
    "created_at": "2017-05-29 10:18:54",
    "updated_at": "2017-05-29 10:18:54",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-29)\n\n1. Go 线程调度的惊奇处 http://container-solutions.com/surprise-golang-thread-scheduling/\n2. 区块链第一课 http://johnmathews.eu/blockchain-introduction.html\n3. 基于token bucket实现的流量限制包 https://github.com/juju/ratelimit\n4. 消息队列的对比调研 http://www.jianshu.com/p/f056a74d77a4\n5. 容器监控方案 cAdvisor + Elasticsearch https://github.com/jasonGeng88/blog/blob/master/201705/cadvisor.md\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn\n网站地址：https://gocn.io/question/811",
    "body_html": "<p>GoCN 每日新闻 (2017-05-29)</p>\n\n<ol>\n<li>Go 线程调度的惊奇处 <a href=\"http://container-solutions.com/surprise-golang-thread-scheduling/\" rel=\"nofollow\" target=\"_blank\">http://container-solutions.com/surprise-golang-thread-scheduling/</a>\n</li>\n<li>区块链第一课 <a href=\"http://johnmathews.eu/blockchain-introduction.html\" rel=\"nofollow\" target=\"_blank\">http://johnmathews.eu/blockchain-introduction.html</a>\n</li>\n<li>基于 token bucket 实现的流量限制包 <a href=\"https://github.com/juju/ratelimit\" rel=\"nofollow\" target=\"_blank\">https://github.com/juju/ratelimit</a>\n</li>\n<li>消息队列的对比调研 <a href=\"http://www.jianshu.com/p/f056a74d77a4\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/f056a74d77a4</a>\n</li>\n<li>容器监控方案 cAdvisor + Elasticsearch <a href=\"https://github.com/jasonGeng88/blog/blob/master/201705/cadvisor.md\" rel=\"nofollow\" target=\"_blank\">https://github.com/jasonGeng88/blog/blob/master/201705/cadvisor.md</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a>\n网站地址：<a href=\"https://gocn.io/question/811\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/811</a></p>",
    "hits": 462,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 814,
    "title": " （开源）基于vue, react, node.js, go开发的微商城（含微信小程序）",
    "created_at": "2017-05-29 16:52:27",
    "updated_at": "2018-06-28 16:01:17",
    "replied_at": "2018-06-28 16:01:17",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 5939,
    "last_reply_user_login": "jinjiaji512",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2007,
    "user": "{\"id\": 2007, \"name\": \"shen100\", \"login\": \"shen100\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "地址: https://github.com/shen100/wemall\n求star，求关注\n![](http://res.cloudinary.com/dcemaqxcp/image/upload/c_scale,q_40,w_640/v1495726849/D55DF2778A92A721C4B5A509AE7ACD96_lkz2g8.jpg)",
    "body_html": "<p>地址: <a href=\"https://github.com/shen100/wemall\" rel=\"nofollow\" target=\"_blank\">https://github.com/shen100/wemall</a>\n求 star，求关注\n<img src=\"http://res.cloudinary.com/dcemaqxcp/image/upload/c_scale,q_40,w_640/v1495726849/D55DF2778A92A721C4B5A509AE7ACD96_lkz2g8.jpg\" title=\"\" alt=\"\"></p>",
    "hits": 722,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 815,
    "title": "GoCN每日新闻(2017-05-30)",
    "created_at": "2017-05-30 12:17:42",
    "updated_at": "2017-05-30 12:17:42",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-30)\n\n1. Go中的同步与锁 https://blog.sodroid.com/2017/05/22/sync-lock/\n2. hack-go-types https://katcipis.github.io/2017/04/21/hack-go-types.html\n3. Neovim GUI written in Golang https://github.com/dzhou121/gonvim\n4. 提高编码技能的10个小窍门 http://geek.csdn.net/news/detail/199563\n5. GoScience，可以下载Scihub学术论文 https://github.com/GreatDanton/GoScience\n\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-30)</p>\n\n<ol>\n<li>Go 中的同步与锁 <a href=\"https://blog.sodroid.com/2017/05/22/sync-lock/\" rel=\"nofollow\" target=\"_blank\">https://blog.sodroid.com/2017/05/22/sync-lock/</a>\n</li>\n<li>hack-go-types <a href=\"https://katcipis.github.io/2017/04/21/hack-go-types.html\" rel=\"nofollow\" target=\"_blank\">https://katcipis.github.io/2017/04/21/hack-go-types.html</a>\n</li>\n<li>Neovim GUI written in Golang <a href=\"https://github.com/dzhou121/gonvim\" rel=\"nofollow\" target=\"_blank\">https://github.com/dzhou121/gonvim</a>\n</li>\n<li>提高编码技能的 10 个小窍门 <a href=\"http://geek.csdn.net/news/detail/199563\" rel=\"nofollow\" target=\"_blank\">http://geek.csdn.net/news/detail/199563</a>\n</li>\n<li>GoScience，可以下载 Scihub 学术论文 <a href=\"https://github.com/GreatDanton/GoScience\" rel=\"nofollow\" target=\"_blank\">https://github.com/GreatDanton/GoScience</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 409,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 816,
    "title": "GoCN每日新闻(2017-05-31)",
    "created_at": "2017-05-31 10:11:13",
    "updated_at": "2017-05-31 10:11:13",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-05-31)\n\n1. 意想不到的MySQL复制延迟原因 https://mp.weixin.qq.com/s/CO0cQdYq6-F5i-6GA9uBVw\n2. 下一代的所见即所得的编辑器 https://github.com/ory/editor\n3. 通过Go了解TensorFlow https://pgaleone.eu/tensorflow/go/2017/05/29/understanding-tensorflow-using-go/\n4. JWT介绍 http://blog.csdn.net/forezp/article/details/72804324\n5. Gopher Singapore 视频集锦 https://www.youtube.com/playlist?list=PLq2Nv-Sh8EbZEjZdPLaQt1qh_ohZFMDj8\n\n活动预告：【深圳Gopher Meetup】\n\n1. 李帅 随手记 《Go Context原理及其典型适用场景》\n2. 陈日燊 美图 《gRPC 在美图微服务中的应用》\n3. 崔英杰， 玉米广告CTO《如何搭建GO的持续集成开发环境》\n4. 彭秦中  平安科技 《基于open-falcon的平安云监控》\u2028\n报名地址：http://www.bagevent.com/event/575820\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-05-31)</p>\n\n<ol>\n<li>意想不到的 MySQL 复制延迟原因 <a href=\"https://mp.weixin.qq.com/s/CO0cQdYq6-F5i-6GA9uBVw\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/CO0cQdYq6-F5i-6GA9uBVw</a>\n</li>\n<li>下一代的所见即所得的编辑器 <a href=\"https://github.com/ory/editor\" rel=\"nofollow\" target=\"_blank\">https://github.com/ory/editor</a>\n</li>\n<li>通过 Go 了解 TensorFlow <a href=\"https://pgaleone.eu/tensorflow/go/2017/05/29/understanding-tensorflow-using-go/\" rel=\"nofollow\" target=\"_blank\">https://pgaleone.eu/tensorflow/go/2017/05/29/understanding-tensorflow-using-go/</a>\n</li>\n<li>JWT 介绍 <a href=\"http://blog.csdn.net/forezp/article/details/72804324\" rel=\"nofollow\" target=\"_blank\">http://blog.csdn.net/forezp/article/details/72804324</a>\n</li>\n<li>Gopher Singapore 视频集锦 <a href=\"https://www.youtube.com/playlist?list=PLq2Nv-Sh8EbZEjZdPLaQt1qh_ohZFMDj8\" rel=\"nofollow\" target=\"_blank\">https://www.youtube.com/playlist?list=PLq2Nv-Sh8EbZEjZdPLaQt1qh_ohZFMDj8</a>\n</li>\n</ol>\n\n<p>活动预告：【深圳 Gopher Meetup】</p>\n\n<ol>\n<li>李帅 随手记《Go Context 原理及其典型适用场景》</li>\n<li>陈日燊 美图《gRPC&nbsp;在美图微服务中的应用》</li>\n<li>崔英杰，&nbsp;玉米广告 CTO《如何搭建 GO 的持续集成开发环境》</li>\n<li>彭秦中 &nbsp;平安科技《基于 open-falcon 的平安云监控》\u2028\n报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 467,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 817,
    "title": "有没有Go相关的深度学习的项目？",
    "created_at": "2017-05-31 10:28:54",
    "updated_at": "2017-06-01 10:37:46",
    "replied_at": "2017-06-01 10:37:46",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1950,
    "last_reply_user_login": "henson",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1950,
    "user": "{\"id\": 1950, \"name\": \"henson\", \"login\": \"henson\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "比如用Go和Tensorflow开发的项目？\n或者有谁比较了解Golearn的？\n再或者还有什么用Go开发的深度学习、人工智能、大数据算法的开源项目库？",
    "body_html": "<p>比如用 Go 和 Tensorflow 开发的项目？\n或者有谁比较了解 Golearn 的？\n再或者还有什么用 Go 开发的深度学习、人工智能、大数据算法的开源项目库？</p>",
    "hits": 345,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 818,
    "title": "ticker+http,非协程安全？",
    "created_at": "2017-05-31 23:34:13",
    "updated_at": "2017-06-01 12:06:24",
    "replied_at": "2017-06-01 12:06:24",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 480,
    "user": "{\"id\": 480, \"name\": \"toukii\", \"login\": \"toukii\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在http响应里，用ticker控制响应内容，有时，响应时间不对，请看下例：\n\n```\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;net/http&quot;\n\t&quot;time&quot;\n)\n\nvar (\n\tticker *time.Ticker\n)\n\nfunc init() {\n\tticker = time.NewTicker(5e9) \n\t// 5秒ticker\n}\n\nfunc main() {\n\thttp.HandleFunc(&quot;/&quot;, tickerHandler)\n\thttp.ListenAndServe(&quot;:8080&quot;, nil)\n}\n\nfunc tickerHandler(rw http.ResponseWriter, req *http.Request) {\n\tselect {\n\tcase &lt;-ticker.C:\n\t\tfmt.Println(&quot;中奖了&quot;, time.Now())\n\t\tbreak\n\tdefault:\n\t\t// fmt.Print(&quot;呵&quot;)\n\t}\n}\n```\n\n并发访问 http://localhost:8080/ ，如下图所示，最后2行的时间间隔有点问题，请问是怎么回事？\n倒数第四行和倒数第三行时间间隔大是因为期间没有发送http请求，不是bug,其他同理。时间间隔小于5秒的怎么解释？\n\n![ticker](http://7xku3c.com1.z0.glb.clouddn.com/qutestion/ticker_http.png)",
    "body_html": "<p>在 http 响应里，用 ticker 控制响应内容，有时，响应时间不对，请看下例：</p>\n <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"n\">import</span> <span class=\"p\">(</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">net</span><span class=\"p\">/</span><span class=\"n\">http</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">var</span> <span class=\"p\">(</span>\n    <span class=\"n\">ticker</span> <span class=\"p\">*</span><span class=\"n\">time</span><span class=\"p\">.</span><span class=\"n\">Ticker</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">func</span> <span class=\"n\">init</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">ticker</span> <span class=\"p\">=</span> <span class=\"n\">time</span><span class=\"p\">.</span><span class=\"n\">NewTicker</span><span class=\"p\">(</span><span class=\"m\">5e9</span><span class=\"p\">)</span> \n    <span class=\"p\">//</span> <span class=\"m\">5</span><span class=\"err\">秒</span><span class=\"n\">ticker</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">HandleFunc</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;/&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">tickerHandler</span><span class=\"p\">)</span>\n    <span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">ListenAndServe</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;:</span><span class=\"m\">8080</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">nil</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">tickerHandler</span><span class=\"p\">(</span><span class=\"n\">rw</span> <span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">ResponseWriter</span><span class=\"p\">,</span> <span class=\"n\">req</span> <span class=\"p\">*</span><span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">Request</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">select</span> <span class=\"p\">{</span>\n    <span class=\"k\">case</span> <span class=\"p\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;-</span><span class=\"n\">ticker</span><span class=\"p\">.</span><span class=\"n\">C</span><span class=\"p\">:</span>\n        <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">中奖了</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">time</span><span class=\"p\">.</span><span class=\"n\">Now</span><span class=\"p\">())</span>\n        <span class=\"k\">break</span>\n    <span class=\"n\">default</span><span class=\"p\">:</span>\n        <span class=\"p\">//</span> <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"err\">呵</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>并发访问 <a href=\"http://localhost:8080/\" rel=\"nofollow\" target=\"_blank\">http://localhost:8080/</a> ，如下图所示，最后 2 行的时间间隔有点问题，请问是怎么回事？\n倒数第四行和倒数第三行时间间隔大是因为期间没有发送 http 请求，不是 bug,其他同理。时间间隔小于 5 秒的怎么解释？</p>\n\n<p><img src=\"http://7xku3c.com1.z0.glb.clouddn.com/qutestion/ticker_http.png\" title=\"\" alt=\"ticker\"></p>",
    "hits": 449,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 819,
    "title": "GoCN每日新闻(2017-06-01)",
    "created_at": "2017-06-01 09:06:41",
    "updated_at": "2017-06-01 09:06:41",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-01)\n\n1. GitHub GraphQL API v4 https://github.com/shurcooL/githubql\n2. 压力测试工具介绍 https://huoding.com/2017/05/31/620\n3. Go Context坑经验 http://www.zenlife.tk/go-context.md\n4. GVM 管理多版本的Go https://www.youtube.com/watch?v=7hFfkOs8gRg\n5. 强大而简单的Go路由器 https://github.com/beego/mux\n\n每月荐书：《性能之巅》 \n《性能之巅：洞悉系统、企业与云计算》基于Linux 和Solaris 系统阐述了适用于所有系统的性能理论和方法，Brendan Gregg 将业界普遍承认的性能方法、工具和指标收集于本书之中。阅读本书，你能洞悉系统运作的方式，学习到分析和提高系统与应用程序性能的方法，这些性能方法同样适用于大型企业与云计算这类最为复杂的环境的性能分析与调优。\nhttps://book.douban.com/subject/26586598/\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-01)</p>\n\n<ol>\n<li>GitHub GraphQL API v4 <a href=\"https://github.com/shurcooL/githubql\" rel=\"nofollow\" target=\"_blank\">https://github.com/shurcooL/githubql</a>\n</li>\n<li>压力测试工具介绍 <a href=\"https://huoding.com/2017/05/31/620\" rel=\"nofollow\" target=\"_blank\">https://huoding.com/2017/05/31/620</a>\n</li>\n<li>Go Context 坑经验 <a href=\"http://www.zenlife.tk/go-context.md\" rel=\"nofollow\" target=\"_blank\">http://www.zenlife.tk/go-context.md</a>\n</li>\n<li>GVM 管理多版本的 Go<span class=\"embed-responsive embed-responsive-16by9\"><iframe class=\"embed-responsive-item\" src=\"//www.youtube.com/embed/7hFfkOs8gRg\" allowfullscreen=\"\"></iframe></span>\n</li>\n<li>强大而简单的 Go 路由器 <a href=\"https://github.com/beego/mux\" rel=\"nofollow\" target=\"_blank\">https://github.com/beego/mux</a>\n</li>\n</ol>\n\n<p>每月荐书：《性能之巅》\n《性能之巅：洞悉系统、企业与云计算》基于 Linux 和 Solaris 系统阐述了适用于所有系统的性能理论和方法，Brendan Gregg 将业界普遍承认的性能方法、工具和指标收集于本书之中。阅读本书，你能洞悉系统运作的方式，学习到分析和提高系统与应用程序性能的方法，这些性能方法同样适用于大型企业与云计算这类最为复杂的环境的性能分析与调优。\n<a href=\"https://book.douban.com/subject/26586598/\" rel=\"nofollow\" target=\"_blank\">https://book.douban.com/subject/26586598/</a></p>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 491,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 821,
    "title": "GoCN每日新闻(2017-06-02)",
    "created_at": "2017-06-02 10:23:02",
    "updated_at": "2017-06-02 10:23:02",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-02)\n1. graphql 和 REST API的对比 https://philsturgeon.uk/api/2017/01/24/graphql-vs-rest-overview/\n2. Go内存调优 https://lrita.github.io/2017/05/26/golang-memory-pprof/\n3. Go和Linux namespace不能混用 https://www.weave.works/blog/linux-namespaces-and-go-don-t-mix\n4. Go语言的修饰器 http://coolshell.cn/articles/17929.html\n5. Go对devops而言的优点和缺点 https://blog.bluematador.com/posts/golang-pros-cons-for-devops-part-1-goroutines-panics-errors/\n\n活动预告：\n1. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n2. 深圳Gopher meetup 报名地址：http://www.bagevent.com/event/575820\n3. 北京Gopher meetup 报名地址：http://www.bagevent.com/event/569069\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-02)</p>\n\n<ol>\n<li>graphql 和 REST API 的对比 <a href=\"https://philsturgeon.uk/api/2017/01/24/graphql-vs-rest-overview/\" rel=\"nofollow\" target=\"_blank\">https://philsturgeon.uk/api/2017/01/24/graphql-vs-rest-overview/</a>\n</li>\n<li>Go 内存调优 <a href=\"https://lrita.github.io/2017/05/26/golang-memory-pprof/\" rel=\"nofollow\" target=\"_blank\">https://lrita.github.io/2017/05/26/golang-memory-pprof/</a>\n</li>\n<li>Go 和 Linux namespace 不能混用 <a href=\"https://www.weave.works/blog/linux-namespaces-and-go-don-t-mix\" rel=\"nofollow\" target=\"_blank\">https://www.weave.works/blog/linux-namespaces-and-go-don-t-mix</a>\n</li>\n<li>Go 语言的修饰器 <a href=\"http://coolshell.cn/articles/17929.html\" rel=\"nofollow\" target=\"_blank\">http://coolshell.cn/articles/17929.html</a>\n</li>\n<li>Go 对 devops 而言的优点和缺点 <a href=\"https://blog.bluematador.com/posts/golang-pros-cons-for-devops-part-1-goroutines-panics-errors/\" rel=\"nofollow\" target=\"_blank\">https://blog.bluematador.com/posts/golang-pros-cons-for-devops-part-1-goroutines-panics-errors/</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n<li>深圳 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n<li>北京 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569069\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569069</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 550,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 822,
    "title": "golang 标准库里这种没有具体代码执行的函数是怎么回事？",
    "created_at": "2017-06-02 10:39:05",
    "updated_at": "2017-06-18 21:59:00",
    "replied_at": "2017-06-18 21:59:00",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2044,
    "last_reply_user_login": "silenceshell",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1623,
    "user": "{\"id\": 1623, \"name\": \"xwisen\", \"login\": \"xwisen\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\n//代码目录/usr/local/go/src/syscall/syscall_unix.go\nfunc Syscall(trap, a1, a2, a3 uintptr) (r1, r2 uintptr, err Errno)\nfunc Syscall6(trap, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno)\nfunc RawSyscall(trap, a1, a2, a3 uintptr) (r1, r2 uintptr, err Errno)\nfunc RawSyscall6(trap, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno)\n```",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"c\">//代码目录/usr/local/go/src/syscall/syscall_unix.go</span>\n<span class=\"k\">func</span> <span class=\"n\">Syscall</span><span class=\"p\">(</span><span class=\"n\">trap</span><span class=\"p\">,</span> <span class=\"n\">a1</span><span class=\"p\">,</span> <span class=\"n\">a2</span><span class=\"p\">,</span> <span class=\"n\">a3</span> <span class=\"kt\">uintptr</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"n\">r1</span><span class=\"p\">,</span> <span class=\"n\">r2</span> <span class=\"kt\">uintptr</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"n\">Errno</span><span class=\"p\">)</span>\n<span class=\"k\">func</span> <span class=\"n\">Syscall6</span><span class=\"p\">(</span><span class=\"n\">trap</span><span class=\"p\">,</span> <span class=\"n\">a1</span><span class=\"p\">,</span> <span class=\"n\">a2</span><span class=\"p\">,</span> <span class=\"n\">a3</span><span class=\"p\">,</span> <span class=\"n\">a4</span><span class=\"p\">,</span> <span class=\"n\">a5</span><span class=\"p\">,</span> <span class=\"n\">a6</span> <span class=\"kt\">uintptr</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"n\">r1</span><span class=\"p\">,</span> <span class=\"n\">r2</span> <span class=\"kt\">uintptr</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"n\">Errno</span><span class=\"p\">)</span>\n<span class=\"k\">func</span> <span class=\"n\">RawSyscall</span><span class=\"p\">(</span><span class=\"n\">trap</span><span class=\"p\">,</span> <span class=\"n\">a1</span><span class=\"p\">,</span> <span class=\"n\">a2</span><span class=\"p\">,</span> <span class=\"n\">a3</span> <span class=\"kt\">uintptr</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"n\">r1</span><span class=\"p\">,</span> <span class=\"n\">r2</span> <span class=\"kt\">uintptr</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"n\">Errno</span><span class=\"p\">)</span>\n<span class=\"k\">func</span> <span class=\"n\">RawSyscall6</span><span class=\"p\">(</span><span class=\"n\">trap</span><span class=\"p\">,</span> <span class=\"n\">a1</span><span class=\"p\">,</span> <span class=\"n\">a2</span><span class=\"p\">,</span> <span class=\"n\">a3</span><span class=\"p\">,</span> <span class=\"n\">a4</span><span class=\"p\">,</span> <span class=\"n\">a5</span><span class=\"p\">,</span> <span class=\"n\">a6</span> <span class=\"kt\">uintptr</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"n\">r1</span><span class=\"p\">,</span> <span class=\"n\">r2</span> <span class=\"kt\">uintptr</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"n\">Errno</span><span class=\"p\">)</span>\n</code></pre> ",
    "hits": 503,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 823,
    "title": "后台获取ckeditor内容有一小部分内容被截取掉了",
    "created_at": "2017-06-02 15:45:07",
    "updated_at": "2017-06-02 15:45:07",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 45,
    "user": "{\"id\": 45, \"name\": \"小张的烦恼\", \"login\": \"zhangyumingtfr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "前台使用ckeditor，然后后台获取的时候有一部分html代码被截掉了，新增加没有问题，就是修改出问题",
    "body_html": "<p>前台使用 ckeditor，然后后台获取的时候有一部分 html 代码被截掉了，新增加没有问题，就是修改出问题</p>",
    "hits": 324,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 824,
    "title": "GoCN每日新闻(2017-06-03)",
    "created_at": "2017-06-03 09:59:22",
    "updated_at": "2017-06-03 09:59:22",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-03)\n\n1. 利用Prometheus 和Grafana将API开支降低70％http://blog.algorithmia.com/reducing-api-overhead-with-prometheus-and-grafana/\n2. Go优化之路—HTTP长连接 http://blog.cyeam.com/golang/2017/05/31/go-http-keepalive\n3. 如何理解Go里面的share-memory-by-communicating https://www.zhihu.com/question/58004055\n4. Go版本管理工具dep介绍 https://go-talks.appspot.com/github.com/edmontongo/presentations/2017-05/dep/dep.slide#1\n5. Go代码生成 https://go-talks.appspot.com/github.com/edmontongo/presentations/2017-05/code-generation/code_generation.slide#1\n\n\n活动预告：\n1. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n2. 深圳Gopher meetup 报名地址：http://www.bagevent.com/event/575820\n3. 北京Gopher meetup 报名地址：http://www.bagevent.com/event/569069\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-03)</p>\n\n<ol>\n<li>利用 Prometheus 和 Grafana 将 API 开支降低 70％<a href=\"http://blog.algorithmia.com/reducing-api-overhead-with-prometheus-and-grafana/\" rel=\"nofollow\" target=\"_blank\">http://blog.algorithmia.com/reducing-api-overhead-with-prometheus-and-grafana/</a>\n</li>\n<li>Go 优化之路—HTTP 长连接 <a href=\"http://blog.cyeam.com/golang/2017/05/31/go-http-keepalive\" rel=\"nofollow\" target=\"_blank\">http://blog.cyeam.com/golang/2017/05/31/go-http-keepalive</a>\n</li>\n<li>如何理解 Go 里面的 share-memory-by-communicating <a href=\"https://www.zhihu.com/question/58004055\" rel=\"nofollow\" target=\"_blank\">https://www.zhihu.com/question/58004055</a>\n</li>\n<li>Go 版本管理工具 dep 介绍 <a href=\"https://go-talks.appspot.com/github.com/edmontongo/presentations/2017-05/dep/dep.slide#1\" rel=\"nofollow\" target=\"_blank\">https://go-talks.appspot.com/github.com/edmontongo/presentations/2017-05/dep/dep.slide#1</a>\n</li>\n<li>Go 代码生成 <a href=\"https://go-talks.appspot.com/github.com/edmontongo/presentations/2017-05/code-generation/code_generation.slide#1\" rel=\"nofollow\" target=\"_blank\">https://go-talks.appspot.com/github.com/edmontongo/presentations/2017-05/code-generation/code_generation.slide#1</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n<li>深圳 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n<li>北京 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569069\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569069</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 613,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 825,
    "title": "脚手架bee 使用问题反馈",
    "created_at": "2017-06-04 09:49:08",
    "updated_at": "2017-06-04 12:39:33",
    "replied_at": "2017-06-04 12:39:33",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2031,
    "user": "{\"id\": 2031, \"name\": \"jeson\", \"login\": \"jeson\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "➜  src pwd\n/Users/apple/gowork/src\n➜  src bee\n[1]    1535 killed     bee\n➜  src go version\ngo version go1.8 darwin/amd64\n➜  src\n\nmac10.12.5   ",
    "body_html": "<p>➜  src pwd\n/Users/apple/gowork/src\n➜  src bee\n[1]    1535 killed     bee\n➜  src go version\ngo version go1.8 darwin/amd64\n➜  src</p>\n\n<p>mac10.12.5   </p>",
    "hits": 307,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 826,
    "title": "Golang图片压缩和剪切的问题",
    "created_at": "2017-06-04 11:07:28",
    "updated_at": "2017-06-06 12:05:32",
    "replied_at": "2017-06-06 12:05:32",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1331,
    "last_reply_user_login": "kakashi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 931,
    "user": "{\"id\": 931, \"name\": \"lifei6671\", \"login\": \"lifei6671\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在项目 [MinDoc](https://github.com/lifei6671/godoc) 中使用到了图片剪切和压缩的功能。\n\n目前图片缩放使用的是第三方库: [github.com/nfnt/resize](http://github.com/nfnt/resize) \n\n缩放代码如下：\n\n```\nfunc ImageResize(src image.Image, w, h int) image.Image {\n\treturn resize.Resize(uint(w), uint(h), src, resize.Lanczos3)\n}\n```\n\n图片剪切代码如下：\n\n```\nfunc ImageCopy(src image.Image, x, y, w, h int) (image.Image, error) {\n\n\tvar subImg image.Image\n\n\tif rgbImg, ok := src.(*image.YCbCr); ok {\n\t\tsubImg = rgbImg.SubImage(image.Rect(x, y, x+w, y+h)).(*image.YCbCr) //图片裁剪x0 y0 x1 y1\n\t} else if rgbImg, ok := src.(*image.RGBA); ok {\n\t\tsubImg = rgbImg.SubImage(image.Rect(x, y, x+w, y+h)).(*image.RGBA) //图片裁剪x0 y0 x1 y1\n\t} else if rgbImg, ok := src.(*image.NRGBA); ok {\n\t\tsubImg = rgbImg.SubImage(image.Rect(x, y, x+w, y+h)).(*image.NRGBA) //图片裁剪x0 y0 x1 y1\n\t} else {\n\n\t\treturn subImg, errors.New(&quot;图片解码失败&quot;)\n\t}\n\n\treturn subImg, nil\n}\n```\n\n保存图片到硬盘如下：\n\n```\n// 将图片保存到指定的路径\nfunc SaveImage(p string, src image.Image) error {\n\n\tf, err := os.OpenFile(p, os.O_SYNC|os.O_RDWR|os.O_CREATE, 0666)\n\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer f.Close()\n\text := filepath.Ext(p)\n\n\tif strings.EqualFold(ext, &quot;.jpg&quot;) || strings.EqualFold(ext, &quot;.jpeg&quot;) {\n\n\t\terr = jpeg.Encode(f, src, &amp;jpeg.Options{Quality: 80})\n\n\t} else if strings.EqualFold(ext, &quot;.png&quot;) {\n\t\terr = png.Encode(f, src)\n\t} else if strings.EqualFold(ext, &quot;.gif&quot;) {\n\t\terr = gif.Encode(f, src, &amp;gif.Options{NumColors: 256})\n\t}\n\treturn err\n}\n```\n\n现在的问题是，虽然图片成功剪切了，也成功缩放了，但是图片的大小竟然变，例如，我上传了一张 1.5MB 5184x3456 的图片，经过缩放为 175x230，但是大小竟然还是 1.5MB。这明显不合理，不知道是我的使用方法有误，还是什么问题？\n",
    "body_html": "<p>在项目 <a href=\"https://github.com/lifei6671/godoc\" rel=\"nofollow\" target=\"_blank\" title=\"\">MinDoc</a> 中使用到了图片剪切和压缩的功能。</p>\n\n<p>目前图片缩放使用的是第三方库: <a href=\"http://github.com/nfnt/resize\" rel=\"nofollow\" target=\"_blank\" title=\"\">github.com/nfnt/resize</a> </p>\n\n<p>缩放代码如下：</p>\n <pre class=\"highlight plaintext\"><code>func ImageResize(src image.Image, w, h int) image.Image {\n    return resize.Resize(uint(w), uint(h), src, resize.Lanczos3)\n}\n</code></pre> \n<p>图片剪切代码如下：</p>\n <pre class=\"highlight plaintext\"><code>func ImageCopy(src image.Image, x, y, w, h int) (image.Image, error) {\n\n    var subImg image.Image\n\n    if rgbImg, ok := src.(*image.YCbCr); ok {\n        subImg = rgbImg.SubImage(image.Rect(x, y, x+w, y+h)).(*image.YCbCr) //图片裁剪x0 y0 x1 y1\n    } else if rgbImg, ok := src.(*image.RGBA); ok {\n        subImg = rgbImg.SubImage(image.Rect(x, y, x+w, y+h)).(*image.RGBA) //图片裁剪x0 y0 x1 y1\n    } else if rgbImg, ok := src.(*image.NRGBA); ok {\n        subImg = rgbImg.SubImage(image.Rect(x, y, x+w, y+h)).(*image.NRGBA) //图片裁剪x0 y0 x1 y1\n    } else {\n\n        return subImg, errors.New(&amp;quot;图片解码失败&amp;quot;)\n    }\n\n    return subImg, nil\n}\n</code></pre> \n<p>保存图片到硬盘如下：</p>\n <pre class=\"highlight plaintext\"><code>// 将图片保存到指定的路径\nfunc SaveImage(p string, src image.Image) error {\n\n    f, err := os.OpenFile(p, os.O_SYNC|os.O_RDWR|os.O_CREATE, 0666)\n\n    if err != nil {\n        return err\n    }\n    defer f.Close()\n    ext := filepath.Ext(p)\n\n    if strings.EqualFold(ext, &amp;quot;.jpg&amp;quot;) || strings.EqualFold(ext, &amp;quot;.jpeg&amp;quot;) {\n\n        err = jpeg.Encode(f, src, &amp;amp;jpeg.Options{Quality: 80})\n\n    } else if strings.EqualFold(ext, &amp;quot;.png&amp;quot;) {\n        err = png.Encode(f, src)\n    } else if strings.EqualFold(ext, &amp;quot;.gif&amp;quot;) {\n        err = gif.Encode(f, src, &amp;amp;gif.Options{NumColors: 256})\n    }\n    return err\n}\n</code></pre> \n<p>现在的问题是，虽然图片成功剪切了，也成功缩放了，但是图片的大小竟然变，例如，我上传了一张 1.5MB 5184x3456 的图片，经过缩放为 175x230，但是大小竟然还是 1.5MB。这明显不合理，不知道是我的使用方法有误，还是什么问题？</p>",
    "hits": 947,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 827,
    "title": "GoCN每日新闻(2017-06-04)",
    "created_at": "2017-06-04 12:38:54",
    "updated_at": "2017-06-05 09:51:42",
    "replied_at": "2017-06-05 09:51:42",
    "replies_count": 2,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 1416,
    "last_reply_user_login": "taowen",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-04)\n\n1. 高性能JSON库 https://github.com/json-iterator/go\n2. PHPer：Go依赖管理 https://medium.com/@rtuin/golang-for-php-developers-dependency-management-19bf2c9bc2c4\n3. Go里面的唯一ID http://antoniomo.com/blog/2017/06/03/unique-ids-in-golang-part-3/\n4. Go实现DNS域名解析 http://www.cnblogs.com/chase-wind/p/6814053.html\n5. 理解Go语言中的方法和接收者 https://segmentfault.com/a/1190000009643429\n\n活动预告：\n1. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n2. 深圳Gopher meetup 报名地址：http://www.bagevent.com/event/575820\n3. 北京Gopher meetup 报名地址：http://www.bagevent.com/event/569069\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-04)</p>\n\n<ol>\n<li>高性能 JSON 库 <a href=\"https://github.com/json-iterator/go\" rel=\"nofollow\" target=\"_blank\">https://github.com/json-iterator/go</a>\n</li>\n<li>PHPer：Go 依赖管理 <a href=\"https://medium.com/@rtuin/golang-for-php-developers-dependency-management-19bf2c9bc2c4\" rel=\"nofollow\" target=\"_blank\">https://medium.com/@rtuin/golang-for-php-developers-dependency-management-19bf2c9bc2c4</a>\n</li>\n<li>Go 里面的唯一 ID <a href=\"http://antoniomo.com/blog/2017/06/03/unique-ids-in-golang-part-3/\" rel=\"nofollow\" target=\"_blank\">http://antoniomo.com/blog/2017/06/03/unique-ids-in-golang-part-3/</a>\n</li>\n<li>Go 实现 DNS 域名解析 <a href=\"http://www.cnblogs.com/chase-wind/p/6814053.html\" rel=\"nofollow\" target=\"_blank\">http://www.cnblogs.com/chase-wind/p/6814053.html</a>\n</li>\n<li>理解 Go 语言中的方法和接收者 <a href=\"https://segmentfault.com/a/1190000009643429\" rel=\"nofollow\" target=\"_blank\">https://segmentfault.com/a/1190000009643429</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n<li>深圳 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n<li>北京 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569069\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569069</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 564,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 828,
    "title": "GoCN每日新闻(2017-06-05)",
    "created_at": "2017-06-05 10:02:39",
    "updated_at": "2017-06-05 10:02:39",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-05)\n\n1. GopherChina 视频集  \n    1. 国内 ：http://www.stuq.org/course/1183/study\n    2. 国外：https://www.youtube.com/playlist?list=PLx_Mc4dJcQbl4qPWbVu86u6owZeiwsErR\n2. python中嵌入groupcache https://www.nathanvangheem.com/posts/2017/06/03/embedding-golang-in-python-with-groupcache.html\n3. Golang开发爱因斯坦视觉 https://developer.salesforce.com/blogs/developer-relations/2017/05/using-einstein-vision-within-golang.html\n4. Go in notebooks https://github.com/gopherdata/gophernotes\n5. Reddit代码部署演变史 https://redditblog.com/2017/06/02/the-evolution-of-code-deploys-at-reddit/\n\n活动预告：\n1. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n2. 深圳Gopher meetup 报名地址：http://www.bagevent.com/event/575820\n3. 北京Gopher meetup 报名地址：http://www.bagevent.com/event/569069\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-05)</p>\n\n<ol>\n<li>GopherChina 视频集<br>\n\n<ol>\n<li>国内 ：<a href=\"http://www.stuq.org/course/1183/study\" rel=\"nofollow\" target=\"_blank\">http://www.stuq.org/course/1183/study</a>\n</li>\n<li>国外：<a href=\"https://www.youtube.com/playlist?list=PLx_Mc4dJcQbl4qPWbVu86u6owZeiwsErR\" rel=\"nofollow\" target=\"_blank\">https://www.youtube.com/playlist?list=PLx_Mc4dJcQbl4qPWbVu86u6owZeiwsErR</a>\n</li>\n</ol>\n</li>\n<li>python 中嵌入 groupcache <a href=\"https://www.nathanvangheem.com/posts/2017/06/03/embedding-golang-in-python-with-groupcache.html\" rel=\"nofollow\" target=\"_blank\">https://www.nathanvangheem.com/posts/2017/06/03/embedding-golang-in-python-with-groupcache.html</a>\n</li>\n<li>Golang 开发爱因斯坦视觉 <a href=\"https://developer.salesforce.com/blogs/developer-relations/2017/05/using-einstein-vision-within-golang.html\" rel=\"nofollow\" target=\"_blank\">https://developer.salesforce.com/blogs/developer-relations/2017/05/using-einstein-vision-within-golang.html</a>\n</li>\n<li>Go in notebooks <a href=\"https://github.com/gopherdata/gophernotes\" rel=\"nofollow\" target=\"_blank\">https://github.com/gopherdata/gophernotes</a>\n</li>\n<li>Reddit 代码部署演变史 <a href=\"https://redditblog.com/2017/06/02/the-evolution-of-code-deploys-at-reddit/\" rel=\"nofollow\" target=\"_blank\">https://redditblog.com/2017/06/02/the-evolution-of-code-deploys-at-reddit/</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n<li>深圳 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n<li>北京 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569069\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569069</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 519,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 829,
    "title": "Go有好用的Scheduler框架吗？有界面管理任务的最好？",
    "created_at": "2017-06-05 11:10:35",
    "updated_at": "2017-06-07 11:52:36",
    "replied_at": "2017-06-07 11:52:36",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2043,
    "last_reply_user_login": "artong0416",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 962,
    "user": "{\"id\": 962, \"name\": \"codinghxl\", \"login\": \"codinghxl\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 596,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 830,
    "title": "[上海]招募Golang工程师",
    "created_at": "2017-06-05 12:42:45",
    "updated_at": "2017-09-05 11:02:29",
    "replied_at": "2017-09-05 11:02:29",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2034,
    "last_reply_user_login": "JennyZhou",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2034,
    "user": "{\"id\": 2034, \"name\": \"JennyZhou\", \"login\": \"JennyZhou\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "**职位描述：**\n工作职责：\n1.负责服务器端微服务平台的开发及维护；\n2.云计算后台重要组件设计和实现；\n3.优化云计算的后台整体架构；\n\n任职资格：\n1.具有Golang服务器端开发经验，了解Web技术及各类框架（H5，JS,CSS3，NodeJs，MEAN stack，MeteorJs）；\n2.熟悉HTTP等网络协议；\n3.熟悉常用NoSQL数据库使用；\n4.数据库：mongodb、mysql、oracle至少精通一个；\n5.具有分布式系统设计开发经验者优先。\n\n工作地址：上海 - 黄浦区 - 打浦桥 - 马当路地铁站5分钟\n\n薪资：18k-25k （根据个人能力面谈）\n\n感兴趣的欢迎给我邮件：jzhou@evolveconsulting.com.hk。(邮件请注明：来自GoCN Forum.)",
    "body_html": "<p><strong>职位描述：</strong>\n工作职责：\n1.负责服务器端微服务平台的开发及维护；\n2.云计算后台重要组件设计和实现；\n3.优化云计算的后台整体架构；</p>\n\n<p>任职资格：\n1.具有 Golang 服务器端开发经验，了解 Web 技术及各类框架（H5，JS,CSS3，NodeJs，MEAN stack，MeteorJs）；\n2.熟悉 HTTP 等网络协议；\n3.熟悉常用 NoSQL 数据库使用；\n4.数据库：mongodb、mysql、oracle 至少精通一个；\n5.具有分布式系统设计开发经验者优先。</p>\n\n<p>工作地址：上海 - 黄浦区 - 打浦桥 - 马当路地铁站 5 分钟</p>\n\n<p>薪资：18k-25k（根据个人能力面谈）</p>\n\n<p>感兴趣的欢迎给我邮件：jzhou@evolveconsulting.com.hk。(邮件请注明：来自 GoCN Forum.)</p>",
    "hits": 510,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 831,
    "title": "GoCN每日新闻(2017-06-06)",
    "created_at": "2017-06-06 09:50:50",
    "updated_at": "2017-06-06 09:50:50",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-06)\n\n1. 如何在任意时刻都可以写出高质量的代码 https://medium.com/@EdmondAtto/how-to-start-writing-high-quality-code-at-any-point-of-your-programming-journey-d434cb0ba8ca\n2. 并发让世界变得简单 https://dave.cheney.net/paste/concurrency-made-easy.pdf\n3. Go是面向对象的吗？http://spf13.com/post/is-go-object-oriented/\n4. 在线测试Go工具 https://github.com/iafan/goplayspace\n5. Linux异步IO https://jvns.ca/blog/2017/06/03/async-io-on-linux--select--poll--and-epoll/\n\n招聘信息\n1. 【上海】https://gocn.io/question/830\n2. 【珠海、北京】掌游天下 https://gocn.io/article/339\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-06)</p>\n\n<ol>\n<li>如何在任意时刻都可以写出高质量的代码 <a href=\"https://medium.com/@EdmondAtto/how-to-start-writing-high-quality-code-at-any-point-of-your-programming-journey-d434cb0ba8ca\" rel=\"nofollow\" target=\"_blank\">https://medium.com/@EdmondAtto/how-to-start-writing-high-quality-code-at-any-point-of-your-programming-journey-d434cb0ba8ca</a>\n</li>\n<li>并发让世界变得简单 <a href=\"https://dave.cheney.net/paste/concurrency-made-easy.pdf\" rel=\"nofollow\" target=\"_blank\">https://dave.cheney.net/paste/concurrency-made-easy.pdf</a>\n</li>\n<li>Go 是面向对象的吗？<a href=\"http://spf13.com/post/is-go-object-oriented/\" rel=\"nofollow\" target=\"_blank\">http://spf13.com/post/is-go-object-oriented/</a>\n</li>\n<li>在线测试 Go 工具 <a href=\"https://github.com/iafan/goplayspace\" rel=\"nofollow\" target=\"_blank\">https://github.com/iafan/goplayspace</a>\n</li>\n<li>Linux 异步 IO <a href=\"https://jvns.ca/blog/2017/06/03/async-io-on-linux--select--poll--and-epoll/\" rel=\"nofollow\" target=\"_blank\">https://jvns.ca/blog/2017/06/03/async-io-on-linux--select--poll--and-epoll/</a>\n</li>\n</ol>\n\n<p>招聘信息</p>\n\n<ol>\n<li>【上海】<a href=\"https://gocn.io/question/830\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/830</a>\n</li>\n<li>【珠海、北京】掌游天下 <a href=\"https://gocn.io/article/339\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/339</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 490,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 832,
    "title": "实际项目中大家都用哪个rpc的框架，说说有没有遇到哪些个坑",
    "created_at": "2017-06-06 11:42:51",
    "updated_at": "2017-06-07 09:29:15",
    "replied_at": "2017-06-07 09:29:15",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 960,
    "last_reply_user_login": "tupunco",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1331,
    "user": "{\"id\": 1331, \"name\": \"kakashi\", \"login\": \"kakashi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "实际项目中大家都用哪个rpc的框架，说说有没有遇到哪些个坑",
    "body_html": "<p>实际项目中大家都用哪个 rpc 的框架，说说有没有遇到哪些个坑</p>",
    "hits": 398,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 833,
    "title": "golang 操作hbase集群",
    "created_at": "2017-06-06 14:07:29",
    "updated_at": "2017-06-06 15:03:39",
    "replied_at": "2017-06-06 15:03:39",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 682,
    "last_reply_user_login": "mintzhao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 627,
    "user": "{\"id\": 627, \"name\": \"986365792\", \"login\": \"986365792\", \"avatar\": \"https://gocn.vip/system/letter_avatars/9.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "golang有什么好的库操作hbase集群吗",
    "body_html": "<p>golang 有什么好的库操作 hbase 集群吗</p>",
    "hits": 428,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 834,
    "title": "Go指针复制问题",
    "created_at": "2017-06-06 17:09:31",
    "updated_at": "2019-03-01 15:12:40",
    "replied_at": "2019-03-01 15:12:40",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 6865,
    "last_reply_user_login": "qiyin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 292,
    "user": "{\"id\": 292, \"name\": \"AdolphLWQ\", \"login\": \"adolphlwq\", \"avatar\": \"https://static.gocn.vip/user/avatar/292/e947d6.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```\npackage main\n\nimport &quot;fmt&quot;\n\ntype R struct {\n\tID  int\n\tCPU float32\n\tMEM float32\n}\n\nfunc main() {\n\trr := GetR()\n\tvar rs []*R\n\tfor k, r := range *rr {\n\t\tfmt.Printf(&quot;%dth r, id: %d, cpu: %f, mem: %f\\n&quot;, k, r.ID, r.CPU, r.MEM)\n\t\trs = append(rs, &amp;r)\n\t}\n\tfmt.Println(rs)\n\titer(&amp;rs)\n}\n\nfunc NewR(i int, c, m float32) *R {\n\treturn &amp;R{\n\t\tID:  i,\n\t\tCPU: c,\n\t\tMEM: m,\n\t}\n}\n\nfunc iter(rs *[]*R) {\n\tfor _, r := range *rs {\n\t\tfmt.Printf(&quot;id: %d, cpu: %f, mem: %f\\n&quot;, r.ID, r.CPU, r.MEM)\n\t}\n}\n\nfunc GetR() *[]R {\n\trr := &amp;[]R{\n\t\t*NewR(0, 4.0, 16000.0),\n\t\t*NewR(1, 2.0, 8000.0),\n\t\t*NewR(2, 1.0, 4000.0),\n\t}\n\treturn rr\n}\n```\n这段代码输出为什么是这个？希望麻烦大家帮忙解答下。https://github.com/dockerq/go-pointer-trick\n```\n0th r, id: 0, cpu: 4.000000, mem: 16000.000000\n1th r, id: 1, cpu: 2.000000, mem: 8000.000000\n2th r, id: 2, cpu: 1.000000, mem: 4000.000000\n[0xc42000e2a0 0xc42000e2a0 0xc42000e2a0]\nid: 2, cpu: 1.000000, mem: 4000.000000\nid: 2, cpu: 1.000000, mem: 4000.000000\nid: 2, cpu: 1.000000, mem: 4000.000000\n```",
    "body_html": " <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"n\">import</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n<span class=\"n\">type</span> <span class=\"n\">R</span> <span class=\"n\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">ID</span>  <span class=\"n\">int</span>\n    <span class=\"n\">CPU</span> <span class=\"n\">float32</span>\n    <span class=\"n\">MEM</span> <span class=\"n\">float32</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">rr</span> <span class=\"p\">:=</span> <span class=\"n\">GetR</span><span class=\"p\">()</span>\n    <span class=\"n\">var</span> <span class=\"n\">rs</span> <span class=\"p\">[]*</span><span class=\"n\">R</span>\n    <span class=\"n\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">r</span> <span class=\"p\">:=</span> <span class=\"k\">range</span> <span class=\"p\">*</span><span class=\"n\">rr</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Printf</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;%</span><span class=\"n\">dth</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">id</span><span class=\"p\">:</span> <span class=\"p\">%</span><span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">cpu</span><span class=\"p\">:</span> <span class=\"p\">%</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">mem</span><span class=\"p\">:</span> <span class=\"p\">%</span><span class=\"n\">f</span><span class=\"p\">\\</span><span class=\"n\">n</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">ID</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">CPU</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">MEM</span><span class=\"p\">)</span>\n        <span class=\"n\">rs</span> <span class=\"p\">=</span> <span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">rs</span><span class=\"p\">,</span> <span class=\"p\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">r</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">rs</span><span class=\"p\">)</span>\n    <span class=\"n\">iter</span><span class=\"p\">(&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">rs</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">NewR</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"n\">int</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">m</span> <span class=\"n\">float32</span><span class=\"p\">)</span> <span class=\"p\">*</span><span class=\"n\">R</span> <span class=\"p\">{</span>\n    <span class=\"n\">return</span> <span class=\"p\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">R</span><span class=\"p\">{</span>\n        <span class=\"n\">ID</span><span class=\"p\">:</span>  <span class=\"n\">i</span><span class=\"p\">,</span>\n        <span class=\"n\">CPU</span><span class=\"p\">:</span> <span class=\"n\">c</span><span class=\"p\">,</span>\n        <span class=\"n\">MEM</span><span class=\"p\">:</span> <span class=\"n\">m</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">iter</span><span class=\"p\">(</span><span class=\"n\">rs</span> <span class=\"p\">*[]*</span><span class=\"n\">R</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">r</span> <span class=\"p\">:=</span> <span class=\"k\">range</span> <span class=\"p\">*</span><span class=\"n\">rs</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Printf</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">id</span><span class=\"p\">:</span> <span class=\"p\">%</span><span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">cpu</span><span class=\"p\">:</span> <span class=\"p\">%</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">mem</span><span class=\"p\">:</span> <span class=\"p\">%</span><span class=\"n\">f</span><span class=\"p\">\\</span><span class=\"n\">n</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">ID</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">CPU</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">MEM</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">GetR</span><span class=\"p\">()</span> <span class=\"p\">*[]</span><span class=\"n\">R</span> <span class=\"p\">{</span>\n    <span class=\"n\">rr</span> <span class=\"p\">:=</span> <span class=\"p\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;[]</span><span class=\"n\">R</span><span class=\"p\">{</span>\n        <span class=\"p\">*</span><span class=\"n\">NewR</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">4.0</span><span class=\"p\">,</span> <span class=\"m\">16000.0</span><span class=\"p\">),</span>\n        <span class=\"p\">*</span><span class=\"n\">NewR</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2.0</span><span class=\"p\">,</span> <span class=\"m\">8000.0</span><span class=\"p\">),</span>\n        <span class=\"p\">*</span><span class=\"n\">NewR</span><span class=\"p\">(</span><span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">1.0</span><span class=\"p\">,</span> <span class=\"m\">4000.0</span><span class=\"p\">),</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">return</span> <span class=\"n\">rr</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>这段代码输出为什么是这个？希望麻烦大家帮忙解答下。<a href=\"https://github.com/dockerq/go-pointer-trick\" rel=\"nofollow\" target=\"_blank\">https://github.com/dockerq/go-pointer-trick</a></p>\n <pre class=\"highlight plaintext\"><code>0th r, id: 0, cpu: 4.000000, mem: 16000.000000\n1th r, id: 1, cpu: 2.000000, mem: 8000.000000\n2th r, id: 2, cpu: 1.000000, mem: 4000.000000\n[0xc42000e2a0 0xc42000e2a0 0xc42000e2a0]\nid: 2, cpu: 1.000000, mem: 4000.000000\nid: 2, cpu: 1.000000, mem: 4000.000000\nid: 2, cpu: 1.000000, mem: 4000.000000\n</code></pre> ",
    "hits": 619,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 835,
    "title": "为什么channel占用的内存没有被释放",
    "created_at": "2017-06-06 19:34:08",
    "updated_at": "2017-06-06 21:05:47",
    "replied_at": "2017-06-06 21:05:47",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 37,
    "last_reply_user_login": "xiayf",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 225,
    "user": "{\"id\": 225, \"name\": \"jackyzhao001\", \"login\": \"jackyzhao001\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "内存中一直是增长的状态，并没有因为子线程的结束而释放内存。\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;time&quot;\n)\n\nfunc main() {\n\tgo exe()\n\tgo exe()\n\tgo exe()\n\ttime.Sleep(600 * time.Second)\n}\n\nfunc exe() {\n\tvar mq = make(chan int64, 1000000)\n\tfor i := 0; i &lt; 1000000; i++ {\n\t\tmq &lt;- int64(i)\n\t}\n\tfor i := 0; i &lt; 1000000; i++ {\n\t\tfmt.Println(&lt;-mq)\n\t}\n\tfmt.Println(len(mq))\n}\n\n```",
    "body_html": "<p>内存中一直是增长的状态，并没有因为子线程的结束而释放内存。</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">go</span> <span class=\"n\">exe</span><span class=\"p\">()</span>\n    <span class=\"k\">go</span> <span class=\"n\">exe</span><span class=\"p\">()</span>\n    <span class=\"k\">go</span> <span class=\"n\">exe</span><span class=\"p\">()</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"m\">600</span> <span class=\"o\">*</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">exe</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">var</span> <span class=\"n\">mq</span> <span class=\"o\">=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">int64</span><span class=\"p\">,</span> <span class=\"m\">1000000</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"m\">1000000</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n        <span class=\"n\">mq</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"kt\">int64</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"m\">1000000</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">mq</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">mq</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n\n</code></pre> ",
    "hits": 405,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 836,
    "title": "reflect MakeFunc这个函数具体怎么用",
    "created_at": "2017-06-07 09:33:49",
    "updated_at": "2017-07-27 14:21:10",
    "replied_at": "2017-07-27 14:20:53",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2441,
    "last_reply_user_login": "lys86_1205",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 887,
    "user": "{\"id\": 887, \"name\": \"haohongfan\", \"login\": \"haohongfan\", \"avatar\": \"https://static.gocn.vip/user/avatar/887/977be8.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "MakeFunc(typ Type, fn func(args []Value) (results []Value)) Value\n\n谁能给个简单的例子, 并解释一下",
    "body_html": "<p>MakeFunc(typ Type, fn func(args [] Value) (results [] Value)) Value</p>\n\n<p>谁能给个简单的例子, 并解释一下</p>",
    "hits": 620,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 837,
    "title": "GoCN每日新闻 (2017-06-07)",
    "created_at": "2017-06-07 10:02:16",
    "updated_at": "2017-06-07 10:02:16",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻 (2017-06-07)\n\n1. 各种Go研究报告 https://github.com/golang/go/wiki/ResearchPapers\n2. Go内核分析资源汇总 https://github.com/emluque/golang-internals-resources\n3. Linux bridge如何工作 http://goyalankit.com/blog/linux-bridge\n4. 微服务入门 \n    1. https://blogs.oracle.com/developers/getting-started-with-microservices-part-one\n    2. https://blogs.oracle.com/developers/getting-started-with-microservices-part-2\n    3. https://blogs.oracle.com/developers/getting-started-with-microservices-part-three\n5. HTTPS 性能优化学习 http://yangxikun.com/https/2017/05/13/https-optimize.html\n\n活动预告：\n1. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n2. 深圳Gopher meetup 报名地址：http://www.bagevent.com/event/575820\n3. 北京Gopher meetup 报名地址：http://www.bagevent.com/event/569069\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-07)</p>\n\n<ol>\n<li>各种 Go 研究报告 <a href=\"https://github.com/golang/go/wiki/ResearchPapers\" rel=\"nofollow\" target=\"_blank\">https://github.com/golang/go/wiki/ResearchPapers</a>\n</li>\n<li>Go 内核分析资源汇总 <a href=\"https://github.com/emluque/golang-internals-resources\" rel=\"nofollow\" target=\"_blank\">https://github.com/emluque/golang-internals-resources</a>\n</li>\n<li>Linux bridge 如何工作 <a href=\"http://goyalankit.com/blog/linux-bridge\" rel=\"nofollow\" target=\"_blank\">http://goyalankit.com/blog/linux-bridge</a>\n</li>\n<li>微服务入门 \n\n<ol>\n<li><a href=\"https://blogs.oracle.com/developers/getting-started-with-microservices-part-one\" rel=\"nofollow\" target=\"_blank\">https://blogs.oracle.com/developers/getting-started-with-microservices-part-one</a></li>\n<li><a href=\"https://blogs.oracle.com/developers/getting-started-with-microservices-part-2\" rel=\"nofollow\" target=\"_blank\">https://blogs.oracle.com/developers/getting-started-with-microservices-part-2</a></li>\n<li><a href=\"https://blogs.oracle.com/developers/getting-started-with-microservices-part-three\" rel=\"nofollow\" target=\"_blank\">https://blogs.oracle.com/developers/getting-started-with-microservices-part-three</a></li>\n</ol>\n</li>\n<li>HTTPS 性能优化学习 <a href=\"http://yangxikun.com/https/2017/05/13/https-optimize.html\" rel=\"nofollow\" target=\"_blank\">http://yangxikun.com/https/2017/05/13/https-optimize.html</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n<li>深圳 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n<li>北京 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569069\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569069</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 575,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 838,
    "title": "[北京-滴滴招聘]运维架构师&amp;云平台产品经理",
    "created_at": "2017-06-07 12:42:09",
    "updated_at": "2017-06-07 14:02:44",
    "replied_at": "2017-06-07 14:02:44",
    "replies_count": 1,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 1416,
    "last_reply_user_login": "taowen",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1166,
    "user": "{\"id\": 1166, \"name\": \"laiwei\", \"login\": \"laiwei\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "以下职位，均属于滴滴基础平台部(也就是章文嵩所带领的团队)，在滴滴，我们尊重每个人的发展，「把个人的成长当做最重要的事情」是滴滴工程师文化最重要的体现之一。对于高水平的人才，滴滴提供超越行业的待遇，包括现金和期权激励。\n\n**联系方式:**\n1. 邮箱 laiwei (at) didichuxing.com\n2. 微信 hellolaiwei （请注明 运维招聘）\n\n### 滴滴私有云产品经理\n\n滴滴私有云，旨在构建全公司统一的云计算平台，实现统一资源调度，并提供一站式的周边服务，提升资源利用率、资源管理效率和运维研发效率。\n1. 该项目已经持续迭代了1年时间，到年底预计会有2000台物理机规模的业务接入；\n2. 诚招一位产品经理，从产品全局来推进私有云平台的发展；\n\n**岗位要求:**\n1. 有大规模面向企业用户的产品设计和主导的经验；\n2. 有云服务、云平台建设相关的工作经历；\n3. 有责任感，具备创新精神，用户价值导向，乐观，抗压；\n\n### 运维架构师\n**职位描述：**\n\n1. 负责滴滴线上业务的日常运维、优化、容量规划等工作，保障线上业务安全、稳定、高效地运行。\n2. 负责公司运维基础设施开发和运行维护，包括监控系统，运维平台，自动化部署系统，弹性云平台等。\n3. 研究和探索运维新技术和方向，持续提高运维效率，降低运营成本，保障业务稳定。\n \n**职位要求：**\n\n1. 计算机相关专业\n2. 熟悉操作系统原理、计算机网络等，基础知识扎实\n3. 熟悉Linux系统操作原理，了解Linux的安全机制，在Linux平台有深度使用、开发经验\n4. 熟悉各层网络协议，掌握其中安全缺陷和规避方法，有网络编程经验。\n5. 熟悉Linux系统下C语言或者Python，Golang，Java，Perl，Php，Shell等编程语言中至少一种\n6. 工作细致、严谨，责任心强，有良好的时间观念，并富有工作热情，具有优秀的分析问题和解决问题能力，有流程优化，技术创新意识，并主动通过技术手段提升运维效率，降低运营成本，保障服务稳定性。\n\n### 分布式存储运维研发\n\n**岗位职责：**\n\n- 负责公司内Ceph 核⼼模块的开发，挑战大规模，高并发分布式存储；\n- 通过⼤量Ceph使⽤和实践案例，归纳总结Ceph目前的不⾜，并对其可⽤性、可靠性、性能方⾯进⾏持续改进；\n- 持续跟进，参与社区高级特性，BlueStore，Cache tierv2，ErasureCode，Compression，Checksum，Deduplication，Encryption等研发工作；\n- 参与Ceph整体产品架构设计；\n\n**岗位要求：**\n- 熟悉linux环境开发，能够熟练使用linux中常见调试及分析工具，如：gdb，iostat，blktrace等；\n- 精通C/C++编程语言，熟悉面向对象开发设计模式；\n- 熟悉Ceph整体设计架构，并有开源项⽬开发经验者优先；\n- 具有较强的抗压及团队协作能⼒；\n- 具有出色的快速学习能⼒与问题钻研能⼒；",
    "body_html": "<p>以下职位，均属于滴滴基础平台部 (也就是章文嵩所带领的团队)，在滴滴，我们尊重每个人的发展，「把个人的成长当做最重要的事情」是滴滴工程师文化最重要的体现之一。对于高水平的人才，滴滴提供超越行业的待遇，包括现金和期权激励。</p>\n\n<p><strong>联系方式:</strong></p>\n\n<ol>\n<li>邮箱 laiwei (at) didichuxing.com</li>\n<li>微信 hellolaiwei（请注明 运维招聘）</li>\n</ol>\n<h3 id=\"滴滴私有云产品经理\">滴滴私有云产品经理</h3>\n<p>滴滴私有云，旨在构建全公司统一的云计算平台，实现统一资源调度，并提供一站式的周边服务，提升资源利用率、资源管理效率和运维研发效率。</p>\n\n<ol>\n<li>该项目已经持续迭代了 1 年时间，到年底预计会有 2000 台物理机规模的业务接入；</li>\n<li>诚招一位产品经理，从产品全局来推进私有云平台的发展；</li>\n</ol>\n\n<p><strong>岗位要求:</strong></p>\n\n<ol>\n<li>有大规模面向企业用户的产品设计和主导的经验；</li>\n<li>有云服务、云平台建设相关的工作经历；</li>\n<li>有责任感，具备创新精神，用户价值导向，乐观，抗压；</li>\n</ol>\n<h3 id=\"运维架构师\">运维架构师</h3>\n<p><strong>职位描述：</strong></p>\n\n<ol>\n<li>负责滴滴线上业务的日常运维、优化、容量规划等工作，保障线上业务安全、稳定、高效地运行。</li>\n<li>负责公司运维基础设施开发和运行维护，包括监控系统，运维平台，自动化部署系统，弹性云平台等。</li>\n<li>研究和探索运维新技术和方向，持续提高运维效率，降低运营成本，保障业务稳定。</li>\n</ol>\n\n<p><strong>职位要求：</strong></p>\n\n<ol>\n<li>计算机相关专业</li>\n<li>熟悉操作系统原理、计算机网络等，基础知识扎实</li>\n<li>熟悉 Linux 系统操作原理，了解 Linux 的安全机制，在 Linux 平台有深度使用、开发经验</li>\n<li>熟悉各层网络协议，掌握其中安全缺陷和规避方法，有网络编程经验。</li>\n<li>熟悉 Linux 系统下 C 语言或者 Python，Golang，Java，Perl，Php，Shell 等编程语言中至少一种</li>\n<li>工作细致、严谨，责任心强，有良好的时间观念，并富有工作热情，具有优秀的分析问题和解决问题能力，有流程优化，技术创新意识，并主动通过技术手段提升运维效率，降低运营成本，保障服务稳定性。</li>\n</ol>\n<h3 id=\"分布式存储运维研发\">分布式存储运维研发</h3>\n<p><strong>岗位职责：</strong></p>\n\n<ul>\n<li>负责公司内 Ceph 核⼼模块的开发，挑战大规模，高并发分布式存储；</li>\n<li>通过⼤量 Ceph 使⽤和实践案例，归纳总结 Ceph 目前的不⾜，并对其可⽤性、可靠性、性能方⾯进⾏持续改进；</li>\n<li>持续跟进，参与社区高级特性，BlueStore，Cache tierv2，ErasureCode，Compression，Checksum，Deduplication，Encryption 等研发工作；</li>\n<li>参与 Ceph 整体产品架构设计；</li>\n</ul>\n\n<p><strong>岗位要求：</strong></p>\n\n<ul>\n<li>熟悉 linux 环境开发，能够熟练使用 linux 中常见调试及分析工具，如：gdb，iostat，blktrace 等；</li>\n<li>精通 C/C++ 编程语言，熟悉面向对象开发设计模式；</li>\n<li>熟悉 Ceph 整体设计架构，并有开源项⽬开发经验者优先；</li>\n<li>具有较强的抗压及团队协作能⼒；</li>\n<li>具有出色的快速学习能⼒与问题钻研能⼒；</li>\n</ul>",
    "hits": 625,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 839,
    "title": "channel传输指针变量问题",
    "created_at": "2017-06-07 16:56:20",
    "updated_at": "2017-06-08 20:15:29",
    "replied_at": "2017-06-08 20:15:29",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2046,
    "last_reply_user_login": "beyondkmp",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2046,
    "user": "{\"id\": 2046, \"name\": \"beyondkmp\", \"login\": \"beyondkmp\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;time&quot;\n)\n\nfunc main() {\n\n\tc := make(chan *string)\n\tgo func() {\n\t\tline1 := &quot;test is here&quot;\n\t\tc &lt;- &amp;line1\n\t}()\n\ttime.Sleep(5 * time.Second)\n\tv := &lt;-c\n\tfmt.Println(v, *v)\n}\n```\n在一个goroutine里面直接往channel里面传输入指针变量，在这个goroutine结束后，line1变量还会存在吗？ 这个是不是和闭包的用法一样？",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"o\">*</span><span class=\"kt\">string</span><span class=\"p\">)</span>\n    <span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"n\">line1</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">test</span> <span class=\"n\">is</span> <span class=\"n\">here</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n        <span class=\"n\">c</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">line1</span>\n    <span class=\"p\">}()</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"m\">5</span> <span class=\"o\">*</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"p\">)</span>\n    <span class=\"n\">v</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">c</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">v</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>在一个 goroutine 里面直接往 channel 里面传输入指针变量，在这个 goroutine 结束后，line1 变量还会存在吗？ 这个是不是和闭包的用法一样？</p>",
    "hits": 509,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 840,
    "title": "sync.WaitGroup疑惑，新手求助",
    "created_at": "2017-06-07 17:32:46",
    "updated_at": "2017-07-28 13:33:16",
    "replied_at": "2017-07-28 13:33:16",
    "replies_count": 8,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2395,
    "last_reply_user_login": "Mr_Wings",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2048,
    "user": "{\"id\": 2048, \"name\": \"无节操\", \"login\": \"294081978\", \"avatar\": \"https://gocn.vip/system/letter_avatars/2.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\npackage main\n\nimport(\n\t&quot;sync&quot;\n\t&quot;fmt&quot;\n)\n\nfunc main() {\n\tvar w sync.WaitGroup\n\tvar cnt = 0\n\tfor i := 0; i != 100; i++{\n\t\tw.Add(1)\n\t\tgo func(i int){\n\t\t\tdefer w.Done()\n\t\t\tcnt++\n\t\t}(i)\n\t}\n\tw.Wait()\n\tfmt.Println(cnt)\n}\n```\n上面代码，多运行几次，输出的情况不一定是100，请问下这是啥情况？",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span><span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">sync</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">var</span> <span class=\"n\">w</span> <span class=\"n\">sync</span><span class=\"o\">.</span><span class=\"n\">WaitGroup</span>\n    <span class=\"k\">var</span> <span class=\"n\">cnt</span> <span class=\"o\">=</span> <span class=\"m\">0</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">!=</span> <span class=\"m\">100</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">{</span>\n        <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"kt\">int</span><span class=\"p\">){</span>\n            <span class=\"k\">defer</span> <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">Done</span><span class=\"p\">()</span>\n            <span class=\"n\">cnt</span><span class=\"o\">++</span>\n        <span class=\"p\">}(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">()</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">cnt</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>上面代码，多运行几次，输出的情况不一定是 100，请问下这是啥情况？</p>",
    "hits": 468,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 841,
    "title": "GoCN每日新闻(2017-06-08)",
    "created_at": "2017-06-08 09:36:40",
    "updated_at": "2017-06-08 09:36:40",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-08)\n\n1. 服务端I/O性能大比拼：Node、PHP、Java和Go（翻译版） http://www.itran.cc/2017/05/17/server-side-io-performance-node-php-java-go/\n2. Go压力测试 https://scene-si.org/2017/06/06/benchmarking-go-programs/\n3. RESTful API设计技巧经验总结 http://geek.csdn.net/news/detail/201132\n4. TiDB技术内部之调度 https://zhuanlan.zhihu.com/p/27275483\n5. 代码审查关注什么：SOLID 原则 http://www.jianshu.com/p/2cd98d697adc\n\n招聘信息：\n1. 【北京】滴滴 运维架构师&amp;云平台产品经理 https://gocn.io/question/838\n\n活动预告：\n1. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n2. 深圳Gopher meetup 报名地址：http://www.bagevent.com/event/575820\n3. 北京Gopher meetup 报名地址：http://www.bagevent.com/event/569069\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-08)</p>\n\n<ol>\n<li>服务端 I/O 性能大比拼：Node、PHP、Java 和 Go（翻译版）<a href=\"http://www.itran.cc/2017/05/17/server-side-io-performance-node-php-java-go/\" rel=\"nofollow\" target=\"_blank\">http://www.itran.cc/2017/05/17/server-side-io-performance-node-php-java-go/</a>\n</li>\n<li>Go 压力测试 <a href=\"https://scene-si.org/2017/06/06/benchmarking-go-programs/\" rel=\"nofollow\" target=\"_blank\">https://scene-si.org/2017/06/06/benchmarking-go-programs/</a>\n</li>\n<li>RESTful API 设计技巧经验总结 <a href=\"http://geek.csdn.net/news/detail/201132\" rel=\"nofollow\" target=\"_blank\">http://geek.csdn.net/news/detail/201132</a>\n</li>\n<li>TiDB 技术内部之调度 <a href=\"https://zhuanlan.zhihu.com/p/27275483\" rel=\"nofollow\" target=\"_blank\">https://zhuanlan.zhihu.com/p/27275483</a>\n</li>\n<li>代码审查关注什么：SOLID 原则 <a href=\"http://www.jianshu.com/p/2cd98d697adc\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/2cd98d697adc</a>\n</li>\n</ol>\n\n<p>招聘信息：</p>\n\n<ol>\n<li>【北京】滴滴 运维架构师&amp;云平台产品经理 <a href=\"https://gocn.io/question/838\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/838</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n<li>深圳 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n<li>北京 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569069\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569069</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 571,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 842,
    "title": "GoCN每日新闻(2017-06-09)",
    "created_at": "2017-06-09 10:16:09",
    "updated_at": "2017-06-09 10:16:09",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-09)\n\n1. 简化nginx负载均衡的工具 loadcat https://www.toptal.com/devops/simplified-nginx-load-balancing-with-loadcat\n2. 微软提供的Go写MSSQL的入门教程 https://www.microsoft.com/en-us/sql-server/developer-get-started/go/mac/\n3. 指针和引用 https://fullstack.network/session-17-pointers-in-go-difference-between-pass-by-pointer-and-pass-by-value-6ba83e4811d5\n4. 暴露metrics包详解 https://orangetux.nl/post/expvar_in_action/\n5. GOLANG空指针崩溃时堆栈消失和解决方案 https://gocn.io/article/351\n\n\n招聘信息：\n1. 【北京】滴滴 运维架构师&amp;云平台产品经理 https://gocn.io/question/838\n\n活动预告：\n1. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n2. 深圳Gopher meetup 报名地址：http://www.bagevent.com/event/575820\n3. 北京Gopher meetup 报名地址：http://www.bagevent.com/event/569069\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-09)</p>\n\n<ol>\n<li>简化 nginx 负载均衡的工具 loadcat <a href=\"https://www.toptal.com/devops/simplified-nginx-load-balancing-with-loadcat\" rel=\"nofollow\" target=\"_blank\">https://www.toptal.com/devops/simplified-nginx-load-balancing-with-loadcat</a>\n</li>\n<li>微软提供的 Go 写 MSSQL 的入门教程 <a href=\"https://www.microsoft.com/en-us/sql-server/developer-get-started/go/mac/\" rel=\"nofollow\" target=\"_blank\">https://www.microsoft.com/en-us/sql-server/developer-get-started/go/mac/</a>\n</li>\n<li>指针和引用 <a href=\"https://fullstack.network/session-17-pointers-in-go-difference-between-pass-by-pointer-and-pass-by-value-6ba83e4811d5\" rel=\"nofollow\" target=\"_blank\">https://fullstack.network/session-17-pointers-in-go-difference-between-pass-by-pointer-and-pass-by-value-6ba83e4811d5</a>\n</li>\n<li>暴露 metrics 包详解 <a href=\"https://orangetux.nl/post/expvar_in_action/\" rel=\"nofollow\" target=\"_blank\">https://orangetux.nl/post/expvar_in_action/</a>\n</li>\n<li>GOLANG 空指针崩溃时堆栈消失和解决方案 <a href=\"https://gocn.io/article/351\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/351</a>\n</li>\n</ol>\n\n<p>招聘信息：</p>\n\n<ol>\n<li>【北京】滴滴 运维架构师&amp;云平台产品经理 <a href=\"https://gocn.io/question/838\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/838</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n<li>深圳 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n<li>北京 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569069\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569069</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 498,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 843,
    "title": "6.9 了",
    "created_at": "2017-06-09 14:00:20",
    "updated_at": "2017-06-09 17:10:50",
    "replied_at": "2017-06-09 17:10:50",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2057,
    "last_reply_user_login": "mrbdmm",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1902,
    "user": "{\"id\": 1902, \"name\": \"hoosin\", \"login\": \"hoosin\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "6月9日了，依旧还是单身，新年许下的愿望悄悄结束了，很彷徨，也不知道该干什么，是时候学 Golang 了，希望在这个大开源社区里我能找到属于自己的平静。",
    "body_html": "<p>6 月 9 日了，依旧还是单身，新年许下的愿望悄悄结束了，很彷徨，也不知道该干什么，是时候学 Golang 了，希望在这个大开源社区里我能找到属于自己的平静。</p>",
    "hits": 364,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 844,
    "title": " 我想从ResponseWriter接口中取出数据",
    "created_at": "2017-06-09 17:02:31",
    "updated_at": "2017-06-10 13:12:08",
    "replied_at": "2017-06-10 13:12:08",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1337,
    "last_reply_user_login": "caibirdme",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1005,
    "user": "{\"id\": 1005, \"name\": \"insisthzr\", \"login\": \"insisthzr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/i.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我的想法是如果content-type=json\n断言 ResponseWriter的类型\n比如说它是[]byte, buffer e.g. ...\n然后取出数据\n现在我不知道这个接口 ResponseWriter会是什么类型\n不知道能不能这么做",
    "body_html": "<p>我的想法是如果 content-type=json\n断言 ResponseWriter 的类型\n比如说它是 [] byte, buffer e.g. ...\n然后取出数据\n现在我不知道这个接口 ResponseWriter 会是什么类型\n不知道能不能这么做</p>",
    "hits": 363,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 845,
    "title": "科技 招募 售前客户代表",
    "created_at": "2017-06-09 17:19:35",
    "updated_at": "2017-06-09 17:19:35",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2057,
    "user": "{\"id\": 2057, \"name\": \"mrbdmm\", \"login\": \"mrbdmm\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "...",
    "body_html": "<p>...</p>",
    "hits": 259,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 846,
    "title": "golang import前加两个斜杠是啥意思？",
    "created_at": "2017-06-09 19:16:01",
    "updated_at": "2019-05-20 17:01:22",
    "replied_at": "2019-05-20 17:01:22",
    "replies_count": 10,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 7596,
    "last_reply_user_login": "fwhezfwhez",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2053,
    "user": "{\"id\": 2053, \"name\": \"gaoxu387\", \"login\": \"gaoxu387\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "package main\n\nimport (\n\t// &quot;lib/redis&quot;\n)\n\n请问下//代表的啥含义？",
    "body_html": "<p>package main</p>\n\n<p>import (\n    // \"lib/redis\"\n)</p>\n\n<p>请问下//代表的啥含义？</p>",
    "hits": 551,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 847,
    "title": "GoCN每日新闻(2017-06-10)",
    "created_at": "2017-06-10 10:50:17",
    "updated_at": "2017-06-10 10:50:17",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-10)\n\n1. Dep初探 http://tonybai.com/2017/06/08/first-glimpse-of-dep/\n2. 持续交付武器Spinnaker https://mp.weixin.qq.com/s/0SER6Btz0g-6GF6wiUF8mQ\n3. Go 开发理念 http://peter.bourgon.org/blog/2017/06/09/theory-of-modern-go.html\n4. Golang如何使用mock做测试 https://gocn.io/article/353\n5. gogland编辑器支持远程调试 https://blog.jetbrains.com/go/2017/06/09/gogland-eap-9-is-available/\n\n\n招聘信息：\n1. 【上海】UCloud https://gocn.io/article/352\n2. 【北京】滴滴  https://gocn.io/question/838\n3. 【杭州】小卡 https://gocn.io/question/845\n\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-10)</p>\n\n<ol>\n<li>Dep 初探 <a href=\"http://tonybai.com/2017/06/08/first-glimpse-of-dep/\" rel=\"nofollow\" target=\"_blank\">http://tonybai.com/2017/06/08/first-glimpse-of-dep/</a>\n</li>\n<li>持续交付武器 Spinnaker <a href=\"https://mp.weixin.qq.com/s/0SER6Btz0g-6GF6wiUF8mQ\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/0SER6Btz0g-6GF6wiUF8mQ</a>\n</li>\n<li>Go 开发理念 <a href=\"http://peter.bourgon.org/blog/2017/06/09/theory-of-modern-go.html\" rel=\"nofollow\" target=\"_blank\">http://peter.bourgon.org/blog/2017/06/09/theory-of-modern-go.html</a>\n</li>\n<li>Golang 如何使用 mock 做测试 <a href=\"https://gocn.io/article/353\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/353</a>\n</li>\n<li>gogland 编辑器支持远程调试 <a href=\"https://blog.jetbrains.com/go/2017/06/09/gogland-eap-9-is-available/\" rel=\"nofollow\" target=\"_blank\">https://blog.jetbrains.com/go/2017/06/09/gogland-eap-9-is-available/</a>\n</li>\n</ol>\n\n<p>招聘信息：</p>\n\n<ol>\n<li>【上海】UCloud <a href=\"https://gocn.io/article/352\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/352</a>\n</li>\n<li>【北京】滴滴  <a href=\"https://gocn.io/question/838\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/838</a>\n</li>\n<li>【杭州】小卡 <a href=\"https://gocn.io/question/845\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/845</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 552,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 848,
    "title": "beego访问redis",
    "created_at": "2017-06-10 17:48:01",
    "updated_at": "2021-01-16 21:40:47",
    "replied_at": "2017-06-12 16:10:09",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 2062,
    "last_reply_user_login": "yuyifeichina",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2062,
    "user": "{\"id\": 2062, \"name\": \"yuyifeichina\", \"login\": \"yuyifeichina\", \"avatar\": \"https://gocn.vip/system/letter_avatars/y.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "  用beego开发一个访问REDIS的小服务，采用TCP形式，协议采用PROTOBUF，当每一个请求消息过来时，经过一系统的处理，最后发一个协程的模式去REDIS取数据，然后返回。采用协程的模式，请求的并发量是可以做的很大，但是REDIS采用连接池的模式，当一秒发几K的请求时，REDIS的连接池很快就耗光了。也就是说用GO来开发，数据入口的并发量是大了，采用大量的协程，但是到REDIS这一层却卡住了。\n   请教一下，各位你们在这种情况下是如何去做的，并发量大时去取REDIS数据时，多谢！",
    "body_html": "<p>用 beego 开发一个访问 REDIS 的小服务，采用 TCP 形式，协议采用 PROTOBUF，当每一个请求消息过来时，经过一系统的处理，最后发一个协程的模式去 REDIS 取数据，然后返回。采用协程的模式，请求的并发量是可以做的很大，但是 REDIS 采用连接池的模式，当一秒发几 K 的请求时，REDIS 的连接池很快就耗光了。也就是说用 GO 来开发，数据入口的并发量是大了，采用大量的协程，但是到 REDIS 这一层却卡住了。\n   请教一下，各位你们在这种情况下是如何去做的，并发量大时去取 REDIS 数据时，多谢！</p>",
    "hits": 535,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 850,
    "title": "GoCN每日新闻(2017-06-11)",
    "created_at": "2017-06-11 11:16:00",
    "updated_at": "2017-06-11 11:16:00",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-11)\n1. redmonk Go 排名15 http://redmonk.com/sogrady/2017/06/08/language-rankings-6-17/\n2. Go如何通过systemd部署 https://tailordev.fr/blog/2017/06/09/deploying-a-go-app-with-systemd-socket-activation/\n3. Go最佳实战 http://peter.bourgon.org/go-best-practices-2016/\n4. GRPC最佳实战 https://www.youtube.com/watch?v=Z_yD7YPL2oE\n5. redis集群实现原理探究 http://tech.youzan.com/redisji-qun-shi-xian-yuan-li-tan-tao/\n\n招聘信息：\n1. 【北京】滴滴 运维架构师&amp;云平台产品经理 https://gocn.io/question/838\n\n活动预告：\n1. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n2. 深圳Gopher meetup 报名地址：http://www.bagevent.com/event/575820\n3. 北京Gopher meetup 报名地址：http://www.bagevent.com/event/569069\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-11)</p>\n\n<ol>\n<li>redmonk Go 排名 15 <a href=\"http://redmonk.com/sogrady/2017/06/08/language-rankings-6-17/\" rel=\"nofollow\" target=\"_blank\">http://redmonk.com/sogrady/2017/06/08/language-rankings-6-17/</a>\n</li>\n<li>Go 如何通过 systemd 部署 <a href=\"https://tailordev.fr/blog/2017/06/09/deploying-a-go-app-with-systemd-socket-activation/\" rel=\"nofollow\" target=\"_blank\">https://tailordev.fr/blog/2017/06/09/deploying-a-go-app-with-systemd-socket-activation/</a>\n</li>\n<li>Go 最佳实战 <a href=\"http://peter.bourgon.org/go-best-practices-2016/\" rel=\"nofollow\" target=\"_blank\">http://peter.bourgon.org/go-best-practices-2016/</a>\n</li>\n<li>GRPC 最佳实战<span class=\"embed-responsive embed-responsive-16by9\"><iframe class=\"embed-responsive-item\" src=\"//www.youtube.com/embed/Z_yD7YPL2oE\" allowfullscreen=\"\"></iframe></span>\n</li>\n<li>redis 集群实现原理探究 <a href=\"http://tech.youzan.com/redisji-qun-shi-xian-yuan-li-tan-tao/\" rel=\"nofollow\" target=\"_blank\">http://tech.youzan.com/redisji-qun-shi-xian-yuan-li-tan-tao/</a>\n</li>\n</ol>\n\n<p>招聘信息：</p>\n\n<ol>\n<li>【北京】滴滴 运维架构师&amp;云平台产品经理 <a href=\"https://gocn.io/question/838\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/838</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n<li>深圳 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n<li>北京 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569069\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569069</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 493,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 851,
    "title": "Nginx路由到不同端口的beego项目 地址解析失败",
    "created_at": "2017-06-11 17:45:19",
    "updated_at": "2021-01-16 21:40:48",
    "replied_at": "2017-06-11 18:13:11",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 315,
    "last_reply_user_login": "Akka",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 315,
    "user": "{\"id\": 315, \"name\": \"Akka\", \"login\": \"Akka\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Nginx的配置\n使用https  443 端口\n~~~\nlocation /v1 {\n\t\t\t\tproxy_pass http://localhost:8080;\n\t\t\t\tproxy_set_header   Host    $host;\n\t\t\t\tproxy_set_header   X-Real-IP   $remote_addr;\n\t\t\t\tproxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\t}\n\t\t\tlocation /v2 {\n                                proxy_pass http://localhost:8081;\n                                proxy_set_header   Host    $host;\n                                proxy_set_header   X-Real-IP   $remote_addr;\n                                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\n                        }\n~~~\nNewNamespace 的配置\n一个项目配置v1 另一个配置v2，目的是老板app访问v1  升级后的访问v2\nns := beego.NewNamespace(&quot;/v2&quot;,\n但是项目启动之后访问v1正常访问v2就提示解析地址失败\n\n求大神指点\n邮箱:cmdgjw@hotmail.com",
    "body_html": "<p>Nginx 的配置\n使用 https  443 端口</p>\n <pre class=\"highlight plaintext\"><code>location /v1 {\n                proxy_pass http://localhost:8080;\n                proxy_set_header   Host    $host;\n                proxy_set_header   X-Real-IP   $remote_addr;\n                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\n            }\n            location /v2 {\n                                proxy_pass http://localhost:8081;\n                                proxy_set_header   Host    $host;\n                                proxy_set_header   X-Real-IP   $remote_addr;\n                                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\n                        }\n</code></pre> \n<p>NewNamespace 的配置\n一个项目配置 v1 另一个配置 v2，目的是老板 app 访问 v1  升级后的访问 v2\nns := beego.NewNamespace(\"/v2\",\n但是项目启动之后访问 v1 正常访问 v2 就提示解析地址失败</p>\n\n<p>求大神指点\n邮箱:cmdgjw@hotmail.com</p>",
    "hits": 436,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 852,
    "title": "GoCN每日新闻(2017-06-12)",
    "created_at": "2017-06-12 10:25:53",
    "updated_at": "2017-06-12 10:25:53",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-12)\n1. 一致性hash库 https://github.com/lafikl/consistent\n2. 如何设计包级别的变量 https://dave.cheney.net/2017/06/11/go-without-package-scoped-variables\n3. 深入理解Go的interface http://mp.weixin.qq.com/s/CnMWXU4CthoSWp4jtymjiQ\n4. Go逃逸分析 https://gocn.io/article/355\n5. 理解Go的nil http://sanyuesha.com/2017/06/11/go-nil/\n\n编辑：傅小黑 &amp; Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-12)</p>\n\n<ol>\n<li>一致性 hash 库 <a href=\"https://github.com/lafikl/consistent\" rel=\"nofollow\" target=\"_blank\">https://github.com/lafikl/consistent</a>\n</li>\n<li>如何设计包级别的变量 <a href=\"https://dave.cheney.net/2017/06/11/go-without-package-scoped-variables\" rel=\"nofollow\" target=\"_blank\">https://dave.cheney.net/2017/06/11/go-without-package-scoped-variables</a>\n</li>\n<li>深入理解 Go 的 interface <a href=\"http://mp.weixin.qq.com/s/CnMWXU4CthoSWp4jtymjiQ\" rel=\"nofollow\" target=\"_blank\">http://mp.weixin.qq.com/s/CnMWXU4CthoSWp4jtymjiQ</a>\n</li>\n<li>Go 逃逸分析 <a href=\"https://gocn.io/article/355\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/355</a>\n</li>\n<li>理解 Go 的 nil <a href=\"http://sanyuesha.com/2017/06/11/go-nil/\" rel=\"nofollow\" target=\"_blank\">http://sanyuesha.com/2017/06/11/go-nil/</a>\n</li>\n</ol>\n\n<p>编辑：傅小黑 &amp; Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 555,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 853,
    "title": "beego的orm有计划加入mongodb支持吗？",
    "created_at": "2017-06-12 10:59:16",
    "updated_at": "2021-01-16 21:40:50",
    "replied_at": "2017-06-12 14:39:19",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 65,
    "user": "{\"id\": 65, \"name\": \"朋也\", \"login\": \"1956587218\", \"avatar\": \"https://gocn.vip/system/letter_avatars/1.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "rt",
    "body_html": "<p>rt</p>",
    "hits": 274,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 854,
    "title": "教程go template代码不能运行的问题",
    "created_at": "2017-06-12 14:23:10",
    "updated_at": "2017-06-13 10:56:56",
    "replied_at": "2017-06-13 10:56:56",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2044,
    "last_reply_user_login": "silenceshell",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2072,
    "user": "{\"id\": 2072, \"name\": \"alan\", \"login\": \"alan\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "教程上面的\nhttps://astaxie.gitbooks.io/build-web-application-with-golang/en/07.4.html\n\n···\npackage main\n\nimport (\n    &quot;fmt&quot;\n    &quot;os&quot;\n    &quot;io/ioutil&quot;\n    &quot;text/template&quot;\n)\n\nvar templates *template.Template\n\nfunc main() {\n    var allFiles []string\n    files, err := ioutil.ReadDir(&quot;./templates&quot;)\n    if err != nil {\n        fmt.Println(err)\n    }\n    for _, file := range files {\n        filename := file.Name()\n        if strings.HasSuffix(filename, &quot;.tmpl&quot;) {\n            allFiles = append(allFiles, &quot;./templates/&quot;+filename)\n        }\n    }\n\n    templates, err = template.ParseFiles(allFiles...) //parses all .tmpl files in the 'templates' folder\n\n    s1, _ := templates.LookUp(&quot;header.tmpl&quot;)\n    s1.ExecuteTemplate(os.Stdout, &quot;header&quot;, nil)\n    fmt.Println()\n    s2, _ := templates.LookUp(&quot;content.tmpl&quot;)\n    s2.ExecuteTemplate(os.Stdout, &quot;content&quot;, nil)\n    fmt.Println()\n    s3, _ := templates.LookUp(&quot;footer.tmpl&quot;)\n    s3.ExecuteTemplate(os.Stdout, &quot;footer&quot;, nil)\n    fmt.Println()\n    s3.Execute(os.Stdout, nil)\n}\n···\n这里代码无法运行。\n我根据教程上面说的，新建了templates文件夹，里面有三个文件content.tmpl footer.tmpl  header.tmpl.\ngo run 的时候，上面提示：\n···\n./015_template_05.go:30: templates.LookUp undefined (type *template.Template has no field or method LookUp, but does have Lookup)\n./015_template_05.go:33: templates.LookUp undefined (type *template.Template has no field or method LookUp, but does have Lookup)\n./015_template_05.go:36: templates.LookUp undefined (type *template.Template has no field or method LookUp, but does have Lookup)\n···\n就是这三行：\ns1, _ := templates.LookUp(&quot;header.tmpl&quot;)\ns2, _ := templates.LookUp(&quot;content.tmpl&quot;)\ns3, _ := templates.LookUp(&quot;footer.tmpl&quot;)\n请教各位大神这里报错的原因是什么？以及怎么修改？",
    "body_html": "<p>教程上面的\n<a href=\"https://astaxie.gitbooks.io/build-web-application-with-golang/en/07.4.html\" rel=\"nofollow\" target=\"_blank\">https://astaxie.gitbooks.io/build-web-application-with-golang/en/07.4.html</a></p>\n\n<p>···\npackage main</p>\n\n<p>import (\n    \"fmt\"\n    \"os\"\n    \"io/ioutil\"\n    \"text/template\"\n)</p>\n\n<p>var templates *template.Template</p>\n\n<p>func main() {\n    var allFiles [] string\n    files, err := ioutil.ReadDir(\"./templates\")\n    if err != nil {\n        fmt.Println(err)\n    }\n    for _, file := range files {\n        filename := file.Name()\n        if strings.HasSuffix(filename, \".tmpl\") {\n            allFiles = append(allFiles, \"./templates/\"+filename)\n        }\n    }</p>\n\n<p>templates, err = template.ParseFiles(allFiles...) //parses all .tmpl files in the 'templates' folder</p>\n\n<p>s1, _ := templates.LookUp(\"header.tmpl\")\n    s1.ExecuteTemplate(os.Stdout, \"header\", nil)\n    fmt.Println()\n    s2, _ := templates.LookUp(\"content.tmpl\")\n    s2.ExecuteTemplate(os.Stdout, \"content\", nil)\n    fmt.Println()\n    s3, _ := templates.LookUp(\"footer.tmpl\")\n    s3.ExecuteTemplate(os.Stdout, \"footer\", nil)\n    fmt.Println()\n    s3.Execute(os.Stdout, nil)\n}\n···\n这里代码无法运行。\n我根据教程上面说的，新建了 templates 文件夹，里面有三个文件 content.tmpl footer.tmpl  header.tmpl.\ngo run 的时候，上面提示：\n···\n./015_template_05.go:30: templates.LookUp undefined (type *template.Template has no field or method LookUp, but does have Lookup)\n./015_template_05.go:33: templates.LookUp undefined (type *template.Template has no field or method LookUp, but does have Lookup)\n./015_template_05.go:36: templates.LookUp undefined (type *template.Template has no field or method LookUp, but does have Lookup)\n···\n就是这三行：\ns1, _ := templates.LookUp(\"header.tmpl\")\ns2, _ := templates.LookUp(\"content.tmpl\")\ns3, _ := templates.LookUp(\"footer.tmpl\")\n请教各位大神这里报错的原因是什么？以及怎么修改？</p>",
    "hits": 338,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 855,
    "title": "golang的gc消耗的cpu是系统态还是用户态？",
    "created_at": "2017-06-12 15:17:29",
    "updated_at": "2017-06-13 10:28:04",
    "replied_at": "2017-06-13 10:27:32",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2012,
    "last_reply_user_login": "plain",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1987,
    "user": "{\"id\": 1987, \"name\": \"liudapeng\", \"login\": \"liudapeng\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "golang的gc消耗的cpu是系统态还是用户态？\n新手。遇到gc的问题。",
    "body_html": "<p>golang 的 gc 消耗的 cpu 是系统态还是用户态？\n新手。遇到 gc 的问题。</p>",
    "hits": 379,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 856,
    "title": "golang 循环中的闭包问题",
    "created_at": "2017-06-12 16:45:52",
    "updated_at": "2017-06-13 14:39:17",
    "replied_at": "2017-06-13 14:39:17",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2075,
    "last_reply_user_login": "changwenlong",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2058,
    "user": "{\"id\": 2058, \"name\": \"hechen\", \"login\": \"hechen\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": " ## update 解释:\n \n 首先原始问题涉及到了两个golang的特性, 下面是一段 spec 里面关于go statments的解释:\n&gt;  The function value and parameters are evaluated as usual in the calling goroutine, but unlike with a regular call, program execution does not wait for the invoked function to complete.\n\nhttps://golang.org/ref/spec#Go_statements\n\n根据上面的解释，当传递给go 关键字的是一个 expression 是， golang首先会 evaluate 这个expression，也就是说 go v.print() 中的v在go routine启动之前就已经传入了 print 中, 所以对于 TestClosure和TestClosure1中的v都是这种情况,但为什么两个出现的结果不同呢?\n\n这里就要说到第二个特性就是:\n\n&gt;The method set of any other type T consists of all methods declared with receiver type T. The method set of the corresponding pointer type \\*T is the set of all methods declared with receiver \\*T or T (that is, it also contains the method set of T)\n\nhttps://golang.org/ref/spec#Method_sets\n\n因为print需要一个 \\*field 作为接受者，所以如果直接在一个 field的 instance 上调用print方法，我们使用 v.print() 实际上golang发现 print方法需要的是一个 pointer receiver的时候，就会把这个调用实际写作 (&amp;v).print(), 所以在TestClosure中 v 就是 \\*field， 所以不需要再去 (&amp;v).print() 这样来调用，而在 TestClosure1中 v 是 field, 所以需要 (&amp;v).print() 这样来调用。\n\n第三个特性是:\n\n上面的range方式实际上就是一个简单的loop 可以写作如下:\n\n```go\nvar v field\nfor i := 0; i &lt; len(data); i++ {\n    v = data[i]\n    go func(p *field) {  // 因为 print方法定义在 *field 上， 所以这里需要的就是 *field\n          p.print()\n    }(&amp;v)\n}\n```\n\n由于 v 在每次循环中都复用，所以传入每个goroutine的地址其实都是一样的，所以对于\n\n```go\ngo func(){\n\tp.print()\n}()\n```\n这种写法而言，即使是 data := []\\*field{} , 传入goroutine中的地址然仍是最后一个元素的地址，不同于 go v.print() 在go routine启动之前就会 evaluate v.print(), 从而把正确的指针传递给 print函数。\n\n https://golang.org/doc/faq#closures_and_goroutines\n \n 感谢: @changwenlong @silenceshell @uguangtian\n \n ## 原始问题\n\n\n这里有段代码：https://play.golang.org/p/cKrC0oy7FP\n\n```go\ntype field struct {\n\tname string\n}\n\nfunc (p *field) print() {\n\tfmt.Println(p.name)\n}\n\nfunc TestClosure() {\n\n\tdata := []*field{{&quot;one&quot;}, {&quot;two&quot;}, {&quot;three&quot;}}\n\n\tfor _, v := range data {\n\t\tgo v.print()\n\t}\n\n\ttime.Sleep(3 * time.Second)\n}\n\nfunc TestClosure1() {\n\n\tdata := []field{{&quot;one&quot;}, {&quot;two&quot;}, {&quot;three&quot;}}\n\n\tfor _, v := range data {\n\t\tgo v.print()\n\t}\n\n\ttime.Sleep(3 * time.Second)\n}\n```\n这两个TestClosure的唯一差别在于data中， 第一个是 \\*field 后一个是field\n\n执行的结果是\nTestClosure 是  one,two,three\nTestClosure 是 three,three,three\n\ngolang对于循环的变量引用是重复使用 v 这个变量的，实际的地址在两个for循环里都是一样的地址，为什么第一个TestClosure中即使v变量是一样的，但等到实际调用print method后对应的v地址在第一个for循环中又发生了变化 从而产生了正确的结果呢？\n\n如果把 go routine 的启动方式变成 \n\n```go\ngo func(){\n\tv.print()\n}()\n```\n\n那么两个方法是一模一样的 大家有啥想法呢",
    "body_html": "<p>## update 解释:</p>\n\n<p>首先原始问题涉及到了两个 golang 的特性, 下面是一段 spec 里面关于 go statments 的解释:\n&gt;  The function value and parameters are evaluated as usual in the calling goroutine, but unlike with a regular call, program execution does not wait for the invoked function to complete.</p>\n\n<p><a href=\"https://golang.org/ref/spec#Go_statements\" rel=\"nofollow\" target=\"_blank\">https://golang.org/ref/spec#Go_statements</a></p>\n\n<p>根据上面的解释，当传递给 go 关键字的是一个 expression 是， golang 首先会 evaluate 这个 expression，也就是说 go v.print() 中的 v 在 go routine 启动之前就已经传入了 print 中, 所以对于 TestClosure 和 TestClosure1 中的 v 都是这种情况,但为什么两个出现的结果不同呢?</p>\n\n<p>这里就要说到第二个特性就是:</p>\n\n<p>&gt;The method set of any other type T consists of all methods declared with receiver type T. The method set of the corresponding pointer type *T is the set of all methods declared with receiver *T or T (that is, it also contains the method set of T)</p>\n\n<p><a href=\"https://golang.org/ref/spec#Method_sets\" rel=\"nofollow\" target=\"_blank\">https://golang.org/ref/spec#Method_sets</a></p>\n\n<p>因为 print 需要一个 *field 作为接受者，所以如果直接在一个 field 的 instance 上调用 print 方法，我们使用 v.print() 实际上 golang 发现 print 方法需要的是一个 pointer receiver 的时候，就会把这个调用实际写作 (&amp;v).print(), 所以在 TestClosure 中 v 就是 *field， 所以不需要再去 (&amp;v).print() 这样来调用，而在 TestClosure1 中 v 是 field, 所以需要 (&amp;v).print() 这样来调用。</p>\n\n<p>第三个特性是:</p>\n\n<p>上面的 range 方式实际上就是一个简单的 loop 可以写作如下:</p>\n <pre class=\"highlight go\"><code><span class=\"k\">var</span> <span class=\"n\">v</span> <span class=\"n\">field</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">);</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n    <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n    <span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"n\">p</span> <span class=\"o\">*</span><span class=\"n\">field</span><span class=\"p\">)</span> <span class=\"p\">{</span>  <span class=\"c\">// 因为 print方法定义在 *field 上， 所以这里需要的就是 *field</span>\n          <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"nb\">print</span><span class=\"p\">()</span>\n    <span class=\"p\">}(</span><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">v</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>由于 v 在每次循环中都复用，所以传入每个 goroutine 的地址其实都是一样的，所以对于</p>\n <pre class=\"highlight go\"><code><span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">(){</span>\n    <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"nb\">print</span><span class=\"p\">()</span>\n<span class=\"p\">}()</span>\n</code></pre> \n<p>这种写法而言，即使是 data := []*field{} , 传入 goroutine 中的地址然仍是最后一个元素的地址，不同于 go v.print() 在 go routine 启动之前就会 evaluate v.print(), 从而把正确的指针传递给 print 函数。</p>\n\n<p><a href=\"https://golang.org/doc/faq#closures_and_goroutines\" rel=\"nofollow\" target=\"_blank\">https://golang.org/doc/faq#closures_and_goroutines</a></p>\n\n<p>感谢: <a href=\"/changwenlong\" class=\"user-mention\" title=\"@changwenlong\"><i>@</i>changwenlong</a> <a href=\"/silenceshell\" class=\"user-mention\" title=\"@silenceshell\"><i>@</i>silenceshell</a> <a href=\"/uguangtian\" class=\"user-mention\" title=\"@uguangtian\"><i>@</i>uguangtian</a></p>\n\n<p>## 原始问题</p>\n\n<p>这里有段代码：<a href=\"https://play.golang.org/p/cKrC0oy7FP\" rel=\"nofollow\" target=\"_blank\">https://play.golang.org/p/cKrC0oy7FP</a></p>\n <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">field</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">name</span> <span class=\"kt\">string</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">p</span> <span class=\"o\">*</span><span class=\"n\">field</span><span class=\"p\">)</span> <span class=\"nb\">print</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">TestClosure</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"n\">data</span> <span class=\"o\">:=</span> <span class=\"p\">[]</span><span class=\"o\">*</span><span class=\"n\">field</span><span class=\"p\">{{</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">one</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;},</span> <span class=\"p\">{</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">two</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;},</span> <span class=\"p\">{</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">three</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}}</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">data</span> <span class=\"p\">{</span>\n        <span class=\"k\">go</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"nb\">print</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"m\">3</span> <span class=\"o\">*</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">TestClosure1</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"n\">data</span> <span class=\"o\">:=</span> <span class=\"p\">[]</span><span class=\"n\">field</span><span class=\"p\">{{</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">one</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;},</span> <span class=\"p\">{</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">two</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;},</span> <span class=\"p\">{</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">three</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}}</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">data</span> <span class=\"p\">{</span>\n        <span class=\"k\">go</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"nb\">print</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"m\">3</span> <span class=\"o\">*</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>这两个 TestClosure 的唯一差别在于 data 中， 第一个是 *field 后一个是 field</p>\n\n<p>执行的结果是\nTestClosure 是  one,two,three\nTestClosure 是 three,three,three</p>\n\n<p>golang 对于循环的变量引用是重复使用 v 这个变量的，实际的地址在两个 for 循环里都是一样的地址，为什么第一个 TestClosure 中即使 v 变量是一样的，但等到实际调用 print method 后对应的 v 地址在第一个 for 循环中又发生了变化 从而产生了正确的结果呢？</p>\n\n<p>如果把 go routine 的启动方式变成 </p>\n <pre class=\"highlight go\"><code><span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">(){</span>\n    <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"nb\">print</span><span class=\"p\">()</span>\n<span class=\"p\">}()</span>\n</code></pre> \n<p>那么两个方法是一模一样的 大家有啥想法呢</p>",
    "hits": 485,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 857,
    "title": "GoCN为什么没有使用beego来搭建呢？",
    "created_at": "2017-06-13 09:55:21",
    "updated_at": "2021-01-20 03:04:33",
    "replied_at": "2019-08-13 18:13:54",
    "replies_count": 10,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 7793,
    "last_reply_user_login": "goalken",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2085,
    "user": "{\"id\": 2085, \"name\": \"AlexaMa\", \"login\": \"AlexaMa\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 689,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 858,
    "title": "GoCN每日新闻(2017-06-13)",
    "created_at": "2017-06-13 10:59:00",
    "updated_at": "2017-06-13 11:18:33",
    "replied_at": "2017-06-13 11:18:33",
    "replies_count": 1,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 1494,
    "last_reply_user_login": "stirlingx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-13)\n\n1. 谨慎使用defer close https://joeshaw.org/dont-defer-close-on-writable-files/\n2. GoGland使用指南 https://www.youtube.com/watch?v=GDHET-k4zz4\n3. Google开源的Go微服务工具集 https://github.com/google/go-microservice-helpers\n4. 如何设计系统的追踪事件格式 https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU/edit?usp=sharing\n5. Go写的操作系统(实验阶段) https://github.com/achilleasa/gopher-os\n\n招聘：\n1. 【北京】Grab https://gocn.io/article/357\n\n活动预告：\n1. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n2. 深圳Gopher meetup 报名地址：http://www.bagevent.com/event/575820\n3. 北京Gopher meetup 报名地址：http://www.bagevent.com/event/569069\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-13)</p>\n\n<ol>\n<li>谨慎使用 defer close <a href=\"https://joeshaw.org/dont-defer-close-on-writable-files/\" rel=\"nofollow\" target=\"_blank\">https://joeshaw.org/dont-defer-close-on-writable-files/</a>\n</li>\n<li>GoGland 使用指南<span class=\"embed-responsive embed-responsive-16by9\"><iframe class=\"embed-responsive-item\" src=\"//www.youtube.com/embed/GDHET-k4zz4\" allowfullscreen=\"\"></iframe></span>\n</li>\n<li>Google 开源的 Go 微服务工具集 <a href=\"https://github.com/google/go-microservice-helpers\" rel=\"nofollow\" target=\"_blank\">https://github.com/google/go-microservice-helpers</a>\n</li>\n<li>如何设计系统的追踪事件格式 <a href=\"https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU/edit?usp=sharing\" rel=\"nofollow\" target=\"_blank\">https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU/edit?usp=sharing</a>\n</li>\n<li>Go 写的操作系统 (实验阶段) <a href=\"https://github.com/achilleasa/gopher-os\" rel=\"nofollow\" target=\"_blank\">https://github.com/achilleasa/gopher-os</a>\n</li>\n</ol>\n\n<p>招聘：</p>\n\n<ol>\n<li>【北京】Grab <a href=\"https://gocn.io/article/357\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/357</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n<li>深圳 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n<li>北京 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569069\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569069</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 599,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 859,
    "title": "[上海]中通快递 招聘 Golang 开发工程师 (12~40k)",
    "created_at": "2017-06-13 12:05:15",
    "updated_at": "2017-07-11 23:15:20",
    "replied_at": "2017-07-11 23:15:19",
    "replies_count": 1,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 209,
    "last_reply_user_login": "cloverstd",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2089,
    "user": "{\"id\": 2089, \"name\": \"u0x01\", \"login\": \"u0x01\", \"avatar\": \"https://gocn.vip/system/letter_avatars/u.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "### 关于我们\n请移步 https://sec.zto.com/hr/ 了解更多（请使用手机访问）\n\n### Profile Required\n会 Linux\n会 Shell\n懂 Golang\n理解分布式架构\n理解服务端渲染\n前后端分离及微服务相关概念\n理解 NOSQL 的相关概念\n熟悉 K-V 型数据库的操作\n掌握至少一门关系型数据库操作\n对处理高并发请求有着相关经验\n\n### 工作地点\n上海青浦／上海江桥\n\n### 发送简历\n可发简历至：security@zto.cn (内推渠道)\n\n### JD &amp; 福利\n要获取详细的岗位描述及薪资待遇福利，可向我们的 HR 咨询。",
    "body_html": "<h3 id=\"关于我们\">关于我们</h3>\n<p>请移步 <a href=\"https://sec.zto.com/hr/\" rel=\"nofollow\" target=\"_blank\">https://sec.zto.com/hr/</a> 了解更多（请使用手机访问）</p>\n<h3 id=\"Profile Required\">Profile Required</h3>\n<p>会 Linux\n会 Shell\n懂 Golang\n理解分布式架构\n理解服务端渲染\n前后端分离及微服务相关概念\n理解 NOSQL 的相关概念\n熟悉 K-V 型数据库的操作\n掌握至少一门关系型数据库操作\n对处理高并发请求有着相关经验</p>\n<h3 id=\"工作地点\">工作地点</h3>\n<p>上海青浦／上海江桥</p>\n<h3 id=\"发送简历\">发送简历</h3>\n<p>可发简历至：security@zto.cn (内推渠道)</p>\n<h3 id=\"JD &amp; 福利\">JD &amp; 福利</h3>\n<p>要获取详细的岗位描述及薪资待遇福利，可向我们的 HR 咨询。</p>",
    "hits": 555,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 860,
    "title": "给大家推荐一款新的编辑神器",
    "created_at": "2017-06-13 16:07:22",
    "updated_at": "2017-06-23 17:33:19",
    "replied_at": "2017-06-23 17:33:19",
    "replies_count": 8,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1867,
    "last_reply_user_login": "winlin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2053,
    "user": "{\"id\": 2053, \"name\": \"gaoxu387\", \"login\": \"gaoxu387\", \"avatar\": \"https://gocn.vip/system/letter_avatars/g.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "之前一直在使用国人开发的`liteide`，用了一段时间也算顺手，但是今天偶尔间发现jetbrains公司竟然在今年特地开发了一款golang的编辑器，今天陆续已经更新了5个版本了，装上后试用就已经爱不释手了，特分享给大家。\n下载地址：https://www.jetbrains.com/go/\n\n![编辑器介绍](https://www.jetbrains.com/go/img/screenshots/go_overview.png &quot;编辑器介绍&quot;)\n\n**分享一些快捷键使用（windows）**\n- `CTRL+E`打开快捷操作框\n- `双击shift`打开智能搜索框：可搜索文件名、类名、包名和最近打开的文件\n- 选中某一个函数后按`CTRL+SHIFT+I`显示这个函数的详细内容\n- 选中某一个IE函数后按`CTRL+P`显示这个函数的参数信息\n- 选中某一个IE函数后按`CTRL+Q`显示这个函数的注释内容\n- `CTRL+F`：文件内搜索\n- `CTRL+SHIFT+F`：全局搜索\n- `SHIFT+CTRL+P`：显示变量类型\n- 快速导航`CTRL+SHIFT+A`：如输入go tools\n- `SHIFT+CTRL+A`：打开快速导航功能命令输入框\n- `CTRL+W`：智能选中\n- `Refactor`：导航有重命名、移动、删除功能，能自动更新引用\n- `File-Setting`：修改颜色主题、查看快捷键、安装新的Plugins\n\n其中智能搜索、快速文档注释、查看Structure、调试功能非常强大好用！",
    "body_html": "<p>之前一直在使用国人开发的<code>liteide</code>，用了一段时间也算顺手，但是今天偶尔间发现 jetbrains 公司竟然在今年特地开发了一款 golang 的编辑器，今天陆续已经更新了 5 个版本了，装上后试用就已经爱不释手了，特分享给大家。\n下载地址：<a href=\"https://www.jetbrains.com/go/\" rel=\"nofollow\" target=\"_blank\">https://www.jetbrains.com/go/</a></p>\n\n<p><img src=\"https://www.jetbrains.com/go/img/screenshots/go_overview.png\" title=\"&quot;编辑器介绍&quot;\" alt=\"编辑器介绍\"></p>\n\n<p><strong>分享一些快捷键使用（windows）</strong></p>\n\n<ul>\n<li>\n<code>CTRL+E</code>打开快捷操作框</li>\n<li>\n<code>双击shift</code>打开智能搜索框：可搜索文件名、类名、包名和最近打开的文件</li>\n<li>选中某一个函数后按<code>CTRL+SHIFT+I</code>显示这个函数的详细内容</li>\n<li>选中某一个 IE 函数后按<code>CTRL+P</code>显示这个函数的参数信息</li>\n<li>选中某一个 IE 函数后按<code>CTRL+Q</code>显示这个函数的注释内容</li>\n<li>\n<code>CTRL+F</code>：文件内搜索</li>\n<li>\n<code>CTRL+SHIFT+F</code>：全局搜索</li>\n<li>\n<code>SHIFT+CTRL+P</code>：显示变量类型</li>\n<li>快速导航<code>CTRL+SHIFT+A</code>：如输入 go tools</li>\n<li>\n<code>SHIFT+CTRL+A</code>：打开快速导航功能命令输入框</li>\n<li>\n<code>CTRL+W</code>：智能选中</li>\n<li>\n<code>Refactor</code>：导航有重命名、移动、删除功能，能自动更新引用</li>\n<li>\n<code>File-Setting</code>：修改颜色主题、查看快捷键、安装新的 Plugins</li>\n</ul>\n\n<p>其中智能搜索、快速文档注释、查看 Structure、调试功能非常强大好用！</p>",
    "hits": 520,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 861,
    "title": "GoCN每日新闻(2017-06-14)",
    "created_at": "2017-06-14 10:58:43",
    "updated_at": "2017-06-14 10:58:43",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-14)\n\n1. Go为什么适合桌面应用 http://tekjoe.com/2017/06/12/why-gloang-is-great-for-portable-apps/\n2. 关于Go包级别的变量和init的一些magic http://ipengineer.net/2017/06/golang-magic-package-level-vars-init/\n3. Go视频教程(适合有一定基础的Gopher)https://www.safaribooksonline.com/library/view/ultimate-go-programming/9780134757476/\n4. C和Go之间的交互 http://www.cnblogs.com/magicsoar/p/7002467.html\n5. 分布式追踪系统 http://zipkin.io/\n\n招聘：\n1. 【上海】中通快递 https://gocn.io/question/859\n\n活动预告：\n1. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n2. 深圳Gopher meetup 报名地址：http://www.bagevent.com/event/575820\n3. 北京Gopher meetup 报名地址：http://www.bagevent.com/event/569069\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-14)</p>\n\n<ol>\n<li>Go 为什么适合桌面应用 <a href=\"http://tekjoe.com/2017/06/12/why-gloang-is-great-for-portable-apps/\" rel=\"nofollow\" target=\"_blank\">http://tekjoe.com/2017/06/12/why-gloang-is-great-for-portable-apps/</a>\n</li>\n<li>关于 Go 包级别的变量和 init 的一些 magic <a href=\"http://ipengineer.net/2017/06/golang-magic-package-level-vars-init/\" rel=\"nofollow\" target=\"_blank\">http://ipengineer.net/2017/06/golang-magic-package-level-vars-init/</a>\n</li>\n<li>Go 视频教程 (适合有一定基础的 Gopher)<a href=\"https://www.safaribooksonline.com/library/view/ultimate-go-programming/9780134757476/\" rel=\"nofollow\" target=\"_blank\">https://www.safaribooksonline.com/library/view/ultimate-go-programming/9780134757476/</a>\n</li>\n<li>C 和 Go 之间的交互 <a href=\"http://www.cnblogs.com/magicsoar/p/7002467.html\" rel=\"nofollow\" target=\"_blank\">http://www.cnblogs.com/magicsoar/p/7002467.html</a>\n</li>\n<li>分布式追踪系统 <a href=\"http://zipkin.io/\" rel=\"nofollow\" target=\"_blank\">http://zipkin.io/</a>\n</li>\n</ol>\n\n<p>招聘：</p>\n\n<ol>\n<li>【上海】中通快递 <a href=\"https://gocn.io/question/859\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/859</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n<li>深圳 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/575820\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/575820</a>\n</li>\n<li>北京 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569069\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569069</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 534,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 862,
    "title": "请高手帮忙看个golang context的问题",
    "created_at": "2017-06-14 12:30:57",
    "updated_at": "2017-06-24 09:32:48",
    "replied_at": "2017-06-24 09:32:48",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1489,
    "last_reply_user_login": "axlrose",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1868,
    "user": "{\"id\": 1868, \"name\": \"xkey\", \"login\": \"xkey\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\npackage main\n\nimport (\n\t&quot;context&quot;\n\t&quot;fmt&quot;\n\t&quot;sync&quot;\n\t&quot;time&quot;\n)\n\ntype CNode struct {\n\tName     string\n\tincoming chan int\n\tch       chan int\n\tctx      context.Context\n\tcancel   context.CancelFunc\n\twg       sync.WaitGroup\n}\n\nfunc NewCNode(ctx context.Context, name string) *CNode {\n\tn := &amp;CNode{\n\t\tName:     name,\n\t\tincoming: make(chan int, 100),\n\t\tch:       make(chan int, 10),\n\t\twg:       sync.WaitGroup{},\n\t}\n\tn.ctx, n.cancel = context.WithCancel(ctx)\n\tgo n.run()\n\n\tfor i := 0; i &lt; 4; i++ {\n\t\tgo n.handler()\n\t}\n\treturn n\n}\n\nfunc (n *CNode) run() {\n\t//defer close(n.incoming)\n\t//defer n.wg.Done()\n\n\tn.wg.Add(1)\n\n\ti := 1\n\tfor {\n\t\ti++\n\t\tselect {\n\t\tdefault:\n\t\tcase &lt;-n.ctx.Done():\n\t\t\tfmt.Println(n.Name, &quot;handler done&quot;, n.ctx.Err())\n\t\t\tn.wg.Done()\n\t\t\treturn\n\t\t}\n\t\tn.incoming &lt;- i\n\t\ttime.Sleep(1 * time.Second)\n\t}\n}\n\nfunc (n *CNode) stop() {\n\tif n.cancel != nil {\n\t\tfmt.Println(&quot;stopnode&quot;)\n\t\tn.cancel()\n\t\tn.cancel = nil\n\t}\n\tn.wg.Wait()\n\n\tclose(n.ch)\n\tclose(n.incoming)\n}\n\nfunc (n *CNode) handler() {\n\t//defer n.wg.Done()\n\n\tn.wg.Add(1)\n\n\tfor {\n\t\t//i := &lt;-n.incoming\n\t\tselect {\n\t\tcase i := &lt;-n.incoming:\n\t\t\tn.ch &lt;- i * 10\n\t\tcase &lt;-n.ctx.Done():\n\t\t\tfmt.Println(n.Name, &quot;handler done2&quot;, n.ctx.Err())\n\t\t\tn.wg.Done()\n\t\t\treturn\n\t\t}\n\n\t\t//fmt.Println(n.Name, i)\n\t}\n}\nfunc main() {\n\n\tn1ctx, n1cancel := context.WithTimeout(context.Background(), 3*time.Second)\n\tdefer n1cancel()\n\n\tn1 := NewCNode(n1ctx, &quot;node1&quot;)\n\ttime.Sleep(2 * time.Second)\n\tn1.stop()\n}\n```\n\n以上代码只要52行的time.Sleep注释掉就会deadlock\n\n===========================================\n\n下午尝试了各种方法，仍然不行，看了golang官网关于context的用法，貌似没有我这样用的，\n发现context和goroutine+channel一起使用，用来控制goroutine的关闭会有问题。\n但从各种关于context的文章，也没有明确指出不能这么用，按照context的使用场景，这样使用也应该是没有问题的。",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">context</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">sync</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">type</span> <span class=\"n\">CNode</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Name</span>     <span class=\"kt\">string</span>\n    <span class=\"n\">incoming</span> <span class=\"k\">chan</span> <span class=\"kt\">int</span>\n    <span class=\"n\">ch</span>       <span class=\"k\">chan</span> <span class=\"kt\">int</span>\n    <span class=\"n\">ctx</span>      <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">Context</span>\n    <span class=\"n\">cancel</span>   <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">CancelFunc</span>\n    <span class=\"n\">wg</span>       <span class=\"n\">sync</span><span class=\"o\">.</span><span class=\"n\">WaitGroup</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">NewCNode</span><span class=\"p\">(</span><span class=\"n\">ctx</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"o\">*</span><span class=\"n\">CNode</span> <span class=\"p\">{</span>\n    <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">CNode</span><span class=\"p\">{</span>\n        <span class=\"n\">Name</span><span class=\"o\">:</span>     <span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"n\">incoming</span><span class=\"o\">:</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">int</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">),</span>\n        <span class=\"n\">ch</span><span class=\"o\">:</span>       <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">int</span><span class=\"p\">,</span> <span class=\"m\">10</span><span class=\"p\">),</span>\n        <span class=\"n\">wg</span><span class=\"o\">:</span>       <span class=\"n\">sync</span><span class=\"o\">.</span><span class=\"n\">WaitGroup</span><span class=\"p\">{},</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">cancel</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">WithCancel</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">)</span>\n    <span class=\"k\">go</span> <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"m\">4</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n        <span class=\"k\">go</span> <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">handler</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">n</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">*</span><span class=\"n\">CNode</span><span class=\"p\">)</span> <span class=\"n\">run</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"c\">//defer close(n.incoming)</span>\n    <span class=\"c\">//defer n.wg.Done()</span>\n\n    <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)</span>\n\n    <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">1</span>\n    <span class=\"k\">for</span> <span class=\"p\">{</span>\n        <span class=\"n\">i</span><span class=\"o\">++</span>\n        <span class=\"k\">select</span> <span class=\"p\">{</span>\n        <span class=\"k\">default</span><span class=\"o\">:</span>\n        <span class=\"k\">case</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">Done</span><span class=\"p\">()</span><span class=\"o\">:</span>\n            <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">handler</span> <span class=\"n\">done</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">Err</span><span class=\"p\">())</span>\n            <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Done</span><span class=\"p\">()</span>\n            <span class=\"k\">return</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">incoming</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"n\">i</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"m\">1</span> <span class=\"o\">*</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">*</span><span class=\"n\">CNode</span><span class=\"p\">)</span> <span class=\"n\">stop</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">cancel</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">stopnode</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">cancel</span><span class=\"p\">()</span>\n        <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">cancel</span> <span class=\"o\">=</span> <span class=\"no\">nil</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">()</span>\n\n    <span class=\"nb\">close</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">ch</span><span class=\"p\">)</span>\n    <span class=\"nb\">close</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">incoming</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">*</span><span class=\"n\">CNode</span><span class=\"p\">)</span> <span class=\"n\">handler</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"c\">//defer n.wg.Done()</span>\n\n    <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"p\">{</span>\n        <span class=\"c\">//i := &amp;lt;-n.incoming</span>\n        <span class=\"k\">select</span> <span class=\"p\">{</span>\n        <span class=\"k\">case</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">incoming</span><span class=\"o\">:</span>\n            <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">ch</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"m\">10</span>\n        <span class=\"k\">case</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">Done</span><span class=\"p\">()</span><span class=\"o\">:</span>\n            <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">handler</span> <span class=\"n\">done2</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">Err</span><span class=\"p\">())</span>\n            <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Done</span><span class=\"p\">()</span>\n            <span class=\"k\">return</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"c\">//fmt.Println(n.Name, i)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"n\">n1ctx</span><span class=\"p\">,</span> <span class=\"n\">n1cancel</span> <span class=\"o\">:=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">WithTimeout</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">Background</span><span class=\"p\">(),</span> <span class=\"m\">3</span><span class=\"o\">*</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"p\">)</span>\n    <span class=\"k\">defer</span> <span class=\"n\">n1cancel</span><span class=\"p\">()</span>\n\n    <span class=\"n\">n1</span> <span class=\"o\">:=</span> <span class=\"n\">NewCNode</span><span class=\"p\">(</span><span class=\"n\">n1ctx</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">node1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"m\">2</span> <span class=\"o\">*</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"p\">)</span>\n    <span class=\"n\">n1</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>以上代码只要 52 行的 time.Sleep 注释掉就会 deadlock</p>\n\n<p>===========================================</p>\n\n<p>下午尝试了各种方法，仍然不行，看了 golang 官网关于 context 的用法，貌似没有我这样用的，\n发现 context 和 goroutine+channel 一起使用，用来控制 goroutine 的关闭会有问题。\n但从各种关于 context 的文章，也没有明确指出不能这么用，按照 context 的使用场景，这样使用也应该是没有问题的。</p>",
    "hits": 672,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 863,
    "title": "Gopher社区的第一件众筹T恤来了",
    "created_at": "2017-06-14 21:49:23",
    "updated_at": "2017-06-29 09:10:55",
    "replied_at": "2017-06-29 09:10:55",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 833,
    "last_reply_user_login": "CodyGuo",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Gopher社区的第一件众筹T恤来了，\n\n每年的Gopher大会我们都会给大家准备T恤，很多人的反馈是不参加大会也要去要一件T恤，这样的风格我们保持了三年了。但是很多人还是觉得一件不够，夏天来了，我们和T社合作一起推出了这款Go社区T恤，这一次我们采用了T社最好的材质的T恤，而且男女款都有，经过我的争取T社同意包邮。包邮价格：60元每件。想要的同学赶紧预定\n\n购买地址：https://www.tshe.com/c/94c4bfc7",
    "body_html": "<p>Gopher 社区的第一件众筹 T 恤来了，</p>\n\n<p>每年的 Gopher 大会我们都会给大家准备 T 恤，很多人的反馈是不参加大会也要去要一件 T 恤，这样的风格我们保持了三年了。但是很多人还是觉得一件不够，夏天来了，我们和 T 社合作一起推出了这款 Go 社区 T 恤，这一次我们采用了 T 社最好的材质的 T 恤，而且男女款都有，经过我的争取 T 社同意包邮。包邮价格：60 元每件。想要的同学赶紧预定</p>\n\n<p>购买地址：<a href=\"https://www.tshe.com/c/94c4bfc7\" rel=\"nofollow\" target=\"_blank\">https://www.tshe.com/c/94c4bfc7</a></p>",
    "hits": 641,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 864,
    "title": "golang有现成的tcp通信框架吗？",
    "created_at": "2017-06-14 22:28:27",
    "updated_at": "2017-06-15 11:00:11",
    "replied_at": "2017-06-15 11:00:11",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1979,
    "last_reply_user_login": "simon",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2006,
    "user": "{\"id\": 2006, \"name\": \"ha666\", \"login\": \"ha666\", \"avatar\": \"https://static.gocn.vip/user/avatar/2006/77d028.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "golang有现成的tcp通信框架吗？",
    "body_html": "<p>golang 有现成的 tcp 通信框架吗？</p>",
    "hits": 433,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 865,
    "title": "GoCN每日新闻(2017-06-15)",
    "created_at": "2017-06-15 08:53:39",
    "updated_at": "2017-06-15 08:53:39",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-15)\n\n1. mgo的session与连接池 https://cardinfolink.github.io/2017/05/17/mgo-session/\n2. CapitalGo 2017 视频列表 https://www.youtube.com/playlist?list=PLeGxIOPLk9EKdl-h_Y-sbLhLoP-ia7CJ5\n3. REST的2.0版本 graphql https://www.sitepoint.com/rest-2-0-graphql/\n4. 最经典的TCP性能问题 http://jm.taobao.org/2017/06/01/20170601/\n5. 微服务就是一把双刃剑 http://www.jianshu.com/p/82ec12651d2d\n\nGo社区众筹T恤：https://www.tshe.com/c/94c4bfc7\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-15)</p>\n\n<ol>\n<li>mgo 的 session 与连接池 <a href=\"https://cardinfolink.github.io/2017/05/17/mgo-session/\" rel=\"nofollow\" target=\"_blank\">https://cardinfolink.github.io/2017/05/17/mgo-session/</a>\n</li>\n<li>CapitalGo 2017 视频列表 <a href=\"https://www.youtube.com/playlist?list=PLeGxIOPLk9EKdl-h_Y-sbLhLoP-ia7CJ5\" rel=\"nofollow\" target=\"_blank\">https://www.youtube.com/playlist?list=PLeGxIOPLk9EKdl-h_Y-sbLhLoP-ia7CJ5</a>\n</li>\n<li>REST 的 2.0 版本 graphql <a href=\"https://www.sitepoint.com/rest-2-0-graphql/\" rel=\"nofollow\" target=\"_blank\">https://www.sitepoint.com/rest-2-0-graphql/</a>\n</li>\n<li>最经典的 TCP 性能问题 <a href=\"http://jm.taobao.org/2017/06/01/20170601/\" rel=\"nofollow\" target=\"_blank\">http://jm.taobao.org/2017/06/01/20170601/</a>\n</li>\n<li>微服务就是一把双刃剑 <a href=\"http://www.jianshu.com/p/82ec12651d2d\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/82ec12651d2d</a>\n</li>\n</ol>\n\n<p>Go 社区众筹 T 恤：<a href=\"https://www.tshe.com/c/94c4bfc7\" rel=\"nofollow\" target=\"_blank\">https://www.tshe.com/c/94c4bfc7</a></p>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 514,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 866,
    "title": "GoCN每日新闻(2017-06-16)",
    "created_at": "2017-06-16 07:38:03",
    "updated_at": "2017-06-16 09:00:38",
    "replied_at": "2017-06-16 09:00:38",
    "replies_count": 1,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 2087,
    "last_reply_user_login": "suhanyujie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-16)\n\n1. Program FPGAs with Go https://reconfigure.io/\n2. 给Go项目做体检 https://github.com/wgliang/goreporter\n3. Go1.9 beta发布 https://tip.golang.org/doc/go1.9\n4. 通过Go深入理解网络协议 https://medium.com/@mdlayher/network-protocol-breakdown-ethernet-and-go-de985d726cc1\n5. 使用os/exec执行一些高级命令 https://blog.kowalczyk.info/article/wOYk/advanced-command-execution-in-go-with-osexec.html\n\nGo社区众筹T恤：https://www.tshe.com/c/94c4bfc7\n\n招聘：\n1. 【北京】派派 https://gocn.io/article/362\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-16)</p>\n\n<ol>\n<li>Program FPGAs with Go <a href=\"https://reconfigure.io/\" rel=\"nofollow\" target=\"_blank\">https://reconfigure.io/</a>\n</li>\n<li>给 Go 项目做体检 <a href=\"https://github.com/wgliang/goreporter\" rel=\"nofollow\" target=\"_blank\">https://github.com/wgliang/goreporter</a>\n</li>\n<li>Go1.9 beta 发布 <a href=\"https://tip.golang.org/doc/go1.9\" rel=\"nofollow\" target=\"_blank\">https://tip.golang.org/doc/go1.9</a>\n</li>\n<li>通过 Go 深入理解网络协议 <a href=\"https://medium.com/@mdlayher/network-protocol-breakdown-ethernet-and-go-de985d726cc1\" rel=\"nofollow\" target=\"_blank\">https://medium.com/@mdlayher/network-protocol-breakdown-ethernet-and-go-de985d726cc1</a>\n</li>\n<li>使用 os/exec 执行一些高级命令 <a href=\"https://blog.kowalczyk.info/article/wOYk/advanced-command-execution-in-go-with-osexec.html\" rel=\"nofollow\" target=\"_blank\">https://blog.kowalczyk.info/article/wOYk/advanced-command-execution-in-go-with-osexec.html</a>\n</li>\n</ol>\n\n<p>Go 社区众筹 T 恤：<a href=\"https://www.tshe.com/c/94c4bfc7\" rel=\"nofollow\" target=\"_blank\">https://www.tshe.com/c/94c4bfc7</a></p>\n\n<p>招聘：</p>\n\n<ol>\n<li>【北京】派派 <a href=\"https://gocn.io/article/362\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/362</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 567,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 867,
    "title": "6月17深圳gopher聚会",
    "created_at": "2017-06-16 11:09:05",
    "updated_at": "2017-06-16 13:28:28",
    "replied_at": "2017-06-16 13:28:28",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1295,
    "user": "{\"id\": 1295, \"name\": \"jongyang\", \"login\": \"jongyang\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "你好 我想问下6月17号下午的深圳gopher 大会在哪里 我想报名 但是页面没有找到了",
    "body_html": "<p>你好 我想问下 6 月 17 号下午的深圳 gopher 大会在哪里 我想报名 但是页面没有找到了</p>",
    "hits": 231,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 868,
    "title": "GoCN每日新闻(2017-06-17)",
    "created_at": "2017-06-17 11:52:40",
    "updated_at": "2017-06-17 11:52:40",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-17)\n\n1. Google工程师告诉你如何提高数据结构和算法能力 https://mp.weixin.qq.com/s/kSoDh_QG6TxhO4TjA-Z-wQ\n2. 使用 Ansible 安装部署 TiDB https://zhuanlan.zhihu.com/p/27308307\n3. Go命令行解析包 https://github.com/alecthomas/kingpin\n4. 扫描网络中的弱密码的SSH工具 https://github.com/ncsa/ssh-auditor\n5. Nginx如何做流量控制 https://www.nginx.com/blog/rate-limiting-nginx/\n\n\n活动直播预告：\n\n今天下午一点开始，深圳Gopher meetup\n直播地址：http://www.itdks.com/dakashuo/playback/930\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-17)</p>\n\n<ol>\n<li>Google 工程师告诉你如何提高数据结构和算法能力 <a href=\"https://mp.weixin.qq.com/s/kSoDh_QG6TxhO4TjA-Z-wQ\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/kSoDh_QG6TxhO4TjA-Z-wQ</a>\n</li>\n<li>使用 Ansible 安装部署 TiDB <a href=\"https://zhuanlan.zhihu.com/p/27308307\" rel=\"nofollow\" target=\"_blank\">https://zhuanlan.zhihu.com/p/27308307</a>\n</li>\n<li>Go 命令行解析包 <a href=\"https://github.com/alecthomas/kingpin\" rel=\"nofollow\" target=\"_blank\">https://github.com/alecthomas/kingpin</a>\n</li>\n<li>扫描网络中的弱密码的 SSH 工具 <a href=\"https://github.com/ncsa/ssh-auditor\" rel=\"nofollow\" target=\"_blank\">https://github.com/ncsa/ssh-auditor</a>\n</li>\n<li>Nginx 如何做流量控制 <a href=\"https://www.nginx.com/blog/rate-limiting-nginx/\" rel=\"nofollow\" target=\"_blank\">https://www.nginx.com/blog/rate-limiting-nginx/</a>\n</li>\n</ol>\n\n<p>活动直播预告：</p>\n\n<p>今天下午一点开始，深圳 Gopher meetup\n直播地址：<a href=\"http://www.itdks.com/dakashuo/playback/930\" rel=\"nofollow\" target=\"_blank\">http://www.itdks.com/dakashuo/playback/930</a></p>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 410,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 869,
    "title": "怎么实现名称相同，参数不同的多个接口",
    "created_at": "2017-06-18 11:19:17",
    "updated_at": "2017-06-20 18:00:22",
    "replied_at": "2017-06-20 18:00:22",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 544,
    "last_reply_user_login": "yougg",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 931,
    "user": "{\"id\": 931, \"name\": \"lifei6671\", \"login\": \"lifei6671\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "golang中的接口是隐式实现的，如果我有多个接口，接口中的方法名都一样，但是参数不同。如何让一个struct去实现这些接口呢？\n例如：\n\n```\ntype Interface1 interface{\n\tsend(t,p string) error\n}\ntype Interface2 interface{\n\tsend(p string)(error,book)\n}\n```\n\n这两个接口怎么去实现呢？",
    "body_html": "<p>golang 中的接口是隐式实现的，如果我有多个接口，接口中的方法名都一样，但是参数不同。如何让一个 struct 去实现这些接口呢？\n例如：</p>\n<pre class=\"highlight plaintext\"><code>type Interface1 interface{\n    send(t,p string) error\n}\ntype Interface2 interface{\n    send(p string)(error,book)\n}\n</code></pre>\n<p>这两个接口怎么去实现呢？</p>",
    "hits": 623,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 870,
    "title": "GoCN每日新闻(2017-06-18)",
    "created_at": "2017-06-18 11:33:16",
    "updated_at": "2017-06-18 11:33:16",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-18)\n\n1. 深圳meetup 演讲稿 https://github.com/gopherchina/meetup/tree/master/ShenZhen/20170617\n2. 高负载微服务系统的诞生过程 http://www.infoq.com/cn/articles/birth-process-of-high-load-micro-service-system\n3. Go垃圾回收 https://www.youtube.com/watch?v=q1h2g84EX1M&amp;t=15s\n4. Go1.9都有哪些新特性 http://www.infoworld.com/article/3201037/application-development/whats-new-in-googles-go-19-language.html\n5. Go设计模式 http://tmrts.com/go-patterns/\n\n\n活动预告：\n1. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n2. 北京Gopher meetup 报名地址：http://www.bagevent.com/event/569069\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-18)</p>\n\n<ol>\n<li>深圳 meetup 演讲稿 <a href=\"https://github.com/gopherchina/meetup/tree/master/ShenZhen/20170617\" rel=\"nofollow\" target=\"_blank\">https://github.com/gopherchina/meetup/tree/master/ShenZhen/20170617</a>\n</li>\n<li>高负载微服务系统的诞生过程 <a href=\"http://www.infoq.com/cn/articles/birth-process-of-high-load-micro-service-system\" rel=\"nofollow\" target=\"_blank\">http://www.infoq.com/cn/articles/birth-process-of-high-load-micro-service-system</a>\n</li>\n<li>Go 垃圾回收<span class=\"embed-responsive embed-responsive-16by9\"><iframe class=\"embed-responsive-item\" src=\"//www.youtube.com/embed/q1h2g84EX1M\" allowfullscreen=\"\"></iframe></span>\n</li>\n<li>Go1.9 都有哪些新特性 <a href=\"http://www.infoworld.com/article/3201037/application-development/whats-new-in-googles-go-19-language.html\" rel=\"nofollow\" target=\"_blank\">http://www.infoworld.com/article/3201037/application-development/whats-new-in-googles-go-19-language.html</a>\n</li>\n<li>Go 设计模式 <a href=\"http://tmrts.com/go-patterns/\" rel=\"nofollow\" target=\"_blank\">http://tmrts.com/go-patterns/</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n<li>北京 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569069\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569069</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 513,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 871,
    "title": "beego sesion 错误",
    "created_at": "2017-06-18 23:10:26",
    "updated_at": "2021-01-16 21:40:53",
    "replied_at": "2017-06-19 15:37:28",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1347,
    "last_reply_user_login": "lotus",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2109,
    "user": "{\"id\": 2109, \"name\": \"vesthope\", \"login\": \"vesthope\", \"avatar\": \"https://gocn.vip/system/letter_avatars/v.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "import (\n\t&quot;github.com/astaxie/beego/session&quot;\n)\n\nvar globalSessions *session.Manager\n\nfunc init() {\n\tglobalSessions, _ = session.NewManager(&quot;file&quot;, `{&quot;cookieName&quot;:&quot;gosessionid&quot;,&quot;gclifetime&quot;:3600,&quot;ProviderConfig&quot;:&quot;./tmp&quot;}`)\n\tgo globalSessions.GC()\n}\nfunc main() {\n\tbee.run()\n}\n\n\n错误提示如下：\n.\\test.go:11: cannot use &quot;{\\&quot;cookieName\\&quot;:\\&quot;gosessionid\\&quot;,\\&quot;gclifetime\\&quot;:3600,\\&quot;ProviderConfig\\&quot;:\\&quot;./tmp\\&quot;}&quot; (type string) as type *session.ManagerConfig in argument to session.NewManager\n\ngo版本1.8\n\n",
    "body_html": "<p>import (\n    \"github.com/astaxie/beego/session\"\n)</p>\n\n<p>var globalSessions *session.Manager</p>\n\n<p>func init() {\n    globalSessions, _ = session.NewManager(\"file\", <code>{&amp;quot;cookieName&amp;quot;:&amp;quot;gosessionid&amp;quot;,&amp;quot;gclifetime&amp;quot;:3600,&amp;quot;ProviderConfig&amp;quot;:&amp;quot;./tmp&amp;quot;}</code>)\n    go globalSessions.GC()\n}\nfunc main() {\n    bee.run()\n}</p>\n\n<p>错误提示如下：\n.\\test.go:11: cannot use \"{&amp;quot;cookieName&amp;quot;:&amp;quot;gosessionid&amp;quot;,&amp;quot;gclifetime&amp;quot;:3600,&amp;quot;ProviderConfig&amp;quot;:&amp;quot;./tmp&amp;quot;}\" (type string) as type *session.ManagerConfig in argument to session.NewManager</p>\n\n<p>go 版本 1.8</p>",
    "hits": 379,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 872,
    "title": "GoCN每日新闻(2017-06-19)",
    "created_at": "2017-06-19 09:43:12",
    "updated_at": "2017-06-19 09:43:12",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-19)\n\n1. 浏览器中运行并分享shell https://bash.rocks/\n2. Go的技术债 https://dave.cheney.net/2017/06/18/simplicity-debt-redux\n3. 手把手教你如何监控Go程序 https://www.opsdash.com/blog/golang-app-monitoring-statsd-expvar-prometheus.html\n4. 什么是interface http://code.maiamccormick.com/blog/2017/06/17/what-are-interfaces/\n5. 通过minikube 和docker学习k8s http://johnmclaughlin.info/learn-kubernetes-using-minikube-docker-macos/\n\n活动预告：\n1. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-19)</p>\n\n<ol>\n<li>浏览器中运行并分享 shell <a href=\"https://bash.rocks/\" rel=\"nofollow\" target=\"_blank\">https://bash.rocks/</a>\n</li>\n<li>Go 的技术债 <a href=\"https://dave.cheney.net/2017/06/18/simplicity-debt-redux\" rel=\"nofollow\" target=\"_blank\">https://dave.cheney.net/2017/06/18/simplicity-debt-redux</a>\n</li>\n<li>手把手教你如何监控 Go 程序 <a href=\"https://www.opsdash.com/blog/golang-app-monitoring-statsd-expvar-prometheus.html\" rel=\"nofollow\" target=\"_blank\">https://www.opsdash.com/blog/golang-app-monitoring-statsd-expvar-prometheus.html</a>\n</li>\n<li>什么是 interface <a href=\"http://code.maiamccormick.com/blog/2017/06/17/what-are-interfaces/\" rel=\"nofollow\" target=\"_blank\">http://code.maiamccormick.com/blog/2017/06/17/what-are-interfaces/</a>\n</li>\n<li>通过 minikube 和 docker 学习 k8s <a href=\"http://johnmclaughlin.info/learn-kubernetes-using-minikube-docker-macos/\" rel=\"nofollow\" target=\"_blank\">http://johnmclaughlin.info/learn-kubernetes-using-minikube-docker-macos/</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 488,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 873,
    "title": "GoCN每日新闻(2017-06-20)",
    "created_at": "2017-06-20 10:01:34",
    "updated_at": "2017-06-20 10:01:34",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-20)\n\n1. 服务器负载优化技巧 http://geek.csdn.net/news/detail/202676\n2. REST的7大技巧 http://blog.restcase.com/7-rules-for-rest-api-uri-design/\n3. Go不是Python http://www.seanhelvey.com/go-is-not-python/\n4. 通过流量控制来扩展API https://stripe.com/blog/rate-limiters\n5. severless 新时代的VB http://highscalability.com/blog/2017/5/15/is-serverless-the-new-visual-basic.html\n\n活动预告：\n1. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn\n",
    "body_html": "<p>GoCN 每日新闻 (2017-06-20)</p>\n\n<ol>\n<li>服务器负载优化技巧 <a href=\"http://geek.csdn.net/news/detail/202676\" rel=\"nofollow\" target=\"_blank\">http://geek.csdn.net/news/detail/202676</a>\n</li>\n<li>REST 的 7 大技巧 <a href=\"http://blog.restcase.com/7-rules-for-rest-api-uri-design/\" rel=\"nofollow\" target=\"_blank\">http://blog.restcase.com/7-rules-for-rest-api-uri-design/</a>\n</li>\n<li>Go 不是 Python <a href=\"http://www.seanhelvey.com/go-is-not-python/\" rel=\"nofollow\" target=\"_blank\">http://www.seanhelvey.com/go-is-not-python/</a>\n</li>\n<li>通过流量控制来扩展 API <a href=\"https://stripe.com/blog/rate-limiters\" rel=\"nofollow\" target=\"_blank\">https://stripe.com/blog/rate-limiters</a>\n</li>\n<li>severless 新时代的 VB <a href=\"http://highscalability.com/blog/2017/5/15/is-serverless-the-new-visual-basic.html\" rel=\"nofollow\" target=\"_blank\">http://highscalability.com/blog/2017/5/15/is-serverless-the-new-visual-basic.html</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 507,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 874,
    "title": "crypto ssh 多个命令怎么一起发？",
    "created_at": "2017-06-20 17:03:20",
    "updated_at": "2017-06-26 13:02:48",
    "replied_at": "2017-06-26 13:02:48",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 833,
    "last_reply_user_login": "CodyGuo",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1353,
    "user": "{\"id\": 1353, \"name\": \"songtianyi\", \"login\": \"songtianyi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "通过ssh来操作网络设备，需要先进入 configure 模式，然后修改配置。\nsession.Run(cmd) 这类命令满足不了， 但是使用session.Shell() 又会遇到窗口大小的问题。",
    "body_html": "<p>通过 ssh 来操作网络设备，需要先进入 configure 模式，然后修改配置。\nsession.Run(cmd) 这类命令满足不了， 但是使用 session.Shell() 又会遇到窗口大小的问题。</p>",
    "hits": 415,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 875,
    "title": "beego xsrf 问题",
    "created_at": "2017-06-20 18:12:49",
    "updated_at": "2021-01-20 03:04:05",
    "replied_at": "2017-06-24 11:55:17",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1379,
    "user": "{\"id\": 1379, \"name\": \"bfcaicai\", \"login\": \"bfcaicai\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "配置文件设置 enablexsrf = true\n然后有一个api是不需要验证xsrf，看文档说可以支持controller级别屏蔽\n于是我代码也是这样实现：\nfunc (a *AdminController) Prepare() {\n    a.EnableXSRF = false\n}\n但是POST请求是仍然报错：\nHandler crashed with error '_xsrf' argument missing from POST",
    "body_html": "<p>配置文件设置 enablexsrf = true\n然后有一个 api 是不需要验证 xsrf，看文档说可以支持 controller 级别屏蔽\n于是我代码也是这样实现：\nfunc (a *AdminController) Prepare() {\n    a.EnableXSRF = false\n}\n但是 POST 请求是仍然报错：\nHandler crashed with error '_xsrf' argument missing from POST</p>",
    "hits": 474,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 876,
    "title": "GoCN每日新闻(2017-06-21)",
    "created_at": "2017-06-21 09:58:51",
    "updated_at": "2017-06-21 09:58:51",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-21)\n\n1. 终止多个goroutine https://chilts.org/2017/06/12/cancelling-multiple-goroutines\n2. Go垃圾回收剖析 http://legendtkl.com/2017/04/28/golang-gc/\n3. 深入理解GRPC http://www.jianshu.com/p/48ad37e8b4ed\n4. Elasticsearch 可视化DashBoard https://github.com/farmerx/ElasticHD\n5. 通过二进制程序获取哪个Go版本 https://dave.cheney.net/2017/06/20/how-to-find-out-which-go-version-built-your-binary\n\n活动预告：\n1. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-21)</p>\n\n<ol>\n<li>终止多个 goroutine <a href=\"https://chilts.org/2017/06/12/cancelling-multiple-goroutines\" rel=\"nofollow\" target=\"_blank\">https://chilts.org/2017/06/12/cancelling-multiple-goroutines</a>\n</li>\n<li>Go 垃圾回收剖析 <a href=\"http://legendtkl.com/2017/04/28/golang-gc/\" rel=\"nofollow\" target=\"_blank\">http://legendtkl.com/2017/04/28/golang-gc/</a>\n</li>\n<li>深入理解 GRPC <a href=\"http://www.jianshu.com/p/48ad37e8b4ed\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/48ad37e8b4ed</a>\n</li>\n<li>Elasticsearch 可视化 DashBoard <a href=\"https://github.com/farmerx/ElasticHD\" rel=\"nofollow\" target=\"_blank\">https://github.com/farmerx/ElasticHD</a>\n</li>\n<li>通过二进制程序获取哪个 Go 版本 <a href=\"https://dave.cheney.net/2017/06/20/how-to-find-out-which-go-version-built-your-binary\" rel=\"nofollow\" target=\"_blank\">https://dave.cheney.net/2017/06/20/how-to-find-out-which-go-version-built-your-binary</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 498,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 877,
    "title": "GoCN每日新闻(2017-06-22)",
    "created_at": "2017-06-22 10:02:32",
    "updated_at": "2017-06-22 10:02:32",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-22)\n\n1. Go实现的rsync算法 https://github.com/c4milo/gsync\n2. Golang 中使用 JSON 的小技巧 https://gocn.io/article/363\n3. 数据可视化产生生产力 http://insights.thoughtworkers.org/data-visualization-produce-productivity/\n4. 微服务架构下的安全认证与鉴权 https://mp.weixin.qq.com/s/x0CZpovseOuofTA_lw0HvA\n5. 微服务架构下如何测试 https://martinfowler.com/articles/microservice-testing/\n\n活动预告：\n1. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-22)</p>\n\n<ol>\n<li>Go 实现的 rsync 算法 <a href=\"https://github.com/c4milo/gsync\" rel=\"nofollow\" target=\"_blank\">https://github.com/c4milo/gsync</a>\n</li>\n<li>Golang 中使用 JSON 的小技巧 <a href=\"https://gocn.io/article/363\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/363</a>\n</li>\n<li>数据可视化产生生产力 <a href=\"http://insights.thoughtworkers.org/data-visualization-produce-productivity/\" rel=\"nofollow\" target=\"_blank\">http://insights.thoughtworkers.org/data-visualization-produce-productivity/</a>\n</li>\n<li>微服务架构下的安全认证与鉴权 <a href=\"https://mp.weixin.qq.com/s/x0CZpovseOuofTA_lw0HvA\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/x0CZpovseOuofTA_lw0HvA</a>\n</li>\n<li>微服务架构下如何测试 <a href=\"https://martinfowler.com/articles/microservice-testing/\" rel=\"nofollow\" target=\"_blank\">https://martinfowler.com/articles/microservice-testing/</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 531,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 878,
    "title": "GoCN每日新闻(2017-06-23)",
    "created_at": "2017-06-23 10:13:40",
    "updated_at": "2017-06-23 10:13:40",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-23)\n\n1. 在Go程序中如何不用httprouter http://blog.merovius.de/2017/06/18/how-not-to-use-an-http-router.html\n2. Go调度详解  https://zhuanlan.zhihu.com/p/27056944\n3. 今日头条Go建千亿级微服务的实践 https://36kr.com/p/5073181.html\n4. MySQL优化原理 http://www.jianshu.com/p/d7665192aaaf\n5. Go相比Java的优势在哪里？https://www.zhihu.com/question/61200249\n\n编辑：Asta &amp; 谢烟客\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-23)</p>\n\n<ol>\n<li>在 Go 程序中如何不用 httprouter <a href=\"http://blog.merovius.de/2017/06/18/how-not-to-use-an-http-router.html\" rel=\"nofollow\" target=\"_blank\">http://blog.merovius.de/2017/06/18/how-not-to-use-an-http-router.html</a>\n</li>\n<li>Go 调度详解  <a href=\"https://zhuanlan.zhihu.com/p/27056944\" rel=\"nofollow\" target=\"_blank\">https://zhuanlan.zhihu.com/p/27056944</a>\n</li>\n<li>今日头条 Go 建千亿级微服务的实践 <a href=\"https://36kr.com/p/5073181.html\" rel=\"nofollow\" target=\"_blank\">https://36kr.com/p/5073181.html</a>\n</li>\n<li>MySQL 优化原理 <a href=\"http://www.jianshu.com/p/d7665192aaaf\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/d7665192aaaf</a>\n</li>\n<li>Go 相比 Java 的优势在哪里？<a href=\"https://www.zhihu.com/question/61200249\" rel=\"nofollow\" target=\"_blank\">https://www.zhihu.com/question/61200249</a>\n</li>\n</ol>\n\n<p>编辑：Asta &amp; 谢烟客\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 525,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 879,
    "title": "grpc客户端需要链接池吗？不是lb内部的对不同的endpoint建立的不同的链接，而是对同样的endpoint需不需要连接池？",
    "created_at": "2017-06-23 12:45:12",
    "updated_at": "2017-06-23 21:52:25",
    "replied_at": "2017-06-23 21:52:25",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1615,
    "last_reply_user_login": "jinleileiking",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1257,
    "user": "{\"id\": 1257, \"name\": \"elvin5\", \"login\": \"elvin5\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "grpc客户端需要链接池吗？不是lb内部的对不同的endpoint建立的不同的链接，而是对同样的endpoint需不需要连接池？我们知道grpc使用http2.0，而http2.0有多路复用，但是如果只是一个链接，不同的线程对写数据的话，发送端的buffer是不是需要设置的很大才行，不然会慢．．",
    "body_html": "<p>grpc 客户端需要链接池吗？不是 lb 内部的对不同的 endpoint 建立的不同的链接，而是对同样的 endpoint 需不需要连接池？我们知道 grpc 使用 http2.0，而 http2.0 有多路复用，但是如果只是一个链接，不同的线程对写数据的话，发送端的 buffer 是不是需要设置的很大才行，不然会慢．．</p>",
    "hits": 585,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 880,
    "title": "GoCN每日新闻(2017-06-24)",
    "created_at": "2017-06-24 11:50:45",
    "updated_at": "2017-06-24 11:50:45",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-24)\n\n1. 一个内部Go API系统的性能优化 https://zhuanlan.zhihu.com/p/27211445\n2. 如何用ginkgo和gomega写出优雅的测试 https://lanreadelowo.com/blog/2017/06/23/expressive-testing-go/\n3. 也谈goroutine调度器 http://tonybai.com/2017/06/23/an-intro-about-goroutine-scheduler/\n4. Go struct模拟假数据 https://github.com/bxcodec/faker\n5. 企业API网关设计 https://mp.weixin.qq.com/s/RuN5RfQfksQZRPACloqHEg\n\n活动预告：\n1. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-24)</p>\n\n<ol>\n<li>一个内部 Go API 系统的性能优化 <a href=\"https://zhuanlan.zhihu.com/p/27211445\" rel=\"nofollow\" target=\"_blank\">https://zhuanlan.zhihu.com/p/27211445</a>\n</li>\n<li>如何用 ginkgo 和 gomega 写出优雅的测试 <a href=\"https://lanreadelowo.com/blog/2017/06/23/expressive-testing-go/\" rel=\"nofollow\" target=\"_blank\">https://lanreadelowo.com/blog/2017/06/23/expressive-testing-go/</a>\n</li>\n<li>也谈 goroutine 调度器 <a href=\"http://tonybai.com/2017/06/23/an-intro-about-goroutine-scheduler/\" rel=\"nofollow\" target=\"_blank\">http://tonybai.com/2017/06/23/an-intro-about-goroutine-scheduler/</a>\n</li>\n<li>Go struct 模拟假数据 <a href=\"https://github.com/bxcodec/faker\" rel=\"nofollow\" target=\"_blank\">https://github.com/bxcodec/faker</a>\n</li>\n<li>企业 API 网关设计 <a href=\"https://mp.weixin.qq.com/s/RuN5RfQfksQZRPACloqHEg\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/RuN5RfQfksQZRPACloqHEg</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 499,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 881,
    "title": "GoCN每日新闻(2017-06-25)",
    "created_at": "2017-06-25 11:16:08",
    "updated_at": "2017-06-25 11:16:08",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-25)\n\n1. Go入门教程 http://www.golangprograms.com/\n2. SSH with Go http://talks.rodaine.com/gosf-ssh/present.slide#1\n3. 如何利用好interface http://blog.tamizhvendan.in/blog/2017/06/24/leveraging-interfaces-in-golang-part-1/\n4. etcd 3.2分布式锁等新特性 http://dockone.io/article/2444\n5. 工作能力强的人都有哪些特征 https://www.zhihu.com/question/28880482\n\n北京Gopher meetup直播地址：http://www.itdks.com/dakashuo/new/eventlist/detail/969\n\n现场地址：北京海淀区中关村E世界财富中心A座B2 \n大家导航的时候找附近的星巴克，就在楼下\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-25)</p>\n\n<ol>\n<li>Go 入门教程 <a href=\"http://www.golangprograms.com/\" rel=\"nofollow\" target=\"_blank\">http://www.golangprograms.com/</a>\n</li>\n<li>SSH with Go <a href=\"http://talks.rodaine.com/gosf-ssh/present.slide#1\" rel=\"nofollow\" target=\"_blank\">http://talks.rodaine.com/gosf-ssh/present.slide#1</a>\n</li>\n<li>如何利用好 interface <a href=\"http://blog.tamizhvendan.in/blog/2017/06/24/leveraging-interfaces-in-golang-part-1/\" rel=\"nofollow\" target=\"_blank\">http://blog.tamizhvendan.in/blog/2017/06/24/leveraging-interfaces-in-golang-part-1/</a>\n</li>\n<li>etcd 3.2 分布式锁等新特性 <a href=\"http://dockone.io/article/2444\" rel=\"nofollow\" target=\"_blank\">http://dockone.io/article/2444</a>\n</li>\n<li>工作能力强的人都有哪些特征 <a href=\"https://www.zhihu.com/question/28880482\" rel=\"nofollow\" target=\"_blank\">https://www.zhihu.com/question/28880482</a>\n</li>\n</ol>\n\n<p>北京 Gopher meetup 直播地址：<a href=\"http://www.itdks.com/dakashuo/new/eventlist/detail/969\" rel=\"nofollow\" target=\"_blank\">http://www.itdks.com/dakashuo/new/eventlist/detail/969</a></p>\n\n<p>现场地址：北京海淀区中关村 E 世界财富中心 A 座 B2 \n大家导航的时候找附近的星巴克，就在楼下</p>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 417,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 882,
    "title": "GoCN每日新闻(2017-06-26)",
    "created_at": "2017-06-26 10:25:06",
    "updated_at": "2017-06-26 10:25:06",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-26)\n\n1. 北京Gopher PPT https://github.com/gopherchina/meetup/tree/master/Beijing/20170625\n2. goroutine泄露检测工具 https://github.com/fortytw2/leaktest\n3. postgres中文手册 https://github.com/postgres-cn/pgdoc-cn\n4. 架构师之路2017半年精选40篇 http://mp.weixin.qq.com/s/8RM6U8UqWTDp29DB_hiYVQ\n5. Google Cloud 的 API 设计 https://mp.weixin.qq.com/s?__biz=MzA5ODg4Mzk2OQ==&amp;mid=2247483705&amp;idx=1&amp;sn=cc2ffef9ac431510c1791dbe6e774b85\n\n活动预告：\n1. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn\n\n",
    "body_html": "<p>GoCN 每日新闻 (2017-06-26)</p>\n\n<ol>\n<li>北京 Gopher PPT <a href=\"https://github.com/gopherchina/meetup/tree/master/Beijing/20170625\" rel=\"nofollow\" target=\"_blank\">https://github.com/gopherchina/meetup/tree/master/Beijing/20170625</a>\n</li>\n<li>goroutine 泄露检测工具 <a href=\"https://github.com/fortytw2/leaktest\" rel=\"nofollow\" target=\"_blank\">https://github.com/fortytw2/leaktest</a>\n</li>\n<li>postgres 中文手册 <a href=\"https://github.com/postgres-cn/pgdoc-cn\" rel=\"nofollow\" target=\"_blank\">https://github.com/postgres-cn/pgdoc-cn</a>\n</li>\n<li>架构师之路 2017 半年精选 40 篇 <a href=\"http://mp.weixin.qq.com/s/8RM6U8UqWTDp29DB_hiYVQ\" rel=\"nofollow\" target=\"_blank\">http://mp.weixin.qq.com/s/8RM6U8UqWTDp29DB_hiYVQ</a>\n</li>\n<li>Google Cloud 的 API 设计 <a href=\"https://mp.weixin.qq.com/s?__biz=MzA5ODg4Mzk2OQ==&amp;ampmid=2247483705&amp;ampidx=1&amp;ampsn=cc2ffef9ac431510c1791dbe6e774b85\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s?__biz=MzA5ODg4Mzk2OQ==&amp;ampmid=2247483705&amp;ampidx=1&amp;ampsn=cc2ffef9ac431510c1791dbe6e774b85</a>;</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 453,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 883,
    "title": "json Unmarshal时实际字段类型与struct定义不一致会影响其他正常字段解析",
    "created_at": "2017-06-26 14:17:56",
    "updated_at": "2017-06-30 01:19:12",
    "replied_at": "2017-06-30 01:19:12",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1291,
    "last_reply_user_login": "tom0001",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 30,
    "user": "{\"id\": 30, \"name\": \"wulinlw\", \"login\": \"wulinlw\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "json Unmarshal时实际字段类型与struct定义不一致会影响其他正常字段解析？\n见代码\n```go\npackage main\n\nimport (\n\t&quot;encoding/json&quot;\n\t&quot;fmt&quot;\n)\n\ntype Role struct {\n\tAttr struct {\n\t\tLv    int64 `json:&quot;lv&quot;`\n\t\tMoney int64 `json:&quot;money&quot;`\n\t} `json:&quot;attr&quot;`\n\tNet struct {\n\t\tIp  string `json:&quot;ip&quot;`\n\t\tMac string `json:&quot;mac&quot;`\n\t} `json:&quot;net&quot;`\n}\n\nfunc main() {\n\tstr := `{&quot;attr&quot;:{&quot;lv&quot;:15,&quot;money&quot;:3},&quot;net&quot;:{&quot;ip&quot;:&quot;8.8.8.8&quot;,&quot;mac&quot;:0}}`\n\tstr2 := `{&quot;net&quot;:{&quot;ip&quot;:&quot;8.8.8.8&quot;,&quot;mac&quot;:0},&quot;attr&quot;:{&quot;lv&quot;:15,&quot;money&quot;:3}}`\n\tlogData := &amp;Role{}\n\tlogData2 := &amp;Role{}\n\terr := json.Unmarshal([]byte(str), logData)\n\terr2 := json.Unmarshal([]byte(str2), logData2)\n\n\tfmt.Printf(&quot;%#v\\r\\n&quot;, logData)\n\tfmt.Println(logData)\n\tfmt.Println(err)\n\n\tfmt.Printf(&quot;%#v\\r\\n&quot;, logData2)\n\tfmt.Println(logData2)\n\tfmt.Println(err2)\n}\n```\n\n输出结果是\n\n```go\n&amp;main.Role{Attr:struct { Lv int64 &quot;json:\\&quot;lv\\&quot;&quot;; Money int64 &quot;json:\\&quot;money\\&quot;&quot; }{Lv:15, Money:3}, Net:struct { Ip string &quot;json:\\&quot;ip\\&quot;&quot;; Mac string &quot;json:\\&quot;mac\\&quot;&quot; }{Ip:&quot;8.8.8.8&quot;, Mac:&quot;&quot;}}\n&amp;{{15 3} {8.8.8.8 }}\njson: cannot unmarshal number into Go struct field .mac of type string\n\n&amp;main.Role{Attr:struct { Lv int64 &quot;json:\\&quot;lv\\&quot;&quot;; Money int64 &quot;json:\\&quot;money\\&quot;&quot; }{Lv:0, Money:0}, Net:struct { Ip string &quot;json:\\&quot;ip\\&quot;&quot;; Mac string &quot;json:\\&quot;mac\\&quot;&quot; }{Ip:&quot;8.8.8.8&quot;, Mac:&quot;&quot;}}\n&amp;{{0 0} {8.8.8.8 }}\njson: cannot unmarshal number into Go struct field .mac of type string\n```\n\n可以看到，struct的mac是string类型的，实际的json字符串中mac因为一些不可控的原因等于int 0\n测试中发现解析发生错误后，后面的所有key都无法解析了，但是在实际项目中，json产出数据不可控，是否有办法跳过错误继续处理呢\n\n[测试地址](https://play.golang.org/p/Jv2hZLme85 &quot;测试地址&quot;)\n",
    "body_html": "<p>json Unmarshal 时实际字段类型与 struct 定义不一致会影响其他正常字段解析？\n见代码</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">encoding</span><span class=\"o\">/</span><span class=\"n\">json</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">type</span> <span class=\"n\">Role</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Attr</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n        <span class=\"n\">Lv</span>    <span class=\"kt\">int64</span> <span class=\"s\">`json:&amp;quot;lv&amp;quot;`</span>\n        <span class=\"n\">Money</span> <span class=\"kt\">int64</span> <span class=\"s\">`json:&amp;quot;money&amp;quot;`</span>\n    <span class=\"p\">}</span> <span class=\"s\">`json:&amp;quot;attr&amp;quot;`</span>\n    <span class=\"n\">Net</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n        <span class=\"n\">Ip</span>  <span class=\"kt\">string</span> <span class=\"s\">`json:&amp;quot;ip&amp;quot;`</span>\n        <span class=\"n\">Mac</span> <span class=\"kt\">string</span> <span class=\"s\">`json:&amp;quot;mac&amp;quot;`</span>\n    <span class=\"p\">}</span> <span class=\"s\">`json:&amp;quot;net&amp;quot;`</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">str</span> <span class=\"o\">:=</span> <span class=\"s\">`{&amp;quot;attr&amp;quot;:{&amp;quot;lv&amp;quot;:15,&amp;quot;money&amp;quot;:3},&amp;quot;net&amp;quot;:{&amp;quot;ip&amp;quot;:&amp;quot;8.8.8.8&amp;quot;,&amp;quot;mac&amp;quot;:0}}`</span>\n    <span class=\"n\">str2</span> <span class=\"o\">:=</span> <span class=\"s\">`{&amp;quot;net&amp;quot;:{&amp;quot;ip&amp;quot;:&amp;quot;8.8.8.8&amp;quot;,&amp;quot;mac&amp;quot;:0},&amp;quot;attr&amp;quot;:{&amp;quot;lv&amp;quot;:15,&amp;quot;money&amp;quot;:3}}`</span>\n    <span class=\"n\">logData</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">Role</span><span class=\"p\">{}</span>\n    <span class=\"n\">logData2</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">Role</span><span class=\"p\">{}</span>\n    <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">Unmarshal</span><span class=\"p\">([]</span><span class=\"kt\">byte</span><span class=\"p\">(</span><span class=\"n\">str</span><span class=\"p\">),</span> <span class=\"n\">logData</span><span class=\"p\">)</span>\n    <span class=\"n\">err2</span> <span class=\"o\">:=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">Unmarshal</span><span class=\"p\">([]</span><span class=\"kt\">byte</span><span class=\"p\">(</span><span class=\"n\">str2</span><span class=\"p\">),</span> <span class=\"n\">logData2</span><span class=\"p\">)</span>\n\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">%</span><span class=\"err\">#</span><span class=\"n\">v</span><span class=\"err\">\\</span><span class=\"n\">r</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">logData</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">logData</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">%</span><span class=\"err\">#</span><span class=\"n\">v</span><span class=\"err\">\\</span><span class=\"n\">r</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">logData2</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">logData2</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">err2</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>输出结果是</p>\n <pre class=\"highlight go\"><code><span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">Role</span><span class=\"p\">{</span><span class=\"n\">Attr</span><span class=\"o\">:</span><span class=\"k\">struct</span> <span class=\"p\">{</span> <span class=\"n\">Lv</span> <span class=\"kt\">int64</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">json</span><span class=\"o\">:</span><span class=\"err\">\\</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">lv</span><span class=\"err\">\\</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;;</span> <span class=\"n\">Money</span> <span class=\"kt\">int64</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">json</span><span class=\"o\">:</span><span class=\"err\">\\</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">money</span><span class=\"err\">\\</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">}{</span><span class=\"n\">Lv</span><span class=\"o\">:</span><span class=\"m\">15</span><span class=\"p\">,</span> <span class=\"n\">Money</span><span class=\"o\">:</span><span class=\"m\">3</span><span class=\"p\">},</span> <span class=\"n\">Net</span><span class=\"o\">:</span><span class=\"k\">struct</span> <span class=\"p\">{</span> <span class=\"n\">Ip</span> <span class=\"kt\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">json</span><span class=\"o\">:</span><span class=\"err\">\\</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">ip</span><span class=\"err\">\\</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;;</span> <span class=\"n\">Mac</span> <span class=\"kt\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">json</span><span class=\"o\">:</span><span class=\"err\">\\</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">mac</span><span class=\"err\">\\</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">}{</span><span class=\"n\">Ip</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"m\">8.8.8.8</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">Mac</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}}</span>\n<span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;{{</span><span class=\"m\">15</span> <span class=\"m\">3</span><span class=\"p\">}</span> <span class=\"p\">{</span><span class=\"m\">8.8.8.8</span> <span class=\"p\">}}</span>\n<span class=\"n\">json</span><span class=\"o\">:</span> <span class=\"n\">cannot</span> <span class=\"n\">unmarshal</span> <span class=\"n\">number</span> <span class=\"n\">into</span> <span class=\"n\">Go</span> <span class=\"k\">struct</span> <span class=\"n\">field</span> <span class=\"o\">.</span><span class=\"n\">mac</span> <span class=\"n\">of</span> <span class=\"k\">type</span> <span class=\"kt\">string</span>\n\n<span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">Role</span><span class=\"p\">{</span><span class=\"n\">Attr</span><span class=\"o\">:</span><span class=\"k\">struct</span> <span class=\"p\">{</span> <span class=\"n\">Lv</span> <span class=\"kt\">int64</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">json</span><span class=\"o\">:</span><span class=\"err\">\\</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">lv</span><span class=\"err\">\\</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;;</span> <span class=\"n\">Money</span> <span class=\"kt\">int64</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">json</span><span class=\"o\">:</span><span class=\"err\">\\</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">money</span><span class=\"err\">\\</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">}{</span><span class=\"n\">Lv</span><span class=\"o\">:</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">Money</span><span class=\"o\">:</span><span class=\"m\">0</span><span class=\"p\">},</span> <span class=\"n\">Net</span><span class=\"o\">:</span><span class=\"k\">struct</span> <span class=\"p\">{</span> <span class=\"n\">Ip</span> <span class=\"kt\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">json</span><span class=\"o\">:</span><span class=\"err\">\\</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">ip</span><span class=\"err\">\\</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;;</span> <span class=\"n\">Mac</span> <span class=\"kt\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">json</span><span class=\"o\">:</span><span class=\"err\">\\</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">mac</span><span class=\"err\">\\</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">}{</span><span class=\"n\">Ip</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"m\">8.8.8.8</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">Mac</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}}</span>\n<span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;{{</span><span class=\"m\">0</span> <span class=\"m\">0</span><span class=\"p\">}</span> <span class=\"p\">{</span><span class=\"m\">8.8.8.8</span> <span class=\"p\">}}</span>\n<span class=\"n\">json</span><span class=\"o\">:</span> <span class=\"n\">cannot</span> <span class=\"n\">unmarshal</span> <span class=\"n\">number</span> <span class=\"n\">into</span> <span class=\"n\">Go</span> <span class=\"k\">struct</span> <span class=\"n\">field</span> <span class=\"o\">.</span><span class=\"n\">mac</span> <span class=\"n\">of</span> <span class=\"k\">type</span> <span class=\"kt\">string</span>\n</code></pre> \n<p>可以看到，struct 的 mac 是 string 类型的，实际的 json 字符串中 mac 因为一些不可控的原因等于 int 0\n测试中发现解析发生错误后，后面的所有 key 都无法解析了，但是在实际项目中，json 产出数据不可控，是否有办法跳过错误继续处理呢</p>\n\n<p><a href=\"https://play.golang.org/p/Jv2hZLme85%20%22%E6%B5%8B%E8%AF%95%E5%9C%B0%E5%9D%80%22\" title=\"\">测试地址</a></p>",
    "hits": 508,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 884,
    "title": "GoCN每日新闻(2017-06-27)",
    "created_at": "2017-06-27 09:48:46",
    "updated_at": "2017-06-27 09:48:46",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-27)\n\n1. UDP编程的那些事 https://gocn.io/article/371\n2. Go 1.9 Beta 2 is released! https://golang.org/dl/\n3. C++程序员眼中的Go https://www.murrayc.com/permalink/2017/06/26/a-c-developer-looks-at-go-the-programming-language-part-1-simple-features/\n4. 七牛 Pandora 开发的通用日志收集工具 https://github.com/qiniu/logkit\n5. 我的架构感悟：从美国宪法学习架构设计原则 https://mp.weixin.qq.com/s/3yGZ0uO2BKGym9UDN4tNkQ\n\n活动预告：\n1. TiDB技术交流会上海场 Tech Day 时间定在 7 月 8 日，http://tidbtechday2017.sxl.cn/\n2. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn\n",
    "body_html": "<p>GoCN 每日新闻 (2017-06-27)</p>\n\n<ol>\n<li>UDP 编程的那些事 <a href=\"https://gocn.io/article/371\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/371</a>\n</li>\n<li>Go 1.9 Beta 2 is released! <a href=\"https://golang.org/dl/\" rel=\"nofollow\" target=\"_blank\">https://golang.org/dl/</a>\n</li>\n<li>C++ 程序员眼中的 Go <a href=\"https://www.murrayc.com/permalink/2017/06/26/a-c-developer-looks-at-go-the-programming-language-part-1-simple-features/\" rel=\"nofollow\" target=\"_blank\">https://www.murrayc.com/permalink/2017/06/26/a-c-developer-looks-at-go-the-programming-language-part-1-simple-features/</a>\n</li>\n<li>七牛 Pandora 开发的通用日志收集工具 <a href=\"https://github.com/qiniu/logkit\" rel=\"nofollow\" target=\"_blank\">https://github.com/qiniu/logkit</a>\n</li>\n<li>我的架构感悟：从美国宪法学习架构设计原则 <a href=\"https://mp.weixin.qq.com/s/3yGZ0uO2BKGym9UDN4tNkQ\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/3yGZ0uO2BKGym9UDN4tNkQ</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>TiDB 技术交流会上海场 Tech Day 时间定在 7 月 8 日，<a href=\"http://tidbtechday2017.sxl.cn/\" rel=\"nofollow\" target=\"_blank\">http://tidbtechday2017.sxl.cn/</a>\n</li>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 466,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 885,
    "title": "GoCN每日新闻(2017-06-28)",
    "created_at": "2017-06-28 09:37:55",
    "updated_at": "2017-06-28 11:45:46",
    "replied_at": "2017-06-28 11:45:46",
    "replies_count": 2,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 562,
    "last_reply_user_login": "Sphinx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-28)\n\n1. 如何做高可用架构设计 http://t.cn/RoWfVHc\n2. 了解Go 1.9的类型别名 http://colobu.com/2017/06/26/learn-go-type-aliases/\n3. 针对Go二进制的man命令工具 https://appliedgo.net/goman/\n4. 也谈Go的可移植性 http://tonybai.com/2017/06/27/an-intro-about-go-portability/\n5. Go测试辅助套件ginkgo http://www.agiratech.com/golang-testing-using-ginkgo/\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-28)</p>\n\n<ol>\n<li>如何做高可用架构设计 <a href=\"http://t.cn/RoWfVHc\" rel=\"nofollow\" target=\"_blank\">http://t.cn/RoWfVHc</a>\n</li>\n<li>了解 Go 1.9 的类型别名 <a href=\"http://colobu.com/2017/06/26/learn-go-type-aliases/\" rel=\"nofollow\" target=\"_blank\">http://colobu.com/2017/06/26/learn-go-type-aliases/</a>\n</li>\n<li>针对 Go 二进制的 man 命令工具 <a href=\"https://appliedgo.net/goman/\" rel=\"nofollow\" target=\"_blank\">https://appliedgo.net/goman/</a>\n</li>\n<li>也谈 Go 的可移植性 <a href=\"http://tonybai.com/2017/06/27/an-intro-about-go-portability/\" rel=\"nofollow\" target=\"_blank\">http://tonybai.com/2017/06/27/an-intro-about-go-portability/</a>\n</li>\n<li>Go 测试辅助套件 ginkgo <a href=\"http://www.agiratech.com/golang-testing-using-ginkgo/\" rel=\"nofollow\" target=\"_blank\">http://www.agiratech.com/golang-testing-using-ginkgo/</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 438,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 886,
    "title": "这是什么鬼，type xxx = xxx",
    "created_at": "2017-06-28 10:09:41",
    "updated_at": "2017-06-28 10:31:26",
    "replied_at": "2017-06-28 10:31:26",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2154,
    "last_reply_user_login": "z1017371914",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 646,
    "user": "{\"id\": 646, \"name\": \"deepzz\", \"login\": \"deepzz\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "今天一同事发现 golang.org/x/net/ipv4 这个包下面的 batch.go 文件有这个写法：\n```go\ntype Message = socket.Message\n```\n是我眼花了，还是知识面没到，哪位大神能解释以下。",
    "body_html": "<p>今天一同事发现 golang.org/x/net/ipv4 这个包下面的 batch.go 文件有这个写法：</p>\n <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">Message</span> <span class=\"o\">=</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">Message</span>\n</code></pre> \n<p>是我眼花了，还是知识面没到，哪位大神能解释以下。</p>",
    "hits": 363,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 887,
    "title": "go怎么没有条件编译",
    "created_at": "2017-06-29 09:16:10",
    "updated_at": "2017-06-29 13:23:56",
    "replied_at": "2017-06-29 13:23:56",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 379,
    "last_reply_user_login": "maxwell92",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1494,
    "user": "{\"id\": 1494, \"name\": \"stirlingx\", \"login\": \"stirlingx\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "有些时候想写一些debug的代码,像c语言一样，比如\n\n```go\n#ifdef _DEBUG_\n//测试代码\n#else\n//正式代码\n#endif\n```\n但是go没有这样的语法\n\n",
    "body_html": "<p>有些时候想写一些 debug 的代码,像 c 语言一样，比如</p>\n <pre class=\"highlight go\"><code><span class=\"err\">#</span><span class=\"n\">ifdef</span> <span class=\"n\">_DEBUG_</span>\n<span class=\"c\">//测试代码</span>\n<span class=\"err\">#</span><span class=\"k\">else</span>\n<span class=\"c\">//正式代码</span>\n<span class=\"err\">#</span><span class=\"n\">endif</span>\n</code></pre> \n<p>但是 go 没有这样的语法</p>",
    "hits": 588,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 888,
    "title": "GoCN每日新闻(2017-06-29)",
    "created_at": "2017-06-29 10:17:41",
    "updated_at": "2017-06-30 17:08:11",
    "replied_at": "2017-06-30 17:08:11",
    "replies_count": 1,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 2171,
    "last_reply_user_login": "CrazyGoer",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-29)\n\n1. Gogland EAP 10 https://blog.jetbrains.com/go/2017/06/27/gogland-eap-10-is-out-go-1-9-better-remote-debugger-and-more/\n2. Go入门视频教程 https://teamtreehouse.com/library/go-language-overview\n3. Go里面 For 和range的语义分析 https://www.goinggo.net/2017/06/for-range-semantics.html\n4. 怎么条件编译Go https://dave.cheney.net/2013/10/12/how-to-use-conditional-compilation-with-the-go-build-tool\n5. golang dns 查询超时故障定位 https://zhuanlan.zhihu.com/p/27534814\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-29)</p>\n\n<ol>\n<li>Gogland EAP 10 <a href=\"https://blog.jetbrains.com/go/2017/06/27/gogland-eap-10-is-out-go-1-9-better-remote-debugger-and-more/\" rel=\"nofollow\" target=\"_blank\">https://blog.jetbrains.com/go/2017/06/27/gogland-eap-10-is-out-go-1-9-better-remote-debugger-and-more/</a>\n</li>\n<li>Go 入门视频教程 <a href=\"https://teamtreehouse.com/library/go-language-overview\" rel=\"nofollow\" target=\"_blank\">https://teamtreehouse.com/library/go-language-overview</a>\n</li>\n<li>Go 里面 For 和 range 的语义分析 <a href=\"https://www.goinggo.net/2017/06/for-range-semantics.html\" rel=\"nofollow\" target=\"_blank\">https://www.goinggo.net/2017/06/for-range-semantics.html</a>\n</li>\n<li>怎么条件编译 Go <a href=\"https://dave.cheney.net/2013/10/12/how-to-use-conditional-compilation-with-the-go-build-tool\" rel=\"nofollow\" target=\"_blank\">https://dave.cheney.net/2013/10/12/how-to-use-conditional-compilation-with-the-go-build-tool</a>\n</li>\n<li>golang dns 查询超时故障定位 <a href=\"https://zhuanlan.zhihu.com/p/27534814\" rel=\"nofollow\" target=\"_blank\">https://zhuanlan.zhihu.com/p/27534814</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 463,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 889,
    "title": "关于Beego ORM和 request body 的映射问题",
    "created_at": "2017-06-30 00:11:59",
    "updated_at": "2021-01-16 22:26:07",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1751,
    "user": "{\"id\": 1751, \"name\": \"kenticny\", \"login\": \"kenticny\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "首先说下我是Beego初学者，如果问题小白勿喷\n\n首先我定义了一个model，假设名为User，里面有一个字段为一对一关系\n\n```go\ntype User struct {\n\tID        int64    `orm:&quot;pk;auto;column(id)&quot; json:&quot;id&quot;`\n\tAdmin   *User    `orm:&quot;rel(one);column(admin)&quot; json:&quot;admin&quot;`\n}\n```\n\n然后定义一个创建User的api，参数通过request body 以json的形式传递，Admin字段传递对应的UserID\n\n```go\nfunc (c *Controller) CreateUser() {\n\tvar user User\n\tjson.Unmarshal(c.Ctx.Input.RequestBody, &amp;user)\n\t\n\t// c.Ctx.Input.RequestBody 为 {&quot;id&quot;: 2, &quot;admin&quot;: 1}\n\t\n\t// do something...\n}\n```\n\n这里希望通过json映射到User的struct中，但是Admin字段却无法填进去，想请教下这里应该怎么操作？文档只找到了对应form类型的操作，没有找到requestbody形式的操作。",
    "body_html": "<p>首先说下我是 Beego 初学者，如果问题小白勿喷</p>\n\n<p>首先我定义了一个 model，假设名为 User，里面有一个字段为一对一关系</p>\n <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">User</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">ID</span>        <span class=\"kt\">int64</span>    <span class=\"s\">`orm:&amp;quot;pk;auto;column(id)&amp;quot; json:&amp;quot;id&amp;quot;`</span>\n    <span class=\"n\">Admin</span>   <span class=\"o\">*</span><span class=\"n\">User</span>    <span class=\"s\">`orm:&amp;quot;rel(one);column(admin)&amp;quot; json:&amp;quot;admin&amp;quot;`</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>然后定义一个创建 User 的 api，参数通过 request body 以 json 的形式传递，Admin 字段传递对应的 UserID</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"o\">*</span><span class=\"n\">Controller</span><span class=\"p\">)</span> <span class=\"n\">CreateUser</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">var</span> <span class=\"n\">user</span> <span class=\"n\">User</span>\n    <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">Unmarshal</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Ctx</span><span class=\"o\">.</span><span class=\"n\">Input</span><span class=\"o\">.</span><span class=\"n\">RequestBody</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">user</span><span class=\"p\">)</span>\n\n    <span class=\"c\">// c.Ctx.Input.RequestBody 为 {&amp;quot;id&amp;quot;: 2, &amp;quot;admin&amp;quot;: 1}</span>\n\n    <span class=\"c\">// do something...</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>这里希望通过 json 映射到 User 的 struct 中，但是 Admin 字段却无法填进去，想请教下这里应该怎么操作？文档只找到了对应 form 类型的操作，没有找到 requestbody 形式的操作。</p>",
    "hits": 392,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 890,
    "title": "GoCN每日新闻(2017-06-30)",
    "created_at": "2017-06-30 10:22:36",
    "updated_at": "2017-06-30 10:22:36",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-06-30)\n\n1. Go代码调优利器-火焰图 http://lihaoquan.me/2017/1/1/Profiling-and-Optimizing-Go-using-go-torch.html\n2. Golang 互斥锁内部实现 https://zhuanlan.zhihu.com/p/27608263\n3. 有关缓存高可用性的思考 http://t.cn/RoT0mMw\n4. Tensorflow in Go https://github.com/galeone/tfgo\n5. Golang 内核之二：命名参数的好处 https://blog.minio.io/golang-internals-part-2-nice-benefits-of-named-return-values-1e95305c8687\n\n活动预告：\n1. TiDB技术交流会上海场 Tech Day 时间定在 7 月 8 日，http://tidbtechday2017.sxl.cn/\n2. 上海Gopher meetup 报名地址：http://www.bagevent.com/event/569317\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-06-30)</p>\n\n<ol>\n<li>Go 代码调优利器 - 火焰图 <a href=\"http://lihaoquan.me/2017/1/1/Profiling-and-Optimizing-Go-using-go-torch.html\" rel=\"nofollow\" target=\"_blank\">http://lihaoquan.me/2017/1/1/Profiling-and-Optimizing-Go-using-go-torch.html</a>\n</li>\n<li>Golang 互斥锁内部实现 <a href=\"https://zhuanlan.zhihu.com/p/27608263\" rel=\"nofollow\" target=\"_blank\">https://zhuanlan.zhihu.com/p/27608263</a>\n</li>\n<li>有关缓存高可用性的思考 <a href=\"http://t.cn/RoT0mMw\" rel=\"nofollow\" target=\"_blank\">http://t.cn/RoT0mMw</a>\n</li>\n<li>Tensorflow in Go <a href=\"https://github.com/galeone/tfgo\" rel=\"nofollow\" target=\"_blank\">https://github.com/galeone/tfgo</a>\n</li>\n<li>Golang 内核之二：命名参数的好处 <a href=\"https://blog.minio.io/golang-internals-part-2-nice-benefits-of-named-return-values-1e95305c8687\" rel=\"nofollow\" target=\"_blank\">https://blog.minio.io/golang-internals-part-2-nice-benefits-of-named-return-values-1e95305c8687</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>TiDB 技术交流会上海场 Tech Day 时间定在 7 月 8 日，<a href=\"http://tidbtechday2017.sxl.cn/\" rel=\"nofollow\" target=\"_blank\">http://tidbtechday2017.sxl.cn/</a>\n</li>\n<li>上海 Gopher meetup 报名地址：<a href=\"http://www.bagevent.com/event/569317\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/569317</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 419,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 891,
    "title": "Go 扩展包 netutil.LimitListener 如何接入 beego？",
    "created_at": "2017-06-30 17:10:23",
    "updated_at": "2021-01-16 22:26:08",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 124,
    "user": "{\"id\": 124, \"name\": \"mnhkahn\", \"login\": \"mnhkahn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "这个[扩展包](https://github.com/golang/net/blob/master/netutil/listen.go)看起来可以解决原生 http 无法限流的问题。看起来很不错，看beego代码貌似不支持。谢大有招么？或者beego 未来会计划支持这个么？",
    "body_html": "<p>这个<a href=\"https://github.com/golang/net/blob/master/netutil/listen.go\" rel=\"nofollow\" target=\"_blank\" title=\"\">扩展包</a>看起来可以解决原生 http 无法限流的问题。看起来很不错，看 beego 代码貌似不支持。谢大有招么？或者 beego 未来会计划支持这个么？</p>",
    "hits": 339,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 892,
    "title": "这段时间总感觉很困惑",
    "created_at": "2017-06-30 17:13:12",
    "updated_at": "2017-07-03 10:18:21",
    "replied_at": "2017-07-03 10:18:21",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2012,
    "last_reply_user_login": "plain",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 45,
    "user": "{\"id\": 45, \"name\": \"小张的烦恼\", \"login\": \"zhangyumingtfr\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我也做了一年多了，但是感觉很困惑，是那种数据库，ｌｉｎｕｘ，ｇｏｌａｎｇ，ｊａｖａ什么都会一点的那种，现在主攻ｇｏｌａｎｇ，但是总感觉很空，想请指导一下，这种感觉很正常吗？应该怎么做，才能很快的走出这个勉强可以称之为瓶颈期的时段？",
    "body_html": "<p>我也做了一年多了，但是感觉很困惑，是那种数据库，ｌｉｎｕｘ，ｇｏｌａｎｇ，ｊａｖａ什么都会一点的那种，现在主攻ｇｏｌａｎｇ，但是总感觉很空，想请指导一下，这种感觉很正常吗？应该怎么做，才能很快的走出这个勉强可以称之为瓶颈期的时段？</p>",
    "hits": 442,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 893,
    "title": "GoCN每日新闻(2017-07-01)",
    "created_at": "2017-07-01 11:06:27",
    "updated_at": "2017-07-01 11:06:27",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-01)\n\n1. Defer的使用规则 https://chinazt.cc/2017/06/30/deferde-shi-yong-gui-ze/\n2. Go Tooling in Action https://github.com/campoy/go-tooling-workshop\n3. 为什么Go的接口设计是极好的 http://blog.teamtreehouse.com/go-interfaces-awesome\n4. Go写的TCP Proxy https://godoc.org/github.com/bradfitz/tcpproxy\n5. Docker 安全策略最佳实战 https://blog.sqreen.io/docker-security/\n\n每月荐书：《活法》（稻盛和夫）\n\n在《活法》中，我将正面追问什么是人生的真理？生活的意义何在？人生应有的状态是什么？我将毫无顾忌地阐述我在这些重大问题上的基本思想，将我这根小小的木桩打进时代的激流。\n\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-01)</p>\n\n<ol>\n<li>Defer 的使用规则 <a href=\"https://chinazt.cc/2017/06/30/deferde-shi-yong-gui-ze/\" rel=\"nofollow\" target=\"_blank\">https://chinazt.cc/2017/06/30/deferde-shi-yong-gui-ze/</a>\n</li>\n<li>Go Tooling in Action <a href=\"https://github.com/campoy/go-tooling-workshop\" rel=\"nofollow\" target=\"_blank\">https://github.com/campoy/go-tooling-workshop</a>\n</li>\n<li>为什么 Go 的接口设计是极好的 <a href=\"http://blog.teamtreehouse.com/go-interfaces-awesome\" rel=\"nofollow\" target=\"_blank\">http://blog.teamtreehouse.com/go-interfaces-awesome</a>\n</li>\n<li>Go 写的 TCP Proxy <a href=\"https://godoc.org/github.com/bradfitz/tcpproxy\" rel=\"nofollow\" target=\"_blank\">https://godoc.org/github.com/bradfitz/tcpproxy</a>\n</li>\n<li>Docker 安全策略最佳实战 <a href=\"https://blog.sqreen.io/docker-security/\" rel=\"nofollow\" target=\"_blank\">https://blog.sqreen.io/docker-security/</a>\n</li>\n</ol>\n\n<p>每月荐书：《活法》（稻盛和夫）</p>\n\n<p>在《活法》中，我将正面追问什么是人生的真理？生活的意义何在？人生应有的状态是什么？我将毫无顾忌地阐述我在这些重大问题上的基本思想，将我这根小小的木桩打进时代的激流。</p>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 302,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 895,
    "title": "怎么删除发起的问题",
    "created_at": "2017-07-01 14:42:01",
    "updated_at": "2017-07-03 09:40:01",
    "replied_at": "2017-07-03 09:40:01",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 887,
    "user": "{\"id\": 887, \"name\": \"haohongfan\", \"login\": \"haohongfan\", \"avatar\": \"https://static.gocn.vip/user/avatar/887/977be8.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 323,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 896,
    "title": "GoCN每日新闻(2017-07-02)",
    "created_at": "2017-07-02 12:16:11",
    "updated_at": "2017-07-02 12:16:11",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-02)\n\n1. Go并发的一些技巧 http://udhos.github.io/golang-concurrency-tricks/\n2. Go interface 实现细节 http://legendtkl.com/2017/07/01/golang-interface-implement/\n3. Laravel + go-micro + grpc 实践基于 Zipkin 的分布式链路追踪系统 https://mp.weixin.qq.com/s/JkLMNabnYbod-b4syMB3Hw\n4. MySQL双主一致性架构优化 https://mp.weixin.qq.com/s/sCjzzi9VXPk-JcWXySfHgw\n5. Elasticsearch Go 客户端https://olivere.github.io/elastic/\n\n活动预告：\n1. TiDB技术交流会上海场 Tech Day 时间定在 7 月 8 日，http://tidbtechday2017.sxl.cn/\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-02)</p>\n\n<ol>\n<li>Go 并发的一些技巧 <a href=\"http://udhos.github.io/golang-concurrency-tricks/\" rel=\"nofollow\" target=\"_blank\">http://udhos.github.io/golang-concurrency-tricks/</a>\n</li>\n<li>Go interface 实现细节 <a href=\"http://legendtkl.com/2017/07/01/golang-interface-implement/\" rel=\"nofollow\" target=\"_blank\">http://legendtkl.com/2017/07/01/golang-interface-implement/</a>\n</li>\n<li>Laravel + go-micro + grpc 实践基于 Zipkin 的分布式链路追踪系统 <a href=\"https://mp.weixin.qq.com/s/JkLMNabnYbod-b4syMB3Hw\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/JkLMNabnYbod-b4syMB3Hw</a>\n</li>\n<li>MySQL 双主一致性架构优化 <a href=\"https://mp.weixin.qq.com/s/sCjzzi9VXPk-JcWXySfHgw\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/sCjzzi9VXPk-JcWXySfHgw</a>\n</li>\n<li>Elasticsearch Go 客户端<a href=\"https://olivere.github.io/elastic/\" rel=\"nofollow\" target=\"_blank\">https://olivere.github.io/elastic/</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>TiDB 技术交流会上海场 Tech Day 时间定在 7 月 8 日，<a href=\"http://tidbtechday2017.sxl.cn/\" rel=\"nofollow\" target=\"_blank\">http://tidbtechday2017.sxl.cn/</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 462,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 897,
    "title": "RobotGo v0.45.0 发布, 增加进程管理和剪贴板",
    "created_at": "2017-07-02 22:40:38",
    "updated_at": "2017-07-02 22:40:38",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 183,
    "user": "{\"id\": 183, \"name\": \"veni\", \"login\": \"veni\", \"avatar\": \"https://gocn.vip/system/letter_avatars/v.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "RobotGo v0.45.0 发布了，Golang 跨平台控制鼠标、键盘、位图、屏幕、窗口句柄以及全局事件监听。\n\n更新:\n- go get -u github.com/go-vgo/robotgo\n\n主要变更：\n- 增加 Process\n- 增加 TypeStr\n- 增加 DeepCopyBit\n- 增加 CopyBitpb\n- 增加 ReadBitmap\n- 增加 vendor.json\n- 增加 ReadAll: 剪贴板\n- 增加 WriteAll: 剪贴板\n- 增加 Pids : 获取所有进程 id\n- 增加 FindName: 通过进程 id 查找进程名\n- 增加 FindNames: 获取所有进程 name\n- 增加 PidExists: 判断进程是否存在\n- 增加 FindIds: 查找进程 Id 通过进程 name\n- 增加 FreeBitmap and 更新 docs\n- 格式化代码\n\n更新:\n- 更新 Test\n- 更新 godoc 和 docs\n- 更新 CHANGELOG.md\n- 更新.gitignore\n- 更新 examples 和文档\n- 更新 examples link\n- 更新 README.md 和 clipboard\n\n修复:\n- 修复 release key\n- 修复 godoc error\n\n项目地址 ：https://github.com/go-vgo/robotgo",
    "body_html": "<p>RobotGo v0.45.0 发布了，Golang 跨平台控制鼠标、键盘、位图、屏幕、窗口句柄以及全局事件监听。</p>\n\n<p>更新:</p>\n\n<ul>\n<li>go get -u github.com/go-vgo/robotgo</li>\n</ul>\n\n<p>主要变更：</p>\n\n<ul>\n<li>增加 Process</li>\n<li>增加 TypeStr</li>\n<li>增加 DeepCopyBit</li>\n<li>增加 CopyBitpb</li>\n<li>增加 ReadBitmap</li>\n<li>增加 vendor.json</li>\n<li>增加 ReadAll: 剪贴板</li>\n<li>增加 WriteAll: 剪贴板</li>\n<li>增加 Pids : 获取所有进程 id</li>\n<li>增加 FindName: 通过进程 id 查找进程名</li>\n<li>增加 FindNames: 获取所有进程 name</li>\n<li>增加 PidExists: 判断进程是否存在</li>\n<li>增加 FindIds: 查找进程 Id 通过进程 name</li>\n<li>增加 FreeBitmap and 更新 docs</li>\n<li>格式化代码</li>\n</ul>\n\n<p>更新:</p>\n\n<ul>\n<li>更新 Test</li>\n<li>更新 godoc 和 docs</li>\n<li>更新 CHANGELOG.md</li>\n<li>更新.gitignore</li>\n<li>更新 examples 和文档</li>\n<li>更新 examples link</li>\n<li>更新 README.md 和 clipboard</li>\n</ul>\n\n<p>修复:</p>\n\n<ul>\n<li>修复 release key</li>\n<li>修复 godoc error</li>\n</ul>\n\n<p>项目地址 ：<a href=\"https://github.com/go-vgo/robotgo\" rel=\"nofollow\" target=\"_blank\">https://github.com/go-vgo/robotgo</a></p>",
    "hits": 426,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 898,
    "title": "GoCN每日新闻(2017-07-03)",
    "created_at": "2017-07-03 10:30:05",
    "updated_at": "2017-07-03 10:30:05",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-03)\n\n1. 扩充Web服务：负载均衡 https://blog.vivekpanyam.com/scaling-a-web-service-load-balancing/\n2. 如何优雅地关闭Go channel http://www.jianshu.com/p/d24dfbb33781\n3. Debugging go routine leaks:  https://youtu.be/hWo0FEVr92A\n4. Go错误处理最佳实践 https://medium.com/@sebdah/go-best-practices-error-handling-2d15e1f0c5ee\n5. 上海Gopher meetup 演讲稿 https://github.com/gopherchina/meetup/tree/master/ShangHai/20170701\n\n\n活动预告：\n1. TiDB技术交流会上海场 Tech Day 时间定在 7 月 8 日，http://tidbtechday2017.sxl.cn/\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-03)</p>\n\n<ol>\n<li>扩充 Web 服务：负载均衡 <a href=\"https://blog.vivekpanyam.com/scaling-a-web-service-load-balancing/\" rel=\"nofollow\" target=\"_blank\">https://blog.vivekpanyam.com/scaling-a-web-service-load-balancing/</a>\n</li>\n<li>如何优雅地关闭 Go channel <a href=\"http://www.jianshu.com/p/d24dfbb33781\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/d24dfbb33781</a>\n</li>\n<li>Debugging go routine leaks:&nbsp;<span class=\"embed-responsive embed-responsive-16by9\"><iframe class=\"embed-responsive-item\" src=\"//www.youtube.com/embed/hWo0FEVr92A\" allowfullscreen=\"\"></iframe></span>\n</li>\n<li>Go 错误处理最佳实践 <a href=\"https://medium.com/@sebdah/go-best-practices-error-handling-2d15e1f0c5ee\" rel=\"nofollow\" target=\"_blank\">https://medium.com/@sebdah/go-best-practices-error-handling-2d15e1f0c5ee</a>\n</li>\n<li>上海 Gopher meetup 演讲稿 <a href=\"https://github.com/gopherchina/meetup/tree/master/ShangHai/20170701\" rel=\"nofollow\" target=\"_blank\">https://github.com/gopherchina/meetup/tree/master/ShangHai/20170701</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>TiDB 技术交流会上海场 Tech Day 时间定在 7 月 8 日，<a href=\"http://tidbtechday2017.sxl.cn/\" rel=\"nofollow\" target=\"_blank\">http://tidbtechday2017.sxl.cn/</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 433,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 899,
    "title": "[杭州] 阿里中间件招 golang 工程师 （已结束）",
    "created_at": "2017-07-03 12:25:44",
    "updated_at": "2017-07-18 17:15:37",
    "replied_at": "2017-07-18 17:15:37",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1902,
    "last_reply_user_login": "hoosin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 740,
    "user": "{\"id\": 740, \"name\": \"ayanamist\", \"login\": \"ayanamist\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "已结束\n\n阿里中间件是阿里集团负责业务底层共享技术及部分技术基础设施的。\n\n招聘的这个岗位，会负责一个没有其它互联网公司投入生产环境的创新技术，负责集团的一个底层基础设施的开发，为上层的业务部门提供技术生态保障。\n\n这是我个人负责招聘的岗位，进来后，我将和你一起共同完成这个项目。\n\n需要你有：\n1. 扎实的 Linux 系统开发经验。\n2. 熟悉高并发、网络编程，熟悉系统高可用和稳定性方法策略。\n3. 两年以上工作经验，其中 golang 开发经验至少一年；或者 Java/C/C++至少三年且愿意尝试 golang 语言开发。\n4. 善于独立思考，有快速学习能力，不断突破技术瓶颈，乐于探索陌生技术并将其付诸实践。\n5. 欢迎在简历中附上技术博客、Github 提交记录，我会认真查看。\n\n待遇：\n业内领先的薪资，13 薪，3-6 个月及以上的年终奖、股票等等。\n\n简历请投递到：ayanamist at gmail dot com\n\n如果对岗位有疑问，可以通过回复本帖，或邮箱直接联系我，看到后会第一时间回复。\n\n可以帮忙内推阿里集团其它岗位。\n\n07.14更新：岗位依旧空缺中。",
    "body_html": "<p>已结束</p>\n\n<p>阿里中间件是阿里集团负责业务底层共享技术及部分技术基础设施的。</p>\n\n<p>招聘的这个岗位，会负责一个没有其它互联网公司投入生产环境的创新技术，负责集团的一个底层基础设施的开发，为上层的业务部门提供技术生态保障。</p>\n\n<p>这是我个人负责招聘的岗位，进来后，我将和你一起共同完成这个项目。</p>\n\n<p>需要你有：</p>\n\n<ol>\n<li>扎实的 Linux 系统开发经验。</li>\n<li>熟悉高并发、网络编程，熟悉系统高可用和稳定性方法策略。</li>\n<li>两年以上工作经验，其中 golang 开发经验至少一年；或者 Java/C/C++ 至少三年且愿意尝试 golang 语言开发。</li>\n<li>善于独立思考，有快速学习能力，不断突破技术瓶颈，乐于探索陌生技术并将其付诸实践。</li>\n<li>欢迎在简历中附上技术博客、Github 提交记录，我会认真查看。</li>\n</ol>\n\n<p>待遇：\n业内领先的薪资，13 薪，3-6 个月及以上的年终奖、股票等等。</p>\n\n<p>简历请投递到：ayanamist at gmail dot com</p>\n\n<p>如果对岗位有疑问，可以通过回复本帖，或邮箱直接联系我，看到后会第一时间回复。</p>\n\n<p>可以帮忙内推阿里集团其它岗位。</p>\n\n<p>07.14 更新：岗位依旧空缺中。</p>",
    "hits": 638,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 900,
    "title": "腾讯深圳招聘 GO语言服务器端开发工程师（5名）",
    "created_at": "2017-07-04 07:41:11",
    "updated_at": "2017-07-04 10:20:04",
    "replied_at": "2017-07-04 10:20:04",
    "replies_count": 2,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 2173,
    "last_reply_user_login": "shuaicode",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2184,
    "user": "{\"id\": 2184, \"name\": \"chunhua\", \"login\": \"chunhua\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GO语言服务器端开发工程师（5名）\n岗位职责：\n1.完成基于go/redis/mysql等技术的服务器端API开发，使之能支撑十万用户级的企业应用。\n2.负责项目的设计、编码、调优、测试及Bug处理；\n3.负责产品服务端开发，不断进行产品演进，提高产品质量和用户体验；\n4.根据产品需求，写出良好的解决方案。\n\n任职要求：\n1.本科及以上学历，计算机相关专业，两年以上服务端研发经验；\n2.深入理解计算机原理，有扎实的数据结构和算法基础；\n3.深入理解linux系统及其原理，了解windows服务器，熟悉TCP/IP、HTTP协议以及网络编程；\n4.良好的编码和文档习惯，对代码美感的追求孜孜不倦；\n5.精通Go语言，熟悉C/C++/Python优先；\n6.熟悉常用的sql、nosql数据库原理，阅读和理解优秀的开源系统代码；\n7.具有分布式系统设计和开发经验者优先。\n\n联系chunhuahong#tencent.com\n邮件#替换为@",
    "body_html": "<p>GO 语言服务器端开发工程师（5 名）\n岗位职责：\n1.完成基于 go/redis/mysql 等技术的服务器端 API 开发，使之能支撑十万用户级的企业应用。\n2.负责项目的设计、编码、调优、测试及 Bug 处理；\n3.负责产品服务端开发，不断进行产品演进，提高产品质量和用户体验；\n4.根据产品需求，写出良好的解决方案。</p>\n\n<p>任职要求：\n1.本科及以上学历，计算机相关专业，两年以上服务端研发经验；\n2.深入理解计算机原理，有扎实的数据结构和算法基础；\n3.深入理解 linux 系统及其原理，了解 windows 服务器，熟悉 TCP/IP、HTTP 协议以及网络编程；\n4.良好的编码和文档习惯，对代码美感的追求孜孜不倦；\n5.精通 Go 语言，熟悉 C/C++/Python 优先；\n6.熟悉常用的 sql、nosql 数据库原理，阅读和理解优秀的开源系统代码；\n7.具有分布式系统设计和开发经验者优先。</p>\n\n<p>联系 chunhuahong#tencent.com\n邮件 # 替换为 @</p>",
    "hits": 582,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 901,
    "title": "GoCN每日新闻(2017-07-04)",
    "created_at": "2017-07-04 09:44:37",
    "updated_at": "2017-07-04 09:44:37",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-04)\n\n1. Go1.9 sync.map使用及内部实现 https://zhuanlan.zhihu.com/p/27642824\n2. Go unsafe 包之内存布局 http://t.cn/RoeJIeM\n3. Go并发不等于并行 https://chinazt.cc/2017/07/03/golangde-bing-fa-bu-deng-yu-bing-xing/\n4. Postgres 性能调优指南 https://www.justwatch.com/blog/post/debugging-postgresql-performance-the-hard-way/\n5. Websocket实现原理 http://zeeyang.com/2017/07/02/websocket/\n\n\n招聘信息：\n1. 腾讯 【深圳】 Go工程师 https://gocn.io/question/900\n2. 阿里 【杭州】 Go工程师 https://gocn.io/question/899\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-04)</p>\n\n<ol>\n<li>Go1.9 sync.map 使用及内部实现 <a href=\"https://zhuanlan.zhihu.com/p/27642824\" rel=\"nofollow\" target=\"_blank\">https://zhuanlan.zhihu.com/p/27642824</a>\n</li>\n<li>Go unsafe 包之内存布局 <a href=\"http://t.cn/RoeJIeM\" rel=\"nofollow\" target=\"_blank\">http://t.cn/RoeJIeM</a>\n</li>\n<li>Go 并发不等于并行 <a href=\"https://chinazt.cc/2017/07/03/golangde-bing-fa-bu-deng-yu-bing-xing/\" rel=\"nofollow\" target=\"_blank\">https://chinazt.cc/2017/07/03/golangde-bing-fa-bu-deng-yu-bing-xing/</a>\n</li>\n<li>Postgres 性能调优指南 <a href=\"https://www.justwatch.com/blog/post/debugging-postgresql-performance-the-hard-way/\" rel=\"nofollow\" target=\"_blank\">https://www.justwatch.com/blog/post/debugging-postgresql-performance-the-hard-way/</a>\n</li>\n<li>Websocket 实现原理 <a href=\"http://zeeyang.com/2017/07/02/websocket/\" rel=\"nofollow\" target=\"_blank\">http://zeeyang.com/2017/07/02/websocket/</a>\n</li>\n</ol>\n\n<p>招聘信息：</p>\n\n<ol>\n<li>腾讯【深圳】Go 工程师 <a href=\"https://gocn.io/question/900\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/900</a>\n</li>\n<li>阿里【杭州】Go 工程师 <a href=\"https://gocn.io/question/899\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/899</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 401,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 903,
    "title": "北京-奇虎360  招聘golang开发工程师",
    "created_at": "2017-07-04 16:16:28",
    "updated_at": "2017-07-04 16:16:28",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 149,
    "user": "{\"id\": 149, \"name\": \"viktor1992\", \"login\": \"viktor1992\", \"avatar\": \"https://gocn.vip/system/letter_avatars/v.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我们求贤若渴，诚招英才，这里有融洽的团队氛围，一颗颗愿意与你携手成长、分享成功的心。\n\n\n运维开发工程师\n岗位职责：\n负责超大规模监控系统维护，保障监控系统高可用；\n\n\n了解业界主流监控系统设计理念，不断优化和改造现有架构；\n\n\n能够根据业务需求对监控系统进行开发和改造；\n\n\n任职要求：\n本科以上学历，1-3年工作经验；\n\n\n对Linux/Unix等操作系统原理有深入的理解；\n\n\n熟练运用Golang开发语言,了解协程和并发锁相关原理；\n\n\n深入了解open-falcon/Prometheus等现代化监控系统，并能够对其进行二次开发；\n\n\n有open-falcon二次开发经验者优先；\n\n\n良好沟通能力，能够推进项目顺利进行;\n\n\n我们是奇虎360公司WEB平台部应用运维团队-addops，主要工作在日常运维，虚拟化，容器化，运维工具开发，智能运维探索等领域。\n技术博客 https://www.addops.cn\n\n\n简历请投递到 xusiliang@360.cn",
    "body_html": "<p>我们求贤若渴，诚招英才，这里有融洽的团队氛围，一颗颗愿意与你携手成长、分享成功的心。</p>\n\n<p>运维开发工程师\n岗位职责：\n负责超大规模监控系统维护，保障监控系统高可用；</p>\n\n<p>了解业界主流监控系统设计理念，不断优化和改造现有架构；</p>\n\n<p>能够根据业务需求对监控系统进行开发和改造；</p>\n\n<p>任职要求：\n本科以上学历，1-3 年工作经验；</p>\n\n<p>对 Linux/Unix 等操作系统原理有深入的理解；</p>\n\n<p>熟练运用 Golang 开发语言,了解协程和并发锁相关原理；</p>\n\n<p>深入了解 open-falcon/Prometheus 等现代化监控系统，并能够对其进行二次开发；</p>\n\n<p>有 open-falcon 二次开发经验者优先；</p>\n\n<p>良好沟通能力，能够推进项目顺利进行;</p>\n\n<p>我们是奇虎 360 公司 WEB 平台部应用运维团队-addops，主要工作在日常运维，虚拟化，容器化，运维工具开发，智能运维探索等领域。\n技术博客 <a href=\"https://www.addops.cn\" rel=\"nofollow\" target=\"_blank\">https://www.addops.cn</a></p>\n\n<p>简历请投递到 xusiliang@360.cn</p>",
    "hits": 507,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 904,
    "title": "GoCN每日新闻(2017-07-05)",
    "created_at": "2017-07-05 09:43:51",
    "updated_at": "2017-07-05 09:43:51",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-05)\n\n1. 搭建Go runtime metrics 环境 http://tonybai.com/2017/07/04/setup-go-runtime-metrics-for-yourself/\n2. Go里面如何免费用https https://blog.kowalczyk.info/article/Jl3G/https-for-free-in-go.html\n3. 详解微服务实践 从架构到部署 http://www.toutiao.com/i6436359163621671426/\n4. Go 1.9新特性：profiler labels https://rakyll.org/profiler-labels/\n5. HttpDns 原理是什么 http://www.linkedkeeper.com/detail/blog.action?bid=171\n\n招聘信息\n1. 【北京】奇虎360 运维工程师 https://gocn.io/question/902\n2. 【北京】奇虎360 开发工程师 https://gocn.io/question/903\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-05)</p>\n\n<ol>\n<li>搭建 Go runtime metrics 环境 <a href=\"http://tonybai.com/2017/07/04/setup-go-runtime-metrics-for-yourself/\" rel=\"nofollow\" target=\"_blank\">http://tonybai.com/2017/07/04/setup-go-runtime-metrics-for-yourself/</a>\n</li>\n<li>Go 里面如何免费用 https <a href=\"https://blog.kowalczyk.info/article/Jl3G/https-for-free-in-go.html\" rel=\"nofollow\" target=\"_blank\">https://blog.kowalczyk.info/article/Jl3G/https-for-free-in-go.html</a>\n</li>\n<li>详解微服务实践 从架构到部署 <a href=\"http://www.toutiao.com/i6436359163621671426/\" rel=\"nofollow\" target=\"_blank\">http://www.toutiao.com/i6436359163621671426/</a>\n</li>\n<li>Go 1.9 新特性：profiler labels <a href=\"https://rakyll.org/profiler-labels/\" rel=\"nofollow\" target=\"_blank\">https://rakyll.org/profiler-labels/</a>\n</li>\n<li>HttpDns 原理是什么 <a href=\"http://www.linkedkeeper.com/detail/blog.action?bid=171\" rel=\"nofollow\" target=\"_blank\">http://www.linkedkeeper.com/detail/blog.action?bid=171</a>\n</li>\n</ol>\n\n<p>招聘信息</p>\n\n<ol>\n<li>【北京】奇虎 360 运维工程师 <a href=\"https://gocn.io/question/902\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/902</a>\n</li>\n<li>【北京】奇虎 360 开发工程师 <a href=\"https://gocn.io/question/903\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/903</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 474,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 905,
    "title": "struct 嵌套这样定义好吗",
    "created_at": "2017-07-05 11:07:03",
    "updated_at": "2017-07-05 11:09:14",
    "replied_at": "2017-07-05 11:09:14",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1416,
    "last_reply_user_login": "taowen",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1494,
    "user": "{\"id\": 1494, \"name\": \"stirlingx\", \"login\": \"stirlingx\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "go的struct 还可以这样嵌套定义，哈哈\n\n```go\ntype YouMengMsg struct {\n\tAppkey       string `json:&quot;appkey&quot;`\n\tTimestamp    string `json:&quot;timestamp&quot;`\n\tType         string `json:&quot;type&quot;`\n\tDeviceTokens string `json:&quot;device_tokens&quot;`\n\n\tPayload struct {\n\t\tDisplayType string `json:&quot;display_type&quot;`\n\t\tBody        struct {\n\t\t\tTicker    string `json:&quot;ticker&quot;`\n\t\t\tTitle     string `json:&quot;title&quot;`\n\t\t\tText      string `json:&quot;text&quot;`\n\t\t\tAfterOpen string `json:&quot;after_open&quot;`\n\t\t} `json:&quot;body&quot;`\n\t} `json:&quot;payload&quot;`\n}\n```",
    "body_html": "<p>go 的 struct 还可以这样嵌套定义，哈哈</p>\n <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">YouMengMsg</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Appkey</span>       <span class=\"kt\">string</span> <span class=\"s\">`json:&amp;quot;appkey&amp;quot;`</span>\n    <span class=\"n\">Timestamp</span>    <span class=\"kt\">string</span> <span class=\"s\">`json:&amp;quot;timestamp&amp;quot;`</span>\n    <span class=\"n\">Type</span>         <span class=\"kt\">string</span> <span class=\"s\">`json:&amp;quot;type&amp;quot;`</span>\n    <span class=\"n\">DeviceTokens</span> <span class=\"kt\">string</span> <span class=\"s\">`json:&amp;quot;device_tokens&amp;quot;`</span>\n\n    <span class=\"n\">Payload</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n        <span class=\"n\">DisplayType</span> <span class=\"kt\">string</span> <span class=\"s\">`json:&amp;quot;display_type&amp;quot;`</span>\n        <span class=\"n\">Body</span>        <span class=\"k\">struct</span> <span class=\"p\">{</span>\n            <span class=\"n\">Ticker</span>    <span class=\"kt\">string</span> <span class=\"s\">`json:&amp;quot;ticker&amp;quot;`</span>\n            <span class=\"n\">Title</span>     <span class=\"kt\">string</span> <span class=\"s\">`json:&amp;quot;title&amp;quot;`</span>\n            <span class=\"n\">Text</span>      <span class=\"kt\">string</span> <span class=\"s\">`json:&amp;quot;text&amp;quot;`</span>\n            <span class=\"n\">AfterOpen</span> <span class=\"kt\">string</span> <span class=\"s\">`json:&amp;quot;after_open&amp;quot;`</span>\n        <span class=\"p\">}</span> <span class=\"s\">`json:&amp;quot;body&amp;quot;`</span>\n    <span class=\"p\">}</span> <span class=\"s\">`json:&amp;quot;payload&amp;quot;`</span>\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 455,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 906,
    "title": "【北京】VMware公司招聘Golang开发工程师",
    "created_at": "2017-07-05 12:00:59",
    "updated_at": "2017-07-05 12:00:59",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2188,
    "user": "{\"id\": 2188, \"name\": \"henryzhang\", \"login\": \"henryzhang\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "VMware公司云原生（cloud native）团队为开发容器平台项目需要，（包括最受欢迎的容器镜像仓库 Harbor 在内的 vSphere Integrated Containers等开源项目），现招聘golang开发工程师，从MTS到Staff level，坐标北京，要求如下：\n\n1.要求熟悉 Go 语言，了解容器／Docker原理；\n2.有云计算和分布式系统背景优先；\n3.熟悉 DevOps CI/CD流程优先；\n4.本科及以上学历，计算机相关专业；\n5.2-10年后端研发经验；\n6.有扎实的数据结构和算法基础；\n7.理解linux系统及其原理；\n\n这是一支站在业界最前沿、充满活力的团队，欢迎加入我们。待遇优厚，年终奖+股票，并有诸多出国交流机会，请转发给感兴趣的朋友。\n\n**相关项目链接：**\nHarbor： https://github.com/vmware/harbor\nVIC： https://github.com/vmware/vic\n\n简历发送：harbor at vmware.com ",
    "body_html": "<p>VMware 公司云原生（cloud native）团队为开发容器平台项目需要，（包括最受欢迎的容器镜像仓库 Harbor 在内的 vSphere Integrated Containers 等开源项目），现招聘 golang 开发工程师，从 MTS 到 Staff level，坐标北京，要求如下：</p>\n\n<p>1.要求熟悉 Go 语言，了解容器／Docker 原理；\n2.有云计算和分布式系统背景优先；\n3.熟悉 DevOps CI/CD 流程优先；\n4.本科及以上学历，计算机相关专业；\n5.2-10 年后端研发经验；\n6.有扎实的数据结构和算法基础；\n7.理解 linux 系统及其原理；</p>\n\n<p>这是一支站在业界最前沿、充满活力的团队，欢迎加入我们。待遇优厚，年终奖 + 股票，并有诸多出国交流机会，请转发给感兴趣的朋友。</p>\n\n<p><strong>相关项目链接：</strong>\nHarbor： <a href=\"https://github.com/vmware/harbor\" rel=\"nofollow\" target=\"_blank\">https://github.com/vmware/harbor</a>\nVIC： <a href=\"https://github.com/vmware/vic\" rel=\"nofollow\" target=\"_blank\">https://github.com/vmware/vic</a></p>\n\n<p>简历发送：harbor at vmware.com </p>",
    "hits": 526,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 907,
    "title": "【罗辑思维招聘】 Go高级研发工程师",
    "created_at": "2017-07-05 18:43:31",
    "updated_at": "2017-07-05 18:43:31",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2192,
    "user": "{\"id\": 2192, \"name\": \"老沈\", \"login\": \"superdev\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "【Go高级研发工程师】\n\n工作职责：\n\n1. 采用Go语言(Golang)开发稳健可扩展的后端程序；\n2. 负责得到app服务端的基础架构优化及升级，不断提升代码质量、可扩展性和可维护性；\n3. 根据公司产品需要不断提高产品用户体验和更好实现业务目标；\n4. 根据技术部门要求完成技术研究工作，并输出研究成果和推动成果落地工作。\n\n任职要求：\n\n1. 计算机或者数学相关专业，本科以及以上学历；\n2. 具有3年以上Go/PHP一种或以上服务端开发经验，以及熟悉相关语言下的常用技术框架；\n3. 对函数式编程思想有研究，且深入理解面向对象编程设计理念，对设计模式和设计原则有较好的把握，有大型项目的研发经验；\n4. 精通MySQL/SqlServer/Oracle一种或以上关系数据库使用；\n5. 熟悉Redis、rabbitmq、gRPC等常见的开源系统\n6. 有良好的代码习惯，要求结构清晰，命名规范；\n7. 良好的沟通能力、学习能力、团队协作能力；\n8. 良好的产品意识，能够根据业务持续输出产品优化思路。\n9. 有性能优化，算法优化开发经验为佳。\n\n邮箱：shenrenkui@luojilab.com",
    "body_html": "<p>【Go 高级研发工程师】</p>\n\n<p>工作职责：</p>\n\n<ol>\n<li>采用 Go 语言 (Golang) 开发稳健可扩展的后端程序；</li>\n<li>负责得到 app 服务端的基础架构优化及升级，不断提升代码质量、可扩展性和可维护性；</li>\n<li>根据公司产品需要不断提高产品用户体验和更好实现业务目标；</li>\n<li>根据技术部门要求完成技术研究工作，并输出研究成果和推动成果落地工作。</li>\n</ol>\n\n<p>任职要求：</p>\n\n<ol>\n<li>计算机或者数学相关专业，本科以及以上学历；</li>\n<li>具有 3 年以上 Go/PHP 一种或以上服务端开发经验，以及熟悉相关语言下的常用技术框架；</li>\n<li>对函数式编程思想有研究，且深入理解面向对象编程设计理念，对设计模式和设计原则有较好的把握，有大型项目的研发经验；</li>\n<li>精通 MySQL/SqlServer/Oracle 一种或以上关系数据库使用；</li>\n<li>熟悉 Redis、rabbitmq、gRPC 等常见的开源系统</li>\n<li>有良好的代码习惯，要求结构清晰，命名规范；</li>\n<li>良好的沟通能力、学习能力、团队协作能力；</li>\n<li>良好的产品意识，能够根据业务持续输出产品优化思路。</li>\n<li>有性能优化，算法优化开发经验为佳。</li>\n</ol>\n\n<p>邮箱：shenrenkui@luojilab.com</p>",
    "hits": 481,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 908,
    "title": "如何优雅地打印树(用栈实现)",
    "created_at": "2017-07-05 20:51:20",
    "updated_at": "2017-07-06 14:03:51",
    "replied_at": "2017-07-06 14:03:51",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1541,
    "last_reply_user_login": "meilihao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1541,
    "user": "{\"id\": 1541, \"name\": \"meilihao\", \"login\": \"meilihao\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\n// 节点的数据结构\ntype Router struct {\n\tParent *Router\n\tName   string\n\tChild  []*Router\n}\n\nfunc (r *Router) Group(name string, fn func(*Router)) {\n\trr := &amp;Router{\n\t\tName:   name,\n\t\tParent: r,\n\t}\n\n\tr.Child = append(r.Child, rr)\n\n\tfn(rr)\n}\n\nfunc (r *Router) Add(name string) {\n\trr := &amp;Router{\n\t\tName:   name,\n\t\tParent: r,\n\t}\n\n\tr.Child = append(r.Child, rr)\n}\n\nfunc main() {\n\tr := new(Router)\n\n\tr.Group(&quot;/b&quot;, func(r *Router) {\n\t\tr.Add(&quot;/b1&quot;)\n\t})\n\n\tr.Group(&quot;/c&quot;, func(r *Router) {\n\t\tr.Group(&quot;/c1&quot;, func(r *Router) {\n\t\t\tr.Add(&quot;/c12&quot;)\n\t\t})\n\t})\n\n\tr.Add(&quot;/c2&quot;)\n\n\tr.Group(&quot;/a&quot;, func(r *Router) {\n\t\tr.Add(&quot;/a1&quot;)\n\t\tr.Add(&quot;/a2&quot;)\n\n\t\tr.Group(&quot;/a3&quot;, func(r *Router) {\n\t\t\tr.Group(&quot;a31&quot;, func(r *Router) {\n\t\t\t\tr.Add(&quot;a311&quot;)\n\t\t\t})\n\t\t\tr.Add(&quot;a32&quot;)\n\t\t})\n\n\t\tr.Group(&quot;/a4&quot;, func(r *Router) {\n\t\t\tr.Add(&quot;a41&quot;)\n\t\t})\n\n\t\tr.Add(&quot;/a5&quot;)\n\t})\n\n\t// 求打印的代码\n}\n```\n\n求打印代码, 输出类似下面的树:\n```sh\nnode: 49\n+-------node: 13\n|       +-------node: 28\n|       |       +-------leaf: 25\n|       +-------node: 40\n|               +-------leaf: 37\n|               +-------leaf: 40\n+-------node: 61\n        +-------node: 76\n        |       +-------leaf: 73\n        +-------node: 88\n                +-------leaf: 85\n                +-------leaf: 88\n```\n\n可参考[100行C代码终端打印树形结构](https://my.oschina.net/fullofbull/blog/832921)",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"c\">// 节点的数据结构</span>\n<span class=\"k\">type</span> <span class=\"n\">Router</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Parent</span> <span class=\"o\">*</span><span class=\"n\">Router</span>\n    <span class=\"n\">Name</span>   <span class=\"kt\">string</span>\n    <span class=\"n\">Child</span>  <span class=\"p\">[]</span><span class=\"o\">*</span><span class=\"n\">Router</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">r</span> <span class=\"o\">*</span><span class=\"n\">Router</span><span class=\"p\">)</span> <span class=\"n\">Group</span><span class=\"p\">(</span><span class=\"n\">name</span> <span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"n\">fn</span> <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">Router</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n    <span class=\"n\">rr</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">Router</span><span class=\"p\">{</span>\n        <span class=\"n\">Name</span><span class=\"o\">:</span>   <span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"n\">Parent</span><span class=\"o\">:</span> <span class=\"n\">r</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Child</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Child</span><span class=\"p\">,</span> <span class=\"n\">rr</span><span class=\"p\">)</span>\n\n    <span class=\"n\">fn</span><span class=\"p\">(</span><span class=\"n\">rr</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">r</span> <span class=\"o\">*</span><span class=\"n\">Router</span><span class=\"p\">)</span> <span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">name</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">rr</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">Router</span><span class=\"p\">{</span>\n        <span class=\"n\">Name</span><span class=\"o\">:</span>   <span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"n\">Parent</span><span class=\"o\">:</span> <span class=\"n\">r</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Child</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Child</span><span class=\"p\">,</span> <span class=\"n\">rr</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"nb\">new</span><span class=\"p\">(</span><span class=\"n\">Router</span><span class=\"p\">)</span>\n\n    <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Group</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">b</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"n\">r</span> <span class=\"o\">*</span><span class=\"n\">Router</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">b1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">})</span>\n\n    <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Group</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"n\">r</span> <span class=\"o\">*</span><span class=\"n\">Router</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Group</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">c1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"n\">r</span> <span class=\"o\">*</span><span class=\"n\">Router</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">c12</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"p\">})</span>\n    <span class=\"p\">})</span>\n\n    <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">c2</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n    <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Group</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">a</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"n\">r</span> <span class=\"o\">*</span><span class=\"n\">Router</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">a1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">a2</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n        <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Group</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">a3</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"n\">r</span> <span class=\"o\">*</span><span class=\"n\">Router</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Group</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">a31</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"n\">r</span> <span class=\"o\">*</span><span class=\"n\">Router</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">a311</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n            <span class=\"p\">})</span>\n            <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">a32</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"p\">})</span>\n\n        <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Group</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">a4</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"n\">r</span> <span class=\"o\">*</span><span class=\"n\">Router</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">a41</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"p\">})</span>\n\n        <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">a5</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"p\">})</span>\n\n    <span class=\"c\">// 求打印的代码</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>求打印代码, 输出类似下面的树:</p>\n <pre class=\"highlight shell\"><code>node: 49\n+-------node: 13\n|       +-------node: 28\n|       |       +-------leaf: 25\n|       +-------node: 40\n|               +-------leaf: 37\n|               +-------leaf: 40\n+-------node: 61\n        +-------node: 76\n        |       +-------leaf: 73\n        +-------node: 88\n                +-------leaf: 85\n                +-------leaf: 88\n</code></pre> \n<p>可参考<a href=\"https://my.oschina.net/fullofbull/blog/832921\" rel=\"nofollow\" target=\"_blank\" title=\"\">100 行 C 代码终端打印树形结构</a></p>",
    "hits": 475,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 909,
    "title": "GoCN每日新闻(2017-07-06)",
    "created_at": "2017-07-06 10:11:37",
    "updated_at": "2017-07-06 10:11:37",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-06)\n\n1. Go程序日志深入浅出 http://www.jianshu.com/p/a855e91c5335\n2. 从Netflix的Hystrix框架理解服务熔断和服务降级 https://mp.weixin.qq.com/s/FJCrWP1RUcrGKxMM8Bpzww\n3. IO多路复用的net库(没多少代码，值得学习) https://github.com/tidwall/shiny\n4. Go框架大对比 http://nordicapis.com/7-frameworks-to-build-a-rest-api-in-go/\n5. 微服务：误解和误用 https://medium.com/@shijuvar/microservices-overview-misinterpretations-and-misuses-56a1979edafb\n\n招聘信息：\n1. 【北京】逻辑思维 https://gocn.io/question/907\n2. 【北京】VMware https://gocn.io/question/906\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-06)</p>\n\n<ol>\n<li>Go 程序日志深入浅出 <a href=\"http://www.jianshu.com/p/a855e91c5335\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/a855e91c5335</a>\n</li>\n<li>从 Netflix 的 Hystrix 框架理解服务熔断和服务降级 <a href=\"https://mp.weixin.qq.com/s/FJCrWP1RUcrGKxMM8Bpzww\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/FJCrWP1RUcrGKxMM8Bpzww</a>\n</li>\n<li>IO 多路复用的 net 库 (没多少代码，值得学习) <a href=\"https://github.com/tidwall/shiny\" rel=\"nofollow\" target=\"_blank\">https://github.com/tidwall/shiny</a>\n</li>\n<li>Go 框架大对比 <a href=\"http://nordicapis.com/7-frameworks-to-build-a-rest-api-in-go/\" rel=\"nofollow\" target=\"_blank\">http://nordicapis.com/7-frameworks-to-build-a-rest-api-in-go/</a>\n</li>\n<li>微服务：误解和误用 <a href=\"https://medium.com/@shijuvar/microservices-overview-misinterpretations-and-misuses-56a1979edafb\" rel=\"nofollow\" target=\"_blank\">https://medium.com/@shijuvar/microservices-overview-misinterpretations-and-misuses-56a1979edafb</a>\n</li>\n</ol>\n\n<p>招聘信息：</p>\n\n<ol>\n<li>【北京】逻辑思维 <a href=\"https://gocn.io/question/907\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/907</a>\n</li>\n<li>【北京】VMware <a href=\"https://gocn.io/question/906\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/906</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 494,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 910,
    "title": "[GZ]关键词： Golang/Angular/Node/ Linux ; 20-40K/Global/Flexible/Tech 内有 InfoQ 云计算技术微信交流群链接！",
    "created_at": "2017-07-06 18:47:07",
    "updated_at": "2017-07-07 09:24:13",
    "replied_at": "2017-07-07 09:24:13",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 203,
    "last_reply_user_login": "yulibaozi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2201,
    "user": "{\"id\": 2201, \"name\": \"Michelle\", \"login\": \"Michelle\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我们是谁 \nIMPLUS 虽然不需要融资，但依然是个初创公司， \n你需要贡献代码，我知道这是你的最爱 \n但我们更需要你，参与到业务、参与到公司发展，勇敢说出你的想法， \n我们更需要你，努力学习，拓展视野，快速成长； \n我们更需要你知道，你不只是一个 developer，而是一个 partner ！ \n所以，我们期待： \n积极、谦逊、成熟、热爱技术，不断突破的你 \n\n我们是做什么的 \n我们致力于建立自动化流量购买和媒介投放系统，帮助全球广告主高效地获取高质量有价值的全球用户。 \n\n我们的产品 \nIMPLUS 自主研发的智能广告系统能自动化地完成全球流量购买，并利用核心的流量匹配技术高效地将全球流量价值最大化。系统能有效识别用户的行为、设备、运营商、浏览器及其他更多属性，精准地为广告商提供最优的广告解决方案。 \n\n你身边的伙伴 \n超 nice 的新加坡 leader，不讲笑话不讲技术不行的程序猿，边笑边吐槽的业务媛 \n国际团队，所以你英文要好哦 \n\n我们的文化 \nHappy 扁平化的团队，弹性自由的工作，贴心的糕点，每月的生日 Par 和团建，有 Heart,有你~ \nEnjoy 工作遇到难题，有挫折？有压力？找伙伴吧！超友善可爱的团队，尽管说出来，一起分担， 一起更快乐的工作~ \nCare 朋友嘛，互相关心才是朋友嘛~ \n\n苦苦寻觅的人才： \n中高级全栈开发 20-40K，能力强者面议 \n你会 Go, node.js, 也会 angular.js ？请你一定要快来！！！ \n不熟悉以上技术栈，但会 java/python/php,有丰富的服务端搭建经验，愿意学 golang，还等什么 ! \n还对算法和机器学习感兴趣? 赶紧来啊！ \n也来说说你用哪些框架搭过 web 服务器？ express, koa, hapi ?我们希望你是搭在云上，比如阿里云，亚马逊，DigitalOcean, Heroku, Linode \n代码要舒服，测试要到位(TDD 你造吗？），有线上部署经验加分哦 \n喜欢挑战和团队工作（放心，我们都很优秀），会尝试结对编程（结对，你懂的） \n全程参与到项目中，从创意，需求到开发，交付 \n喜欢敏捷开发和迭代的模式，天下武功，唯快不破 \n代码写的漂亮（空格还是 tab, 分号结尾要不要，欢迎来辩），产品要做就做到极致 \n\n我们的福利 \n人手 Macbook Pro \n六险一金，每月交通补贴，每年健身补贴 \n还 5 天制，还有弹性时间 \n每月一天带薪病假，一天在家办公， \n更包午餐和晚餐，每月生日 party+ team outing \n更更赞助你参加技术会议 \n\n招聘流程： \n简历初选（提供 github/开源项目妥妥哒） \n网上技术测试（过了测试离 offer 很近了） \n现场 /视频面试（中文 /英语面试） \nOFFER \n\n公司地址：广州市天河区花城大道 68 号环球都会大厦 1501 \n邮箱地址: michelle.huang@implustech.com \n更多信息： https://www.lagou.com/jobs/2937993.html \n![](https://ww3.sinaimg.cn/large/006tKfTcgy1fha9scsb4fj30im0pudm1.jpg)\n![](https://ww3.sinaimg.cn/large/006tNc79gy1fdlh4y2e67j30hs1qx4qp.jpg)\n细说云计算公众号联系人微信",
    "body_html": "<p>我们是谁 \nIMPLUS 虽然不需要融资，但依然是个初创公司， \n你需要贡献代码，我知道这是你的最爱 \n但我们更需要你，参与到业务、参与到公司发展，勇敢说出你的想法， \n我们更需要你，努力学习，拓展视野，快速成长； \n我们更需要你知道，你不只是一个 developer，而是一个 partner ！ \n所以，我们期待： \n积极、谦逊、成熟、热爱技术，不断突破的你 </p>\n\n<p>我们是做什么的 \n我们致力于建立自动化流量购买和媒介投放系统，帮助全球广告主高效地获取高质量有价值的全球用户。 </p>\n\n<p>我们的产品 \nIMPLUS 自主研发的智能广告系统能自动化地完成全球流量购买，并利用核心的流量匹配技术高效地将全球流量价值最大化。系统能有效识别用户的行为、设备、运营商、浏览器及其他更多属性，精准地为广告商提供最优的广告解决方案。 </p>\n\n<p>你身边的伙伴 \n超 nice 的新加坡 leader，不讲笑话不讲技术不行的程序猿，边笑边吐槽的业务媛 \n国际团队，所以你英文要好哦 </p>\n\n<p>我们的文化 \nHappy 扁平化的团队，弹性自由的工作，贴心的糕点，每月的生日 Par 和团建，有 Heart,有你~ \nEnjoy 工作遇到难题，有挫折？有压力？找伙伴吧！超友善可爱的团队，尽管说出来，一起分担， 一起更快乐的工作~ \nCare 朋友嘛，互相关心才是朋友嘛~ </p>\n\n<p>苦苦寻觅的人才： \n中高级全栈开发 20-40K，能力强者面议 \n你会 Go, node.js, 也会 angular.js ？请你一定要快来！！！ \n不熟悉以上技术栈，但会 java/python/php,有丰富的服务端搭建经验，愿意学 golang，还等什么 ! \n还对算法和机器学习感兴趣? 赶紧来啊！ \n也来说说你用哪些框架搭过 web 服务器？ express, koa, hapi ?我们希望你是搭在云上，比如阿里云，亚马逊，DigitalOcean, Heroku, Linode \n代码要舒服，测试要到位 (TDD 你造吗？），有线上部署经验加分哦 \n喜欢挑战和团队工作（放心，我们都很优秀），会尝试结对编程（结对，你懂的）\n全程参与到项目中，从创意，需求到开发，交付 \n喜欢敏捷开发和迭代的模式，天下武功，唯快不破 \n代码写的漂亮（空格还是 tab, 分号结尾要不要，欢迎来辩），产品要做就做到极致 </p>\n\n<p>我们的福利 \n人手 Macbook Pro \n六险一金，每月交通补贴，每年健身补贴 \n还 5 天制，还有弹性时间 \n每月一天带薪病假，一天在家办公， \n更包午餐和晚餐，每月生日 party+ team outing \n更更赞助你参加技术会议 </p>\n\n<p>招聘流程： \n简历初选（提供 github/开源项目妥妥哒）\n网上技术测试（过了测试离 offer 很近了）\n现场 /视频面试（中文 /英语面试）\nOFFER </p>\n\n<p>公司地址：广州市天河区花城大道 68 号环球都会大厦 1501 \n邮箱地址: michelle.huang@implustech.com \n更多信息： <a href=\"https://www.lagou.com/jobs/2937993.html\" rel=\"nofollow\" target=\"_blank\">https://www.lagou.com/jobs/2937993.html</a> \n<img src=\"https://ww3.sinaimg.cn/large/006tKfTcgy1fha9scsb4fj30im0pudm1.jpg\" title=\"\" alt=\"\">\n<img src=\"https://ww3.sinaimg.cn/large/006tNc79gy1fdlh4y2e67j30hs1qx4qp.jpg\" title=\"\" alt=\"\">\n细说云计算公众号联系人微信</p>",
    "hits": 506,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 911,
    "title": "GoCN每日新闻(2017-07-07)",
    "created_at": "2017-07-07 09:56:43",
    "updated_at": "2017-07-07 09:56:43",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-07)\n\n1. Go二进制文件发布系统 https://github.com/goreleaser/goreleaser\n2. 假数据模拟工具 https://github.com/malisit/kolpa\n3. Go里面模拟依赖 https://medium.com/agrea-technogies/mocking-dependencies-in-go-bb9739fef008\n4. Go里四舍五入的实现 https://www.cockroachlabs.com/blog/rouding-implementations-in-go/\n5. Go热更新研究笔记 http://www.cppblog.com/sunicdavy/archive/2017/07/06/215057.html\n\n活动预告：\n\n1. 杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-07)</p>\n\n<ol>\n<li>Go 二进制文件发布系统 <a href=\"https://github.com/goreleaser/goreleaser\" rel=\"nofollow\" target=\"_blank\">https://github.com/goreleaser/goreleaser</a>\n</li>\n<li>假数据模拟工具 <a href=\"https://github.com/malisit/kolpa\" rel=\"nofollow\" target=\"_blank\">https://github.com/malisit/kolpa</a>\n</li>\n<li>Go 里面模拟依赖 <a href=\"https://medium.com/agrea-technogies/mocking-dependencies-in-go-bb9739fef008\" rel=\"nofollow\" target=\"_blank\">https://medium.com/agrea-technogies/mocking-dependencies-in-go-bb9739fef008</a>\n</li>\n<li>Go 里四舍五入的实现 <a href=\"https://www.cockroachlabs.com/blog/rouding-implementations-in-go/\" rel=\"nofollow\" target=\"_blank\">https://www.cockroachlabs.com/blog/rouding-implementations-in-go/</a>\n</li>\n<li>Go 热更新研究笔记 <a href=\"http://www.cppblog.com/sunicdavy/archive/2017/07/06/215057.html\" rel=\"nofollow\" target=\"_blank\">http://www.cppblog.com/sunicdavy/archive/2017/07/06/215057.html</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 439,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 912,
    "title": "请问下大家有做物联网设备管理平台的嘛",
    "created_at": "2017-07-07 11:04:02",
    "updated_at": "2017-07-14 14:19:31",
    "replied_at": "2017-07-14 14:19:31",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1494,
    "last_reply_user_login": "stirlingx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2045,
    "user": "{\"id\": 2045, \"name\": \"bananalee\", \"login\": \"bananalee\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "最近需要做一个物联网设备的管理平台，走MQTT协议。\n主要是售向米国的家用设备的售后管理，需要不定时获取设备的运行状态，特别是故障信息推送。\n请问下大家有成熟的框架或者方案可以参考么",
    "body_html": "<p>最近需要做一个物联网设备的管理平台，走 MQTT 协议。\n主要是售向米国的家用设备的售后管理，需要不定时获取设备的运行状态，特别是故障信息推送。\n请问下大家有成熟的框架或者方案可以参考么</p>",
    "hits": 456,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 913,
    "title": "[深圳] GOLang 工程师 基本薪资(15-30k)",
    "created_at": "2017-07-07 20:34:18",
    "updated_at": "2017-07-08 01:03:49",
    "replied_at": "2017-07-08 01:03:23",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 96,
    "last_reply_user_login": "sheepbao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2200,
    "user": "{\"id\": 2200, \"name\": \"alexe\", \"login\": \"alexe\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "职位要求：\n1. 1年以上工作经验\n2. 熟悉GOLang语言，并至少了解一门其他语言（C \\ RUST \\ Python \\ Javascript...）。\n3. 熟悉各种网络协议，有阅读RFC经验。\n4. 熟悉linux与git协作。\n5. 有一定的英文阅读理解能力。\n\n优先条件：\n1. 英语会话流利者优先考虑。\n2. 有Github并有star者优先\n3. 有个人技术博客者优先。\n4. 有全栈能力者优先。\n\n职责范围：\n1. 负责各种网络协议模块的编写与调试。\n2. 负责搭建云架构网络。\n3. 负责云应用程序的编写。\n\n待遇：\n1. 15K-30K，13月薪资，外加年终分红（1-4月薪资）\n2. 根据在公司的工作时间外加期权鼓励，充分体现你的能力与努力\n3. 弹性工作时间，完全人性化管理（一天工作5小时也OK）。\n4. 短期海外工作经验，飞往迪拜、东南亚、欧洲。\n5. 一切应有的福利，外加意想不到的福利。\n\n原始招聘地址：https://www.lagou.com/jobs/3036536.html\n联系邮箱：a@obc.im\n",
    "body_html": "<p>职位要求：</p>\n\n<ol>\n<li>1 年以上工作经验</li>\n<li>熟悉 GOLang 语言，并至少了解一门其他语言（C \\ RUST \\ Python \\ Javascript...）。</li>\n<li>熟悉各种网络协议，有阅读 RFC 经验。</li>\n<li>熟悉 linux 与 git 协作。</li>\n<li>有一定的英文阅读理解能力。</li>\n</ol>\n\n<p>优先条件：</p>\n\n<ol>\n<li>英语会话流利者优先考虑。</li>\n<li>有 Github 并有 star 者优先</li>\n<li>有个人技术博客者优先。</li>\n<li>有全栈能力者优先。</li>\n</ol>\n\n<p>职责范围：</p>\n\n<ol>\n<li>负责各种网络协议模块的编写与调试。</li>\n<li>负责搭建云架构网络。</li>\n<li>负责云应用程序的编写。</li>\n</ol>\n\n<p>待遇：</p>\n\n<ol>\n<li>15K-30K，13 月薪资，外加年终分红（1-4 月薪资）</li>\n<li>根据在公司的工作时间外加期权鼓励，充分体现你的能力与努力</li>\n<li>弹性工作时间，完全人性化管理（一天工作 5 小时也 OK）。</li>\n<li>短期海外工作经验，飞往迪拜、东南亚、欧洲。</li>\n<li>一切应有的福利，外加意想不到的福利。</li>\n</ol>\n\n<p>原始招聘地址：<a href=\"https://www.lagou.com/jobs/3036536.html\" rel=\"nofollow\" target=\"_blank\">https://www.lagou.com/jobs/3036536.html</a>\n联系邮箱：a@obc.im</p>",
    "hits": 254,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 914,
    "title": "GoCN每日新闻(2017-07-08)",
    "created_at": "2017-07-08 10:52:34",
    "updated_at": "2017-07-08 10:52:34",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-08)\n\n1. TIOBE Go 排名进入前十 https://www.tiobe.com/tiobe-index/\n2. Go中select和switch的对比 http://colobu.com/2017/07/07/select-vs-switch-in-golang/\n3. Gearman的Go实现 https://github.com/appscode/g2\n4. Go 调试诊断的wiki https://github.com/golang/go/wiki/diagnostics\n5. Go里面如何进行编码 http://technosophos.com/2016/03/09/go-quickly-converting-character-encodings.html\n\n活动预告：\n\n1. 杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn\n",
    "body_html": "<p>GoCN 每日新闻 (2017-07-08)</p>\n\n<ol>\n<li>TIOBE Go 排名进入前十 <a href=\"https://www.tiobe.com/tiobe-index/\" rel=\"nofollow\" target=\"_blank\">https://www.tiobe.com/tiobe-index/</a>\n</li>\n<li>Go 中 select 和 switch 的对比 <a href=\"http://colobu.com/2017/07/07/select-vs-switch-in-golang/\" rel=\"nofollow\" target=\"_blank\">http://colobu.com/2017/07/07/select-vs-switch-in-golang/</a>\n</li>\n<li>Gearman 的 Go 实现 <a href=\"https://github.com/appscode/g2\" rel=\"nofollow\" target=\"_blank\">https://github.com/appscode/g2</a>\n</li>\n<li>Go 调试诊断的 wiki <a href=\"https://github.com/golang/go/wiki/diagnostics\" rel=\"nofollow\" target=\"_blank\">https://github.com/golang/go/wiki/diagnostics</a>\n</li>\n<li>Go 里面如何进行编码 <a href=\"http://technosophos.com/2016/03/09/go-quickly-converting-character-encodings.html\" rel=\"nofollow\" target=\"_blank\">http://technosophos.com/2016/03/09/go-quickly-converting-character-encodings.html</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 421,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 915,
    "title": "安装beego出现 错误 在mac下安装时",
    "created_at": "2017-07-08 22:12:58",
    "updated_at": "2021-01-20 02:01:15",
    "replied_at": "2017-08-14 11:06:47",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 2335,
    "last_reply_user_login": "javasgl",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 38,
    "user": "{\"id\": 38, \"name\": \"TianGenglan\", \"login\": \"TianGenglan\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "package github.com/astaxie/beego: mkdir /User: permission denied\n这是哪里的问题呢？如何解决呢？",
    "body_html": "<p>package github.com/astaxie/beego: mkdir /User: permission denied\n这是哪里的问题呢？如何解决呢？</p>",
    "hits": 443,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 916,
    "title": "Mac下配置好path的时候 为什么还是不能创建beego项目？",
    "created_at": "2017-07-08 22:15:05",
    "updated_at": "2021-01-16 22:26:11",
    "replied_at": "2017-07-09 22:09:18",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 2044,
    "last_reply_user_login": "silenceshell",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 38,
    "user": "{\"id\": 38, \"name\": \"TianGenglan\", \"login\": \"TianGenglan\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在Mac pro 下 配置好path环境变量的时候为什么还是不能用bee工具创建beego项目呢？\n错误信息：\n-bash: bee: command not found\nbogon:~ TianGenglan-MySky$ bee Killed: 9 \nbogon:~ TianGenglan-MySky$ bee version Killed: 9 \n为什么总是出现这个呢？ beego已经安装了 环境变了已经配置了 但是还是出现这个 killed：9",
    "body_html": "<p>在 Mac pro 下 配置好 path 环境变量的时候为什么还是不能用 bee 工具创建 beego 项目呢？\n错误信息：\n-bash: bee: command not found\nbogon:~ TianGenglan-MySky$ bee Killed: 9 \nbogon:~ TianGenglan-MySky$ bee version Killed: 9 \n为什么总是出现这个呢？ beego 已经安装了 环境变了已经配置了 但是还是出现这个 killed：9</p>",
    "hits": 580,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 917,
    "title": "GoCN每日新闻(2017-07-09)",
    "created_at": "2017-07-09 09:33:04",
    "updated_at": "2017-07-09 09:33:04",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-09)\n\n1. Go handler 接口详解 https://blog.bartfokker.nl/clean-handlers/\n2. JWT用户认证 http://lion1ou.win/2017/01/18/\n3. 高质量代码的特征 http://zhangyi.farbox.com/post/coding/feature-of-high-quality-code\n4. 容器化你的应用 http://dockone.io/article/2239\n5. 轻松筹1.6亿注册用户的Passport账户体系架构设计 http://www.sohu.com/a/154131834_467759\n\n活动预告：\n\n1. 杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-09)</p>\n\n<ol>\n<li>Go handler 接口详解 <a href=\"https://blog.bartfokker.nl/clean-handlers/\" rel=\"nofollow\" target=\"_blank\">https://blog.bartfokker.nl/clean-handlers/</a>\n</li>\n<li>JWT 用户认证 <a href=\"http://lion1ou.win/2017/01/18/\" rel=\"nofollow\" target=\"_blank\">http://lion1ou.win/2017/01/18/</a>\n</li>\n<li>高质量代码的特征 <a href=\"http://zhangyi.farbox.com/post/coding/feature-of-high-quality-code\" rel=\"nofollow\" target=\"_blank\">http://zhangyi.farbox.com/post/coding/feature-of-high-quality-code</a>\n</li>\n<li>容器化你的应用 <a href=\"http://dockone.io/article/2239\" rel=\"nofollow\" target=\"_blank\">http://dockone.io/article/2239</a>\n</li>\n<li>轻松筹 1.6 亿注册用户的 Passport 账户体系架构设计 <a href=\"http://www.sohu.com/a/154131834_467759\" rel=\"nofollow\" target=\"_blank\">http://www.sohu.com/a/154131834_467759</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 293,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 918,
    "title": "GoCN每日新闻(2017-07-10)",
    "created_at": "2017-07-10 09:54:20",
    "updated_at": "2017-07-10 09:54:20",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-10)\n\n1. 我看绩效考核 http://coolshell.cn/articles/17972.html\n2. Go入门视频教程 https://www.youtube.com/playlist?list=PLSak_q1UXfPp971Hgv7wHCU2gDOb13gBQ\n3. 从密码到token， 一个授权的故事 http://t.cn/RKAUtzJ\n4. 聊聊Service Mesh：linkerd http://dockone.io/article/2485\n5. RESTFul API的生命周期管理 https://dzone.com/refcardz/restful-api-lifecycle-management\n\n活动预告：\n\n1. 杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn\n\n",
    "body_html": "<p>GoCN 每日新闻 (2017-07-10)</p>\n\n<ol>\n<li>我看绩效考核 <a href=\"http://coolshell.cn/articles/17972.html\" rel=\"nofollow\" target=\"_blank\">http://coolshell.cn/articles/17972.html</a>\n</li>\n<li>Go 入门视频教程 <a href=\"https://www.youtube.com/playlist?list=PLSak_q1UXfPp971Hgv7wHCU2gDOb13gBQ\" rel=\"nofollow\" target=\"_blank\">https://www.youtube.com/playlist?list=PLSak_q1UXfPp971Hgv7wHCU2gDOb13gBQ</a>\n</li>\n<li>从密码到 token， 一个授权的故事 <a href=\"http://t.cn/RKAUtzJ\" rel=\"nofollow\" target=\"_blank\">http://t.cn/RKAUtzJ</a>\n</li>\n<li>聊聊 Service Mesh：linkerd <a href=\"http://dockone.io/article/2485\" rel=\"nofollow\" target=\"_blank\">http://dockone.io/article/2485</a>\n</li>\n<li>RESTFul API 的生命周期管理 <a href=\"https://dzone.com/refcardz/restful-api-lifecycle-management\" rel=\"nofollow\" target=\"_blank\">https://dzone.com/refcardz/restful-api-lifecycle-management</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 387,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 919,
    "title": "govendor管理的项目依赖冲突",
    "created_at": "2017-07-10 11:54:02",
    "updated_at": "2017-07-10 14:13:51",
    "replied_at": "2017-07-10 14:11:17",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 292,
    "user": "{\"id\": 292, \"name\": \"AdolphLWQ\", \"login\": \"adolphlwq\", \"avatar\": \"https://static.gocn.vip/user/avatar/292/e947d6.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "## 环境\n- go1.8\n- govendor 1.0.8\n\n## 问题\n项目之前在在`GOPATH/src/bitbucket.org/linkernetworks/jumgr`目录下，使用govendor管理，编译没问题。\n\n今天为了测试把项目放到`GOPATH/src/jumgr`下面，编译报错：\n```\n./main.go:37: cannot use &quot;jumgr/vendor/gopkg.in/mgo.v2/bson&quot;.M literal (type &quot;jumgr/vendor/gopkg.in/mgo.v2/bson&quot;.M) as type &quot;bitbucket.org/linkernetworks/jumgr/vendor/gopkg.in/mgo.v2/bson&quot;.M in field value\n```\n\n请问大家知道如何解决吗？",
    "body_html": "<h2 id=\"环境\">环境</h2>\n<ul>\n<li>go1.8</li>\n<li>govendor 1.0.8</li>\n</ul>\n<h2 id=\"问题\">问题</h2>\n<p>项目之前在在<code>GOPATH/src/bitbucket.org/linkernetworks/jumgr</code>目录下，使用 govendor 管理，编译没问题。</p>\n\n<p>今天为了测试把项目放到<code>GOPATH/src/jumgr</code>下面，编译报错：</p>\n <pre class=\"highlight plaintext\"><code>./main.go:37: cannot use &amp;quot;jumgr/vendor/gopkg.in/mgo.v2/bson&amp;quot;.M literal (type &amp;quot;jumgr/vendor/gopkg.in/mgo.v2/bson&amp;quot;.M) as type &amp;quot;bitbucket.org/linkernetworks/jumgr/vendor/gopkg.in/mgo.v2/bson&amp;quot;.M in field value\n</code></pre> \n<p>请问大家知道如何解决吗？</p>",
    "hits": 489,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 920,
    "title": "如何从题库中提取出题干，选项，答案各类要素？",
    "created_at": "2017-07-11 00:02:33",
    "updated_at": "2017-07-17 10:43:30",
    "replied_at": "2017-07-17 10:43:30",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 424,
    "last_reply_user_login": "xiaoma",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1503,
    "user": "{\"id\": 1503, \"name\": \"elone\", \"login\": \"elone\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "这段时间要做一个答题APP，有个导入题库的功能 ，题库来自于word文档，格式如下：\n\n```\n单选题 \n1.财务核算中心下设报账中心，报账中心配备会计主管1名，总行及各分支机构分别配备记账员和（ ）。 （0.09分）\n A . 会计员\n B . 库管员\n C . 出纳员\n D . 柜台人员\n标准答案 ：C\n\n多选题 \n750.农合机构对被投资企业不具有控制权，投资期限届满或者投资期限超过11年，且被投资企业资不抵债的，农合机构无法收回的股权可认定为呆账，其申报材料包括（ ）。 （0.12分）\n A . 被投资企业破产证明\n B . 财产追偿证明\n C . 被投资企业投资期证明\n D . 工商部门吊销证明\n E . 破产清算证明\n标准答案 ：A, B, C, D, E\n\n判断题 \n1094.金融企业根据相关法律法规对其涉农贷款和中小企业贷款进行风险分类后，按照一定的比例计提的贷款损失准备金，准予在计算应纳税所得额时扣除，其中次级类贷款计提比例为50%。 （0.06分）\n　 正确\n　 错误\n标准答案：错误\n```\n\n有三种类型的题 ，单选多选判断，如何提取出题目类型，主题，答案选项，正确答案，分数，自己感觉晕晕的，写不太成功，求大家给个思路，谢谢。",
    "body_html": "<p>这段时间要做一个答题 APP，有个导入题库的功能 ，题库来自于 word 文档，格式如下：</p>\n <pre class=\"highlight plaintext\"><code>单选题 \n1.财务核算中心下设报账中心，报账中心配备会计主管1名，总行及各分支机构分别配备记账员和（ ）。 （0.09分）\n A . 会计员\n B . 库管员\n C . 出纳员\n D . 柜台人员\n标准答案 ：C\n\n多选题 \n750.农合机构对被投资企业不具有控制权，投资期限届满或者投资期限超过11年，且被投资企业资不抵债的，农合机构无法收回的股权可认定为呆账，其申报材料包括（ ）。 （0.12分）\n A . 被投资企业破产证明\n B . 财产追偿证明\n C . 被投资企业投资期证明\n D . 工商部门吊销证明\n E . 破产清算证明\n标准答案 ：A, B, C, D, E\n\n判断题 \n1094.金融企业根据相关法律法规对其涉农贷款和中小企业贷款进行风险分类后，按照一定的比例计提的贷款损失准备金，准予在计算应纳税所得额时扣除，其中次级类贷款计提比例为50%。 （0.06分）\n　 正确\n　 错误\n标准答案：错误\n</code></pre> \n<p>有三种类型的题 ，单选多选判断，如何提取出题目类型，主题，答案选项，正确答案，分数，自己感觉晕晕的，写不太成功，求大家给个思路，谢谢。</p>",
    "hits": 545,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 921,
    "title": "GoCN每日新闻(2017-07-11)",
    "created_at": "2017-07-11 09:43:23",
    "updated_at": "2017-07-11 09:43:23",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-11)\n\n1. Consul实现分布式锁 https://xiequan.info/golang-%E9%80%9A%E8%BF%87-consul-%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/\n2. API安全检查列表 https://github.com/shieldfy/API-Security-Checklist\n3. 大部分公司不需要微服务 https://mp.weixin.qq.com/s/ZG5dqwvtNLqEGzyhS4EKLA\n4. 最佳日志实践 https://zhuanlan.zhihu.com/p/27363484\n5. 为什么每一个Gopher都应该是数据科学家 http://divan.github.io//talks/2017/06bcn/why_every_gopher_should_be_a_data_scientist.pdf\n\n招聘信息：\n1. 【北京】链家 https://gocn.io/article/381\n\n活动预告：\n\n1. 杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-11)</p>\n\n<ol>\n<li>Consul 实现分布式锁 <a href=\"https://xiequan.info/golang-%E9%80%9A%E8%BF%87-consul-%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/\" rel=\"nofollow\" target=\"_blank\">https://xiequan.info/golang-%E9%80%9A%E8%BF%87-consul-%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</a>\n</li>\n<li>API 安全检查列表 <a href=\"https://github.com/shieldfy/API-Security-Checklist\" rel=\"nofollow\" target=\"_blank\">https://github.com/shieldfy/API-Security-Checklist</a>\n</li>\n<li>大部分公司不需要微服务 <a href=\"https://mp.weixin.qq.com/s/ZG5dqwvtNLqEGzyhS4EKLA\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/ZG5dqwvtNLqEGzyhS4EKLA</a>\n</li>\n<li>最佳日志实践 <a href=\"https://zhuanlan.zhihu.com/p/27363484\" rel=\"nofollow\" target=\"_blank\">https://zhuanlan.zhihu.com/p/27363484</a>\n</li>\n<li>为什么每一个 Gopher 都应该是数据科学家 <a href=\"http://divan.github.io//talks/2017/06bcn/why_every_gopher_should_be_a_data_scientist.pdf\" rel=\"nofollow\" target=\"_blank\">http://divan.github.io//talks/2017/06bcn/why_every_gopher_should_be_a_data_scientist.pdf</a>\n</li>\n</ol>\n\n<p>招聘信息：</p>\n\n<ol>\n<li>【北京】链家 <a href=\"https://gocn.io/article/381\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/381</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 483,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 922,
    "title": "如何写涉及到 DB 的测试",
    "created_at": "2017-07-11 16:24:25",
    "updated_at": "2017-07-12 13:59:43",
    "replied_at": "2017-07-12 13:59:43",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 13,
    "last_reply_user_login": "h12",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2236,
    "user": "{\"id\": 2236, \"name\": \"tony612\", \"login\": \"tony612\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "请教一下，涉及到 DB（比如 mysql） 的测试大家都是怎么写的？特别是每个 test case 之后做清除工作的。我现在是放在 transaction 里做，但似乎不能嵌套。换了 truncate 之后就各种奇怪的问题。\n\n（mock 的方式就不用说了）\n\n贴一下代码（我用的 gorm）：\n\n```go\nfunc foo(db *gorm.DB) {\n    tx := db.Begin()\n    // query and insert\n    tx.Commit()\n}\n// Use transaction to do database cleanup\nfunc TestFooVersion1() {\n    testDB := initDB()\n    tx = testDB.Begin() // setup\n    foo(testDB)\n    tx.Rollback() // teardown\n}\n// Use truncate to do database cleanup\nfunc TestFooVersion2() {\n    testDB := initDB()\n    foo(testDB)\n    truncateTables(testDB) // teardown\n}\nfunc truncateTables(db *gorm.DB) {\n    // exec &quot;TRUNCATE TABLE table;&quot; for every table\n}\n```\n\n我想知道的是代码方面怎么做数据库的初始化和清理。",
    "body_html": "<p>请教一下，涉及到 DB（比如 mysql）的测试大家都是怎么写的？特别是每个 test case 之后做清除工作的。我现在是放在 transaction 里做，但似乎不能嵌套。换了 truncate 之后就各种奇怪的问题。</p>\n\n<p>（mock 的方式就不用说了）</p>\n\n<p>贴一下代码（我用的 gorm）：</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"n\">db</span> <span class=\"o\">*</span><span class=\"n\">gorm</span><span class=\"o\">.</span><span class=\"n\">DB</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">tx</span> <span class=\"o\">:=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Begin</span><span class=\"p\">()</span>\n    <span class=\"c\">// query and insert</span>\n    <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">Commit</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n<span class=\"c\">// Use transaction to do database cleanup</span>\n<span class=\"k\">func</span> <span class=\"n\">TestFooVersion1</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">testDB</span> <span class=\"o\">:=</span> <span class=\"n\">initDB</span><span class=\"p\">()</span>\n    <span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">testDB</span><span class=\"o\">.</span><span class=\"n\">Begin</span><span class=\"p\">()</span> <span class=\"c\">// setup</span>\n    <span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"n\">testDB</span><span class=\"p\">)</span>\n    <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">Rollback</span><span class=\"p\">()</span> <span class=\"c\">// teardown</span>\n<span class=\"p\">}</span>\n<span class=\"c\">// Use truncate to do database cleanup</span>\n<span class=\"k\">func</span> <span class=\"n\">TestFooVersion2</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">testDB</span> <span class=\"o\">:=</span> <span class=\"n\">initDB</span><span class=\"p\">()</span>\n    <span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"n\">testDB</span><span class=\"p\">)</span>\n    <span class=\"n\">truncateTables</span><span class=\"p\">(</span><span class=\"n\">testDB</span><span class=\"p\">)</span> <span class=\"c\">// teardown</span>\n<span class=\"p\">}</span>\n<span class=\"k\">func</span> <span class=\"n\">truncateTables</span><span class=\"p\">(</span><span class=\"n\">db</span> <span class=\"o\">*</span><span class=\"n\">gorm</span><span class=\"o\">.</span><span class=\"n\">DB</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c\">// exec &amp;quot;TRUNCATE TABLE table;&amp;quot; for every table</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>我想知道的是代码方面怎么做数据库的初始化和清理。</p>",
    "hits": 458,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 923,
    "title": "Beego 过滤器支持完全正则匹配吗",
    "created_at": "2017-07-11 17:14:01",
    "updated_at": "2021-01-27 01:03:17",
    "replied_at": "2017-07-12 13:41:20",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1751,
    "user": "{\"id\": 1751, \"name\": \"kenticny\", \"login\": \"kenticny\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我看到文档里面有正则匹配参数，但是试了下正则匹配完整路由好像不生效，想请教下是哪里写错了么？\n\n```\n// 想要匹配不是login开头的路由\nbeego.InsertFilter(&quot;/(^(?!login).*)&quot;, beego.BeforeRouter, DemoHandle)\n```",
    "body_html": "<p>我看到文档里面有正则匹配参数，但是试了下正则匹配完整路由好像不生效，想请教下是哪里写错了么？</p>\n <pre class=\"highlight plaintext\"><code>// 想要匹配不是login开头的路由\nbeego.InsertFilter(&amp;quot;/(^(?!login).*)&amp;quot;, beego.BeforeRouter, DemoHandle)\n</code></pre> ",
    "hits": 354,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 4,
    "collect_count": 0
  },
  {
    "id": 924,
    "title": "GoCN每日新闻(2017-07-12)",
    "created_at": "2017-07-12 09:27:51",
    "updated_at": "2017-07-12 09:27:51",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-12)\n\n1. Severless架构 https://read.acloud.guru/serverless-event-sourcing-at-nordstrom-ea69bd8fb7cc\n2. 提高应用程序可用性的五个要点 http://www.broadview.com.cn/article/337\n3. Erlang 和Go 的对比 http://www.jianshu.com/p/514459a3e0e7\n4. 纯Go写的图标库  https://github.com/wcharczuk/go-chart\n5. 使用beego 开发 api server 和前端同学拆分开发，使用swagger http://t.cn/RKx3VIA\n\n招聘信息：\n1. 【北京】360运维工程师 https://gocn.io/article/384\n\n活动预告：\n\n1. 杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn\n\n",
    "body_html": "<p>GoCN 每日新闻 (2017-07-12)</p>\n\n<ol>\n<li>Severless 架构 <a href=\"https://read.acloud.guru/serverless-event-sourcing-at-nordstrom-ea69bd8fb7cc\" rel=\"nofollow\" target=\"_blank\">https://read.acloud.guru/serverless-event-sourcing-at-nordstrom-ea69bd8fb7cc</a>\n</li>\n<li>提高应用程序可用性的五个要点 <a href=\"http://www.broadview.com.cn/article/337\" rel=\"nofollow\" target=\"_blank\">http://www.broadview.com.cn/article/337</a>\n</li>\n<li>Erlang 和 Go 的对比 <a href=\"http://www.jianshu.com/p/514459a3e0e7\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/514459a3e0e7</a>\n</li>\n<li>纯 Go 写的图标库  <a href=\"https://github.com/wcharczuk/go-chart\" rel=\"nofollow\" target=\"_blank\">https://github.com/wcharczuk/go-chart</a>\n</li>\n<li>使用 beego 开发 api server 和前端同学拆分开发，使用 swagger <a href=\"http://t.cn/RKx3VIA\" rel=\"nofollow\" target=\"_blank\">http://t.cn/RKx3VIA</a>\n</li>\n</ol>\n\n<p>招聘信息：</p>\n\n<ol>\n<li>【北京】360 运维工程师 <a href=\"https://gocn.io/article/384\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/384</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 430,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 925,
    "title": "ab压测，报错",
    "created_at": "2017-07-12 17:19:27",
    "updated_at": "2017-07-12 18:02:05",
    "replied_at": "2017-07-12 18:02:05",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 209,
    "last_reply_user_login": "cloverstd",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2242,
    "user": "{\"id\": 2242, \"name\": \"abel_xd\", \"login\": \"abel_xd\", \"avatar\": \"https://gocn.vip/system/letter_avatars/a.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "写了个简单的数据库操作：\n```\npackage main\n\nimport (\n\t&quot;database/sql&quot;\n\t&quot;fmt&quot;\n\t_ &quot;github.com/go-sql-driver/mysql&quot;\n\t&quot;net/http&quot;\n)\n\nfunc main() {\n\thttp.HandleFunc(&quot;/&quot;, insert)\n\terr := http.ListenAndServe(&quot;:9090&quot;, nil)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t}\n}\n\nfunc insert(resp http.ResponseWriter, req *http.Request) {\n\tdb, _ := sql.Open(&quot;mysql&quot;, &quot;Abel:123456@/test&quot;)\n\tdefer db.Close()\n\n\t_, err := db.Exec(\n\t\t&quot;insert into pressure(val) values(456)&quot;,\n\t)\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t}\n\n}\n```\n\n用ab开了n10000、c200去压测，结果发现有报错，主要是以下几个：\n1.\t`packets.go:36: read tcp 127.0.0.1:49205-&gt;127.0.0.1:3306: read: connection reset by peer`\n1.\t`packets.go:141: write tcp 127.0.0.1:49205-&gt;127.0.0.1:3306: write: broken pipe`\n1.\t`dial tcp 127.0.0.1:3306: getsockopt: connection reset by peer`\n\n数据库里总共记录数是9953。\n\n请问这是什么原因导致的？\n\n\n\n----\n\n做了调整：\n```\npackage main\n\nimport (\n\t&quot;database/sql&quot;\n\t&quot;fmt&quot;\n\t_ &quot;github.com/go-sql-driver/mysql&quot;\n\t&quot;net/http&quot;\n)\n\nvar db, _ = sql.Open(&quot;mysql&quot;, &quot;Abel:123456@/test&quot;)\n\nfunc main() {\n\n\thttp.HandleFunc(&quot;/&quot;, insert)\n\terr := http.ListenAndServe(&quot;:9090&quot;, nil)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t}\n}\n\nfunc insert(resp http.ResponseWriter, req *http.Request) {\n\n\t_, err := db.Exec(\n\t\t&quot;insert into pressure(val) values(456)&quot;,\n\t)\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t}\n\n}\n```\n",
    "body_html": "<p>写了个简单的数据库操作：</p>\n <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"n\">import</span> <span class=\"p\">(</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">database</span><span class=\"p\">/</span><span class=\"n\">sql</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"n\">_</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">/</span><span class=\"n\">go</span><span class=\"p\">-</span><span class=\"n\">sql</span><span class=\"p\">-</span><span class=\"n\">driver</span><span class=\"p\">/</span><span class=\"n\">mysql</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">net</span><span class=\"p\">/</span><span class=\"n\">http</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">HandleFunc</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;/&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">insert</span><span class=\"p\">)</span>\n    <span class=\"n\">err</span> <span class=\"p\">:=</span> <span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">ListenAndServe</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;:</span><span class=\"m\">9090</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">nil</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"c1\">!= nil {\n</span>        <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">resp</span> <span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">ResponseWriter</span><span class=\"p\">,</span> <span class=\"n\">req</span> <span class=\"p\">*</span><span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">Request</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"p\">:=</span> <span class=\"n\">sql</span><span class=\"p\">.</span><span class=\"n\">Open</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">mysql</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Abel</span><span class=\"p\">:</span><span class=\"m\">123456</span><span class=\"p\">@/</span><span class=\"n\">test</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">defer</span> <span class=\"n\">db</span><span class=\"p\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n\n    <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"p\">:=</span> <span class=\"n\">db</span><span class=\"p\">.</span><span class=\"n\">Exec</span><span class=\"p\">(</span>\n        <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">insert</span> <span class=\"n\">into</span> <span class=\"n\">pressure</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"n\">values</span><span class=\"p\">(</span><span class=\"m\">456</span><span class=\"p\">)&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"c1\">!= nil {\n</span>        <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n</code></pre> \n<p>用 ab 开了 n10000、c200 去压测，结果发现有报错，主要是以下几个：</p>\n\n<ol>\n<li> <code>packets.go:36: read tcp 127.0.0.1:49205-&amp;gt;127.0.0.1:3306: read: connection reset by peer</code>\n</li>\n<li> <code>packets.go:141: write tcp 127.0.0.1:49205-&amp;gt;127.0.0.1:3306: write: broken pipe</code>\n</li>\n<li> <code>dial tcp 127.0.0.1:3306: getsockopt: connection reset by peer</code>\n</li>\n</ol>\n\n<p>数据库里总共记录数是 9953。</p>\n\n<p>请问这是什么原因导致的？</p>\n\n<hr>\n\n<p>做了调整：</p>\n <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"n\">import</span> <span class=\"p\">(</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">database</span><span class=\"p\">/</span><span class=\"n\">sql</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"n\">_</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">/</span><span class=\"n\">go</span><span class=\"p\">-</span><span class=\"n\">sql</span><span class=\"p\">-</span><span class=\"n\">driver</span><span class=\"p\">/</span><span class=\"n\">mysql</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">net</span><span class=\"p\">/</span><span class=\"n\">http</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">var</span> <span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"p\">=</span> <span class=\"n\">sql</span><span class=\"p\">.</span><span class=\"n\">Open</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">mysql</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Abel</span><span class=\"p\">:</span><span class=\"m\">123456</span><span class=\"p\">@/</span><span class=\"n\">test</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">HandleFunc</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;/&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">insert</span><span class=\"p\">)</span>\n    <span class=\"n\">err</span> <span class=\"p\">:=</span> <span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">ListenAndServe</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;:</span><span class=\"m\">9090</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">nil</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"c1\">!= nil {\n</span>        <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">resp</span> <span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">ResponseWriter</span><span class=\"p\">,</span> <span class=\"n\">req</span> <span class=\"p\">*</span><span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">Request</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n    <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"p\">:=</span> <span class=\"n\">db</span><span class=\"p\">.</span><span class=\"n\">Exec</span><span class=\"p\">(</span>\n        <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">insert</span> <span class=\"n\">into</span> <span class=\"n\">pressure</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"n\">values</span><span class=\"p\">(</span><span class=\"m\">456</span><span class=\"p\">)&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"c1\">!= nil {\n</span>        <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 650,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 926,
    "title": "GoCN每日新闻(2017-07-13)",
    "created_at": "2017-07-13 10:11:02",
    "updated_at": "2017-07-13 10:11:02",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-13)\n\n1. 神经网络入门 http://www.ruanyifeng.com/blog/2017/07/neural-network.html\n2. Go 1.9 sync.Map揭秘 http://colobu.com/2017/07/11/dive-into-sync-Map/\n3. Git 配置最佳实践 http://zcfy.cc/article/better-git-configuration-scott-nonnenberg-3350.html\n4. 基于Go channel的通知 http://blog.atte.ro/2017/07/09/golang-channel-notification-select.html\n5. 可重用I/O buffer的websocket实现 https://github.com/gobwas/ws\n\n活动预告：杭州Gopher meetup http://www.bagevent.com/event/668296\n\t1. 黄庆兵 《可视化学习 Go 并发编程》网易\n\t2. 陈超 《基于Go的大数据平台》七牛\n\t3. 张磊《 Kubernetes语境下的基于Golang的编程范式》Kubernetes官方ProjectManager\n\t4. 黄励博《基于 mesos 的容器调度框架》又拍云\n\t5. 谢孟军《Go使用grpc+http打造高性能微服务》GoCN\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-13)</p>\n\n<ol>\n<li>神经网络入门 <a href=\"http://www.ruanyifeng.com/blog/2017/07/neural-network.html\" rel=\"nofollow\" target=\"_blank\">http://www.ruanyifeng.com/blog/2017/07/neural-network.html</a>\n</li>\n<li>Go 1.9 sync.Map 揭秘 <a href=\"http://colobu.com/2017/07/11/dive-into-sync-Map/\" rel=\"nofollow\" target=\"_blank\">http://colobu.com/2017/07/11/dive-into-sync-Map/</a>\n</li>\n<li>Git 配置最佳实践 <a href=\"http://zcfy.cc/article/better-git-configuration-scott-nonnenberg-3350.html\" rel=\"nofollow\" target=\"_blank\">http://zcfy.cc/article/better-git-configuration-scott-nonnenberg-3350.html</a>\n</li>\n<li>基于 Go channel 的通知 <a href=\"http://blog.atte.ro/2017/07/09/golang-channel-notification-select.html\" rel=\"nofollow\" target=\"_blank\">http://blog.atte.ro/2017/07/09/golang-channel-notification-select.html</a>\n</li>\n<li>可重用 I/O buffer 的 websocket 实现 <a href=\"https://github.com/gobwas/ws\" rel=\"nofollow\" target=\"_blank\">https://github.com/gobwas/ws</a>\n</li>\n</ol>\n\n<p>活动预告：杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a>\n    1. 黄庆兵《可视化学习&nbsp;Go&nbsp;并发编程》网易\n    2. 陈超《基于 Go 的大数据平台》七牛\n    3. 张磊《 Kubernetes 语境下的基于 Golang 的编程范式》Kubernetes 官方 ProjectManager\n    4. 黄励博《基于&nbsp;mesos&nbsp;的容器调度框架》又拍云\n    5. 谢孟军《Go 使用 grpc+http 打造高性能微服务》GoCN</p>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 468,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 927,
    "title": "sql插入数据string类型字段为空",
    "created_at": "2017-07-14 00:00:15",
    "updated_at": "2017-07-14 13:57:47",
    "replied_at": "2017-07-14 13:57:47",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2262,
    "last_reply_user_login": "abin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 423,
    "user": "{\"id\": 423, \"name\": \"chenqinghe\", \"login\": \"chenqinghe\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "批量插入假数据的时候，int类型数据都可以插入成功，但是varchar类型的均为空，望大神解答是什么原因。\n\n代码：\n```go\nfunc main() {\n\tdb, err := sql.Open(&quot;mysql&quot;, &quot;chenchao:Aglacad123@tcp(localhost:3306)/test&quot;)\n\tif err != nil {\n\t\tlogrus.Fatal(&quot;can not connect to database:&quot;, err)\n\t}\n\tif err := db.Ping(); err != nil {\n\t\tlogrus.Fatal(err)\n\t}\n\tlogrus.Info(&quot;successful.&quot;)\n\n\tstmt, err := db.Prepare(`insert into user(uid,user_name,password,ctime) VALUE (?,?,?,?)`)\n\tif err != nil {\n\t\tlogrus.Fatal(err)\n\t}\n\tfor i := 3; i &lt; 1000000; i++ {\n\t\tname := randomStr(10)\n\t\tpwd := randomStr(20)\n\t\tfmt.Println(name, pwd)\n\t\trs, err := stmt.Query(i, name, pwd, time.Now().Unix())\n\t\tif err != nil {\n\t\t\tlogrus.Fatal(err)\n\t\t\treturn\n\t\t}\n\t\tlogrus.Debug(rs)\n\t}\n\n}\n\nfunc randomStr(length int) string {\n\tvar baseStr = &quot;qwertyuiopasdfghjklzxcvbnmQWERTYUIOPLKJHGFDSAZXCVBNM0123456789&quot;\n\tvar bt []byte = make([]byte, length)\n\tfor i := 0; i &lt; length; i++ {\n\t\tk := rand.Intn(62)\n\t\tbt = append(bt, baseStr[k])\n\t}\n\treturn string(bt)\n}\n```\n打开mysql的sql日志，发现插入的数据有点问题，下面是截图：\n[![mysql日志](https://git.chenqinghe.com/chenchao/images/raw/master/mysql-log.png &quot;mysql日志&quot;)](https://git.chenqinghe.com/chenchao/images/raw/master/mysql-log.png &quot;mysql日志&quot;)\n\n奇怪的是，像下面这样直接赋值,插入就没有问题（如上图第二条sql）：\n```go\nname:= &quot;hello&quot;\npwd:= &quot;world&quot;\n```\n",
    "body_html": "<p>批量插入假数据的时候，int 类型数据都可以插入成功，但是 varchar 类型的均为空，望大神解答是什么原因。</p>\n\n<p>代码：</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">mysql</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">chenchao</span><span class=\"o\">:</span><span class=\"n\">Aglacad123</span><span class=\"err\">@</span><span class=\"n\">tcp</span><span class=\"p\">(</span><span class=\"n\">localhost</span><span class=\"o\">:</span><span class=\"m\">3306</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">logrus</span><span class=\"o\">.</span><span class=\"n\">Fatal</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">can</span> <span class=\"n\">not</span> <span class=\"n\">connect</span> <span class=\"n\">to</span> <span class=\"n\">database</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Ping</span><span class=\"p\">();</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">logrus</span><span class=\"o\">.</span><span class=\"n\">Fatal</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">logrus</span><span class=\"o\">.</span><span class=\"n\">Info</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">successful</span><span class=\"o\">.&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n\n    <span class=\"n\">stmt</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Prepare</span><span class=\"p\">(</span><span class=\"s\">`insert into user(uid,user_name,password,ctime) VALUE (?,?,?,?)`</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">logrus</span><span class=\"o\">.</span><span class=\"n\">Fatal</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">3</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"m\">1000000</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n        <span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"n\">randomStr</span><span class=\"p\">(</span><span class=\"m\">10</span><span class=\"p\">)</span>\n        <span class=\"n\">pwd</span> <span class=\"o\">:=</span> <span class=\"n\">randomStr</span><span class=\"p\">(</span><span class=\"m\">20</span><span class=\"p\">)</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">pwd</span><span class=\"p\">)</span>\n        <span class=\"n\">rs</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">stmt</span><span class=\"o\">.</span><span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">pwd</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Unix</span><span class=\"p\">())</span>\n        <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n            <span class=\"n\">logrus</span><span class=\"o\">.</span><span class=\"n\">Fatal</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">logrus</span><span class=\"o\">.</span><span class=\"n\">Debug</span><span class=\"p\">(</span><span class=\"n\">rs</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">randomStr</span><span class=\"p\">(</span><span class=\"n\">length</span> <span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"kt\">string</span> <span class=\"p\">{</span>\n    <span class=\"k\">var</span> <span class=\"n\">baseStr</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">qwertyuiopasdfghjklzxcvbnmQWERTYUIOPLKJHGFDSAZXCVBNM0123456789</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"k\">var</span> <span class=\"n\">bt</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span> <span class=\"o\">=</span> <span class=\"nb\">make</span><span class=\"p\">([]</span><span class=\"kt\">byte</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"n\">length</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n        <span class=\"n\">k</span> <span class=\"o\">:=</span> <span class=\"n\">rand</span><span class=\"o\">.</span><span class=\"n\">Intn</span><span class=\"p\">(</span><span class=\"m\">62</span><span class=\"p\">)</span>\n        <span class=\"n\">bt</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">bt</span><span class=\"p\">,</span> <span class=\"n\">baseStr</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">])</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"kt\">string</span><span class=\"p\">(</span><span class=\"n\">bt</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>打开 mysql 的 sql 日志，发现插入的数据有点问题，下面是截图：\n<a href=\"https://git.chenqinghe.com/chenchao/images/raw/master/mysql-log.png%20%22mysql%E6%97%A5%E5%BF%97%22\" title=\"\"><img src=\"https://git.chenqinghe.com/chenchao/images/raw/master/mysql-log.png\" title=\"&quot;mysql日志&quot;\" alt=\"mysql日志\"></a></p>\n\n<p>奇怪的是，像下面这样直接赋值,插入就没有问题（如上图第二条 sql）：</p>\n <pre class=\"highlight go\"><code><span class=\"n\">name</span><span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">hello</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"n\">pwd</span><span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">world</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n</code></pre> ",
    "hits": 643,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 928,
    "title": "一个struct聚合的问题",
    "created_at": "2017-07-14 09:50:12",
    "updated_at": "2017-07-14 14:11:38",
    "replied_at": "2017-07-14 14:11:38",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2262,
    "last_reply_user_login": "abin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 887,
    "user": "{\"id\": 887, \"name\": \"haohongfan\", \"login\": \"haohongfan\", \"avatar\": \"https://static.gocn.vip/user/avatar/887/977be8.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我写了一个User model继承了gorm的model类. 代码如下\n```\ntype User struct {\n\tgorm.Model\n\tEmail         string `gorm:&quot;size:255&quot;`\n\tPassword      string `gorm:&quot;size:20&quot;`\n\tRepassword    string `gorm:&quot;size:20&quot;`\n\tLastLoginTime time.Time\n}\n```\n但是我在controller里使用这个User, 给这个User赋值的时候,代码如下:\n```\nmodels.User{Model:Model{ID:1}}\n```\n没法给User的Model赋值, 问题出在哪里",
    "body_html": "<p>我写了一个 User model 继承了 gorm 的 model 类. 代码如下</p>\n <pre class=\"highlight plaintext\"><code>type User struct {\n    gorm.Model\n    Email         string `gorm:&amp;quot;size:255&amp;quot;`\n    Password      string `gorm:&amp;quot;size:20&amp;quot;`\n    Repassword    string `gorm:&amp;quot;size:20&amp;quot;`\n    LastLoginTime time.Time\n}\n</code></pre> \n<p>但是我在 controller 里使用这个 User, 给这个 User 赋值的时候,代码如下:</p>\n <pre class=\"highlight plaintext\"><code>models.User{Model:Model{ID:1}}\n</code></pre> \n<p>没法给 User 的 Model 赋值, 问题出在哪里</p>",
    "hits": 438,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 929,
    "title": "GoCN每日新闻(2017-07-14)",
    "created_at": "2017-07-14 10:02:16",
    "updated_at": "2017-07-14 10:02:16",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-14)\n\n1. 浅谈 MVC、MVP 和 MVVM 架构模式 http://draveness.me/mvx.html\n2. 软件架构模式 https://segmentfault.com/a/1190000009652120\n3. 朝着 Go2 前进 https://blog.golang.org/toward-go2\n4. 微服务设计模式 https://azure.microsoft.com/en-us/blog/design-patterns-for-microservices/\n5. DropBox Go实战 https://about.sourcegraph.com/go/go-reliability-and-durability-at-dropbox-tammy-butow\n\n活动预告：杭州Gopher meetup http://www.bagevent.com/event/668296\n\t1. 黄庆兵 《可视化学习 Go 并发编程》网易\n\t2. 陈超 《基于Go的大数据平台》七牛\n\t3. 张磊《 Kubernetes语境下的基于Golang的编程范式》Kubernetes官方ProjectManager\n\t4. 黄励博《基于 mesos 的容器调度框架》又拍云\n\t5. 谢孟军《Go使用grpc+http打造高性能微服务》GoCN\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn\n\n",
    "body_html": "<p>GoCN 每日新闻 (2017-07-14)</p>\n\n<ol>\n<li>浅谈 MVC、MVP 和 MVVM 架构模式 <a href=\"http://draveness.me/mvx.html\" rel=\"nofollow\" target=\"_blank\">http://draveness.me/mvx.html</a>\n</li>\n<li>软件架构模式 <a href=\"https://segmentfault.com/a/1190000009652120\" rel=\"nofollow\" target=\"_blank\">https://segmentfault.com/a/1190000009652120</a>\n</li>\n<li>朝着 Go2 前进 <a href=\"https://blog.golang.org/toward-go2\" rel=\"nofollow\" target=\"_blank\">https://blog.golang.org/toward-go2</a>\n</li>\n<li>微服务设计模式 <a href=\"https://azure.microsoft.com/en-us/blog/design-patterns-for-microservices/\" rel=\"nofollow\" target=\"_blank\">https://azure.microsoft.com/en-us/blog/design-patterns-for-microservices/</a>\n</li>\n<li>DropBox Go 实战 <a href=\"https://about.sourcegraph.com/go/go-reliability-and-durability-at-dropbox-tammy-butow\" rel=\"nofollow\" target=\"_blank\">https://about.sourcegraph.com/go/go-reliability-and-durability-at-dropbox-tammy-butow</a>\n</li>\n</ol>\n\n<p>活动预告：杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a>\n    1. 黄庆兵《可视化学习&nbsp;Go&nbsp;并发编程》网易\n    2. 陈超《基于 Go 的大数据平台》七牛\n    3. 张磊《 Kubernetes 语境下的基于 Golang 的编程范式》Kubernetes 官方 ProjectManager\n    4. 黄励博《基于&nbsp;mesos&nbsp;的容器调度框架》又拍云\n    5. 谢孟军《Go 使用 grpc+http 打造高性能微服务》GoCN</p>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 435,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 930,
    "title": "GoCN社区打算采用beego2+Vue重构，召集开发者(已满)",
    "created_at": "2017-07-14 10:55:40",
    "updated_at": "2021-01-16 22:26:14",
    "replied_at": "2018-12-05 01:12:56",
    "replies_count": 57,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 6870,
    "last_reply_user_login": "aidongsheng",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我们GoCN社区建立至今快有一年了，这一年来我也是不断的在摸索怎么样的运营方式，目前来说GoCN每日新闻得到了广大开发者的认同，我希望能够进一步的打造好：\n\n1. 支持RSS\n2. 支持搜索\n3. 支持用户投稿\n\n其次我们目前的GoCN社区也需要进一步的开发，希望推出几个栏目，但是毕竟是PHP的程序搭建的，所以希望下一步使用Go+Vue重新开发一个版本，Go打算采用beego2开发API，完全采用微服务的架构来开发，当做beego2的最佳实践案例来做，第二个Vue来开发网页版本，同时也希望有ios和Android版本的开发者能够一起参与进来。\n\n我们会把我们的程序全部开源在https://github.com/weitan\n\n如果你觉得自己有一定的时间，而且你有一定的开发经验，那么我们一起来建立这个开源程序，欢迎有意向的同学发送你的大概介绍到我的邮箱：xiemengjun@gmail.com",
    "body_html": "<p>我们 GoCN 社区建立至今快有一年了，这一年来我也是不断的在摸索怎么样的运营方式，目前来说 GoCN 每日新闻得到了广大开发者的认同，我希望能够进一步的打造好：</p>\n\n<ol>\n<li>支持 RSS</li>\n<li>支持搜索</li>\n<li>支持用户投稿</li>\n</ol>\n\n<p>其次我们目前的 GoCN 社区也需要进一步的开发，希望推出几个栏目，但是毕竟是 PHP 的程序搭建的，所以希望下一步使用 Go+Vue 重新开发一个版本，Go 打算采用 beego2 开发 API，完全采用微服务的架构来开发，当做 beego2 的最佳实践案例来做，第二个 Vue 来开发网页版本，同时也希望有 ios 和 Android 版本的开发者能够一起参与进来。</p>\n\n<p>我们会把我们的程序全部开源在<a href=\"https://github.com/weitan\" rel=\"nofollow\" target=\"_blank\">https://github.com/weitan</a></p>\n\n<p>如果你觉得自己有一定的时间，而且你有一定的开发经验，那么我们一起来建立这个开源程序，欢迎有意向的同学发送你的大概介绍到我的邮箱：xiemengjun@gmail.com</p>",
    "hits": 1924,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 931,
    "title": "gRPC服务发现&amp;负载均衡的watcher必须暂停一秒，不然会出现code = Unavailable desc = there is no address available错误",
    "created_at": "2017-07-14 21:34:06",
    "updated_at": "2017-07-18 17:49:31",
    "replied_at": "2017-07-18 17:49:31",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2338,
    "last_reply_user_login": "yacc2007",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1257,
    "user": "{\"id\": 1257, \"name\": \"elvin5\", \"login\": \"elvin5\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "gRPC服务发现&amp;负载均衡的watcher必须暂停一秒，不然会出现code = Unavailable desc = there is no address available错误．以下是watcher代码，网上copy的．地址是：https://segmentfault.com/a/1190000008672912\n请教一下，发生错误的原因是什么？\n谢谢．\n\n```\npackage etcdv3\n\nimport (\n    &quot;fmt&quot;\n    etcd3 &quot;github.com/coreos/etcd/clientv3&quot;\n    &quot;golang.org/x/net/context&quot;\n    &quot;google.golang.org/grpc/naming&quot;\n    &quot;github.com/coreos/etcd/mvcc/mvccpb&quot;\n)\n\n// watcher is the implementaion of grpc.naming.Watcher\ntype watcher struct {\n    re            *resolver // re: Etcd Resolver\n    client        etcd3.Client\n    isInitialized bool\n}\n\n// Close do nothing\nfunc (w *watcher) Close() {\n}\n\n// Next to return the updates\nfunc (w *watcher) Next() ([]*naming.Update, error) {\n    // prefix is the etcd prefix/value to watch\n    prefix := fmt.Sprintf(&quot;/%s/%s/&quot;, Prefix, w.re.serviceName)\n\n    // check if is initialized\n    if !w.isInitialized {\n        // query addresses from etcd\n        resp, err := w.client.Get(context.Background(), prefix, etcd3.WithPrefix())\n        w.isInitialized = true\n        if err == nil {\n            addrs := extractAddrs(resp)\n            //if not empty, return the updates or watcher new dir\n            if l := len(addrs); l != 0 {\n                updates := make([]*naming.Update, l)\n                for i := range addrs {\n                    updates[i] = &amp;naming.Update{Op: naming.Add, Addr: addrs[i]}\n                }\n                return updates, nil\n            }\n        }\n    }\n\n    // generate etcd Watcher\n    rch := w.client.Watch(context.Background(), prefix, etcd3.WithPrefix())\n    for wresp := range rch {\n        for _, ev := range wresp.Events {\n            switch ev.Type {\n            case mvccpb.PUT:\n                return []*naming.Update{{Op: naming.Add, Addr: string(ev.Kv.Value)}}, nil\n            case mvccpb.DELETE:\n                return []*naming.Update{{Op: naming.Delete, Addr: string(ev.Kv.Value)}}, nil\n            }\n        }\n    }\n    return nil, nil\n}\n\nfunc extractAddrs(resp *etcd3.GetResponse) []string {\n    addrs := []string{}\n\n    if resp == nil || resp.Kvs == nil {\n        return addrs\n    }\n\n    for i := range resp.Kvs {\n        if v := resp.Kvs[i].Value; v != nil {\n            addrs = append(addrs, string(v))\n        }\n    }\n\n    return addrs\n}\n```",
    "body_html": "<p>gRPC 服务发现&amp;负载均衡的 watcher 必须暂停一秒，不然会出现 code = Unavailable desc = there is no address available 错误．以下是 watcher 代码，网上 copy 的．地址是：<a href=\"https://segmentfault.com/a/1190000008672912\" rel=\"nofollow\" target=\"_blank\">https://segmentfault.com/a/1190000008672912</a>\n请教一下，发生错误的原因是什么？\n谢谢．</p>\n<pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">etcdv3</span>\n\n<span class=\"n\">import</span> <span class=\"p\">(</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"n\">etcd3</span> <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">/</span><span class=\"n\">coreos</span><span class=\"p\">/</span><span class=\"n\">etcd</span><span class=\"p\">/</span><span class=\"n\">clientv3</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">golang</span><span class=\"p\">.</span><span class=\"n\">org</span><span class=\"p\">/</span><span class=\"n\">x</span><span class=\"p\">/</span><span class=\"n\">net</span><span class=\"p\">/</span><span class=\"n\">context</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">google</span><span class=\"p\">.</span><span class=\"n\">golang</span><span class=\"p\">.</span><span class=\"n\">org</span><span class=\"p\">/</span><span class=\"n\">grpc</span><span class=\"p\">/</span><span class=\"n\">naming</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">/</span><span class=\"n\">coreos</span><span class=\"p\">/</span><span class=\"n\">etcd</span><span class=\"p\">/</span><span class=\"n\">mvcc</span><span class=\"p\">/</span><span class=\"n\">mvccpb</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"p\">//</span> <span class=\"n\">watcher</span> <span class=\"n\">is</span> <span class=\"n\">the</span> <span class=\"n\">implementaion</span> <span class=\"k\">of</span> <span class=\"n\">grpc</span><span class=\"p\">.</span><span class=\"n\">naming</span><span class=\"p\">.</span><span class=\"n\">Watcher</span>\n<span class=\"n\">type</span> <span class=\"n\">watcher</span> <span class=\"n\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">re</span>            <span class=\"p\">*</span><span class=\"n\">resolver</span> <span class=\"p\">//</span> <span class=\"n\">re</span><span class=\"p\">:</span> <span class=\"n\">Etcd</span> <span class=\"n\">Resolver</span>\n    <span class=\"n\">client</span>        <span class=\"n\">etcd3</span><span class=\"p\">.</span><span class=\"n\">Client</span>\n    <span class=\"n\">isInitialized</span> <span class=\"n\">bool</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">//</span> <span class=\"n\">Close</span> <span class=\"k\">do</span> <span class=\"n\">nothing</span>\n<span class=\"n\">func</span> <span class=\"p\">(</span><span class=\"n\">w</span> <span class=\"p\">*</span><span class=\"n\">watcher</span><span class=\"p\">)</span> <span class=\"n\">Close</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">//</span> <span class=\"k\">Next</span> <span class=\"k\">to</span> <span class=\"n\">return</span> <span class=\"n\">the</span> <span class=\"n\">updates</span>\n<span class=\"n\">func</span> <span class=\"p\">(</span><span class=\"n\">w</span> <span class=\"p\">*</span><span class=\"n\">watcher</span><span class=\"p\">)</span> <span class=\"k\">Next</span><span class=\"p\">()</span> <span class=\"p\">([]*</span><span class=\"n\">naming</span><span class=\"p\">.</span><span class=\"n\">Update</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"p\">//</span> <span class=\"n\">prefix</span> <span class=\"n\">is</span> <span class=\"n\">the</span> <span class=\"n\">etcd</span> <span class=\"n\">prefix</span><span class=\"p\">/</span><span class=\"n\">value</span> <span class=\"k\">to</span> <span class=\"n\">watch</span>\n    <span class=\"n\">prefix</span> <span class=\"p\">:=</span> <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Sprintf</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;/%</span><span class=\"n\">s</span><span class=\"p\">/%</span><span class=\"n\">s</span><span class=\"p\">/&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">Prefix</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">.</span><span class=\"n\">re</span><span class=\"p\">.</span><span class=\"n\">serviceName</span><span class=\"p\">)</span>\n\n    <span class=\"p\">//</span> <span class=\"n\">check</span> <span class=\"k\">if</span> <span class=\"n\">is</span> <span class=\"n\">initialized</span>\n    <span class=\"k\">if</span> <span class=\"c1\">!w.isInitialized {\n</span>        <span class=\"p\">//</span> <span class=\"n\">query</span> <span class=\"n\">addresses</span> <span class=\"k\">from</span> <span class=\"n\">etcd</span>\n        <span class=\"n\">resp</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"p\">:=</span> <span class=\"n\">w</span><span class=\"p\">.</span><span class=\"n\">client</span><span class=\"p\">.</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">.</span><span class=\"n\">Background</span><span class=\"p\">(),</span> <span class=\"n\">prefix</span><span class=\"p\">,</span> <span class=\"n\">etcd3</span><span class=\"p\">.</span><span class=\"n\">WithPrefix</span><span class=\"p\">())</span>\n        <span class=\"n\">w</span><span class=\"p\">.</span><span class=\"n\">isInitialized</span> <span class=\"p\">=</span> <span class=\"nb\">true</span>\n        <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"p\">==</span> <span class=\"n\">nil</span> <span class=\"p\">{</span>\n            <span class=\"n\">addrs</span> <span class=\"p\">:=</span> <span class=\"n\">extractAddrs</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span>\n            <span class=\"p\">//</span><span class=\"k\">if</span> <span class=\"k\">not</span> <span class=\"n\">empty</span><span class=\"p\">,</span> <span class=\"n\">return</span> <span class=\"n\">the</span> <span class=\"n\">updates</span> <span class=\"k\">or</span> <span class=\"n\">watcher</span> <span class=\"n\">new</span> <span class=\"n\">dir</span>\n            <span class=\"k\">if</span> <span class=\"n\">l</span> <span class=\"p\">:=</span> <span class=\"n\">len</span><span class=\"p\">(</span><span class=\"n\">addrs</span><span class=\"p\">);</span> <span class=\"n\">l</span> <span class=\"c1\">!= 0 {\n</span>                <span class=\"n\">updates</span> <span class=\"p\">:=</span> <span class=\"n\">make</span><span class=\"p\">([]*</span><span class=\"n\">naming</span><span class=\"p\">.</span><span class=\"n\">Update</span><span class=\"p\">,</span> <span class=\"n\">l</span><span class=\"p\">)</span>\n                <span class=\"n\">for</span> <span class=\"n\">i</span> <span class=\"p\">:=</span> <span class=\"k\">range</span> <span class=\"n\">addrs</span> <span class=\"p\">{</span>\n                    <span class=\"n\">updates</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"p\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">naming</span><span class=\"p\">.</span><span class=\"n\">Update</span><span class=\"p\">{</span><span class=\"n\">Op</span><span class=\"p\">:</span> <span class=\"n\">naming</span><span class=\"p\">.</span><span class=\"n\">Add</span><span class=\"p\">,</span> <span class=\"n\">Addr</span><span class=\"p\">:</span> <span class=\"n\">addrs</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]}</span>\n                <span class=\"p\">}</span>\n                <span class=\"n\">return</span> <span class=\"n\">updates</span><span class=\"p\">,</span> <span class=\"n\">nil</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"p\">//</span> <span class=\"n\">generate</span> <span class=\"n\">etcd</span> <span class=\"n\">Watcher</span>\n    <span class=\"n\">rch</span> <span class=\"p\">:=</span> <span class=\"n\">w</span><span class=\"p\">.</span><span class=\"n\">client</span><span class=\"p\">.</span><span class=\"n\">Watch</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">.</span><span class=\"n\">Background</span><span class=\"p\">(),</span> <span class=\"n\">prefix</span><span class=\"p\">,</span> <span class=\"n\">etcd3</span><span class=\"p\">.</span><span class=\"n\">WithPrefix</span><span class=\"p\">())</span>\n    <span class=\"n\">for</span> <span class=\"n\">wresp</span> <span class=\"p\">:=</span> <span class=\"k\">range</span> <span class=\"n\">rch</span> <span class=\"p\">{</span>\n        <span class=\"n\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">ev</span> <span class=\"p\">:=</span> <span class=\"k\">range</span> <span class=\"n\">wresp</span><span class=\"p\">.</span><span class=\"n\">Events</span> <span class=\"p\">{</span>\n            <span class=\"n\">switch</span> <span class=\"n\">ev</span><span class=\"p\">.</span><span class=\"n\">Type</span> <span class=\"p\">{</span>\n            <span class=\"k\">case</span> <span class=\"n\">mvccpb</span><span class=\"p\">.</span><span class=\"n\">PUT</span><span class=\"p\">:</span>\n                <span class=\"n\">return</span> <span class=\"p\">[]*</span><span class=\"n\">naming</span><span class=\"p\">.</span><span class=\"n\">Update</span><span class=\"p\">{{</span><span class=\"n\">Op</span><span class=\"p\">:</span> <span class=\"n\">naming</span><span class=\"p\">.</span><span class=\"n\">Add</span><span class=\"p\">,</span> <span class=\"n\">Addr</span><span class=\"p\">:</span> <span class=\"k\">string</span><span class=\"p\">(</span><span class=\"n\">ev</span><span class=\"p\">.</span><span class=\"n\">Kv</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">)}},</span> <span class=\"n\">nil</span>\n            <span class=\"k\">case</span> <span class=\"n\">mvccpb</span><span class=\"p\">.</span><span class=\"n\">DELETE</span><span class=\"p\">:</span>\n                <span class=\"n\">return</span> <span class=\"p\">[]*</span><span class=\"n\">naming</span><span class=\"p\">.</span><span class=\"n\">Update</span><span class=\"p\">{{</span><span class=\"n\">Op</span><span class=\"p\">:</span> <span class=\"n\">naming</span><span class=\"p\">.</span><span class=\"n\">Delete</span><span class=\"p\">,</span> <span class=\"n\">Addr</span><span class=\"p\">:</span> <span class=\"k\">string</span><span class=\"p\">(</span><span class=\"n\">ev</span><span class=\"p\">.</span><span class=\"n\">Kv</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">)}},</span> <span class=\"n\">nil</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">return</span> <span class=\"n\">nil</span><span class=\"p\">,</span> <span class=\"n\">nil</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">extractAddrs</span><span class=\"p\">(</span><span class=\"n\">resp</span> <span class=\"p\">*</span><span class=\"n\">etcd3</span><span class=\"p\">.</span><span class=\"n\">GetResponse</span><span class=\"p\">)</span> <span class=\"p\">[]</span><span class=\"k\">string</span> <span class=\"p\">{</span>\n    <span class=\"n\">addrs</span> <span class=\"p\">:=</span> <span class=\"p\">[]</span><span class=\"k\">string</span><span class=\"p\">{}</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">resp</span> <span class=\"p\">==</span> <span class=\"n\">nil</span> <span class=\"p\">||</span> <span class=\"n\">resp</span><span class=\"p\">.</span><span class=\"n\">Kvs</span> <span class=\"p\">==</span> <span class=\"n\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">return</span> <span class=\"n\">addrs</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">for</span> <span class=\"n\">i</span> <span class=\"p\">:=</span> <span class=\"k\">range</span> <span class=\"n\">resp</span><span class=\"p\">.</span><span class=\"n\">Kvs</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"n\">v</span> <span class=\"p\">:=</span> <span class=\"n\">resp</span><span class=\"p\">.</span><span class=\"n\">Kvs</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">Value</span><span class=\"p\">;</span> <span class=\"n\">v</span> <span class=\"c1\">!= nil {\n</span>            <span class=\"n\">addrs</span> <span class=\"p\">=</span> <span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">addrs</span><span class=\"p\">,</span> <span class=\"k\">string</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">))</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">return</span> <span class=\"n\">addrs</span>\n<span class=\"p\">}</span>\n</code></pre>",
    "hits": 918,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 932,
    "title": "beego orm创建有下划线的表自动生成的表结构有两条下划线，是不是BUG?",
    "created_at": "2017-07-15 11:36:08",
    "updated_at": "2021-01-16 22:26:16",
    "replied_at": "2017-07-15 13:46:36",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 203,
    "last_reply_user_login": "yulibaozi",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2216,
    "user": "{\"id\": 2216, \"name\": \"reve\", \"login\": \"reve\", \"avatar\": \"https://gocn.vip/system/letter_avatars/r.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "models.go\n\npackage models\n\nimport (\n\t//&quot;github.com/astaxie/beego/orm&quot;\n)\n\ntype Ntjr_User struct {\n\tId          int\n\tName        string\n\tProfile     *Ntjr_Profile   `orm:&quot;rel(one)&quot;` // OneToOne relation\n\tPost        []*Ntrj_Post `orm:&quot;reverse(many)&quot;` // 设置一对多的反向关系\n}\n\ntype Ntjr_Profile struct {\n\tId          int\n\tAge         int16\n\tUser        *Ntjr_User   `orm:&quot;reverse(one)&quot;` // 设置一对一反向关系(可选)\n}\n\n下面是自动生成的表结构，在注释部分models.Ntjr_User还是单下划线，但create table `ntjr__user` 就变成了双下划线\n\n  create table `ntjr__user` \n    -- --------------------------------------------------\n    --  Table Structure for `ntjr_monitor/models.Ntjr_User`\n    -- --------------------------------------------------\n    CREATE TABLE IF NOT EXISTS `ntjr__user` (\n        `id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY,\n        `name` varchar(255) NOT NULL DEFAULT '' ,\n        `profile_id` integer NOT NULL UNIQUE\n    ) ENGINE=InnoDB;\n\ncreate table `ntrj__post` \n    -- --------------------------------------------------\n    --  Table Structure for `ntjr_monitor/models.Ntrj_Post`\n    -- --------------------------------------------------\n    CREATE TABLE IF NOT EXISTS `ntrj__post` (\n        `id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY,\n        `title` varchar(255) NOT NULL DEFAULT '' ,\n        `user_id` integer NOT NULL\n    ) ENGINE=InnoDB;",
    "body_html": "<p>models.go</p>\n\n<p>package models</p>\n\n<p>import (\n    //\"github.com/astaxie/beego/orm\"\n)</p>\n\n<p>type Ntjr_User struct {\n    Id          int\n    Name        string\n    Profile     *Ntjr_Profile   <code>orm:&amp;quot;rel(one)&amp;quot;</code> // OneToOne relation\n    Post        []*Ntrj_Post <code>orm:&amp;quot;reverse(many)&amp;quot;</code> // 设置一对多的反向关系\n}</p>\n\n<p>type Ntjr_Profile struct {\n    Id          int\n    Age         int16\n    User        *Ntjr_User   <code>orm:&amp;quot;reverse(one)&amp;quot;</code> // 设置一对一反向关系 (可选)\n}</p>\n\n<p>下面是自动生成的表结构，在注释部分 models.Ntjr_User 还是单下划线，但 create table <code>ntjr__user</code> 就变成了双下划线</p>\n\n<p>create table <code>ntjr__user</code> \n    -- --------------------------------------------------\n    --  Table Structure for <code>ntjr_monitor/models.Ntjr_User</code>\n    -- --------------------------------------------------\n    CREATE TABLE IF NOT EXISTS <code>ntjr__user</code> (\n        <code>id</code> integer AUTO_INCREMENT NOT NULL PRIMARY KEY,\n        <code>name</code> varchar(255) NOT NULL DEFAULT '' ,\n        <code>profile_id</code> integer NOT NULL UNIQUE\n    ) ENGINE=InnoDB;</p>\n\n<p>create table <code>ntrj__post</code> \n    -- --------------------------------------------------\n    --  Table Structure for <code>ntjr_monitor/models.Ntrj_Post</code>\n    -- --------------------------------------------------\n    CREATE TABLE IF NOT EXISTS <code>ntrj__post</code> (\n        <code>id</code> integer AUTO_INCREMENT NOT NULL PRIMARY KEY,\n        <code>title</code> varchar(255) NOT NULL DEFAULT '' ,\n        <code>user_id</code> integer NOT NULL\n    ) ENGINE=InnoDB;</p>",
    "hits": 552,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 933,
    "title": "GoCN每日新闻(2017-07-15)",
    "created_at": "2017-07-15 12:08:04",
    "updated_at": "2017-07-15 12:08:04",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-15)\n\n1. 到底有多少Gopher？https://research.swtch.com/gophercount\n2. Go1.9有哪些值得关注的变化 http://tonybai.com/2017/07/14/some-changes-in-go-1-9/\n3. redis4.0发布了 https://groups.google.com/forum/#!msg/redis-db/5Kh3viziYGQ/58TKLwX0AAAJ\n4. Go AST入门 https://zupzup.org/go-ast-traversal/\n5. 如何做Go的性能优化 https://zhuanlan.zhihu.com/p/27800985\n\n活动预告：\n\n1. 杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-15)</p>\n\n<ol>\n<li>到底有多少 Gopher？<a href=\"https://research.swtch.com/gophercount\" rel=\"nofollow\" target=\"_blank\">https://research.swtch.com/gophercount</a>\n</li>\n<li>Go1.9 有哪些值得关注的变化 <a href=\"http://tonybai.com/2017/07/14/some-changes-in-go-1-9/\" rel=\"nofollow\" target=\"_blank\">http://tonybai.com/2017/07/14/some-changes-in-go-1-9/</a>\n</li>\n<li>redis4.0 发布了 <a href=\"https://groups.google.com/forum/#!msg/redis-db/5Kh3viziYGQ/58TKLwX0AAAJ\" rel=\"nofollow\" target=\"_blank\">https://groups.google.com/forum/#! msg/redis-db/5Kh3viziYGQ/58TKLwX0AAAJ</a>\n</li>\n<li>Go AST 入门 <a href=\"https://zupzup.org/go-ast-traversal/\" rel=\"nofollow\" target=\"_blank\">https://zupzup.org/go-ast-traversal/</a>\n</li>\n<li>如何做 Go 的性能优化 <a href=\"https://zhuanlan.zhihu.com/p/27800985\" rel=\"nofollow\" target=\"_blank\">https://zhuanlan.zhihu.com/p/27800985</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 340,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 934,
    "title": "这种json如何解析比较好？",
    "created_at": "2017-07-16 03:00:27",
    "updated_at": "2017-07-18 19:10:06",
    "replied_at": "2017-07-18 19:10:06",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2341,
    "last_reply_user_login": "TOUKIII",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1353,
    "user": "{\"id\": 1353, \"name\": \"songtianyi\", \"login\": \"songtianyi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```json\n{\n    &quot;info&quot;: [\n        [\n            0, \n            1, \n            25, \n            16777215, \n            1500142835, \n            573950675426049340, \n            0, \n            &quot;a8ceaac0&quot;, \n            0\n        ], \n        &quot;地质学游戏，说的我好心动&quot;, \n        [\n            16575718, \n            &quot;雨曰王麒&quot;, \n            1, \n            0, \n            0, \n            10000, \n            1\n        ], \n        [ ], \n        [\n            14, \n            0, \n            6406234, \n            &quot;&gt;50000&quot;\n        ], \n        [ ], \n        0, \n        0\n    ], \n    &quot;cmd&quot;: &quot;DANMU_MSG&quot;\n}\n```",
    "body_html": " <pre class=\"highlight json\"><code><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;info&amp;quot;:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n        </span><span class=\"p\">[</span><span class=\"w\">\n            </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> \n            </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> \n            </span><span class=\"mi\">25</span><span class=\"p\">,</span><span class=\"w\"> \n            </span><span class=\"mi\">16777215</span><span class=\"p\">,</span><span class=\"w\"> \n            </span><span class=\"mi\">1500142835</span><span class=\"p\">,</span><span class=\"w\"> \n            </span><span class=\"mi\">573950675426049340</span><span class=\"p\">,</span><span class=\"w\"> \n            </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> \n            </span><span class=\"err\">&amp;quot;a</span><span class=\"mi\">8</span><span class=\"err\">ceaac</span><span class=\"mi\">0</span><span class=\"err\">&amp;quot;</span><span class=\"p\">,</span><span class=\"w\"> \n            </span><span class=\"mi\">0</span><span class=\"w\">\n        </span><span class=\"p\">],</span><span class=\"w\"> \n        </span><span class=\"err\">&amp;quot;地质学游戏，说的我好心动&amp;quot;</span><span class=\"p\">,</span><span class=\"w\"> \n        </span><span class=\"p\">[</span><span class=\"w\">\n            </span><span class=\"mi\">16575718</span><span class=\"p\">,</span><span class=\"w\"> \n            </span><span class=\"err\">&amp;quot;雨曰王麒&amp;quot;</span><span class=\"p\">,</span><span class=\"w\"> \n            </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> \n            </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> \n            </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> \n            </span><span class=\"mi\">10000</span><span class=\"p\">,</span><span class=\"w\"> \n            </span><span class=\"mi\">1</span><span class=\"w\">\n        </span><span class=\"p\">],</span><span class=\"w\"> \n        </span><span class=\"p\">[</span><span class=\"w\"> </span><span class=\"p\">],</span><span class=\"w\"> \n        </span><span class=\"p\">[</span><span class=\"w\">\n            </span><span class=\"mi\">14</span><span class=\"p\">,</span><span class=\"w\"> \n            </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> \n            </span><span class=\"mi\">6406234</span><span class=\"p\">,</span><span class=\"w\"> \n            </span><span class=\"err\">&amp;quot;&amp;gt;</span><span class=\"mi\">50000</span><span class=\"err\">&amp;quot;</span><span class=\"w\">\n        </span><span class=\"p\">],</span><span class=\"w\"> \n        </span><span class=\"p\">[</span><span class=\"w\"> </span><span class=\"p\">],</span><span class=\"w\"> \n        </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> \n        </span><span class=\"mi\">0</span><span class=\"w\">\n    </span><span class=\"p\">],</span><span class=\"w\"> \n    </span><span class=\"err\">&amp;quot;cmd&amp;quot;:</span><span class=\"w\"> </span><span class=\"err\">&amp;quot;DANMU_MSG&amp;quot;</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre> ",
    "hits": 622,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 935,
    "title": "GoCN每日新闻(2017-07-16)",
    "created_at": "2017-07-16 09:39:36",
    "updated_at": "2017-07-16 09:39:36",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-16)\n\n1. Go结构体json的时间格式化解决方案 https://gocn.io/article/388\n2. Go优化-自己造log轮子 http://blog.cyeam.com/golang/2017/07/14/go-log\n3. Go泛型大讨论 https://www.reddit.com/r/golang/comments/6nh418/generics_specific_use_cases/\n4. channels 详解 https://speakerdeck.com/kavya719/understanding-channels\n5. 分布式系统的注意点 http://go-talks.appspot.com/github.com/mhausenblas/fallacies-of-distributed-gomputing/main.slide#1\n\n活动预告：\n\n1. 杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn\n",
    "body_html": "<p>GoCN 每日新闻 (2017-07-16)</p>\n\n<ol>\n<li>Go 结构体 json 的时间格式化解决方案 <a href=\"https://gocn.io/article/388\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/388</a>\n</li>\n<li>Go 优化 - 自己造 log 轮子 <a href=\"http://blog.cyeam.com/golang/2017/07/14/go-log\" rel=\"nofollow\" target=\"_blank\">http://blog.cyeam.com/golang/2017/07/14/go-log</a>\n</li>\n<li>Go 泛型大讨论 <a href=\"https://www.reddit.com/r/golang/comments/6nh418/generics_specific_use_cases/\" rel=\"nofollow\" target=\"_blank\">https://www.reddit.com/r/golang/comments/6nh418/generics_specific_use_cases/</a>\n</li>\n<li>channels 详解 <a href=\"https://speakerdeck.com/kavya719/understanding-channels\" rel=\"nofollow\" target=\"_blank\">https://speakerdeck.com/kavya719/understanding-channels</a>\n</li>\n<li>分布式系统的注意点 <a href=\"http://go-talks.appspot.com/github.com/mhausenblas/fallacies-of-distributed-gomputing/main.slide#1\" rel=\"nofollow\" target=\"_blank\">http://go-talks.appspot.com/github.com/mhausenblas/fallacies-of-distributed-gomputing/main.slide#1</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 476,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 936,
    "title": "GoCN每日新闻(2017-07-17)",
    "created_at": "2017-07-17 09:58:37",
    "updated_at": "2017-07-17 09:58:37",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-17)\n\n1. Idiomatic Go https://about.sourcegraph.com/go/idiomatic-go\n2. 如何给 Go 项目做贡献https://docs.google.com/presentation/d/1ap2fycBSgoo-jCswhK9lqgCIFroE1pYpsXC1ffYBCq4/edit#slide=id.p\n3. 高可用和高性能 https://abdullin.com/sku-vault/2017-07-15-high-availability-and-performance/\n4. Go高级测试方式 https://about.sourcegraph.com/go/advanced-testing-in-go-mitchell-hashimoto\n5. 基于事件的微服务架构 https://mp.weixin.qq.com/s/HTeQNU-1P-hWloEdjl1QYg\n\n1. 杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn\n\n",
    "body_html": "<p>GoCN 每日新闻 (2017-07-17)</p>\n\n<ol>\n<li>Idiomatic Go <a href=\"https://about.sourcegraph.com/go/idiomatic-go\" rel=\"nofollow\" target=\"_blank\">https://about.sourcegraph.com/go/idiomatic-go</a>\n</li>\n<li>如何给 Go 项目做贡献<a href=\"https://docs.google.com/presentation/d/1ap2fycBSgoo-jCswhK9lqgCIFroE1pYpsXC1ffYBCq4/edit#slide=id.p\" rel=\"nofollow\" target=\"_blank\">https://docs.google.com/presentation/d/1ap2fycBSgoo-jCswhK9lqgCIFroE1pYpsXC1ffYBCq4/edit#slide=id.p</a>\n</li>\n<li>高可用和高性能 <a href=\"https://abdullin.com/sku-vault/2017-07-15-high-availability-and-performance/\" rel=\"nofollow\" target=\"_blank\">https://abdullin.com/sku-vault/2017-07-15-high-availability-and-performance/</a>\n</li>\n<li>Go 高级测试方式 <a href=\"https://about.sourcegraph.com/go/advanced-testing-in-go-mitchell-hashimoto\" rel=\"nofollow\" target=\"_blank\">https://about.sourcegraph.com/go/advanced-testing-in-go-mitchell-hashimoto</a>\n</li>\n<li><p>基于事件的微服务架构 <a href=\"https://mp.weixin.qq.com/s/HTeQNU-1P-hWloEdjl1QYg\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/HTeQNU-1P-hWloEdjl1QYg</a></p></li>\n<li><p>杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a></p></li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 267,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 937,
    "title": "使用JetBrains goland遇到一个问题",
    "created_at": "2017-07-17 11:07:51",
    "updated_at": "2017-07-19 11:02:26",
    "replied_at": "2017-07-19 11:02:26",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 325,
    "last_reply_user_login": "kyle",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 329,
    "user": "{\"id\": 329, \"name\": \"flewliu\", \"login\": \"flewliu\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "使用JetBrains goland遇到一个问题，发现在这个ide里面运行的时候使用beego.AppConfig.String并不能获取到配置文件里面的数据，不知道什么原因，有没有人有遇到过的",
    "body_html": "<p>使用 JetBrains goland 遇到一个问题，发现在这个 ide 里面运行的时候使用 beego.AppConfig.String 并不能获取到配置文件里面的数据，不知道什么原因，有没有人有遇到过的</p>",
    "hits": 549,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 938,
    "title": "golang有关于数据结构和算法的实现的相关入门的书么？",
    "created_at": "2017-07-17 11:46:25",
    "updated_at": "2017-07-21 15:29:12",
    "replied_at": "2017-07-21 15:29:12",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2252,
    "last_reply_user_login": "fiisio",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 192,
    "user": "{\"id\": 192, \"name\": \"nino\", \"login\": \"nino\", \"avatar\": \"https://gocn.vip/system/letter_avatars/n.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "想用golang实现一些基本的数据结构和算法，当做小练习，有什么推荐的书么？",
    "body_html": "<p>想用 golang 实现一些基本的数据结构和算法，当做小练习，有什么推荐的书么？</p>",
    "hits": 655,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 939,
    "title": "使用mgo框架，mongo每次重启，依赖它的服务都会出现Closed explicitly错误？",
    "created_at": "2017-07-17 15:54:36",
    "updated_at": "2017-07-17 19:26:27",
    "replied_at": "2017-07-17 19:26:27",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 960,
    "last_reply_user_login": "tupunco",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2304,
    "user": "{\"id\": 2304, \"name\": \"shingle\", \"login\": \"shingle\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "mongo容器和其他服务在不同的主机上，有时候mongo所在的主机重启或者其他情况导致的重启，依赖mongo的微服务都会报`Closed explicitly`这个错误,应该是没有断线重连导致的\n项目代码如下，session是全局的\n```\n\tsession, err := mgo.Dial(conf.Conf().Mongo.Url)\n\tif err != nil {\n\t\tlog.WithError(err).Fatal(&quot;连接数据库失败&quot;)\n\t}\n\tdb = session.DB(db_RANBB)\n\t```\n看了官方https://github.com/go-mgo/mgo/issues/166 的回复，意思是使用copy出来的session？这样会不会导致无法使用连接池啊",
    "body_html": "<p>mongo 容器和其他服务在不同的主机上，有时候 mongo 所在的主机重启或者其他情况导致的重启，依赖 mongo 的微服务都会报<code>Closed explicitly</code>这个错误,应该是没有断线重连导致的\n项目代码如下，session 是全局的</p>\n <pre class=\"highlight plaintext\"><code>    session, err := mgo.Dial(conf.Conf().Mongo.Url)\n    if err != nil {\n        log.WithError(err).Fatal(&amp;quot;连接数据库失败&amp;quot;)\n    }\n    db = session.DB(db_RANBB)\n    ```\n看了官方https://github.com/go-mgo/mgo/issues/166 的回复，意思是使用copy出来的session？这样会不会导致无法使用连接池啊\n</code></pre> ",
    "hits": 614,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 940,
    "title": "gogland 设置Run Configurations",
    "created_at": "2017-07-17 16:36:07",
    "updated_at": "2017-12-02 21:36:05",
    "replied_at": "2017-12-02 21:36:05",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 960,
    "last_reply_user_login": "tupunco",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 329,
    "user": "{\"id\": 329, \"name\": \"flewliu\", \"login\": \"flewliu\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "发现在gogland里面启动一个项目需要在Run Configurations里面添加一个Go Application，指向项目目录中，如果我工作目录里面有多少个项目的话是不是要添加多少个Go Application啊， 不知道是我的方法不对，还是我的理解不对？",
    "body_html": "<p>发现在 gogland 里面启动一个项目需要在 Run Configurations 里面添加一个 Go Application，指向项目目录中，如果我工作目录里面有多少个项目的话是不是要添加多少个 Go Application 啊， 不知道是我的方法不对，还是我的理解不对？</p>",
    "hits": 473,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 941,
    "title": "go有没有有意思的且值的学习的开源项目推荐",
    "created_at": "2017-07-17 19:56:52",
    "updated_at": "2017-07-20 09:21:30",
    "replied_at": "2017-07-20 09:21:30",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 432,
    "last_reply_user_login": "woshicixide",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2317,
    "user": "{\"id\": 2317, \"name\": \"huhuyou2\", \"login\": \"huhuyou2\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "rt",
    "body_html": "<p>rt</p>",
    "hits": 407,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 942,
    "title": "这边有七牛的同学吗，https://qiniupkg.com/ 该换ssl证书啦",
    "created_at": "2017-07-18 09:18:47",
    "updated_at": "2017-07-18 09:18:47",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2329,
    "user": "{\"id\": 2329, \"name\": \"robscc\", \"login\": \"robscc\", \"avatar\": \"https://gocn.vip/system/letter_avatars/r.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "想拉代码都不能go get下来 暂时先用github的",
    "body_html": "<p>想拉代码都不能 go get 下来 暂时先用 github 的</p>",
    "hits": 247,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 943,
    "title": "GoCN每日新闻(2017-07-18)",
    "created_at": "2017-07-18 10:18:31",
    "updated_at": "2017-07-18 10:18:31",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-18)\n\n1. systemd前世今生 http://coolshell.cn/articles/17998.html\n2. 60行Go代码实现的strace https://medium.com/@lizrice/strace-in-60-lines-of-go-b4b76e3ecd64\n3. Go窃取算法的调度器 https://rakyll.org/scheduler/\n4. obito：开箱即用的 iOS 推送服务（Golang）https://github.com/jiajunhuang/obito\n5. 微服务最难的部分：调用服务 http://blog.christianposta.com/microservices/the-hardest-part-of-microservices-calling-your-services/\n\n活动预告：\n今晚Go实战群图文直播【Go大咖说】 分享第一期——姜家志《比特币、区块链和Go开发》\nhttps://gocn.io/article/389\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-18)</p>\n\n<ol>\n<li>systemd 前世今生 <a href=\"http://coolshell.cn/articles/17998.html\" rel=\"nofollow\" target=\"_blank\">http://coolshell.cn/articles/17998.html</a>\n</li>\n<li>60 行 Go 代码实现的 strace <a href=\"https://medium.com/@lizrice/strace-in-60-lines-of-go-b4b76e3ecd64\" rel=\"nofollow\" target=\"_blank\">https://medium.com/@lizrice/strace-in-60-lines-of-go-b4b76e3ecd64</a>\n</li>\n<li>Go 窃取算法的调度器 <a href=\"https://rakyll.org/scheduler/\" rel=\"nofollow\" target=\"_blank\">https://rakyll.org/scheduler/</a>\n</li>\n<li>obito：开箱即用的 iOS 推送服务（Golang）<a href=\"https://github.com/jiajunhuang/obito\" rel=\"nofollow\" target=\"_blank\">https://github.com/jiajunhuang/obito</a>\n</li>\n<li>微服务最难的部分：调用服务 <a href=\"http://blog.christianposta.com/microservices/the-hardest-part-of-microservices-calling-your-services/\" rel=\"nofollow\" target=\"_blank\">http://blog.christianposta.com/microservices/the-hardest-part-of-microservices-calling-your-services/</a>\n</li>\n</ol>\n\n<p>活动预告：\n今晚 Go 实战群图文直播【Go 大咖说】分享第一期——姜家志《比特币、区块链和 Go 开发》\n<a href=\"https://gocn.io/article/389\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/389</a></p>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 445,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 944,
    "title": "使用JetBrains gogland获取不到beego conf 配置文件解决方法",
    "created_at": "2017-07-18 10:46:02",
    "updated_at": "2021-01-20 13:34:23",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 329,
    "user": "{\"id\": 329, \"name\": \"flewliu\", \"login\": \"flewliu\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "使用JetBrains goland遇到一个问题，发现在这个ide里面运行的时候使用beego.AppConfig.String并不能获取到配置文件里面的数据，现在发现一个解决方法，现分享在此\n发现是在beego里面获取conf文件路径的时候，os.Getwd()获取workPath只能获取到GoPath路径，而不能获取到GoPath/src下面的具体程序路径，而在liteide里面可以获取到当前程序完整路径\n目前发现一个解决方法就是在Reun/Debug Configurations配置里面Working directory配置到你具体程序根目录，这个默认只是到你的GoPath路径下面\n如果各位有其它好的解决方法的话可以分享，有什么不对的可以多多批评",
    "body_html": "<p>使用 JetBrains goland 遇到一个问题，发现在这个 ide 里面运行的时候使用 beego.AppConfig.String 并不能获取到配置文件里面的数据，现在发现一个解决方法，现分享在此\n发现是在 beego 里面获取 conf 文件路径的时候，os.Getwd() 获取 workPath 只能获取到 GoPath 路径，而不能获取到 GoPath/src 下面的具体程序路径，而在 liteide 里面可以获取到当前程序完整路径\n目前发现一个解决方法就是在 Reun/Debug Configurations 配置里面 Working directory 配置到你具体程序根目录，这个默认只是到你的 GoPath 路径下面\n如果各位有其它好的解决方法的话可以分享，有什么不对的可以多多批评</p>",
    "hits": 523,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 945,
    "title": "web服务中连接池用法",
    "created_at": "2017-07-18 13:01:05",
    "updated_at": "2017-07-18 17:37:30",
    "replied_at": "2017-07-18 17:04:07",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2335,
    "last_reply_user_login": "javasgl",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2335,
    "user": "{\"id\": 2335, \"name\": \"javasgl\", \"login\": \"javasgl\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "最近使用go的过程中，需要连接数据库，为了提高性能，准备使用连接池，并且由于database/sql本身就支持链接池，非常方便。\n\n在web服务中，只保持了一个全局的连接池，现在有一个问题就是 ，由于web服务启动后，会阻塞监听端口，那么 这个全局的连接池什么时候调用 Close 来关闭？\n\n我目前是这样做的，不知道合不合适：\n\nmain.go\n```\npackage main\nimport (\n &quot;net/http&quot;\n &quot;database/sql&quot;\n)\nvar dbpool *sql.DB\nfunc init(){\n  dbpool = sql.Open(&quot;driver&quot;,&quot;dsn&quot;)\n}\n\nfunc main(){\n _,err:= http.ListenAndServe(&quot;hostname:port&quot;)\n if err != nil {\n   return\n }\n  defer dbpool.Close()\n}\n```",
    "body_html": "<p>最近使用 go 的过程中，需要连接数据库，为了提高性能，准备使用连接池，并且由于 database/sql 本身就支持链接池，非常方便。</p>\n\n<p>在 web 服务中，只保持了一个全局的连接池，现在有一个问题就是 ，由于 web 服务启动后，会阻塞监听端口，那么 这个全局的连接池什么时候调用 Close 来关闭？</p>\n\n<p>我目前是这样做的，不知道合不合适：</p>\n\n<p>main.go</p>\n <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n<span class=\"n\">import</span> <span class=\"p\">(</span>\n <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">net</span><span class=\"p\">/</span><span class=\"n\">http</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">database</span><span class=\"p\">/</span><span class=\"n\">sql</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n<span class=\"n\">var</span> <span class=\"n\">dbpool</span> <span class=\"p\">*</span><span class=\"n\">sql</span><span class=\"p\">.</span><span class=\"n\">DB</span>\n<span class=\"n\">func</span> <span class=\"n\">init</span><span class=\"p\">(){</span>\n  <span class=\"n\">dbpool</span> <span class=\"p\">=</span> <span class=\"n\">sql</span><span class=\"p\">.</span><span class=\"n\">Open</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">driver</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">dsn</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">(){</span>\n <span class=\"n\">_</span><span class=\"p\">,</span><span class=\"n\">err</span><span class=\"p\">:=</span> <span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">ListenAndServe</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">hostname</span><span class=\"p\">:</span><span class=\"n\">port</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"c1\">!= nil {\n</span>   <span class=\"n\">return</span>\n <span class=\"p\">}</span>\n  <span class=\"n\">defer</span> <span class=\"n\">dbpool</span><span class=\"p\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 460,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 946,
    "title": "REST API 的状态码设计方案",
    "created_at": "2017-07-18 18:13:20",
    "updated_at": "2017-07-18 18:13:20",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1494,
    "user": "{\"id\": 1494, \"name\": \"stirlingx\", \"login\": \"stirlingx\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "关于REST API设计，大家是怎么做的。网上有三种主流方案\n\n方案一，只使用http status code。这种方案缺点很明显，因为状态码有限，而且没有具体的描述。\n\n方案二，http status code一律使用200，然后在自定义的json中返回错误码和描述，比如\n```json\n{\n    &quot;code&quot;: 100001,\n    &quot;msg&quot;: &quot;用户不存在&quot;\n}\n```\n方案三，http status code和自定义码相结合使用，但返回的body必须是json。\nhttp status code = 404\n```json\n{\n    &quot;code&quot;: 100001,\n    &quot;msg&quot;: &quot;用户不存在&quot;\n}\n```\n\n",
    "body_html": "<p>关于 REST API 设计，大家是怎么做的。网上有三种主流方案</p>\n\n<p>方案一，只使用 http status code。这种方案缺点很明显，因为状态码有限，而且没有具体的描述。</p>\n\n<p>方案二，http status code 一律使用 200，然后在自定义的 json 中返回错误码和描述，比如</p>\n <pre class=\"highlight json\"><code><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;code&amp;quot;:</span><span class=\"w\"> </span><span class=\"mi\">100001</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;msg&amp;quot;:</span><span class=\"w\"> </span><span class=\"err\">&amp;quot;用户不存在&amp;quot;</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre> \n<p>方案三，http status code 和自定义码相结合使用，但返回的 body 必须是 json。\nhttp status code = 404</p>\n <pre class=\"highlight json\"><code><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;code&amp;quot;:</span><span class=\"w\"> </span><span class=\"mi\">100001</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">&amp;quot;msg&amp;quot;:</span><span class=\"w\"> </span><span class=\"err\">&amp;quot;用户不存在&amp;quot;</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre> ",
    "hits": 504,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 947,
    "title": "GoCN每日新闻(2017-07-19)",
    "created_at": "2017-07-19 10:16:43",
    "updated_at": "2017-07-19 10:16:43",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-19)\n\n1. 程序员的七个好习惯 https://dev.to/binarforge/seven-useful-programming-habits\n2. Gopher-2017 演讲稿 https://github.com/gophercon/2017-talks\n3. Prometheus 初探 https://www.addops.cn/post/Prometheus-first-exploration.html\n4. 360 私有云平台 MySQL 自动化实现剖析 https://mp.weixin.qq.com/s/txt3x3iL-asBbkBIQj7g0w\n5. Go面试题 https://zhuanlan.zhihu.com/p/26972862\n\n1. 杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-19)</p>\n\n<ol>\n<li>程序员的七个好习惯 <a href=\"https://dev.to/binarforge/seven-useful-programming-habits\" rel=\"nofollow\" target=\"_blank\">https://dev.to/binarforge/seven-useful-programming-habits</a>\n</li>\n<li>Gopher-2017 演讲稿 <a href=\"https://github.com/gophercon/2017-talks\" rel=\"nofollow\" target=\"_blank\">https://github.com/gophercon/2017-talks</a>\n</li>\n<li>Prometheus 初探 <a href=\"https://www.addops.cn/post/Prometheus-first-exploration.html\" rel=\"nofollow\" target=\"_blank\">https://www.addops.cn/post/Prometheus-first-exploration.html</a>\n</li>\n<li>360 私有云平台 MySQL 自动化实现剖析 <a href=\"https://mp.weixin.qq.com/s/txt3x3iL-asBbkBIQj7g0w\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/txt3x3iL-asBbkBIQj7g0w</a>\n</li>\n<li><p>Go 面试题 <a href=\"https://zhuanlan.zhihu.com/p/26972862\" rel=\"nofollow\" target=\"_blank\">https://zhuanlan.zhihu.com/p/26972862</a></p></li>\n<li><p>杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a></p></li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 394,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 948,
    "title": "有人知道Beego自动生成API文档时怎么注释Model吗？",
    "created_at": "2017-07-19 10:39:55",
    "updated_at": "2021-01-16 22:26:19",
    "replied_at": "2017-07-19 14:55:47",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 2251,
    "last_reply_user_login": "llliiinnn",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2251,
    "user": "{\"id\": 2251, \"name\": \"llliiinnn\", \"login\": \"llliiinnn\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "如题~~ ",
    "body_html": "<p>如题~~ </p>",
    "hits": 451,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 949,
    "title": "golang工程师-蚂蚁金服",
    "created_at": "2017-07-19 17:47:41",
    "updated_at": "2017-07-20 10:33:50",
    "replied_at": "2017-07-20 10:33:50",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 339,
    "last_reply_user_login": "Akagi201",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 407,
    "user": "{\"id\": 407, \"name\": \"lucyne\", \"login\": \"lucyne\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "1. 深入理解计算机原理，有扎实的数据结构和算法基础；\n2. 深入理解linux系统及其原理，熟悉TCP/IP、HTTP协议以及网络编程；\n3. 熟悉Go/Python等至少一门语言，有Go开发经验者优先；\n4. 熟悉MySQL/Oracle一种或以上关系数据库使用；\n5. 具有分布式系统设计和开发经验者优先；\n6. 有Github开源作品优先考虑；\n\n邮箱：dblucyne@gmail.com  base:北京\n\n",
    "body_html": "<ol>\n<li>深入理解计算机原理，有扎实的数据结构和算法基础；</li>\n<li>深入理解 linux 系统及其原理，熟悉 TCP/IP、HTTP 协议以及网络编程；</li>\n<li>熟悉 Go/Python 等至少一门语言，有 Go 开发经验者优先；</li>\n<li>熟悉 MySQL/Oracle 一种或以上关系数据库使用；</li>\n<li>具有分布式系统设计和开发经验者优先；</li>\n<li>有 Github 开源作品优先考虑；</li>\n</ol>\n\n<p>邮箱：dblucyne@gmail.com  base:北京</p>",
    "hits": 490,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 950,
    "title": "go新手，一些写法问题求助",
    "created_at": "2017-07-19 18:55:24",
    "updated_at": "2017-07-20 09:54:27",
    "replied_at": "2017-07-20 09:54:27",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 408,
    "last_reply_user_login": "seeyoup",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2317,
    "user": "{\"id\": 2317, \"name\": \"huhuyou2\", \"login\": \"huhuyou2\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\ntr := &amp;http.Transport{\nTLSClientConfig: &amp;tls.Config{InsecureSkipVerify: true},\n}\nclient := &amp;http.Client{Transport: tr}\n```\n\n这种写法要怎么读？搞不明白，求大神解释一下\n\n都是struct里面的内容\n\n",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"n\">tr</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Transport</span><span class=\"p\">{</span>\n<span class=\"n\">TLSClientConfig</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">tls</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"p\">{</span><span class=\"n\">InsecureSkipVerify</span><span class=\"o\">:</span> <span class=\"no\">true</span><span class=\"p\">},</span>\n<span class=\"p\">}</span>\n<span class=\"n\">client</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">{</span><span class=\"n\">Transport</span><span class=\"o\">:</span> <span class=\"n\">tr</span><span class=\"p\">}</span>\n</code></pre> \n<p>这种写法要怎么读？搞不明白，求大神解释一下</p>\n\n<p>都是 struct 里面的内容</p>",
    "hits": 399,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 951,
    "title": "GoCN每日新闻(2017-07-20)",
    "created_at": "2017-07-20 10:20:57",
    "updated_at": "2017-07-20 10:20:57",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-20)\n\n1. 改进log4go的设想 http://www.cnblogs.com/ccpaging/p/7205226.html\n2. 微博大规模机器学习框架Weiflow揭秘 https://mp.weixin.qq.com/s/bXlqKTJ49MyHLkHAbBTCYw\n3. Go里面goroutine的信号和等待处理 https://open.dgraph.io/post/signal-and-wait/\n4. Go一致性hash库 https://github.com/lafikl/consistent\n5. 有一个RPC库nrpc https://github.com/rapidloop/nrpc\n\n1. 杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-20)</p>\n\n<ol>\n<li>改进 log4go 的设想 <a href=\"http://www.cnblogs.com/ccpaging/p/7205226.html\" rel=\"nofollow\" target=\"_blank\">http://www.cnblogs.com/ccpaging/p/7205226.html</a>\n</li>\n<li>微博大规模机器学习框架 Weiflow 揭秘 <a href=\"https://mp.weixin.qq.com/s/bXlqKTJ49MyHLkHAbBTCYw\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/bXlqKTJ49MyHLkHAbBTCYw</a>\n</li>\n<li>Go 里面 goroutine 的信号和等待处理 <a href=\"https://open.dgraph.io/post/signal-and-wait/\" rel=\"nofollow\" target=\"_blank\">https://open.dgraph.io/post/signal-and-wait/</a>\n</li>\n<li>Go 一致性 hash 库 <a href=\"https://github.com/lafikl/consistent\" rel=\"nofollow\" target=\"_blank\">https://github.com/lafikl/consistent</a>\n</li>\n<li><p>有一个 RPC 库 nrpc <a href=\"https://github.com/rapidloop/nrpc\" rel=\"nofollow\" target=\"_blank\">https://github.com/rapidloop/nrpc</a></p></li>\n<li><p>杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a></p></li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 394,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 952,
    "title": "go的下划线",
    "created_at": "2017-07-20 20:21:32",
    "updated_at": "2017-07-21 09:15:23",
    "replied_at": "2017-07-21 09:14:48",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1868,
    "last_reply_user_login": "xkey",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2274,
    "user": "{\"id\": 2274, \"name\": \"carynova\", \"login\": \"carynova\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我知道下划线的两个用途:\n1. import包,只执行包的init()\n2. 丢弃一些返回值方便GC\n\n但是我在看gin的源码时 发现这么一行\n```go\nvar _ ResponseWriter = &amp;responseWriter{}\n```\nhttps://github.com/gin-gonic/gin/blob/master/response_writer.go#L48\n不知道是啥意思...大牛们有什么看法?\n",
    "body_html": "<p>我知道下划线的两个用途:</p>\n\n<ol>\n<li>import 包,只执行包的 init()</li>\n<li>丢弃一些返回值方便 GC</li>\n</ol>\n\n<p>但是我在看 gin 的源码时 发现这么一行</p>\n <pre class=\"highlight go\"><code><span class=\"k\">var</span> <span class=\"n\">_</span> <span class=\"n\">ResponseWriter</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">responseWriter</span><span class=\"p\">{}</span>\n</code></pre> \n<p><a href=\"https://github.com/gin-gonic/gin/blob/master/response_writer.go#L48\" rel=\"nofollow\" target=\"_blank\">https://github.com/gin-gonic/gin/blob/master/response_writer.go#L48</a>\n不知道是啥意思...大牛们有什么看法?</p>",
    "hits": 518,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 953,
    "title": "GoCN每日新闻(2017-07-21)",
    "created_at": "2017-07-21 09:22:01",
    "updated_at": "2017-07-21 09:22:01",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-21)\n\n1. Go怎么写一个网络客户端 https://www.slideshare.net/nats_io/writing-networking-clients-in-go-gophercon-2017-talk\n2. Grumpy入门 https://speakerdeck.com/m157q/20170718-gtg25-introduction-to-grumpy-1\n3. Go面试题答案与解析 https://yushuangqi.com/blog/2017/golang-mian-shi-ti-da-an-yujie-xi.html\n4. pprof简单教程 https://gocn.io/article/394\n5. 使用ELK构建分布式日志分析系统 http://www.jianshu.com/p/69ce51cfcb3d\n\nGopher招聘：\n【深圳】随手记 https://gocn.io/article/396\n\n1. 杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-21)</p>\n\n<ol>\n<li>Go 怎么写一个网络客户端 <a href=\"https://www.slideshare.net/nats_io/writing-networking-clients-in-go-gophercon-2017-talk\" rel=\"nofollow\" target=\"_blank\">https://www.slideshare.net/nats_io/writing-networking-clients-in-go-gophercon-2017-talk</a>\n</li>\n<li>Grumpy 入门 <a href=\"https://speakerdeck.com/m157q/20170718-gtg25-introduction-to-grumpy-1\" rel=\"nofollow\" target=\"_blank\">https://speakerdeck.com/m157q/20170718-gtg25-introduction-to-grumpy-1</a>\n</li>\n<li>Go 面试题答案与解析 <a href=\"https://yushuangqi.com/blog/2017/golang-mian-shi-ti-da-an-yujie-xi.html\" rel=\"nofollow\" target=\"_blank\">https://yushuangqi.com/blog/2017/golang-mian-shi-ti-da-an-yujie-xi.html</a>\n</li>\n<li>pprof 简单教程 <a href=\"https://gocn.io/article/394\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/394</a>\n</li>\n<li>使用 ELK 构建分布式日志分析系统 <a href=\"http://www.jianshu.com/p/69ce51cfcb3d\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/69ce51cfcb3d</a>\n</li>\n</ol>\n\n<p>Gopher 招聘：\n【深圳】随手记 <a href=\"https://gocn.io/article/396\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/396</a></p>\n\n<ol>\n<li>杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 422,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 954,
    "title": "GOLANG中DEFER, PANIC, RECOVER用法",
    "created_at": "2017-07-21 11:37:47",
    "updated_at": "2017-07-21 11:37:47",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 887,
    "user": "{\"id\": 887, \"name\": \"haohongfan\", \"login\": \"haohongfan\", \"avatar\": \"https://static.gocn.vip/user/avatar/887/977be8.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "昨天谢大在群里发了一个[golang面试题](https://zhuanlan.zhihu.com/p/26972862), 第一题就不会做了. 这题主要是考察defer, panic, 于是各种谷歌, 就写下了这篇文章, \n\n[GOLANG中DEFER, PANIC, RECOVER用法](http://www.haohongfan.com/index.php/2017/07/20/golang_defer_panic_recover/)\n\n由于本人水平有限, 有哪些理解不到的地方, 请在下面留言指出",
    "body_html": "<p>昨天谢大在群里发了一个<a href=\"https://zhuanlan.zhihu.com/p/26972862\" rel=\"nofollow\" target=\"_blank\" title=\"\">golang 面试题</a>, 第一题就不会做了. 这题主要是考察 defer, panic, 于是各种谷歌, 就写下了这篇文章, </p>\n\n<p><a href=\"http://www.haohongfan.com/index.php/2017/07/20/golang_defer_panic_recover/\" rel=\"nofollow\" target=\"_blank\" title=\"\">GOLANG 中 DEFER, PANIC, RECOVER 用法</a></p>\n\n<p>由于本人水平有限, 有哪些理解不到的地方, 请在下面留言指出</p>",
    "hits": 317,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 955,
    "title": "golang 适合ERP开发吗？有没有类似 ODOO 的存在 ？",
    "created_at": "2017-07-21 15:58:23",
    "updated_at": "2019-09-16 15:42:06",
    "replied_at": "2019-09-16 15:42:06",
    "replies_count": 12,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 8155,
    "last_reply_user_login": "ronn91",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2371,
    "user": "{\"id\": 2371, \"name\": \"bwrj\", \"login\": \"bwrj\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 1840,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 956,
    "title": "GoCN每日新闻(2017-07-22)",
    "created_at": "2017-07-22 09:11:32",
    "updated_at": "2017-07-22 10:41:14",
    "replied_at": "2017-07-22 10:41:14",
    "replies_count": 1,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 2232,
    "last_reply_user_login": "qiangmzsx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-22)\n\n1. GRPC生产实践 https://about.sourcegraph.com/go/grpc-in-production-alan-shreve\n2. Go mindmap 整理 https://learn-anything.xyz/programming/programming-languages/go\n3. glide从入门到精通使用 https://my.oschina.net/u/553243/blog/1475626\n4. morestack与goroutine pool http://www.zenlife.tk/goroutine-pool.md\n5. 给新手的微服务入门知识 https://zhuanlan.zhihu.com/p/28000891\n\nGopher招聘：\n【上海】Strikingly (YC W13)  https://gocn.io/article/397\n\n1. 杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-22)</p>\n\n<ol>\n<li>GRPC 生产实践 <a href=\"https://about.sourcegraph.com/go/grpc-in-production-alan-shreve\" rel=\"nofollow\" target=\"_blank\">https://about.sourcegraph.com/go/grpc-in-production-alan-shreve</a>\n</li>\n<li>Go mindmap 整理 <a href=\"https://learn-anything.xyz/programming/programming-languages/go\" rel=\"nofollow\" target=\"_blank\">https://learn-anything.xyz/programming/programming-languages/go</a>\n</li>\n<li>glide 从入门到精通使用 <a href=\"https://my.oschina.net/u/553243/blog/1475626\" rel=\"nofollow\" target=\"_blank\">https://my.oschina.net/u/553243/blog/1475626</a>\n</li>\n<li>morestack 与 goroutine pool <a href=\"http://www.zenlife.tk/goroutine-pool.md\" rel=\"nofollow\" target=\"_blank\">http://www.zenlife.tk/goroutine-pool.md</a>\n</li>\n<li>给新手的微服务入门知识 <a href=\"https://zhuanlan.zhihu.com/p/28000891\" rel=\"nofollow\" target=\"_blank\">https://zhuanlan.zhihu.com/p/28000891</a>\n</li>\n</ol>\n\n<p>Gopher 招聘：\n【上海】Strikingly (YC W13)  <a href=\"https://gocn.io/article/397\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/397</a></p>\n\n<ol>\n<li>杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 445,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 957,
    "title": "beego orm 关联一对多问题",
    "created_at": "2017-07-22 16:16:36",
    "updated_at": "2021-01-16 22:26:21",
    "replied_at": "2019-02-28 02:23:14",
    "replies_count": 5,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 5633,
    "last_reply_user_login": "wencan",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2250,
    "user": "{\"id\": 2250, \"name\": \"romny\", \"login\": \"romny\", \"avatar\": \"https://gocn.vip/system/letter_avatars/r.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "小白请教:\n好像官网的例子user和post是一对多的关系,post表有个user_id作为user的外键(这里我理解对吧?)\n然后写成这样\n```go\ntype User struct {\n    Id    int\n    Name  string\n    Posts []*Post `orm:&quot;reverse(many)&quot;`\n}\n\ntype Post struct {\n    Id    int\n    Title string\n    User  *User  `orm:&quot;rel(fk)&quot;`\n}\n```\n现在希望可以得到\n```json\n[\n\t{\n\tId:1,\n\tName:&quot;小张&quot;,\n\tPosts:[\n\t\t{\n\t\tId:1,\n\t\tTitle:&quot;早晨&quot;\n\t\t},\n\t\t{\n\t\tId:2,\n\t\tTitle:&quot;中午&quot;\n\t\t},\n\t]\n\t}\n]\n```\n这样的效果\n我是怎样写?\n```go\nfunc GetUserById(id int) (v *User, err error) {\n\to := orm.NewOrm()\n\tv = &amp;User{Id: id}\n\tif err = o.QueryTable(v.TableName()).RelatedSel().One(v); err == nil {\n\t\treturn v, nil\n\t}\n\treturn nil, err\n}\n```\n这样好像不行,posts都是null",
    "body_html": "<p>小白请教:\n好像官网的例子 user 和 post 是一对多的关系,post 表有个 user_id 作为 user 的外键 (这里我理解对吧?)\n然后写成这样</p>\n <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">User</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span>    <span class=\"kt\">int</span>\n    <span class=\"n\">Name</span>  <span class=\"kt\">string</span>\n    <span class=\"n\">Posts</span> <span class=\"p\">[]</span><span class=\"o\">*</span><span class=\"n\">Post</span> <span class=\"s\">`orm:&amp;quot;reverse(many)&amp;quot;`</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">type</span> <span class=\"n\">Post</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\n    <span class=\"n\">Id</span>    <span class=\"kt\">int</span>\n    <span class=\"n\">Title</span> <span class=\"kt\">string</span>\n    <span class=\"n\">User</span>  <span class=\"o\">*</span><span class=\"n\">User</span>  <span class=\"s\">`orm:&amp;quot;rel(fk)&amp;quot;`</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>现在希望可以得到</p>\n <pre class=\"highlight json\"><code><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"err\">Id:</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">Name:&amp;quot;小张&amp;quot;</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">Posts:</span><span class=\"p\">[</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"err\">Id:</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"err\">Title:&amp;quot;早晨&amp;quot;</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"err\">Id:</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"err\">Title:&amp;quot;中午&amp;quot;</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n    </span><span class=\"p\">]</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">]</span><span class=\"w\">\n</span></code></pre> \n<p>这样的效果\n我是怎样写?</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">GetUserById</span><span class=\"p\">(</span><span class=\"n\">id</span> <span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"n\">v</span> <span class=\"o\">*</span><span class=\"n\">User</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">o</span> <span class=\"o\">:=</span> <span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">NewOrm</span><span class=\"p\">()</span>\n    <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">User</span><span class=\"p\">{</span><span class=\"n\">Id</span><span class=\"o\">:</span> <span class=\"n\">id</span><span class=\"p\">}</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">QueryTable</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">TableName</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">RelatedSel</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">One</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">);</span> <span class=\"n\">err</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"no\">nil</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"n\">err</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>这样好像不行,posts 都是 null</p>",
    "hits": 682,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 958,
    "title": "GoCN Forum 网站的源代码是开源的吗",
    "created_at": "2017-07-22 18:21:53",
    "updated_at": "2017-07-22 21:57:48",
    "replied_at": "2017-07-22 21:57:48",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 960,
    "last_reply_user_login": "tupunco",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2382,
    "user": "{\"id\": 2382, \"name\": \"seapub\", \"login\": \"seapub\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "看起来这个网站和 [wetalk](https://github.com/beego/wetalk) 有几分相似.  \n不知道目前这个网站的源代码是否是开源的. \n\n之前通过看wetalk项目的源代码, 学到了不少使用Beego的技巧.  所以想看看这个网站的源代码. ",
    "body_html": "<p>看起来这个网站和 <a href=\"https://github.com/beego/wetalk\" rel=\"nofollow\" target=\"_blank\" title=\"\">wetalk</a> 有几分相似.<br>\n不知道目前这个网站的源代码是否是开源的. </p>\n\n<p>之前通过看 wetalk 项目的源代码, 学到了不少使用 Beego 的技巧.  所以想看看这个网站的源代码. </p>",
    "hits": 225,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 959,
    "title": "GoCN每日新闻(2017-07-23)",
    "created_at": "2017-07-23 10:29:21",
    "updated_at": "2017-07-23 22:37:06",
    "replied_at": "2017-07-23 22:37:06",
    "replies_count": 1,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 2345,
    "last_reply_user_login": "trainee",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-23)\n\n1. 为什么好程序员离开大的技术公司 https://thinkgrowth.org/why-good-people-leave-large-tech-companies-af2b6fea4ee\n2. ctop 容器里面的top https://github.com/bcicen/ctop\n3. Go 空interface https://flaviocopes.com/go-empty-interface/\n4. Go应该支持泛型吗？https://dave.cheney.net/2017/07/22/should-go-2-0-support-generics\n5. Go包管理 https://about.sourcegraph.com/go/the-new-era-of-go-package-management\n\n活动预告：\n\n1. 杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-23)</p>\n\n<ol>\n<li>为什么好程序员离开大的技术公司 <a href=\"https://thinkgrowth.org/why-good-people-leave-large-tech-companies-af2b6fea4ee\" rel=\"nofollow\" target=\"_blank\">https://thinkgrowth.org/why-good-people-leave-large-tech-companies-af2b6fea4ee</a>\n</li>\n<li>ctop 容器里面的 top <a href=\"https://github.com/bcicen/ctop\" rel=\"nofollow\" target=\"_blank\">https://github.com/bcicen/ctop</a>\n</li>\n<li>Go 空 interface <a href=\"https://flaviocopes.com/go-empty-interface/\" rel=\"nofollow\" target=\"_blank\">https://flaviocopes.com/go-empty-interface/</a>\n</li>\n<li>Go 应该支持泛型吗？<a href=\"https://dave.cheney.net/2017/07/22/should-go-2-0-support-generics\" rel=\"nofollow\" target=\"_blank\">https://dave.cheney.net/2017/07/22/should-go-2-0-support-generics</a>\n</li>\n<li>Go 包管理 <a href=\"https://about.sourcegraph.com/go/the-new-era-of-go-package-management\" rel=\"nofollow\" target=\"_blank\">https://about.sourcegraph.com/go/the-new-era-of-go-package-management</a>\n</li>\n</ol>\n\n<p>活动预告：</p>\n\n<ol>\n<li>杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 416,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 960,
    "title": "关于 swagger问题,bee run -gendoc=true",
    "created_at": "2017-07-23 14:36:11",
    "updated_at": "2017-07-25 21:17:04",
    "replied_at": "2017-07-25 21:17:04",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2250,
    "user": "{\"id\": 2250, \"name\": \"romny\", \"login\": \"romny\", \"avatar\": \"https://gocn.vip/system/letter_avatars/r.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "小白请教!\n我这边目录控制器有个admin文件夹,类似这样:\n```go\nquickstart\n|-- conf\n|   `-- app.conf\n|-- controllers\n|   `-- admin\n|       `-- default.go\n|   `-- default.go\n|-- main.go\n|-- models\n|-- routers\n|   `-- router.go\n|-- static\n|   |-- css\n|   |-- img\n|   `-- js\n|-- tests\n|   `-- default_test.go\n`-- views\n    `-- index.tpl\n```\n请问:\n```go\nbee run -gendoc=true\n```\n可以怎样处理呢?希望能controllers_admin也生成swagger.\n路由这样写可以吗?\n```go\nfunc init() {\n\tns := beego.NewNamespace(&quot;/v1&quot;,\n\t\tbeego.NSNamespace(&quot;/products&quot;,\n\t\t\tbeego.NSInclude(\n\t\t\t\t&amp;controllers.ProductsController{},\n\t\t\t),\n\t\t),\n\t)\n\tbeego.AddNamespace(ns)\n\n\tns = beego.NewNamespace(&quot;/admin/v1&quot;,\n\n\t\tbeego.NSNamespace(&quot;/login&quot;,\n\t\t\tbeego.NSInclude(\n\t\t\t\t&amp;controllers_admin.LoginController{},\n\t\t\t),\n\t\t),\n\t)\n\tbeego.AddNamespace(ns)\n}\n```\n好像bee不会自动生成?如果不能自动生成,能都自己改swagger.json做出来?swagger.yml也要改吗?",
    "body_html": "<p>小白请教!\n我这边目录控制器有个 admin 文件夹,类似这样:</p>\n <pre class=\"highlight go\"><code><span class=\"n\">quickstart</span>\n<span class=\"o\">|--</span> <span class=\"n\">conf</span>\n<span class=\"o\">|</span>   <span class=\"s\">`-- app.conf\n|-- controllers\n|   `</span><span class=\"o\">--</span> <span class=\"n\">admin</span>\n<span class=\"o\">|</span>       <span class=\"s\">`-- default.go\n|   `</span><span class=\"o\">--</span> <span class=\"k\">default</span><span class=\"o\">.</span><span class=\"k\">go</span>\n<span class=\"o\">|--</span> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"k\">go</span>\n<span class=\"o\">|--</span> <span class=\"n\">models</span>\n<span class=\"o\">|--</span> <span class=\"n\">routers</span>\n<span class=\"o\">|</span>   <span class=\"s\">`-- router.go\n|-- static\n|   |-- css\n|   |-- img\n|   `</span><span class=\"o\">--</span> <span class=\"n\">js</span>\n<span class=\"o\">|--</span> <span class=\"n\">tests</span>\n<span class=\"o\">|</span>   <span class=\"s\">`-- default_test.go\n`</span><span class=\"o\">--</span> <span class=\"n\">views</span>\n    <span class=\"s\">`-- index.tpl\n</span></code></pre> \n<p>请问:</p>\n <pre class=\"highlight go\"><code><span class=\"n\">bee</span> <span class=\"n\">run</span> <span class=\"o\">-</span><span class=\"n\">gendoc</span><span class=\"o\">=</span><span class=\"no\">true</span>\n</code></pre> \n<p>可以怎样处理呢?希望能 controllers_admin 也生成 swagger.\n路由这样写可以吗?</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">init</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">ns</span> <span class=\"o\">:=</span> <span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">NewNamespace</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">v1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n        <span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">NSNamespace</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">products</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n            <span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">NSInclude</span><span class=\"p\">(</span>\n                <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">controllers</span><span class=\"o\">.</span><span class=\"n\">ProductsController</span><span class=\"p\">{},</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">AddNamespace</span><span class=\"p\">(</span><span class=\"n\">ns</span><span class=\"p\">)</span>\n\n    <span class=\"n\">ns</span> <span class=\"o\">=</span> <span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">NewNamespace</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">admin</span><span class=\"o\">/</span><span class=\"n\">v1</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n\n        <span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">NSNamespace</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">login</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n            <span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">NSInclude</span><span class=\"p\">(</span>\n                <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">controllers_admin</span><span class=\"o\">.</span><span class=\"n\">LoginController</span><span class=\"p\">{},</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">AddNamespace</span><span class=\"p\">(</span><span class=\"n\">ns</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>好像 bee 不会自动生成?如果不能自动生成,能都自己改 swagger.json 做出来?swagger.yml 也要改吗?</p>",
    "hits": 650,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 961,
    "title": "关于 Golang map 无序的问题",
    "created_at": "2017-07-23 18:02:12",
    "updated_at": "2017-07-24 10:10:24",
    "replied_at": "2017-07-24 10:10:24",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2395,
    "last_reply_user_login": "Mr_Wings",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1658,
    "user": "{\"id\": 1658, \"name\": \"tanteng\", \"login\": \"tanteng\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "问题提在了我的博客里，写了一篇文章记录，麻烦大家移步看看，我就不费劲粘贴过来了。谢谢！欢迎提供更好的解决方案！\n\nhttps://blog.tanteng.me/2017/07/golang-map-sorted-json-data/",
    "body_html": "<p>问题提在了我的博客里，写了一篇文章记录，麻烦大家移步看看，我就不费劲粘贴过来了。谢谢！欢迎提供更好的解决方案！</p>\n\n<p><a href=\"https://blog.tanteng.me/2017/07/golang-map-sorted-json-data/\" rel=\"nofollow\" target=\"_blank\">https://blog.tanteng.me/2017/07/golang-map-sorted-json-data/</a></p>",
    "hits": 408,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 962,
    "title": "【北京】求区块链开发工程师/技术负责人--无需融资--信链科技",
    "created_at": "2017-07-23 23:43:46",
    "updated_at": "2017-07-24 14:58:10",
    "replied_at": "2017-07-24 14:46:04",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1494,
    "last_reply_user_login": "stirlingx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2392,
    "user": "{\"id\": 2392, \"name\": \"harr999y\", \"login\": \"harr999y\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "大家好，且容我先甩出一段公司介绍，所谓年轻Geek向，肆意前行的新型公司：\n&gt;  『信链科技』寓意“对区块链及其背后衍生的社会经济学和人类社会学的孜孜不倦持续探索的信念与信仰，和对基于可信的去中心化网络的无比热忱”。我们坚信在比特币发起这场伟大的史无前例且蔚为壮观的社会经济学实验后，其衍生出的区块链技术必将在人类社会的改革图谱上留下浓墨重彩的一笔。而作为新兴金融体系，我们对传统及其衍生金融亦怀有莫大的敬畏之心，正如史书常记载的新旧融合，我们深信以区块链技术作为载体的新锐金融力量必将给整个金融体系带来一阵改革的春风，为人类潮水的走向注入新的生命力。非常幸运的，我们正踏在这片改革洪流喷薄欲出的土地上，蓄势良久，亟待破茧而化蝶。\n我们团队始终坚信，最前沿的科学化理念与对人文和人性的理解，两者的有机结合是企图成为一家伟大的百年企业必须具备的基本素养。我们期盼未来，知晓未来已来；却依然迷恋当下，渴望当下鲜活。\n心理年龄自诩年幼，再细节的问题依然撕逼到天明，不服来战从王者农药喊到守望屁股，装腔作势直接打脸快乐，蓝牙音箱从皮皮虾怼到交响乐，早起困难果断下午再来，品酒烤鸭斟茶烧鸡香薰烘焙花艺火锅电影夜趴看日出升国旗说躁就躁，讲极致，谈追求，各行各业的自我修养筑成一道墙，想学习，要成长，路线图给你排满八十岁，想高薪，要期权，分分钟双手奉上只为，足够强大的你。\n介绍完毕，我们等你，望不负卿之所盼。\n\n然后欢迎您关注下我们的职位信息：\n&gt; 对区块链行业有一定的了解\n了解或熟悉第一、二代区块链技术及其底层原理和实现\n熟悉go或c++\n熟悉p2p网络\n有良好的编程基础理论和系统性认知\n有良好的数据结构认知\n有良好的设计模式认知\n有良好的工程学认知\n编码如写诗或谱曲者优先\n有优秀的开源项目主导或参与经验优先\n有先进的硅谷向开发理念者优先\n有过大型架构经验者优先\n其他领域工作经验大于5年者优先\n\n感谢您能看到此处，若君有意，我们聊起，谢谢 :)\n\n微信： 18600754904\n邮箱： lisuyong@beliefchain.com",
    "body_html": "<p>大家好，且容我先甩出一段公司介绍，所谓年轻 Geek 向，肆意前行的新型公司：\n&gt;  『信链科技』寓意 “对区块链及其背后衍生的社会经济学和人类社会学的孜孜不倦持续探索的信念与信仰，和对基于可信的去中心化网络的无比热忱”。我们坚信在比特币发起这场伟大的史无前例且蔚为壮观的社会经济学实验后，其衍生出的区块链技术必将在人类社会的改革图谱上留下浓墨重彩的一笔。而作为新兴金融体系，我们对传统及其衍生金融亦怀有莫大的敬畏之心，正如史书常记载的新旧融合，我们深信以区块链技术作为载体的新锐金融力量必将给整个金融体系带来一阵改革的春风，为人类潮水的走向注入新的生命力。非常幸运的，我们正踏在这片改革洪流喷薄欲出的土地上，蓄势良久，亟待破茧而化蝶。\n我们团队始终坚信，最前沿的科学化理念与对人文和人性的理解，两者的有机结合是企图成为一家伟大的百年企业必须具备的基本素养。我们期盼未来，知晓未来已来；却依然迷恋当下，渴望当下鲜活。\n心理年龄自诩年幼，再细节的问题依然撕逼到天明，不服来战从王者农药喊到守望屁股，装腔作势直接打脸快乐，蓝牙音箱从皮皮虾怼到交响乐，早起困难果断下午再来，品酒烤鸭斟茶烧鸡香薰烘焙花艺火锅电影夜趴看日出升国旗说躁就躁，讲极致，谈追求，各行各业的自我修养筑成一道墙，想学习，要成长，路线图给你排满八十岁，想高薪，要期权，分分钟双手奉上只为，足够强大的你。\n介绍完毕，我们等你，望不负卿之所盼。</p>\n\n<p>然后欢迎您关注下我们的职位信息：\n&gt; 对区块链行业有一定的了解\n了解或熟悉第一、二代区块链技术及其底层原理和实现\n熟悉 go 或 c++\n熟悉 p2p 网络\n有良好的编程基础理论和系统性认知\n有良好的数据结构认知\n有良好的设计模式认知\n有良好的工程学认知\n编码如写诗或谱曲者优先\n有优秀的开源项目主导或参与经验优先\n有先进的硅谷向开发理念者优先\n有过大型架构经验者优先\n其他领域工作经验大于 5 年者优先</p>\n\n<p>感谢您能看到此处，若君有意，我们聊起，谢谢 :)</p>\n\n<p>微信： 18600754904\n邮箱： lisuyong@beliefchain.com</p>",
    "hits": 322,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 963,
    "title": "GoCN每日新闻(2017-07-24)",
    "created_at": "2017-07-24 10:01:05",
    "updated_at": "2017-07-24 15:14:31",
    "replied_at": "2017-07-24 15:14:31",
    "replies_count": 1,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 2304,
    "last_reply_user_login": "shingle",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-24)\n\n1. 使用Go实现以太坊智能合约 https://zupzup.org/eth-smart-contracts-go/\n2. 未来Go的延迟调优 https://rakyll.org/latency-profiling/\n3. 理解Go interface的五个关键点 http://sanyuesha.com/2017/07/22/how-to-understand-go-interface/\n4. 有限状态机 FSM 的原理与 Go 的实现 http://www.jianshu.com/p/37281543f506\n5. 深入挖掘net/http https://lanreadelowo.com/blog/2017/07/24/roundtripper-go/\n\n1. 杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn\n",
    "body_html": "<p>GoCN 每日新闻 (2017-07-24)</p>\n\n<ol>\n<li>使用 Go 实现以太坊智能合约 <a href=\"https://zupzup.org/eth-smart-contracts-go/\" rel=\"nofollow\" target=\"_blank\">https://zupzup.org/eth-smart-contracts-go/</a>\n</li>\n<li>未来 Go 的延迟调优 <a href=\"https://rakyll.org/latency-profiling/\" rel=\"nofollow\" target=\"_blank\">https://rakyll.org/latency-profiling/</a>\n</li>\n<li>理解 Go interface 的五个关键点 <a href=\"http://sanyuesha.com/2017/07/22/how-to-understand-go-interface/\" rel=\"nofollow\" target=\"_blank\">http://sanyuesha.com/2017/07/22/how-to-understand-go-interface/</a>\n</li>\n<li>有限状态机 FSM 的原理与 Go 的实现 <a href=\"http://www.jianshu.com/p/37281543f506\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/37281543f506</a>\n</li>\n<li><p>深入挖掘 net/http <a href=\"https://lanreadelowo.com/blog/2017/07/24/roundtripper-go/\" rel=\"nofollow\" target=\"_blank\">https://lanreadelowo.com/blog/2017/07/24/roundtripper-go/</a></p></li>\n<li><p>杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a></p></li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 454,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 964,
    "title": "关于包管理工具有些困扰",
    "created_at": "2017-07-24 11:21:28",
    "updated_at": "2017-07-25 09:33:41",
    "replied_at": "2017-07-25 09:32:45",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 845,
    "last_reply_user_login": "voidint",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1037,
    "user": "{\"id\": 1037, \"name\": \"yxllin\", \"login\": \"yxllin\", \"avatar\": \"https://gocn.vip/system/letter_avatars/y.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在使用包管理工具的时候，三方包的存储路径不再gopath中，所以编程的时候，在gopath中找不到，即使import了包也没法自动补全相关的方法，写代码的效率变低了。\n另外有些ide的“跳转至定义”的功能也会失效。\n有什么办法可以解决吗\n目前用的是gb",
    "body_html": "<p>在使用包管理工具的时候，三方包的存储路径不再 gopath 中，所以编程的时候，在 gopath 中找不到，即使 import 了包也没法自动补全相关的方法，写代码的效率变低了。\n另外有些 ide 的 “跳转至定义” 的功能也会失效。\n有什么办法可以解决吗\n目前用的是 gb</p>",
    "hits": 502,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 965,
    "title": "求一个golang 版本的推荐系统",
    "created_at": "2017-07-24 11:58:45",
    "updated_at": "2017-07-25 08:18:16",
    "replied_at": "2017-07-25 08:18:16",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 960,
    "last_reply_user_login": "tupunco",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 88,
    "user": "{\"id\": 88, \"name\": \"qi19901212\", \"login\": \"qi19901212\", \"avatar\": \"https://static.gocn.vip/user/avatar/88/4a10d7.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "现在需要推荐系统相关的功能，不知道golang有没有一些开源的可以参考或者使用。",
    "body_html": "<p>现在需要推荐系统相关的功能，不知道 golang 有没有一些开源的可以参考或者使用。</p>",
    "hits": 486,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 966,
    "title": "请问golang有没有成熟的 在线电商 框架？",
    "created_at": "2017-07-24 15:31:39",
    "updated_at": "2017-07-24 16:18:51",
    "replied_at": "2017-07-24 16:18:51",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 21,
    "last_reply_user_login": "angelina",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2399,
    "user": "{\"id\": 2399, \"name\": \"BruceZhaoR\", \"login\": \"BruceZhaoR\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "本人后端小白，准备自己开发一个小型的B2C电商平台，看了一些资料，目前Django、nodejs、golang 感觉挺不错的。都说golang的效率高，而且还有beego这么全面好用的web框架，就是想确认一下：     \n\n**`beego`适合开发小型B2C网站吗？还有没有更加适合的web框架？**     \n\n提前谢谢各位gophers~",
    "body_html": "<p>本人后端小白，准备自己开发一个小型的 B2C 电商平台，看了一些资料，目前 Django、nodejs、golang 感觉挺不错的。都说 golang 的效率高，而且还有 beego 这么全面好用的 web 框架，就是想确认一下：     </p>\n\n<p><strong><code>beego</code>适合开发小型 B2C 网站吗？还有没有更加适合的 web 框架？</strong>     </p>\n\n<p>提前谢谢各位 gophers~</p>",
    "hits": 425,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 967,
    "title": "golang 开发环境问题  ",
    "created_at": "2017-07-24 17:11:46",
    "updated_at": "2017-07-24 17:16:37",
    "replied_at": "2017-07-24 17:16:37",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2262,
    "last_reply_user_login": "abin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1306,
    "user": "{\"id\": 1306, \"name\": \"张伯雨\", \"login\": \"zhangjunfang0505\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "以前正常运行的测试代码。今天突然提示我如下信息：\nThis version of %1 is not compatible with the version of Windows you're running. Check your computer's system information to see whether you need a x86 (32-bit) or x64 (64-bit) version of the program, and then contact the software publisher.\n求赐教",
    "body_html": "<p>以前正常运行的测试代码。今天突然提示我如下信息：\nThis version of %1 is not compatible with the version of Windows you're running. Check your computer's system information to see whether you need a x86 (32-bit) or x64 (64-bit) version of the program, and then contact the software publisher.\n求赐教</p>",
    "hits": 558,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 968,
    "title": "有必要设置多个gopath吗？",
    "created_at": "2017-07-24 18:33:23",
    "updated_at": "2017-07-26 10:01:32",
    "replied_at": "2017-07-26 10:00:49",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1824,
    "last_reply_user_login": "cye",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2293,
    "user": "{\"id\": 2293, \"name\": \"Hawken\", \"login\": \"Hawken\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "\t以前设置了两个gopath，今天运行项目的时候发现go get安装的包会放在第二个gopath中（我之前看到的知识是下载的第三方包默认放在第一个gopath），然后再第一个gopath下的项目运行会出现一些问题。\n\t总之，有必要设置多个gopath吗？",
    "body_html": "<p>以前设置了两个 gopath，今天运行项目的时候发现 go get 安装的包会放在第二个 gopath 中（我之前看到的知识是下载的第三方包默认放在第一个 gopath），然后再第一个 gopath 下的项目运行会出现一些问题。\n    总之，有必要设置多个 gopath 吗？</p>",
    "hits": 775,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 969,
    "title": "GoCN每日新闻(2017-07-25)",
    "created_at": "2017-07-25 10:09:07",
    "updated_at": "2017-07-27 12:07:18",
    "replied_at": "2017-07-27 12:07:18",
    "replies_count": 4,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 2431,
    "last_reply_user_login": "Ezral",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-25)\n\n1. Dropbox公司的Go语言探索之路 http://t.cn/R9PQkRw\n2. GopherConf 2017视频集 http://t.cn/R9PDAIF\n3. http test视频教程 http://t.cn/R9PDAIk\n4. goroutine使得并发简单 http://t.cn/R9PDAMP\n5. GitHub GraphQL API 使用介绍 http://t.cn/R9vf4SF\n\n [8月5日]\n1.杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-25)</p>\n\n<ol>\n<li>Dropbox 公司的 Go 语言探索之路 <a href=\"http://t.cn/R9PQkRw\" rel=\"nofollow\" target=\"_blank\">http://t.cn/R9PQkRw</a>\n</li>\n<li>GopherConf 2017 视频集 <a href=\"http://t.cn/R9PDAIF\" rel=\"nofollow\" target=\"_blank\">http://t.cn/R9PDAIF</a>\n</li>\n<li>http test 视频教程 <a href=\"http://t.cn/R9PDAIk\" rel=\"nofollow\" target=\"_blank\">http://t.cn/R9PDAIk</a>\n</li>\n<li>goroutine 使得并发简单 <a href=\"http://t.cn/R9PDAMP\" rel=\"nofollow\" target=\"_blank\">http://t.cn/R9PDAMP</a>\n</li>\n<li>GitHub GraphQL API 使用介绍 <a href=\"http://t.cn/R9vf4SF\" rel=\"nofollow\" target=\"_blank\">http://t.cn/R9vf4SF</a>\n</li>\n</ol>\n\n<p>[8 月 5 日]\n1.杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a></p>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 655,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 970,
    "title": "beego怎么做到平滑重启",
    "created_at": "2017-07-25 10:25:08",
    "updated_at": "2021-01-20 02:19:17",
    "replied_at": "2017-07-31 16:26:18",
    "replies_count": 1,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 1798,
    "last_reply_user_login": "suc",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2409,
    "user": "{\"id\": 2409, \"name\": \"shejm\", \"login\": \"shejm\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "各位大大，beego怎么做到平滑重启",
    "body_html": "<p>各位大大，beego 怎么做到平滑重启</p>",
    "hits": 378,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 971,
    "title": "如何理解nil",
    "created_at": "2017-07-25 11:46:14",
    "updated_at": "2017-07-25 12:03:46",
    "replied_at": "2017-07-25 12:03:46",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1413,
    "last_reply_user_login": "appleboy",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2376,
    "user": "{\"id\": 2376, \"name\": \"tfzxyinhao\", \"login\": \"tfzxyinhao\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "",
    "body_html": "",
    "hits": 537,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 972,
    "title": "关于cookiejar用法的疑问",
    "created_at": "2017-07-25 11:48:23",
    "updated_at": "2017-07-26 16:16:13",
    "replied_at": "2017-07-26 16:16:13",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 836,
    "last_reply_user_login": "caoqianli",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2317,
    "user": "{\"id\": 2317, \"name\": \"huhuyou2\", \"login\": \"huhuyou2\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "看文章上写cookiejar会自动帮忙管理服务端返回的cookies，于是我做了个实验。\n\n# 实现服务端\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;net/http&quot;\n\t&quot;strconv&quot;\n\t&quot;time&quot;\n)\n\nvar i int\n\nfunc receiveReq(w http.ResponseWriter, r *http.Request) {\n\t//i记录请求的次数\n\ti++\n\tfmt.Printf(&quot;第 %d 次请求的Cookie： &quot;, i)\n\tfmt.Println(r.Cookies())\n\t//设置cookie\n\ttNow := time.Now()\n\tcookie := &amp;http.Cookie{\n\t\tName:    &quot;XMEN&quot;,\n\t\tValue:   &quot;STORM&quot; + strconv.Itoa(i),\n\t\tExpires: tNow.AddDate(1, 0, i),\n\t}\n\thttp.SetCookie(w, cookie)\n\t//返回信息\n\tw.Write(([]byte(&quot;your cookie has been received&quot;)))\n\n}\n\nfunc main() {\n\tfmt.Println(&quot;Server Start Now!&quot;)\n\thttp.HandleFunc(&quot;/test&quot;, receiveReq)\n\terr := http.ListenAndServe(&quot;127.0.0.1:8889&quot;, nil)\n\tif err != nil {\n\t\tfmt.Println(&quot;ListenAndServe ERROR: &quot;, err)\n\t}\n\n}\n```\n\n# 实现client端\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;net/http&quot;\n\t&quot;net/http/cookiejar&quot;\n)\n\nfunc main() {\n\tjar, _ := cookiejar.New(nil)\n\tfmt.Println(&quot;Start Request Server&quot;)\n\tclient := http.Client{\n\t\tJar: jar,\n\t}\n\turl := &quot;http://127.0.0.1:8889/test&quot;\n\treq, _ := http.NewRequest(&quot;GET&quot;, url, nil)\n\t//第一次发请求\n\tclient.Do(req)\n\tfmt.Printf(&quot;第一次 %s \\n&quot;, req.Cookies())\n\n\t//第二次发请求\n\tclient.Do(req)\n\tfmt.Printf(&quot;第二次 %s \\n&quot;, req.Cookies())\n\n\t//第三次发请求\n\tclient.Do(req)\n\tfmt.Printf(&quot;第三次 %s \\n&quot;, req.Cookies())\n\n\t//第四次发请求\n\tclient.Do(req)\n\tfmt.Printf(&quot;第四次 %s \\n&quot;, req.Cookies())\n\n\t//第五次发请求\n\tclient.Do(req)\n\tfmt.Printf(&quot;第五次 %s \\n&quot;, req.Cookies())\n\n}\n\n```\n\n# 先通过浏览器请求5次，再通过client端请求5次\nServer Start Now!\n第 1 次请求的Cookie： []\n第 2 次请求的Cookie： [XMEN=STORM1]\n第 3 次请求的Cookie： [XMEN=STORM2]\n第 4 次请求的Cookie： [XMEN=STORM3]\n第 5 次请求的Cookie： [XMEN=STORM4]\n第 6 次请求的Cookie： []\n第 7 次请求的Cookie： [XMEN=STORM6]\n第 8 次请求的Cookie： [XMEN=STORM6 XMEN=STORM7]\n第 9 次请求的Cookie： [XMEN=STORM6 XMEN=STORM7 XMEN=STORM8]\n第 10 次请求的Cookie： [XMEN=STORM6 XMEN=STORM7 XMEN=STORM8 XMEN=STORM9]\n\n# 那么问题来了：cookiejar为什么会存留所有历史cookie",
    "body_html": "<p>看文章上写 cookiejar 会自动帮忙管理服务端返回的 cookies，于是我做了个实验。</p>\n<h2 id=\"实现服务端\">实现服务端</h2> <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">strconv</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">var</span> <span class=\"n\">i</span> <span class=\"kt\">int</span>\n\n<span class=\"k\">func</span> <span class=\"n\">receiveReq</span><span class=\"p\">(</span><span class=\"n\">w</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">ResponseWriter</span><span class=\"p\">,</span> <span class=\"n\">r</span> <span class=\"o\">*</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Request</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c\">//i记录请求的次数</span>\n    <span class=\"n\">i</span><span class=\"o\">++</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">第</span> <span class=\"o\">%</span><span class=\"n\">d</span> <span class=\"n\">次请求的Cookie</span><span class=\"err\">：</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">Cookies</span><span class=\"p\">())</span>\n    <span class=\"c\">//设置cookie</span>\n    <span class=\"n\">tNow</span> <span class=\"o\">:=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Now</span><span class=\"p\">()</span>\n    <span class=\"n\">cookie</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Cookie</span><span class=\"p\">{</span>\n        <span class=\"n\">Name</span><span class=\"o\">:</span>    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">XMEN</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span>\n        <span class=\"n\">Value</span><span class=\"o\">:</span>   <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">STORM</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"o\">+</span> <span class=\"n\">strconv</span><span class=\"o\">.</span><span class=\"n\">Itoa</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">),</span>\n        <span class=\"n\">Expires</span><span class=\"o\">:</span> <span class=\"n\">tNow</span><span class=\"o\">.</span><span class=\"n\">AddDate</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">),</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">SetCookie</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">cookie</span><span class=\"p\">)</span>\n    <span class=\"c\">//返回信息</span>\n    <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">Write</span><span class=\"p\">(([]</span><span class=\"kt\">byte</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">your</span> <span class=\"n\">cookie</span> <span class=\"n\">has</span> <span class=\"n\">been</span> <span class=\"n\">received</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)))</span>\n\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Server</span> <span class=\"n\">Start</span> <span class=\"n\">Now</span><span class=\"o\">!&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">HandleFunc</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">receiveReq</span><span class=\"p\">)</span>\n    <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">ListenAndServe</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"m\">127.0.0.1</span><span class=\"o\">:</span><span class=\"m\">8889</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"no\">nil</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">ListenAndServe</span> <span class=\"n\">ERROR</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n</code></pre> <h2 id=\"实现client端\">实现 client 端</h2> <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">net</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">cookiejar</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">jar</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">cookiejar</span><span class=\"o\">.</span><span class=\"n\">New</span><span class=\"p\">(</span><span class=\"no\">nil</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Start</span> <span class=\"n\">Request</span> <span class=\"n\">Server</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">client</span> <span class=\"o\">:=</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">{</span>\n        <span class=\"n\">Jar</span><span class=\"o\">:</span> <span class=\"n\">jar</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">url</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">http</span><span class=\"o\">:</span><span class=\"c\">//127.0.0.1:8889/test&amp;quot;</span>\n    <span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">NewRequest</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">GET</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"no\">nil</span><span class=\"p\">)</span>\n    <span class=\"c\">//第一次发请求</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Do</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">第一次</span> <span class=\"o\">%</span><span class=\"n\">s</span> <span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">Cookies</span><span class=\"p\">())</span>\n\n    <span class=\"c\">//第二次发请求</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Do</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">第二次</span> <span class=\"o\">%</span><span class=\"n\">s</span> <span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">Cookies</span><span class=\"p\">())</span>\n\n    <span class=\"c\">//第三次发请求</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Do</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">第三次</span> <span class=\"o\">%</span><span class=\"n\">s</span> <span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">Cookies</span><span class=\"p\">())</span>\n\n    <span class=\"c\">//第四次发请求</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Do</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">第四次</span> <span class=\"o\">%</span><span class=\"n\">s</span> <span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">Cookies</span><span class=\"p\">())</span>\n\n    <span class=\"c\">//第五次发请求</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Do</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">第五次</span> <span class=\"o\">%</span><span class=\"n\">s</span> <span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">Cookies</span><span class=\"p\">())</span>\n\n<span class=\"p\">}</span>\n\n</code></pre> <h2 id=\"先通过浏览器请求5次，再通过client端请求5次\">先通过浏览器请求 5 次，再通过 client 端请求 5 次</h2>\n<p>Server Start Now!\n第 1 次请求的 Cookie： []\n第 2 次请求的 Cookie： [XMEN=STORM1]\n第 3 次请求的 Cookie： [XMEN=STORM2]\n第 4 次请求的 Cookie： [XMEN=STORM3]\n第 5 次请求的 Cookie： [XMEN=STORM4]\n第 6 次请求的 Cookie： []\n第 7 次请求的 Cookie： [XMEN=STORM6]\n第 8 次请求的 Cookie： [XMEN=STORM6 XMEN=STORM7]\n第 9 次请求的 Cookie： [XMEN=STORM6 XMEN=STORM7 XMEN=STORM8]\n第 10 次请求的 Cookie： [XMEN=STORM6 XMEN=STORM7 XMEN=STORM8 XMEN=STORM9]</p>\n<h2 id=\"那么问题来了：cookiejar为什么会存留所有历史cookie\">那么问题来了：cookiejar 为什么会存留所有历史 cookie</h2>",
    "hits": 579,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 973,
    "title": "招聘Go工程师 坐标北京 薪资15-30K",
    "created_at": "2017-07-25 18:16:02",
    "updated_at": "2017-07-25 18:16:02",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2415,
    "user": "{\"id\": 2415, \"name\": \"小井\", \"login\": \"xujuan.happyiterating.com\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "初创公司，真诚招聘！\n岗位要求：熟悉Go语言，有高负载Server实战经验，对计算机技术有发自内心的兴趣，**简历请附带Github网址**。\n请发送简历至：3407909729@qq.com，也可QQ沟通。\n",
    "body_html": "<p>初创公司，真诚招聘！\n岗位要求：熟悉 Go 语言，有高负载 Server 实战经验，对计算机技术有发自内心的兴趣，<strong>简历请附带 Github 网址</strong>。\n请发送简历至：3407909729@qq.com，也可 QQ 沟通。</p>",
    "hits": 504,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 974,
    "title": "GoCN每日新闻(2017-07-26)",
    "created_at": "2017-07-26 08:40:20",
    "updated_at": "2017-07-26 08:40:20",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-26)\n\n1. Go 1.9 RC1 is out https://groups.google.com/forum/#!topic/golang-announce/Zwkj1khBMdI\n2. Go泛型辩论 http://bravenewgeek.com/are-we-there-yet-the-go-generics-debate/\n3. 微服务与API 网关（上）: 为什么需要API网关？https://mp.weixin.qq.com/s/XTzRr0eR6ybpNFGJ57cVkA\n4. 是否设置多个gopath？https://gocn.io/question/968\n5. 文件管理工具，可单独用也可以当库用 https://github.com/hacdias/filemanager\n\n1. [8月5日]杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-26)</p>\n\n<ol>\n<li>Go 1.9 RC1 is out <a href=\"https://groups.google.com/forum/#!topic/golang-announce/Zwkj1khBMdI\" rel=\"nofollow\" target=\"_blank\">https://groups.google.com/forum/#! topic/golang-announce/Zwkj1khBMdI</a>\n</li>\n<li>Go 泛型辩论 <a href=\"http://bravenewgeek.com/are-we-there-yet-the-go-generics-debate/\" rel=\"nofollow\" target=\"_blank\">http://bravenewgeek.com/are-we-there-yet-the-go-generics-debate/</a>\n</li>\n<li>微服务与 API 网关（上）: 为什么需要 API 网关？<a href=\"https://mp.weixin.qq.com/s/XTzRr0eR6ybpNFGJ57cVkA\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/XTzRr0eR6ybpNFGJ57cVkA</a>\n</li>\n<li>是否设置多个 gopath？<a href=\"https://gocn.io/question/968\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/question/968</a>\n</li>\n<li><p>文件管理工具，可单独用也可以当库用 <a href=\"https://github.com/hacdias/filemanager\" rel=\"nofollow\" target=\"_blank\">https://github.com/hacdias/filemanager</a></p></li>\n<li><p>[8 月 5 日] 杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a></p></li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 428,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 975,
    "title": "goroutine数目多的话，会不会像系统线程那样导致浪费很多时间在切换goroutine",
    "created_at": "2017-07-26 08:52:02",
    "updated_at": "2017-07-27 01:00:55",
    "replied_at": "2017-07-27 01:00:55",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2279,
    "last_reply_user_login": "ghost",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2417,
    "user": "{\"id\": 2417, \"name\": \"lizao2\", \"login\": \"lizao2\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我有个web服务器，接受请求后把请求放入chan，然后跑一定数目的goroutine作为chan的消费者，但是当web请求非常多时，goroutine会变得很多，chan的消费者被调度到的概率就低了。然后业务处理速度反而慢了。\n\n我上面说的对吗？chan是bufferd，设置一定数目。web请求入chan的时候一直等。\n\n如果我说的是对的(goroutine越多，关键goroutine调度到的概率越低)。那怎么解决这种问题？",
    "body_html": "<p>我有个 web 服务器，接受请求后把请求放入 chan，然后跑一定数目的 goroutine 作为 chan 的消费者，但是当 web 请求非常多时，goroutine 会变得很多，chan 的消费者被调度到的概率就低了。然后业务处理速度反而慢了。</p>\n\n<p>我上面说的对吗？chan 是 bufferd，设置一定数目。web 请求入 chan 的时候一直等。</p>\n\n<p>如果我说的是对的 (goroutine 越多，关键 goroutine 调度到的概率越低)。那怎么解决这种问题？</p>",
    "hits": 537,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 976,
    "title": "关于接口的一些问题",
    "created_at": "2017-07-26 10:20:46",
    "updated_at": "2017-07-27 11:21:14",
    "replied_at": "2017-07-27 11:09:55",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2441,
    "last_reply_user_login": "lys86_1205",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2421,
    "user": "{\"id\": 2421, \"name\": \"healerkiss\", \"login\": \"healerkiss\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "看到项目代码里面 有类似 比如声明了一个接口\n```go\ntype logSender interface {\n\tSend()\n}\n```\n然后下面又声明`var senders []logSender`\n然后就能使用\n```go\nfor _,s := range senders {\n\ts.Send()\n} \n```\n很好奇这样的写法，，，不应该是对象.方法吗？  而s是个接口类型，接口.方法如何理解？哪位大大能解释一下",
    "body_html": "<p>看到项目代码里面 有类似 比如声明了一个接口</p>\n <pre class=\"highlight go\"><code><span class=\"k\">type</span> <span class=\"n\">logSender</span> <span class=\"k\">interface</span> <span class=\"p\">{</span>\n    <span class=\"n\">Send</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>然后下面又声明<code>var senders []logSender</code>\n然后就能使用</p>\n <pre class=\"highlight go\"><code><span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span><span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">senders</span> <span class=\"p\">{</span>\n    <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">Send</span><span class=\"p\">()</span>\n<span class=\"p\">}</span> \n</code></pre> \n<p>很好奇这样的写法，，，不应该是对象.方法吗？ 而 s 是个接口类型，接口.方法如何理解？哪位大大能解释一下</p>",
    "hits": 399,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 977,
    "title": "轻松筹-招聘Golang开发工程师（25到45k）",
    "created_at": "2017-07-26 10:50:16",
    "updated_at": "2017-07-26 10:50:16",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "招聘",
    "node_id": 25,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 995,
    "user": "{\"id\": 995, \"name\": \"jianan_song\", \"login\": \"jianan_song\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "岗位要求：\n* 采用Go语言(Golang)开发稳健可扩展的后端程序；\n* 为各类项目需求设计架构，开发后端功能服务，同团队成员合作并积极提出建议和反馈；\n* 熟悉Redis、MySQL开源库；\n* 熟悉PHP优先考虑；\n* 有Github开源作品/个人Blog优先考虑；\n* 积极参与各种头脑风暴会议并对用到的技术、算法和产品功能提出意见和建议；\n* 同产品和设计团队协作，理解用户需求，归纳功能用例，并转化为高效的技术解决方案；\n* 重点及难点技术攻坚，并按时交付研究成果。\n\n [当你遇上轻松筹]\n\n 也许一开始你是拒绝的，可是，结果是...\n\n 平等透明的工作环境，五险一金各种补助别担心！\n\n 弹性工作，潇洒上下班不用挤成狗！\n\n 御姐萌妹/男神鲜肉/大长腿，咖啡饮料随便喝，生日趴软妹子将惊喜送到你身边，不能再圆满！\n\n 处女座也不用担心，能理解那一颗一直走到底的心！\n\n 不管你是文艺青年、逗比青年、普通青年，别犹豫了，快到碗里来！\n\n 工作地址:北京市东城区\n 简历请发jianan_song@qingsongchou.com",
    "body_html": "<p>岗位要求：</p>\n\n<ul>\n<li>采用 Go 语言 (Golang) 开发稳健可扩展的后端程序；</li>\n<li>为各类项目需求设计架构，开发后端功能服务，同团队成员合作并积极提出建议和反馈；</li>\n<li>熟悉 Redis、MySQL 开源库；</li>\n<li>熟悉 PHP 优先考虑；</li>\n<li>有 Github 开源作品/个人 Blog 优先考虑；</li>\n<li>积极参与各种头脑风暴会议并对用到的技术、算法和产品功能提出意见和建议；</li>\n<li>同产品和设计团队协作，理解用户需求，归纳功能用例，并转化为高效的技术解决方案；</li>\n<li>重点及难点技术攻坚，并按时交付研究成果。</li>\n</ul>\n\n<p>[当你遇上轻松筹]</p>\n\n<p>也许一开始你是拒绝的，可是，结果是...</p>\n\n<p>平等透明的工作环境，五险一金各种补助别担心！</p>\n\n<p>弹性工作，潇洒上下班不用挤成狗！</p>\n\n<p>御姐萌妹/男神鲜肉/大长腿，咖啡饮料随便喝，生日趴软妹子将惊喜送到你身边，不能再圆满！</p>\n\n<p>处女座也不用担心，能理解那一颗一直走到底的心！</p>\n\n<p>不管你是文艺青年、逗比青年、普通青年，别犹豫了，快到碗里来！</p>\n\n<p>工作地址:北京市东城区\n 简历请发 jianan_song@qingsongchou.com</p>",
    "hits": 501,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 978,
    "title": "golang如何结束goroutine",
    "created_at": "2017-07-26 11:46:14",
    "updated_at": "2017-07-26 12:01:29",
    "replied_at": "2017-07-26 12:01:29",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2012,
    "last_reply_user_login": "plain",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2426,
    "user": "{\"id\": 2426, \"name\": \"spider\", \"login\": \"spider\", \"avatar\": \"https://gocn.vip/system/letter_avatars/s.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "下面的代码开启了１０个消费者，消费者接收某消息停止所有goroutine怎么实现？\n```go\npackage main\n\nimport (\n\n\t&quot;sync&quot;\n\t&quot;fmt&quot;\n\t&quot;strconv&quot;\n\t&quot;time&quot;\n\t//&quot;runtime&quot;\n)\n\nvar wait sync.WaitGroup\n\nvar input = make(chan string)\n\n\nfunc inputConsumer() {\n\n\n\tfor in := range input {\n\n\n\t\tfmt.Println(in)\n\n\t\tif in==&quot;5&quot; {\n\n\t\t\t//这里结束所有goroutines\n\n\t\t}\n\t\t//println(runtime.NumGoroutine(),&quot;===&quot;)\n\n\t\ttime.Sleep(time.Second)\n\n\t\twait.Done()\n\t}\n}\n\nvar inputGroup sync.WaitGroup\n\nfunc main() {\n\n\t//控制goroutine数量为10个\n\tfor i := 0; i &lt;10; i++ {\n\t\tgo inputConsumer()\n\t}\n\n\tinputGroup.Add(1)\n\n\tgo func(){\n\t\tfor j:=1 ;j&lt;20;j++ {\n\t\t\twait.Add(1)\n\t\t\tinput &lt;- strconv.Itoa(j)\n\t\t}\n\n\t\tinputGroup.Done()\n\n\t}()\n\n\tinputGroup.Wait()\n\n\twait.Wait()\n\n}\n\n```",
    "body_html": "<p>下面的代码开启了１０个消费者，消费者接收某消息停止所有 goroutine 怎么实现？</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">sync</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">strconv</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">time</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"c\">//&amp;quot;runtime&amp;quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">var</span> <span class=\"n\">wait</span> <span class=\"n\">sync</span><span class=\"o\">.</span><span class=\"n\">WaitGroup</span>\n\n<span class=\"k\">var</span> <span class=\"n\">input</span> <span class=\"o\">=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">string</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">func</span> <span class=\"n\">inputConsumer</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n\n    <span class=\"k\">for</span> <span class=\"n\">in</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">input</span> <span class=\"p\">{</span>\n\n\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">in</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">in</span><span class=\"o\">==&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"m\">5</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span> <span class=\"p\">{</span>\n\n            <span class=\"c\">//这里结束所有goroutines</span>\n\n        <span class=\"p\">}</span>\n        <span class=\"c\">//println(runtime.NumGoroutine(),&amp;quot;===&amp;quot;)</span>\n\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"p\">)</span>\n\n        <span class=\"n\">wait</span><span class=\"o\">.</span><span class=\"n\">Done</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">var</span> <span class=\"n\">inputGroup</span> <span class=\"n\">sync</span><span class=\"o\">.</span><span class=\"n\">WaitGroup</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"c\">//控制goroutine数量为10个</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"m\">10</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n        <span class=\"k\">go</span> <span class=\"n\">inputConsumer</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">inputGroup</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)</span>\n\n    <span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">(){</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span><span class=\"o\">:=</span><span class=\"m\">1</span> <span class=\"p\">;</span><span class=\"n\">j</span><span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"m\">20</span><span class=\"p\">;</span><span class=\"n\">j</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n            <span class=\"n\">wait</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)</span>\n            <span class=\"n\">input</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">-</span> <span class=\"n\">strconv</span><span class=\"o\">.</span><span class=\"n\">Itoa</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"n\">inputGroup</span><span class=\"o\">.</span><span class=\"n\">Done</span><span class=\"p\">()</span>\n\n    <span class=\"p\">}()</span>\n\n    <span class=\"n\">inputGroup</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">()</span>\n\n    <span class=\"n\">wait</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">()</span>\n\n<span class=\"p\">}</span>\n\n</code></pre> ",
    "hits": 570,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 979,
    "title": "Beego run http server Running on http://:8080",
    "created_at": "2017-07-26 12:36:54",
    "updated_at": "2021-01-20 03:02:29",
    "replied_at": "2019-04-24 15:26:41",
    "replies_count": 2,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 7477,
    "last_reply_user_login": "timao",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2428,
    "user": "{\"id\": 2428, \"name\": \"qingfeng\", \"login\": \"qingfeng\", \"avatar\": \"https://gocn.vip/system/letter_avatars/q.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "启动应用的时候 显示如下：\n\n```json\n| ___ \\\n| |_/ /  ___   ___\n| ___ \\ / _ \\ / _ \\\n| |_/ /|  __/|  __/\n\\____/  \\___| \\___| v1.9.0\n2017/07/26 12:26:17 INFO     ▶ 0001 Using 'blog' as 'appname'\n2017/07/26 12:26:17 INFO     ▶ 0002 Initializing watcher...\n2017/07/26 12:26:18 SUCCESS  ▶ 0003 Built Successfully!\n2017/07/26 12:26:18 INFO     ▶ 0004 Restarting 'blog'...\n2017/07/26 12:26:18 SUCCESS  ▶ 0005 './blog' is running...\n2017/07/26 12:26:18 [I] [asm_amd64.s:2197] http server Running on http://:8080\n```\n",
    "body_html": "<p>启动应用的时候 显示如下：</p>\n <pre class=\"highlight json\"><code><span class=\"err\">|</span><span class=\"w\"> </span><span class=\"err\">___</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\">\n</span><span class=\"err\">|</span><span class=\"w\"> </span><span class=\"err\">|_/</span><span class=\"w\"> </span><span class=\"err\">/</span><span class=\"w\">  </span><span class=\"err\">___</span><span class=\"w\">   </span><span class=\"err\">___</span><span class=\"w\">\n</span><span class=\"err\">|</span><span class=\"w\"> </span><span class=\"err\">___</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\"> </span><span class=\"err\">/</span><span class=\"w\"> </span><span class=\"err\">_</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\"> </span><span class=\"err\">/</span><span class=\"w\"> </span><span class=\"err\">_</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\">\n</span><span class=\"err\">|</span><span class=\"w\"> </span><span class=\"err\">|_/</span><span class=\"w\"> </span><span class=\"err\">/|</span><span class=\"w\">  </span><span class=\"err\">__/|</span><span class=\"w\">  </span><span class=\"err\">__/</span><span class=\"w\">\n</span><span class=\"err\">\\____/</span><span class=\"w\">  </span><span class=\"err\">\\___|</span><span class=\"w\"> </span><span class=\"err\">\\___|</span><span class=\"w\"> </span><span class=\"err\">v</span><span class=\"mf\">1.9</span><span class=\"err\">.</span><span class=\"mi\">0</span><span class=\"w\">\n</span><span class=\"mi\">2017</span><span class=\"err\">/</span><span class=\"mi\">07</span><span class=\"err\">/</span><span class=\"mi\">26</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"err\">:</span><span class=\"mi\">26</span><span class=\"err\">:</span><span class=\"mi\">17</span><span class=\"w\"> </span><span class=\"err\">INFO</span><span class=\"w\">     </span><span class=\"err\">▶</span><span class=\"w\"> </span><span class=\"mi\">0001</span><span class=\"w\"> </span><span class=\"err\">Using</span><span class=\"w\"> </span><span class=\"err\">'blog'</span><span class=\"w\"> </span><span class=\"err\">as</span><span class=\"w\"> </span><span class=\"err\">'appname'</span><span class=\"w\">\n</span><span class=\"mi\">2017</span><span class=\"err\">/</span><span class=\"mi\">07</span><span class=\"err\">/</span><span class=\"mi\">26</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"err\">:</span><span class=\"mi\">26</span><span class=\"err\">:</span><span class=\"mi\">17</span><span class=\"w\"> </span><span class=\"err\">INFO</span><span class=\"w\">     </span><span class=\"err\">▶</span><span class=\"w\"> </span><span class=\"mi\">0002</span><span class=\"w\"> </span><span class=\"err\">Initializing</span><span class=\"w\"> </span><span class=\"err\">watcher...</span><span class=\"w\">\n</span><span class=\"mi\">2017</span><span class=\"err\">/</span><span class=\"mi\">07</span><span class=\"err\">/</span><span class=\"mi\">26</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"err\">:</span><span class=\"mi\">26</span><span class=\"err\">:</span><span class=\"mi\">18</span><span class=\"w\"> </span><span class=\"err\">SUCCESS</span><span class=\"w\">  </span><span class=\"err\">▶</span><span class=\"w\"> </span><span class=\"mi\">0003</span><span class=\"w\"> </span><span class=\"err\">Built</span><span class=\"w\"> </span><span class=\"err\">Successfully!</span><span class=\"w\">\n</span><span class=\"mi\">2017</span><span class=\"err\">/</span><span class=\"mi\">07</span><span class=\"err\">/</span><span class=\"mi\">26</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"err\">:</span><span class=\"mi\">26</span><span class=\"err\">:</span><span class=\"mi\">18</span><span class=\"w\"> </span><span class=\"err\">INFO</span><span class=\"w\">     </span><span class=\"err\">▶</span><span class=\"w\"> </span><span class=\"mi\">0004</span><span class=\"w\"> </span><span class=\"err\">Restarting</span><span class=\"w\"> </span><span class=\"err\">'blog'...</span><span class=\"w\">\n</span><span class=\"mi\">2017</span><span class=\"err\">/</span><span class=\"mi\">07</span><span class=\"err\">/</span><span class=\"mi\">26</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"err\">:</span><span class=\"mi\">26</span><span class=\"err\">:</span><span class=\"mi\">18</span><span class=\"w\"> </span><span class=\"err\">SUCCESS</span><span class=\"w\">  </span><span class=\"err\">▶</span><span class=\"w\"> </span><span class=\"mi\">0005</span><span class=\"w\"> </span><span class=\"err\">'./blog'</span><span class=\"w\"> </span><span class=\"err\">is</span><span class=\"w\"> </span><span class=\"err\">running...</span><span class=\"w\">\n</span><span class=\"mi\">2017</span><span class=\"err\">/</span><span class=\"mi\">07</span><span class=\"err\">/</span><span class=\"mi\">26</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"err\">:</span><span class=\"mi\">26</span><span class=\"err\">:</span><span class=\"mi\">18</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"err\">I</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"err\">asm_amd</span><span class=\"mi\">64</span><span class=\"err\">.s:</span><span class=\"mi\">2197</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"err\">http</span><span class=\"w\"> </span><span class=\"err\">server</span><span class=\"w\"> </span><span class=\"err\">Running</span><span class=\"w\"> </span><span class=\"err\">on</span><span class=\"w\"> </span><span class=\"err\">http://:</span><span class=\"mi\">8080</span><span class=\"w\">\n</span></code></pre> ",
    "hits": 1285,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 3,
    "collect_count": 0
  },
  {
    "id": 980,
    "title": "怎么用反射序列化一个struct,将其属性和值组合成一段字符",
    "created_at": "2017-07-26 17:19:09",
    "updated_at": "2017-07-26 18:38:10",
    "replied_at": "2017-07-26 18:38:10",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2432,
    "last_reply_user_login": "zhaohu",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2432,
    "user": "{\"id\": 2432, \"name\": \"zhaohu\", \"login\": \"zhaohu\", \"avatar\": \"https://gocn.vip/system/letter_avatars/z.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "想要的效果：\n给出struct :\n```\nvar MyInt int\ntype User struct {\n\tName string `schema:&quot;n_&quot;`\n\tAge MyInt `schema:&quot;a_&quot;`\n\tSex string `schema:&quot;s_&quot;`\n\tCore float32 `schema:&quot;c_&quot;`\n}\n\nfunc getString(user *User) string {\n\tvar message string\n\t// 求解\n\t\n\treturn message\n}\n\nfunc main() {\n\tuser := &amp;User{Name:&quot;xxx&quot;, Core: 23.3}\n\tfmt.Println(getString(user))\n}\n// 期待的输出结果： n_xxx,c_23.3\n\nfunc  main() {\n\tuser := &amp;User{Name:&quot;xxx&quot;, Age: 23, Core: 23.3}\n\tfmt.Println(getString(user))\n}\n// 期待的输出结果： n_xxx,a_23,c_23.3\n```\n\n\n求大神解答！",
    "body_html": "<p>想要的效果：\n给出 struct :</p>\n <pre class=\"highlight plaintext\"><code>var MyInt int\ntype User struct {\n    Name string `schema:&amp;quot;n_&amp;quot;`\n    Age MyInt `schema:&amp;quot;a_&amp;quot;`\n    Sex string `schema:&amp;quot;s_&amp;quot;`\n    Core float32 `schema:&amp;quot;c_&amp;quot;`\n}\n\nfunc getString(user *User) string {\n    var message string\n    // 求解\n\n    return message\n}\n\nfunc main() {\n    user := &amp;amp;User{Name:&amp;quot;xxx&amp;quot;, Core: 23.3}\n    fmt.Println(getString(user))\n}\n// 期待的输出结果： n_xxx,c_23.3\n\nfunc  main() {\n    user := &amp;amp;User{Name:&amp;quot;xxx&amp;quot;, Age: 23, Core: 23.3}\n    fmt.Println(getString(user))\n}\n// 期待的输出结果： n_xxx,a_23,c_23.3\n</code></pre> \n<p>求大神解答！</p>",
    "hits": 433,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 981,
    "title": "Golang把模板里的左尖括号也给转义了？",
    "created_at": "2017-07-26 18:21:57",
    "updated_at": "2017-07-27 11:22:05",
    "replied_at": "2017-07-27 11:22:05",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1828,
    "last_reply_user_login": "koalaone",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1984,
    "user": "{\"id\": 1984, \"name\": \"Memory_Leak\", \"login\": \"Memory_Leak\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "用beego做一个XSS平台，有一个模板文件是JavaScript，回调地址动态写入。\n`Content-Type`设置成js\n```golang\n\thost := beego.AppConfig.String(&quot;web::addr&quot;)\n\tx.Data[&quot;host&quot;] = host\n\tx.Data[&quot;project&quot;] = x.Ctx.Input.Param(&quot;:id&quot;)\n\tx.Ctx.Output.ContentType(&quot;.js&quot;)\n\tx.TplName = &quot;xss.html&quot;\n```\n模板文件内容：\n```javascript\n    My.ajax({\n        type: &quot;post&quot;,\n        url: '//{{.host}}/X/{{.project}}',\n        data: My.formatQ($res),\n        success: function (data) {\n        }\n    });\n\t/// ...\n```\n结果发现返回的`js`内容所有的左尖括号都被转义了\n\n模板内容\n```javascript\nfunction md5RotateLeft(lValue, iShiftBits) {\n            return (lValue &lt;&lt; iShiftBits) | (lValue &gt;&gt;&gt; (32 - iShiftBits));\n}\n```\n结果通过浏览器请求的左尖括号都被转义了\n```javascript\nfunction md5RotateLeft(lValue, iShiftBits) {\n            return (lValue &amp;lt;&amp;lt; iShiftBits) | (lValue &gt;&gt;&gt; (32 - iShiftBits));\n        }\n```\n",
    "body_html": "<p>用 beego 做一个 XSS 平台，有一个模板文件是 JavaScript，回调地址动态写入。\n<code>Content-Type</code>设置成 js</p>\n <pre class=\"highlight go\"><code><span class=\"n\">host</span> <span class=\"o\">:=</span> <span class=\"n\">beego</span><span class=\"o\">.</span><span class=\"n\">AppConfig</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">web</span><span class=\"o\">::</span><span class=\"n\">addr</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">Data</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">host</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;]</span> <span class=\"o\">=</span> <span class=\"n\">host</span>\n<span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">Data</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">project</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;]</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">Ctx</span><span class=\"o\">.</span><span class=\"n\">Input</span><span class=\"o\">.</span><span class=\"n\">Param</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">:</span><span class=\"n\">id</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">Ctx</span><span class=\"o\">.</span><span class=\"n\">Output</span><span class=\"o\">.</span><span class=\"n\">ContentType</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">.</span><span class=\"n\">js</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n<span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">TplName</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">xss</span><span class=\"o\">.</span><span class=\"n\">html</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n</code></pre> \n<p>模板文件内容：</p>\n <pre class=\"highlight javascript\"><code><span class=\"nx\">My</span><span class=\"p\">.</span><span class=\"nx\">ajax</span><span class=\"p\">({</span>\n    <span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"o\">&amp;</span><span class=\"nx\">quot</span><span class=\"p\">;</span><span class=\"nx\">post</span><span class=\"o\">&amp;</span><span class=\"nx\">quot</span><span class=\"p\">;,</span>\n    <span class=\"na\">url</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">//{{.host}}/X/{{.project}}</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">data</span><span class=\"p\">:</span> <span class=\"nx\">My</span><span class=\"p\">.</span><span class=\"nx\">formatQ</span><span class=\"p\">(</span><span class=\"nx\">$res</span><span class=\"p\">),</span>\n    <span class=\"na\">success</span><span class=\"p\">:</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">});</span>\n<span class=\"c1\">/// ...</span>\n</code></pre> \n<p>结果发现返回的<code>js</code>内容所有的左尖括号都被转义了</p>\n\n<p>模板内容</p>\n <pre class=\"highlight javascript\"><code><span class=\"kd\">function</span> <span class=\"nx\">md5RotateLeft</span><span class=\"p\">(</span><span class=\"nx\">lValue</span><span class=\"p\">,</span> <span class=\"nx\">iShiftBits</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"nx\">lValue</span> <span class=\"o\">&amp;</span><span class=\"nx\">lt</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"nx\">lt</span><span class=\"p\">;</span> <span class=\"nx\">iShiftBits</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"nx\">lValue</span> <span class=\"o\">&amp;</span><span class=\"nx\">gt</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"nx\">gt</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"nx\">gt</span><span class=\"p\">;</span> <span class=\"p\">(</span><span class=\"mi\">32</span> <span class=\"o\">-</span> <span class=\"nx\">iShiftBits</span><span class=\"p\">));</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>结果通过浏览器请求的左尖括号都被转义了</p>\n <pre class=\"highlight javascript\"><code><span class=\"kd\">function</span> <span class=\"nx\">md5RotateLeft</span><span class=\"p\">(</span><span class=\"nx\">lValue</span><span class=\"p\">,</span> <span class=\"nx\">iShiftBits</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"nx\">lValue</span> <span class=\"o\">&amp;</span><span class=\"nx\">amp</span><span class=\"p\">;</span><span class=\"nx\">lt</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"nx\">amp</span><span class=\"p\">;</span><span class=\"nx\">lt</span><span class=\"p\">;</span> <span class=\"nx\">iShiftBits</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"nx\">lValue</span> <span class=\"o\">&amp;</span><span class=\"nx\">gt</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"nx\">gt</span><span class=\"p\">;</span><span class=\"o\">&amp;</span><span class=\"nx\">gt</span><span class=\"p\">;</span> <span class=\"p\">(</span><span class=\"mi\">32</span> <span class=\"o\">-</span> <span class=\"nx\">iShiftBits</span><span class=\"p\">));</span>\n        <span class=\"p\">}</span>\n</code></pre> ",
    "hits": 736,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 982,
    "title": "GoCN每日新闻(2017-07-27)",
    "created_at": "2017-07-27 08:51:20",
    "updated_at": "2017-07-27 08:51:20",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-27)\n\n1. Go 的依赖注入设计 http://adnaan.badr.in/blog/2017/07/15/exploring-dependency-injection-in-go/\n2. golang的gzip优化 https://gocn.io/article/400\n3. 记一次资源泄露之路 https://medium.com/square-corner-blog/always-be-closing-3d5fda0e00da\n4. Go读取股票历史 https://yushuangqi.com/blog/2017/go-du-qu-tong-da-xin-li-shi-ri-xian-shu-ju.html\n5. Go make和new的区别 http://sanyuesha.com/2017/07/26/go-make-and-new/\n\n1. [8月5日]杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn\n",
    "body_html": "<p>GoCN 每日新闻 (2017-07-27)</p>\n\n<ol>\n<li>Go 的依赖注入设计 <a href=\"http://adnaan.badr.in/blog/2017/07/15/exploring-dependency-injection-in-go/\" rel=\"nofollow\" target=\"_blank\">http://adnaan.badr.in/blog/2017/07/15/exploring-dependency-injection-in-go/</a>\n</li>\n<li>golang 的 gzip 优化 <a href=\"https://gocn.io/article/400\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/400</a>\n</li>\n<li>记一次资源泄露之路 <a href=\"https://medium.com/square-corner-blog/always-be-closing-3d5fda0e00da\" rel=\"nofollow\" target=\"_blank\">https://medium.com/square-corner-blog/always-be-closing-3d5fda0e00da</a>\n</li>\n<li>Go 读取股票历史 <a href=\"https://yushuangqi.com/blog/2017/go-du-qu-tong-da-xin-li-shi-ri-xian-shu-ju.html\" rel=\"nofollow\" target=\"_blank\">https://yushuangqi.com/blog/2017/go-du-qu-tong-da-xin-li-shi-ri-xian-shu-ju.html</a>\n</li>\n<li><p>Go make 和 new 的区别 <a href=\"http://sanyuesha.com/2017/07/26/go-make-and-new/\" rel=\"nofollow\" target=\"_blank\">http://sanyuesha.com/2017/07/26/go-make-and-new/</a></p></li>\n<li><p>[8 月 5 日] 杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a></p></li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 394,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 983,
    "title": "关于该网站使用中一个问题",
    "created_at": "2017-07-27 15:17:50",
    "updated_at": "2017-07-27 15:17:50",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2441,
    "user": "{\"id\": 2441, \"name\": \"lys86_1205\", \"login\": \"lys86_1205\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "问题的链接使用 HTML 链接 - target 属性,很容易在每次看文一个问题，把网站关掉了！",
    "body_html": "<p>问题的链接使用 HTML 链接 - target 属性,很容易在每次看文一个问题，把网站关掉了！</p>",
    "hits": 261,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 984,
    "title": "请各位推荐一下常用的log包，谢谢！",
    "created_at": "2017-07-27 15:22:04",
    "updated_at": "2017-09-10 14:05:57",
    "replied_at": "2017-09-10 14:04:00",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2698,
    "last_reply_user_login": "yangbt",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2101,
    "user": "{\"id\": 2101, \"name\": \"tmacy\", \"login\": \"tmacy\", \"avatar\": \"https://gocn.vip/system/letter_avatars/t.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在golang awesome上看到有这些：\n\n------------\n\n\nglg - glg is simple and fast leveled logging library for Go.\n\nglog - Leveled execution logs for Go.\n\ngo-log - Log lib supports level and multi handlers.\n\ngo-log - A log4j implementation in Go.\n\ngo-logger - Simple logger of Go Programs, with level handlers.\n\ngologger - Simple easy to use log lib for go, logs in Colored Cosole, Simple Console, File or Elasticsearch.\n\ngomol - Multiple-output, structured logging for Go with extensible logging outputs.\n\ngone/log - Fast, extendable, full-featured, std-lib source compatible log library.\n\nlog - Structured logging package for Go.\n\nlog - Simple, configurable and scalable Structured Logging for Go.\n\nlog-voyage - Full-featured logging saas written in golang.\n\nlog15 - Simple, powerful logging for Go\n\nlogdump - Package for multi-level logging\n\nlogex - An golang log lib, supports tracking and level, wrap by standard log lib\n\nlogger - Minimalistic logging library for Go.\n\nlogrus - a structured logger for Go.\n\nlogrusly - logrus plug-in to send errors to a Loggly.\n\nlogutils - Utilities for slightly better logging in Go (Golang) extending the standard logger.\n\nlogxi - A 12-factor app logger that is fast and makes you happy.\n\nlumberjack - Simple rolling logger, implements io.WriteCloser.\n\nmlog - A simple logging module for go, with 5 levels, an optional rotating logfile feature \nand stdout/stderr output.\n\nozzo-log - High performance logging supporting log severity, categorization, and filtering. Can send filtered log messages to various targets (e.g. console, network, mail).\n\nseelog - logging functionality with flexible dispatching, filtering, and formatting.\n\nslf - The Structured Logging Facade (SLF) for Go (like SLF4J but structured and for Go)\n\nslog - The reference implementation of the Structured Logging Facade (SLF) for Go\n\nspew - Implements a deep pretty printer for Go data structures to aid in debugging\n\nstdlog - Stdlog is an object-oriented library providing leveled logging. It is very useful for \ncron jobs.\n\ntail - A Go package striving to emulate the features of the BSD tail program.\n\nxlog - Plugin architecture and flexible log system for Go, with level ctrl, multiple log target and custom log format.\n\nxlog - A structured logger for net/context aware HTTP handlers with flexible dispatching.\n\nzap - Fast, structured, leveled logging in Go.\n\nzerolog - Zero-allocation JSON logger.\n\n不知大家用的比较好的是哪些呢？",
    "body_html": "<p>在 golang awesome 上看到有这些：</p>\n\n<hr>\n\n<p>glg - glg is simple and fast leveled logging library for Go.</p>\n\n<p>glog - Leveled execution logs for Go.</p>\n\n<p>go-log - Log lib supports level and multi handlers.</p>\n\n<p>go-log - A log4j implementation in Go.</p>\n\n<p>go-logger - Simple logger of Go Programs, with level handlers.</p>\n\n<p>gologger - Simple easy to use log lib for go, logs in Colored Cosole, Simple Console, File or Elasticsearch.</p>\n\n<p>gomol - Multiple-output, structured logging for Go with extensible logging outputs.</p>\n\n<p>gone/log - Fast, extendable, full-featured, std-lib source compatible log library.</p>\n\n<p>log - Structured logging package for Go.</p>\n\n<p>log - Simple, configurable and scalable Structured Logging for Go.</p>\n\n<p>log-voyage - Full-featured logging saas written in golang.</p>\n\n<p>log15 - Simple, powerful logging for Go</p>\n\n<p>logdump - Package for multi-level logging</p>\n\n<p>logex - An golang log lib, supports tracking and level, wrap by standard log lib</p>\n\n<p>logger - Minimalistic logging library for Go.</p>\n\n<p>logrus - a structured logger for Go.</p>\n\n<p>logrusly - logrus plug-in to send errors to a Loggly.</p>\n\n<p>logutils - Utilities for slightly better logging in Go (Golang) extending the standard logger.</p>\n\n<p>logxi - A 12-factor app logger that is fast and makes you happy.</p>\n\n<p>lumberjack - Simple rolling logger, implements io.WriteCloser.</p>\n\n<p>mlog - A simple logging module for go, with 5 levels, an optional rotating logfile feature \nand stdout/stderr output.</p>\n\n<p>ozzo-log - High performance logging supporting log severity, categorization, and filtering. Can send filtered log messages to various targets (e.g. console, network, mail).</p>\n\n<p>seelog - logging functionality with flexible dispatching, filtering, and formatting.</p>\n\n<p>slf - The Structured Logging Facade (SLF) for Go (like SLF4J but structured and for Go)</p>\n\n<p>slog - The reference implementation of the Structured Logging Facade (SLF) for Go</p>\n\n<p>spew - Implements a deep pretty printer for Go data structures to aid in debugging</p>\n\n<p>stdlog - Stdlog is an object-oriented library providing leveled logging. It is very useful for \ncron jobs.</p>\n\n<p>tail - A Go package striving to emulate the features of the BSD tail program.</p>\n\n<p>xlog - Plugin architecture and flexible log system for Go, with level ctrl, multiple log target and custom log format.</p>\n\n<p>xlog - A structured logger for net/context aware HTTP handlers with flexible dispatching.</p>\n\n<p>zap - Fast, structured, leveled logging in Go.</p>\n\n<p>zerolog - Zero-allocation JSON logger.</p>\n\n<p>不知大家用的比较好的是哪些呢？</p>",
    "hits": 657,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 985,
    "title": "官方的依赖管理工具 dep 可以用于生产环境了",
    "created_at": "2017-07-27 17:49:22",
    "updated_at": "2017-07-29 14:13:46",
    "replied_at": "2017-07-29 14:13:46",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2418,
    "last_reply_user_login": "xiongwenwu",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 545,
    "user": "{\"id\": 545, \"name\": \"localvar\", \"login\": \"localvar\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "发布了 v0.2.0，状态说明里说： dep is safe for production use\n\n[https://github.com/golang/dep](https://github.com/golang/dep &quot;https://github.com/golang/dep&quot;)",
    "body_html": "<p>发布了 v0.2.0，状态说明里说： dep is safe for production use</p>\n\n<p><a href=\"https://github.com/golang/dep%20%22https://github.com/golang/dep%22\" title=\"\">https://github.com/golang/dep</a></p>",
    "hits": 470,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 986,
    "title": "关于The go programming language 课后练习的两个问题",
    "created_at": "2017-07-27 23:46:02",
    "updated_at": "2017-07-28 09:37:22",
    "replied_at": "2017-07-28 09:37:22",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2252,
    "last_reply_user_login": "fiisio",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1194,
    "user": "{\"id\": 1194, \"name\": \"dcb9\", \"login\": \"dcb9\", \"avatar\": \"https://gocn.vip/system/letter_avatars/d.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "Exercise 4.6: Write an in-place function that squashes each run of adjacent Unicode spaces (see unicode.IsSpace) in a UTF-8 encoded []byte slice into a single ASCII space.\n\n我理解的这个题目的要求是：写一个 in-place 函数，去将连续的 Unicode 空格替换为一个 ASCII 空格。\n\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;unicode&quot;\n)\n\nfunc main() {\n\tfmt.Println(&quot;vim-go&quot;)\n\ts := &quot;你　　　好　　　啊！　　我　很　好　　好 的    很呢&quot;\n\tfmt.Println(string(f1([]byte(s))))\n}\n\n// Write an in-place function that squashes each run of adjacent Unicode spaces(see unicode.IsSpace) in a UTF-8 encoded []byte slice into a single ASCII space\nfunc f1(bs []byte) []byte {\n\tres := make([]rune, 0, len(bs))\n\tisPrevSpace := false\n\tfor _, v := range []rune(string(bs)) {\n\t\tif unicode.IsSpace(rune(v)) {\n\t\t\tif isPrevSpace {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tisPrevSpace, v = true, ' '\n\t\t} else {\n\t\t\tisPrevSpace = false\n\t\t}\n\t\tres = append(res, v)\n\t}\n\treturn []byte(string(res))\n}\n```\n\n想请各位两个问题：\n\n1、于这样经过 []byte -&gt; string -&gt; []rune，最后再 []rune -&gt; string -&gt; []byte 感觉已经不再是 in-place 的了\n2、如何通过程序查看到是否是 in-place 的啊，比如我想看一下这两个 slice，所对应的底层的数组是否为同一个。但不知道该如何获取 slice 底层的 array 的指针。",
    "body_html": "<p>Exercise 4.6: Write an in-place function that squashes each run of adjacent Unicode spaces (see unicode.IsSpace) in a UTF-8 encoded [] byte slice into a single ASCII space.</p>\n\n<p>我理解的这个题目的要求是：写一个 in-place 函数，去将连续的 Unicode 空格替换为一个 ASCII 空格。</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">unicode</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">vim</span><span class=\"o\">-</span><span class=\"k\">go</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n    <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">你</span><span class=\"err\">　　　</span><span class=\"n\">好</span><span class=\"err\">　　　</span><span class=\"n\">啊</span><span class=\"err\">！　　</span><span class=\"n\">我</span><span class=\"err\">　</span><span class=\"n\">很</span><span class=\"err\">　</span><span class=\"n\">好</span><span class=\"err\">　　</span><span class=\"n\">好</span> <span class=\"n\">的</span>    <span class=\"n\">很呢</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">(</span><span class=\"n\">f1</span><span class=\"p\">([]</span><span class=\"kt\">byte</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">))))</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">// Write an in-place function that squashes each run of adjacent Unicode spaces(see unicode.IsSpace) in a UTF-8 encoded []byte slice into a single ASCII space</span>\n<span class=\"k\">func</span> <span class=\"n\">f1</span><span class=\"p\">(</span><span class=\"n\">bs</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span><span class=\"p\">)</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span> <span class=\"p\">{</span>\n    <span class=\"n\">res</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">([]</span><span class=\"kt\">rune</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">bs</span><span class=\"p\">))</span>\n    <span class=\"n\">isPrevSpace</span> <span class=\"o\">:=</span> <span class=\"no\">false</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"p\">[]</span><span class=\"kt\">rune</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">(</span><span class=\"n\">bs</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"n\">unicode</span><span class=\"o\">.</span><span class=\"n\">IsSpace</span><span class=\"p\">(</span><span class=\"kt\">rune</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"n\">isPrevSpace</span> <span class=\"p\">{</span>\n                <span class=\"k\">continue</span>\n            <span class=\"p\">}</span>\n            <span class=\"n\">isPrevSpace</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"no\">true</span><span class=\"p\">,</span> <span class=\"sc\">' '</span>\n        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n            <span class=\"n\">isPrevSpace</span> <span class=\"o\">=</span> <span class=\"no\">false</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>想请各位两个问题：</p>\n\n<p>1、于这样经过 [] byte -&gt; string -&gt; [] rune，最后再 [] rune -&gt; string -&gt; [] byte 感觉已经不再是 in-place 的了\n2、如何通过程序查看到是否是 in-place 的啊，比如我想看一下这两个 slice，所对应的底层的数组是否为同一个。但不知道该如何获取 slice 底层的 array 的指针。</p>",
    "hits": 443,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 987,
    "title": "goroutine的次数问题",
    "created_at": "2017-07-28 06:37:39",
    "updated_at": "2017-07-29 11:40:05",
    "replied_at": "2017-07-29 11:40:05",
    "replies_count": 6,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1242,
    "last_reply_user_login": "cookies",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2446,
    "user": "{\"id\": 2446, \"name\": \"lately\", \"login\": \"lately\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在下例中，为何最终len(tab)的值每次都不一样呢？谢谢。\n\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;sync&quot;\n)\n\nvar tab []int\n\nfunc test(num int) {\n\ttab = append(tab, num)\n\twg.Done()\n}\n\nvar wg sync.WaitGroup\n\nfunc main() {\n\n\tfor i := 0; i &lt; 1000; i++ {\n\t\twg.Add(1)\n\t\tgo test(i)\n\t}\n\twg.Wait()\n\tfmt.Println(len(tab))\n}\n\n```",
    "body_html": "<p>在下例中，为何最终 len(tab) 的值每次都不一样呢？谢谢。</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">sync</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">var</span> <span class=\"n\">tab</span> <span class=\"p\">[]</span><span class=\"kt\">int</span>\n\n<span class=\"k\">func</span> <span class=\"n\">test</span><span class=\"p\">(</span><span class=\"n\">num</span> <span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">tab</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">tab</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"p\">)</span>\n    <span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Done</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">var</span> <span class=\"n\">wg</span> <span class=\"n\">sync</span><span class=\"o\">.</span><span class=\"n\">WaitGroup</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"m\">1000</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n        <span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">go</span> <span class=\"n\">test</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">()</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tab</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n\n</code></pre> ",
    "hits": 607,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 988,
    "title": "GoCN每日新闻(2017-07-28)",
    "created_at": "2017-07-28 08:32:59",
    "updated_at": "2017-07-28 11:08:17",
    "replied_at": "2017-07-28 11:08:17",
    "replies_count": 3,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 2262,
    "last_reply_user_login": "abin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-28)\n\n1. 你不该用的六个Go小技巧 https://medium.com/@Raedwulf/6-go-tips-you-should-probably-not-use-b252dfd0a3c4\n2. 基于interface生成mock测试 https://github.com/gojuno/minimock\n3. 应用的高可用安全 https://blog.jessfraz.com/post/a-rant-on-usable-security/\n4. 研发组织该如何设计绩效体系？https://mp.weixin.qq.com/s/VvZWroN1Z34k1H2IEJsYeA\n5. Go里面的科学计算库 http://talks.godoc.org/github.com/gonum/talks/2017/gonumtour.slide#1\n\n1. [8月5日]杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-28)</p>\n\n<ol>\n<li>你不该用的六个 Go 小技巧 <a href=\"https://medium.com/@Raedwulf/6-go-tips-you-should-probably-not-use-b252dfd0a3c4\" rel=\"nofollow\" target=\"_blank\">https://medium.com/@Raedwulf/6-go-tips-you-should-probably-not-use-b252dfd0a3c4</a>\n</li>\n<li>基于 interface 生成 mock 测试 <a href=\"https://github.com/gojuno/minimock\" rel=\"nofollow\" target=\"_blank\">https://github.com/gojuno/minimock</a>\n</li>\n<li>应用的高可用安全 <a href=\"https://blog.jessfraz.com/post/a-rant-on-usable-security/\" rel=\"nofollow\" target=\"_blank\">https://blog.jessfraz.com/post/a-rant-on-usable-security/</a>\n</li>\n<li>研发组织该如何设计绩效体系？<a href=\"https://mp.weixin.qq.com/s/VvZWroN1Z34k1H2IEJsYeA\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/VvZWroN1Z34k1H2IEJsYeA</a>\n</li>\n<li><p>Go 里面的科学计算库 <a href=\"http://talks.godoc.org/github.com/gonum/talks/2017/gonumtour.slide#1\" rel=\"nofollow\" target=\"_blank\">http://talks.godoc.org/github.com/gonum/talks/2017/gonumtour.slide#1</a></p></li>\n<li><p>[8 月 5 日] 杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a></p></li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 497,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 989,
    "title": "关于json格式化输出json.MarshalIndent()的使用",
    "created_at": "2017-07-28 11:12:23",
    "updated_at": "2017-07-28 11:24:52",
    "replied_at": "2017-07-28 11:24:52",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2449,
    "last_reply_user_login": "wuzheng",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2448,
    "user": "{\"id\": 2448, \"name\": \"bingo1103\", \"login\": \"bingo1103\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "最近发现用json.MarshalIndent()转出来的json打印出来比较好看\n\n比如\n```\njs,_ := json.Marshal(&amp;person)\njsIndent,_ := json.MarshalIndent(&amp;person, &quot;&quot;, &quot;\\t&quot;)\nfmt.Println(&quot;\\njs:\\n&quot;,string(js), &quot;\\n\\njsIndent:\\n&quot;,string(jsIndent)\n```\n打印出来:\n```\njs:\n{&quot;Time&quot;:1987,&quot;Name&quot;:&quot;liangyongxing&quot;,&quot;Age&quot;:12} \n\njsIndent:\n{\n\t&quot;Time&quot;: 1987,\n\t&quot;Name&quot;: &quot;liangyongxing&quot;,\n\t&quot;Age&quot;: 12\n}\n```\n但是我不是很清楚，\n#####**1.这个是只影响打印吗？ 在数据实际传递过程和普通的Marshal有没有区别？**\n#####**2.MarshalIndent还可以设置前缀不为空**， 比如\n\n```jsIndent,_ := json.MarshalIndent(&amp;person, &quot;haha&quot;, &quot;\\t&quot;)```\n\n就变成\n```\njsIndent:\n{\nhaha\t&quot;Time&quot;: 1987,\nhaha\t&quot;Name&quot;: &quot;liangyongxing&quot;,\nhaha\t&quot;Age&quot;: 12\nhaha}```\n然后这个json传递出去就带着这个前缀吗？",
    "body_html": "<p>最近发现用 json.MarshalIndent() 转出来的 json 打印出来比较好看</p>\n\n<p>比如</p>\n<pre class=\"highlight plaintext\"><code>js,_ := json.Marshal(&amp;amp;person)\njsIndent,_ := json.MarshalIndent(&amp;amp;person, &amp;quot;&amp;quot;, &amp;quot;\\t&amp;quot;)\nfmt.Println(&amp;quot;\\njs:\\n&amp;quot;,string(js), &amp;quot;\\n\\njsIndent:\\n&amp;quot;,string(jsIndent)\n</code></pre>\n<p>打印出来:</p>\n<pre class=\"highlight plaintext\"><code>js:\n{&amp;quot;Time&amp;quot;:1987,&amp;quot;Name&amp;quot;:&amp;quot;liangyongxing&amp;quot;,&amp;quot;Age&amp;quot;:12} \n\njsIndent:\n{\n    &amp;quot;Time&amp;quot;: 1987,\n    &amp;quot;Name&amp;quot;: &amp;quot;liangyongxing&amp;quot;,\n    &amp;quot;Age&amp;quot;: 12\n}\n</code></pre>\n<p>但是我不是很清楚，\n#####<strong>1.这个是只影响打印吗？ 在数据实际传递过程和普通的 Marshal 有没有区别？</strong>\n#####<strong>2.MarshalIndent 还可以设置前缀不为空</strong>， 比如</p>\n\n<p><code>jsIndent,_ := json.MarshalIndent(&amp;amp;person, &amp;quot;haha&amp;quot;, &amp;quot;\\t&amp;quot;)</code></p>\n\n<p>就变成</p>\n<pre class=\"highlight plaintext\"><code>jsIndent:\n{\nhaha    &amp;quot;Time&amp;quot;: 1987,\nhaha    &amp;quot;Name&amp;quot;: &amp;quot;liangyongxing&amp;quot;,\nhaha    &amp;quot;Age&amp;quot;: 12\nhaha}```\n然后这个json传递出去就带着这个前缀吗？\n</code></pre>",
    "hits": 599,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 990,
    "title": "Docker内部如何访问主机的服务",
    "created_at": "2017-07-28 14:55:49",
    "updated_at": "2017-11-30 13:40:01",
    "replied_at": "2017-11-30 13:40:01",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1312,
    "last_reply_user_login": "gowalker",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "今天在本机测试prometheus，prometheus需要配置去抓取的endpoint，但是我的程序在本机跑，我又不想搞一个docker去包装一下，所以就在思考怎么样直接docker里面访问本机的服务。\n\n其实Docker里面有一个配置，可以很方便的访问，首先获取当前的IP\n```\nexport DOCKERHOST=$(ifconfig | grep -E &quot;([0-9]{1,3}\\.){3}[0-9]{1,3}&quot; | grep -v 127.0.0.1 | awk '{ print $2 }' | cut -f2 -d: | head -n1)\n```\n\n然后在`docker-compose.yml`里面配置如下：\n\n```\n  prometheus:\n    image: prom/prometheus\n    volumes:\n        - ./prometheus.yml:/etc/prometheus/prometheus.yml\n    ports:\n        - '9090:9090'\n    extra_hosts:\n        - &quot;dockerhost:$DOCKERHOST&quot;   \n```\n\n大家注意到没有，这个`extra_hosts`,这里有详细的文档：https://docs.docker.com/compose/compose-file/#extra_hosts\n\n也就是在docker里面写一个host文件，和我们直接用docker命令行的`--add-host`命令同样效果。\n\n这样的话我们就只需要在我们的`prometheus.yml`里面配置如下了：\n\n```\nscrape_configs:\n  # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.\n  - job_name: 'prometheus'\n    static_configs:\n      - targets: ['localhost:9090','dockerhost:9502']\n```\n\n这样我们主机的服务起来之后，docker里面的prometheus就可以访问到了。",
    "body_html": "<p>今天在本机测试 prometheus，prometheus 需要配置去抓取的 endpoint，但是我的程序在本机跑，我又不想搞一个 docker 去包装一下，所以就在思考怎么样直接 docker 里面访问本机的服务。</p>\n\n<p>其实 Docker 里面有一个配置，可以很方便的访问，首先获取当前的 IP</p>\n<pre class=\"highlight plaintext\"><code>export DOCKERHOST=$(ifconfig | grep -E &amp;quot;([0-9]{1,3}\\.){3}[0-9]{1,3}&amp;quot; | grep -v 127.0.0.1 | awk '{ print $2 }' | cut -f2 -d: | head -n1)\n</code></pre>\n<p>然后在<code>docker-compose.yml</code>里面配置如下：</p>\n<pre class=\"highlight plaintext\"><code>prometheus:\n  image: prom/prometheus\n  volumes:\n      - ./prometheus.yml:/etc/prometheus/prometheus.yml\n  ports:\n      - '9090:9090'\n  extra_hosts:\n      - &amp;quot;dockerhost:$DOCKERHOST&amp;quot;   \n</code></pre>\n<p>大家注意到没有，这个<code>extra_hosts</code>,这里有详细的文档：<a href=\"https://docs.docker.com/compose/compose-file/#extra_hosts\" rel=\"nofollow\" target=\"_blank\">https://docs.docker.com/compose/compose-file/#extra_hosts</a></p>\n\n<p>也就是在 docker 里面写一个 host 文件，和我们直接用 docker 命令行的<code>--add-host</code>命令同样效果。</p>\n\n<p>这样的话我们就只需要在我们的<code>prometheus.yml</code>里面配置如下了：</p>\n<pre class=\"highlight plaintext\"><code>scrape_configs:\n  # The job name is added as a label `job=&amp;lt;job_name&amp;gt;` to any timeseries scraped from this config.\n  - job_name: 'prometheus'\n    static_configs:\n      - targets: ['localhost:9090','dockerhost:9502']\n</code></pre>\n<p>这样我们主机的服务起来之后，docker 里面的 prometheus 就可以访问到了。</p>",
    "hits": 529,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 991,
    "title": "sqlite的并发查询效率问题",
    "created_at": "2017-07-28 15:52:51",
    "updated_at": "2019-12-05 11:25:57",
    "replied_at": "2019-12-05 11:25:57",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 8414,
    "last_reply_user_login": "olderone",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2446,
    "user": "{\"id\": 2446, \"name\": \"lately\", \"login\": \"lately\", \"avatar\": \"https://gocn.vip/system/letter_avatars/l.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "电脑的runtime.NumCPU()是4\n用了runtime.GOMAXPROCS(1)\n使用的sqlite库是：github.com/mattn/go-sqlite3\n对sqlite进行并发查询时，goroutine的数量为4时效率达到最高。\n\n问题：\n01-为何goroutine数量是4时效率最高，这与numCPU有何关系？\n02-增加goroutine数量，为何无法进一步提高数据库查询（query）的效率。\n03-如何才能进一步提高查询效率？\n感谢。",
    "body_html": "<p>电脑的 runtime.NumCPU() 是 4\n用了 runtime.GOMAXPROCS(1)\n使用的 sqlite 库是：github.com/mattn/go-sqlite3\n对 sqlite 进行并发查询时，goroutine 的数量为 4 时效率达到最高。</p>\n\n<p>问题：\n01-为何 goroutine 数量是 4 时效率最高，这与 numCPU 有何关系？\n02-增加 goroutine 数量，为何无法进一步提高数据库查询（query）的效率。\n03-如何才能进一步提高查询效率？\n感谢。</p>",
    "hits": 522,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 992,
    "title": "如何在每一行自动的打印出requestid",
    "created_at": "2017-07-28 16:16:06",
    "updated_at": "2017-08-03 17:04:23",
    "replied_at": "2017-08-03 17:04:23",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1812,
    "last_reply_user_login": "t0n9",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1257,
    "user": "{\"id\": 1257, \"name\": \"elvin5\", \"login\": \"elvin5\", \"avatar\": \"https://gocn.vip/system/letter_avatars/e.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "其实不光在分布式的情况下需要requestID,在单体应用有个requestid也是不错的．每次都手工的解析context来获得rid，然后手动的方式记录下来太蛋疼啦，有没有什么办法在每一行自动的打印出requestid呐？",
    "body_html": "<p>其实不光在分布式的情况下需要 requestID,在单体应用有个 requestid 也是不错的．每次都手工的解析 context 来获得 rid，然后手动的方式记录下来太蛋疼啦，有没有什么办法在每一行自动的打印出 requestid 呐？</p>",
    "hits": 495,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 993,
    "title": "GOCN每日新闻(2017-07-29)",
    "created_at": "2017-07-29 11:37:35",
    "updated_at": "2017-07-29 11:37:35",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GOCN每日新闻(2017-07-29)\n\n1. 可水平扩展的channel https://github.com/matryer/vice\n2. 艺术家眼中的Go泛型 https://medium.com/@delaneygillilan/go-generics-are-you-sure-729a17150506\n3. 有赞支付微服务实践 http://tech.youzan.com/youzan_microservice_best_practice/\n4. 微服务架构和领域驱动设计 http://insights.thoughtworkers.org/ddd-and-microservices/\n5. 3倍性能的go程序优化实践 https://mp.weixin.qq.com/s/9IKaXeWTiiQTFlvZzxgsEA\n\n1. [8月5日]杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GOCN 每日新闻 (2017-07-29)</p>\n\n<ol>\n<li>可水平扩展的 channel <a href=\"https://github.com/matryer/vice\" rel=\"nofollow\" target=\"_blank\">https://github.com/matryer/vice</a>\n</li>\n<li>艺术家眼中的 Go 泛型 <a href=\"https://medium.com/@delaneygillilan/go-generics-are-you-sure-729a17150506\" rel=\"nofollow\" target=\"_blank\">https://medium.com/@delaneygillilan/go-generics-are-you-sure-729a17150506</a>\n</li>\n<li>有赞支付微服务实践 <a href=\"http://tech.youzan.com/youzan_microservice_best_practice/\" rel=\"nofollow\" target=\"_blank\">http://tech.youzan.com/youzan_microservice_best_practice/</a>\n</li>\n<li>微服务架构和领域驱动设计 <a href=\"http://insights.thoughtworkers.org/ddd-and-microservices/\" rel=\"nofollow\" target=\"_blank\">http://insights.thoughtworkers.org/ddd-and-microservices/</a>\n</li>\n<li><p>3 倍性能的 go 程序优化实践 <a href=\"https://mp.weixin.qq.com/s/9IKaXeWTiiQTFlvZzxgsEA\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/9IKaXeWTiiQTFlvZzxgsEA</a></p></li>\n<li><p>[8 月 5 日] 杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a></p></li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 408,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 994,
    "title": "GoCN每日新闻(2017-07-30)",
    "created_at": "2017-07-30 09:54:39",
    "updated_at": "2017-07-30 13:24:11",
    "replied_at": "2017-07-30 13:24:11",
    "replies_count": 1,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 1070,
    "last_reply_user_login": "jdlau",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-30)\n\n1. 深入了解go-fuzz https://mijailovic.net/2017/07/29/go-fuzz/\n2. Go 如何获取变量类型 http://ieevee.com/tech/2017/07/29/go-type.html\n3. 利用Go加速命令行工具 https://aadrake.com/posts/2017-05-29-faster-command-line-tools-with-go.html\n4. k8s的调度器工作原理 https://jvns.ca/blog/2017/07/27/how-does-the-kubernetes-scheduler-work/\n5. 从标准库角度看泛型 https://medium.com/@shixzie/generics-on-gos-stdlib-10de52fe824d\n\n1. [8月5日]杭州Gopher meetup http://www.bagevent.com/event/668296\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-30)</p>\n\n<ol>\n<li>深入了解 go-fuzz <a href=\"https://mijailovic.net/2017/07/29/go-fuzz/\" rel=\"nofollow\" target=\"_blank\">https://mijailovic.net/2017/07/29/go-fuzz/</a>\n</li>\n<li>Go 如何获取变量类型 <a href=\"http://ieevee.com/tech/2017/07/29/go-type.html\" rel=\"nofollow\" target=\"_blank\">http://ieevee.com/tech/2017/07/29/go-type.html</a>\n</li>\n<li>利用 Go 加速命令行工具 <a href=\"https://aadrake.com/posts/2017-05-29-faster-command-line-tools-with-go.html\" rel=\"nofollow\" target=\"_blank\">https://aadrake.com/posts/2017-05-29-faster-command-line-tools-with-go.html</a>\n</li>\n<li>k8s 的调度器工作原理 <a href=\"https://jvns.ca/blog/2017/07/27/how-does-the-kubernetes-scheduler-work/\" rel=\"nofollow\" target=\"_blank\">https://jvns.ca/blog/2017/07/27/how-does-the-kubernetes-scheduler-work/</a>\n</li>\n<li><p>从标准库角度看泛型 <a href=\"https://medium.com/@shixzie/generics-on-gos-stdlib-10de52fe824d\" rel=\"nofollow\" target=\"_blank\">https://medium.com/@shixzie/generics-on-gos-stdlib-10de52fe824d</a></p></li>\n<li><p>[8 月 5 日] 杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a></p></li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 392,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 995,
    "title": "GoCN每日新闻(2017-07-31)",
    "created_at": "2017-07-31 09:47:22",
    "updated_at": "2017-07-31 11:11:06",
    "replied_at": "2017-07-31 11:11:06",
    "replies_count": 3,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 2400,
    "last_reply_user_login": "zhqy",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-07-31)\n\n1. 理解Golang并发编程 https://gocn.io/article/404\n2. Go中time.After释放的问题 https://gocn.io/article/403\n3. 深入理解Go channel http://legendtkl.com/2017/07/30/understanding-golang-channel/\n4. 可选interface的麻烦 https://blog.merovius.de/2017/07/30/the-trouble-with-optional-interfaces.html\n5. 做一个优秀的程序员到底难在哪里？https://www.zhihu.com/question/63152623\n\n1. [8月5日]杭州Gopher meetup http://www.bagevent.com/event/668296\n2. [9月9日]广州Gopher Meetup 筹划中，有兴趣的讲师请联系我\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-07-31)</p>\n\n<ol>\n<li>理解 Golang 并发编程 <a href=\"https://gocn.io/article/404\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/404</a>\n</li>\n<li>Go 中 time.After 释放的问题 <a href=\"https://gocn.io/article/403\" rel=\"nofollow\" target=\"_blank\">https://gocn.io/article/403</a>\n</li>\n<li>深入理解 Go channel <a href=\"http://legendtkl.com/2017/07/30/understanding-golang-channel/\" rel=\"nofollow\" target=\"_blank\">http://legendtkl.com/2017/07/30/understanding-golang-channel/</a>\n</li>\n<li>可选 interface 的麻烦 <a href=\"https://blog.merovius.de/2017/07/30/the-trouble-with-optional-interfaces.html\" rel=\"nofollow\" target=\"_blank\">https://blog.merovius.de/2017/07/30/the-trouble-with-optional-interfaces.html</a>\n</li>\n<li><p>做一个优秀的程序员到底难在哪里？<a href=\"https://www.zhihu.com/question/63152623\" rel=\"nofollow\" target=\"_blank\">https://www.zhihu.com/question/63152623</a></p></li>\n<li><p>[8 月 5 日] 杭州 Gopher meetup <a href=\"http://www.bagevent.com/event/668296\" rel=\"nofollow\" target=\"_blank\">http://www.bagevent.com/event/668296</a></p></li>\n<li><p>[9 月 9 日] 广州 Gopher Meetup 筹划中，有兴趣的讲师请联系我</p></li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 453,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 996,
    "title": "Gogland 能查看光标当前所在的函数体的函数名称吗？",
    "created_at": "2017-07-31 10:23:36",
    "updated_at": "2017-08-02 13:25:46",
    "replied_at": "2017-08-02 13:25:46",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 271,
    "last_reply_user_login": "cholerae",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 271,
    "user": "{\"id\": 271, \"name\": \"cholerae\", \"login\": \"cholerae\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "idea 是有这个功能的，就是光标放到一个位置，自动会显示所在的函数体啊命名空间啊什么的，gogland 有这个功能吗？找了半天没找到。",
    "body_html": "<p>idea 是有这个功能的，就是光标放到一个位置，自动会显示所在的函数体啊命名空间啊什么的，gogland 有这个功能吗？找了半天没找到。</p>",
    "hits": 380,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 997,
    "title": "GO性能在哪些地方",
    "created_at": "2017-07-31 10:54:49",
    "updated_at": "2017-07-31 21:42:22",
    "replied_at": "2017-07-31 21:42:05",
    "replies_count": 4,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1416,
    "last_reply_user_login": "taowen",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1824,
    "user": "{\"id\": 1824, \"name\": \"cye\", \"login\": \"cye\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "1. 一直都听说GO的性能好, 想知道GO的哪些地方, 可以说明GO的性能好的\n2. 还有goroutine提高了并发效率, 如果用java实现一个routing的调度器, 也实现goroutine的功能. 是不是可以说java也是有协程并发的优点了呢\n\n",
    "body_html": "<ol>\n<li>一直都听说 GO 的性能好, 想知道 GO 的哪些地方, 可以说明 GO 的性能好的</li>\n<li>还有 goroutine 提高了并发效率, 如果用 java 实现一个 routing 的调度器, 也实现 goroutine 的功能. 是不是可以说 java 也是有协程并发的优点了呢</li>\n</ol>",
    "hits": 423,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 998,
    "title": "bee generate生成的model的一个疑问",
    "created_at": "2017-07-31 13:20:53",
    "updated_at": "2017-07-31 15:40:51",
    "replied_at": "2017-07-31 15:40:51",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1,
    "last_reply_user_login": "astaxie",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 793,
    "user": "{\"id\": 793, \"name\": \"qichengzx\", \"login\": \"qichengzx\", \"avatar\": \"https://gocn.vip/system/letter_avatars/q.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "想问下@astaxie。\n\n之前使用bee 1.6.2时通过generate生成的model中，GetXXById的方法内部是：\n\n```go\nfunc GetXById(id int64) (v *X, err error) {\n\t\to := orm.NewOrm()\n\t\tv = &amp;X{Id: id}\n\t\tif err = o.Read(v); err == nil {\n\t\t\treturn v, nil\n\t\t}\n\t\treturn nil, err\n\t}\n```\n这样的，但是升级到1.9之后，生成的会变成 ：\n\n```go\nfunc GetXById(id int64) (v *X, err error) {\n\t\to := orm.NewOrm()\n\t\tv = &amp;X{Id: id}\n\t\tif err = o.QueryTable(new(X)).Filter(&quot;Id&quot;, id).RelatedSel().One(v); err == nil {\n\t\t\treturn v, nil\n\t\t}\n\t\treturn nil, err\n\t}\n```\n\n改成这样，从Read变成Filter，One是出于什么原因呢？",
    "body_html": "<p>想问下<a href=\"/astaxie\" class=\"user-mention\" title=\"@astaxie\"><i>@</i>astaxie</a>。</p>\n\n<p>之前使用 bee 1.6.2 时通过 generate 生成的 model 中，GetXXById 的方法内部是：</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">GetXById</span><span class=\"p\">(</span><span class=\"n\">id</span> <span class=\"kt\">int64</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"n\">v</span> <span class=\"o\">*</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">o</span> <span class=\"o\">:=</span> <span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">NewOrm</span><span class=\"p\">()</span>\n        <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">X</span><span class=\"p\">{</span><span class=\"n\">Id</span><span class=\"o\">:</span> <span class=\"n\">id</span><span class=\"p\">}</span>\n        <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">Read</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">);</span> <span class=\"n\">err</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n            <span class=\"k\">return</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"no\">nil</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">return</span> <span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"n\">err</span>\n    <span class=\"p\">}</span>\n</code></pre> \n<p>这样的，但是升级到 1.9 之后，生成的会变成 ：</p>\n <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"n\">GetXById</span><span class=\"p\">(</span><span class=\"n\">id</span> <span class=\"kt\">int64</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"n\">v</span> <span class=\"o\">*</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">o</span> <span class=\"o\">:=</span> <span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">NewOrm</span><span class=\"p\">()</span>\n        <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">amp</span><span class=\"p\">;</span><span class=\"n\">X</span><span class=\"p\">{</span><span class=\"n\">Id</span><span class=\"o\">:</span> <span class=\"n\">id</span><span class=\"p\">}</span>\n        <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">QueryTable</span><span class=\"p\">(</span><span class=\"nb\">new</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">Filter</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Id</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">id</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">RelatedSel</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">One</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">);</span> <span class=\"n\">err</span> <span class=\"o\">==</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n            <span class=\"k\">return</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"no\">nil</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">return</span> <span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"n\">err</span>\n    <span class=\"p\">}</span>\n</code></pre> \n<p>改成这样，从 Read 变成 Filter，One 是出于什么原因呢？</p>",
    "hits": 329,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 999,
    "title": "GoCN每日新闻(2017-08-01)",
    "created_at": "2017-08-01 10:14:49",
    "updated_at": "2017-08-01 10:14:49",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-08-01)\n\n1. Linux 内核揭秘 https://xinqiu.gitbooks.io/linux-insides-cn/\n2. Go 静态分析工具 https://github.com/dominikh/go-tools\n3. Go初学者成长之路 http://www.jianshu.com/p/5ee783bbdcac\n4. 采用可选参数替代链式操作 https://www.calhoun.io/using-functional-options-instead-of-method-chaining-in-go/\n5. Go开发中总结的15个心得 https://blog.thesparktree.com/15-lessons-in-golang\n\n每月荐书：《解忧杂货店》现代人内心流失的东西，这家杂货店能帮你找回. 生命中的一次偶然交会，将如何演绎出截然不同的人生？\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-08-01)</p>\n\n<ol>\n<li>Linux 内核揭秘 <a href=\"https://xinqiu.gitbooks.io/linux-insides-cn/\" rel=\"nofollow\" target=\"_blank\">https://xinqiu.gitbooks.io/linux-insides-cn/</a>\n</li>\n<li>Go 静态分析工具 <a href=\"https://github.com/dominikh/go-tools\" rel=\"nofollow\" target=\"_blank\">https://github.com/dominikh/go-tools</a>\n</li>\n<li>Go 初学者成长之路 <a href=\"http://www.jianshu.com/p/5ee783bbdcac\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/5ee783bbdcac</a>\n</li>\n<li>采用可选参数替代链式操作 <a href=\"https://www.calhoun.io/using-functional-options-instead-of-method-chaining-in-go/\" rel=\"nofollow\" target=\"_blank\">https://www.calhoun.io/using-functional-options-instead-of-method-chaining-in-go/</a>\n</li>\n<li>Go 开发中总结的 15 个心得 <a href=\"https://blog.thesparktree.com/15-lessons-in-golang\" rel=\"nofollow\" target=\"_blank\">https://blog.thesparktree.com/15-lessons-in-golang</a>\n</li>\n</ol>\n\n<p>每月荐书：《解忧杂货店》现代人内心流失的东西，这家杂货店能帮你找回. 生命中的一次偶然交会，将如何演绎出截然不同的人生？</p>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 277,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1000,
    "title": "Golang bytes 包源码解析",
    "created_at": "2017-08-01 15:21:51",
    "updated_at": "2017-08-01 20:48:37",
    "replied_at": "2017-08-01 20:48:37",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2232,
    "last_reply_user_login": "qiangmzsx",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2451,
    "user": "{\"id\": 2451, \"name\": \"Julyqi\", \"login\": \"Julyqi\", \"avatar\": \"https://gocn.vip/system/letter_avatars/j.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "bytes包 是golang 中使用频率比较高一个包，主要提供，字节操作和字节切片实现功能。\n\n平时我在使用[[bytes包]](http://t.cn/R9IQwet &quot;[bytes包]&quot;)，主要使用这个包作为缓存区，比如，在拼接字符串等操作我会直接丢给bytes，string 和[]byte 是不分家的，我也会再接下来的几篇文章中会讲到。\n\n首先我阅读这个包的顺序是这样的，先找到入口方法，查看一下整个包的结构， 对于看不懂的地方，要先做出假设，然后自己做测试，检验自己的假设是否正确。\n\n程序具体解析 http://t.cn/R9IQwet",
    "body_html": "<p>bytes 包 是 golang 中使用频率比较高一个包，主要提供，字节操作和字节切片实现功能。</p>\n\n<p>平时我在使用<a href=\"http://t.cn/R9IQwet%20%22%5Bbytes%E5%8C%85%5D%22\" title=\"\">[bytes 包]</a>，主要使用这个包作为缓存区，比如，在拼接字符串等操作我会直接丢给 bytes，string 和 [] byte 是不分家的，我也会再接下来的几篇文章中会讲到。</p>\n\n<p>首先我阅读这个包的顺序是这样的，先找到入口方法，查看一下整个包的结构， 对于看不懂的地方，要先做出假设，然后自己做测试，检验自己的假设是否正确。</p>\n\n<p>程序具体解析 <a href=\"http://t.cn/R9IQwet\" rel=\"nofollow\" target=\"_blank\">http://t.cn/R9IQwet</a></p>",
    "hits": 234,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1001,
    "title": "应届生求职",
    "created_at": "2017-08-01 18:22:45",
    "updated_at": "2017-08-03 13:34:16",
    "replied_at": "2017-08-03 13:34:16",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 209,
    "last_reply_user_login": "cloverstd",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1531,
    "user": "{\"id\": 1531, \"name\": \"willian\", \"login\": \"willian\", \"avatar\": \"https://gocn.vip/system/letter_avatars/w.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "本人马上毕业，希望跟一位golang师傅 最好在深圳",
    "body_html": "<p>本人马上毕业，希望跟一位 golang 师傅 最好在深圳</p>",
    "hits": 360,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1002,
    "title": "GoCN每日新闻(2017-08-02)",
    "created_at": "2017-08-02 10:22:09",
    "updated_at": "2017-08-02 10:22:09",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-08-02)\n\n1. 七步达到100倍的性能优化 https://syslog.ravelin.com/making-something-faster-56dd6b772b83\n2. Go编码风格指南 https://github.com/bahlo/go-styleguide\n3. 优化性能必备的6种架构 http://www.jianshu.com/p/bf431f8159bd\n4. RESTful API 设计与工程实践 http://blog.m31271n.com/2017/03/02/RESTful-API-设计与工程实践/\n5. 亚马逊高效研发的秘密 https://mp.weixin.qq.com/s/bd8ODr2FdhL3TOrmyhGIOw\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn\n\n\n",
    "body_html": "<p>GoCN 每日新闻 (2017-08-02)</p>\n\n<ol>\n<li>七步达到 100 倍的性能优化 <a href=\"https://syslog.ravelin.com/making-something-faster-56dd6b772b83\" rel=\"nofollow\" target=\"_blank\">https://syslog.ravelin.com/making-something-faster-56dd6b772b83</a>\n</li>\n<li>Go 编码风格指南 <a href=\"https://github.com/bahlo/go-styleguide\" rel=\"nofollow\" target=\"_blank\">https://github.com/bahlo/go-styleguide</a>\n</li>\n<li>优化性能必备的 6 种架构 <a href=\"http://www.jianshu.com/p/bf431f8159bd\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/bf431f8159bd</a>\n</li>\n<li>RESTful API 设计与工程实践 <a href=\"http://blog.m31271n.com/2017/03/02/RESTful-API-/\" rel=\"nofollow\" target=\"_blank\">http://blog.m31271n.com/2017/03/02/RESTful-API-/</a>设计与工程实践</li>\n<li>亚马逊高效研发的秘密 <a href=\"https://mp.weixin.qq.com/s/bd8ODr2FdhL3TOrmyhGIOw\" rel=\"nofollow\" target=\"_blank\">https://mp.weixin.qq.com/s/bd8ODr2FdhL3TOrmyhGIOw</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 396,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1003,
    "title": "请教Golang处理Json， 处理的是 List of Json这种情况，大家有何高见？",
    "created_at": "2017-08-02 16:15:45",
    "updated_at": "2017-08-03 12:40:20",
    "replied_at": "2017-08-03 12:35:07",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 960,
    "last_reply_user_login": "tupunco",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2485,
    "user": "{\"id\": 2485, \"name\": \"bonfy\", \"login\": \"bonfy\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "现在Restful API 好多，有时候想要抓取些信息，整理成自己有用的，比如说 Github 的 release, 但是有些返回的不是 Json 而是 List of Json.对于这种情况，当然Python的Json库是通吃的，一点问题都没有，我用Golang重写就麻烦大了\n\n比如举个例子：\n\n```json\n[\n    {\n        &quot;one-level&quot;: &quot;hello&quot;,\n        &quot;two-level&quot;: {\n            &quot;aa&quot; : &quot;hello&quot;,\n            &quot;bb&quot; : &quot;world&quot;\n        }\n    },\n    {\n        &quot;one-level&quot;: &quot;你好&quot;,\n        &quot;two-level&quot;: {\n            &quot;aa&quot; : &quot;你好&quot;,\n            &quot;bb&quot; : &quot;世界&quot;\n        }\n    }\n]\n```\n\n由于：\n\n```go\nresp, err := http.Get(url)\nbody, err := ioutil.ReadAll(resp.Body)\n```\n最后得到的body是[]byte，我现在用 simplejson 简单的处理是这么做的：\n\n\n```go\npackage main\n\nimport &quot;github.com/bitly/go-simplejson&quot;\nimport &quot;fmt&quot;\n\nfunc main() {\n\tbytes := []byte(`{&quot;hello&quot;:&quot;world&quot;}`)\n\tjs, _ := simplejson.NewJson(bytes)\n\tfmt.Println(js)\n\n\tfmt.Println(js.Get(&quot;hello&quot;).MustString())\n\n\tbytes2 := []byte(`[\n    {\n        &quot;one-level&quot;: &quot;hello&quot;,\n        &quot;two-level&quot;: {\n            &quot;aa&quot; : &quot;hello&quot;,\n            &quot;bb&quot; : &quot;world&quot;\n        }\n    },\n    {\n        &quot;one-level&quot;: &quot;你好&quot;,\n        &quot;two-level&quot;: {\n            &quot;aa&quot; : &quot;你好&quot;,\n            &quot;bb&quot; : &quot;世界&quot;\n        }\n    }\n]`)\n\tjs2, _ := simplejson.NewJson(bytes2)\n\tfmt.Println(js2.MustArray())\n\n\tarr := js2.MustArray()\n\tfor _, item := range arr {\n\t\tm, ok := item.(map[string]interface{})\n\t\tif !ok {\n\t\t\tfmt.Println(&quot;Invalide data&quot;)\n\t\t}\n\n\t\tfmt.Println(m[&quot;one-level&quot;])\n\n\t\tn, ok := m[&quot;two-level&quot;].(map[string]interface{})\n\t\tif !ok {\n\t\t\tfmt.Println(&quot;Invalid data&quot;)\n\t\t}\n\t\tfmt.Println(n[&quot;bb&quot;])\n\t}\n}\n\n```\n\nsimplejson对于纯Json的处理还是蛮方便的，但是对于这种 list of json的，感觉处理的不够优雅，各位大神有没有处理的经验，大家一般是怎么去处理这样的问题的？特别是层数比较多的情况",
    "body_html": "<p>现在 Restful API 好多，有时候想要抓取些信息，整理成自己有用的，比如说 Github 的 release, 但是有些返回的不是 Json 而是 List of Json.对于这种情况，当然 Python 的 Json 库是通吃的，一点问题都没有，我用 Golang 重写就麻烦大了</p>\n\n<p>比如举个例子：</p>\n <pre class=\"highlight json\"><code><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"err\">&amp;quot;one-level&amp;quot;:</span><span class=\"w\"> </span><span class=\"err\">&amp;quot;hello&amp;quot;</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"err\">&amp;quot;two-level&amp;quot;:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n            </span><span class=\"err\">&amp;quot;aa&amp;quot;</span><span class=\"w\"> </span><span class=\"err\">:</span><span class=\"w\"> </span><span class=\"err\">&amp;quot;hello&amp;quot;</span><span class=\"p\">,</span><span class=\"w\">\n            </span><span class=\"err\">&amp;quot;bb&amp;quot;</span><span class=\"w\"> </span><span class=\"err\">:</span><span class=\"w\"> </span><span class=\"err\">&amp;quot;world&amp;quot;</span><span class=\"w\">\n        </span><span class=\"p\">}</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"err\">&amp;quot;one-level&amp;quot;:</span><span class=\"w\"> </span><span class=\"err\">&amp;quot;你好&amp;quot;</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"err\">&amp;quot;two-level&amp;quot;:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n            </span><span class=\"err\">&amp;quot;aa&amp;quot;</span><span class=\"w\"> </span><span class=\"err\">:</span><span class=\"w\"> </span><span class=\"err\">&amp;quot;你好&amp;quot;</span><span class=\"p\">,</span><span class=\"w\">\n            </span><span class=\"err\">&amp;quot;bb&amp;quot;</span><span class=\"w\"> </span><span class=\"err\">:</span><span class=\"w\"> </span><span class=\"err\">&amp;quot;世界&amp;quot;</span><span class=\"w\">\n        </span><span class=\"p\">}</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">]</span><span class=\"w\">\n</span></code></pre> \n<p>由于：</p>\n <pre class=\"highlight go\"><code><span class=\"n\">resp</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n<span class=\"n\">body</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">ioutil</span><span class=\"o\">.</span><span class=\"n\">ReadAll</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">Body</span><span class=\"p\">)</span>\n</code></pre> \n<p>最后得到的 body 是 [] byte，我现在用 simplejson 简单的处理是这么做的：</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">bitly</span><span class=\"o\">/</span><span class=\"k\">go</span><span class=\"o\">-</span><span class=\"n\">simplejson</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">bytes</span> <span class=\"o\">:=</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span><span class=\"p\">(</span><span class=\"s\">`{&amp;quot;hello&amp;quot;:&amp;quot;world&amp;quot;}`</span><span class=\"p\">)</span>\n    <span class=\"n\">js</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">simplejson</span><span class=\"o\">.</span><span class=\"n\">NewJson</span><span class=\"p\">(</span><span class=\"n\">bytes</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">js</span><span class=\"p\">)</span>\n\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">js</span><span class=\"o\">.</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">hello</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span><span class=\"o\">.</span><span class=\"n\">MustString</span><span class=\"p\">())</span>\n\n    <span class=\"n\">bytes2</span> <span class=\"o\">:=</span> <span class=\"p\">[]</span><span class=\"kt\">byte</span><span class=\"p\">(</span><span class=\"s\">`[\n    {\n        &amp;quot;one-level&amp;quot;: &amp;quot;hello&amp;quot;,\n        &amp;quot;two-level&amp;quot;: {\n            &amp;quot;aa&amp;quot; : &amp;quot;hello&amp;quot;,\n            &amp;quot;bb&amp;quot; : &amp;quot;world&amp;quot;\n        }\n    },\n    {\n        &amp;quot;one-level&amp;quot;: &amp;quot;你好&amp;quot;,\n        &amp;quot;two-level&amp;quot;: {\n            &amp;quot;aa&amp;quot; : &amp;quot;你好&amp;quot;,\n            &amp;quot;bb&amp;quot; : &amp;quot;世界&amp;quot;\n        }\n    }\n]`</span><span class=\"p\">)</span>\n    <span class=\"n\">js2</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">simplejson</span><span class=\"o\">.</span><span class=\"n\">NewJson</span><span class=\"p\">(</span><span class=\"n\">bytes2</span><span class=\"p\">)</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">js2</span><span class=\"o\">.</span><span class=\"n\">MustArray</span><span class=\"p\">())</span>\n\n    <span class=\"n\">arr</span> <span class=\"o\">:=</span> <span class=\"n\">js2</span><span class=\"o\">.</span><span class=\"n\">MustArray</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">item</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">arr</span> <span class=\"p\">{</span>\n        <span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"n\">ok</span> <span class=\"o\">:=</span> <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"k\">interface</span><span class=\"p\">{})</span>\n        <span class=\"k\">if</span> <span class=\"o\">!</span><span class=\"n\">ok</span> <span class=\"p\">{</span>\n            <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Invalide</span> <span class=\"n\">data</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">one</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;])</span>\n\n        <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">ok</span> <span class=\"o\">:=</span> <span class=\"n\">m</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">two</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;]</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"k\">map</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">]</span><span class=\"k\">interface</span><span class=\"p\">{})</span>\n        <span class=\"k\">if</span> <span class=\"o\">!</span><span class=\"n\">ok</span> <span class=\"p\">{</span>\n            <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">Invalid</span> <span class=\"n\">data</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;)</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">bb</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;])</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n</code></pre> \n<p>simplejson 对于纯 Json 的处理还是蛮方便的，但是对于这种 list of json 的，感觉处理的不够优雅，各位大神有没有处理的经验，大家一般是怎么去处理这样的问题的？特别是层数比较多的情况</p>",
    "hits": 594,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1004,
    "title": "GoCN每日新闻(2017-08-03)",
    "created_at": "2017-08-03 10:39:10",
    "updated_at": "2017-08-03 10:39:10",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-08-03)\n\n1. 用不到10行代码在浏览器运行gofmt https://dmitri.shuralyov.com/blog/24\n2. Go开发百万websocket https://medium.com/@gobwas/million-websockets-and-go-cc58418460bb\n3. Golang使用pprof和qcachegrind进行性能监控 http://www.cnblogs.com/isaiah/p/7271084.html\n4. C代码迁移到Go的体验 https://blog.kowalczyk.info/article/wN9R/experience-porting-4.5k-loc-of-c-to-go-facebooks-css-flexbox-implementation-yoga.html\n5. Nginx缓存引发的跨域惨案 http://tech.lede.com/2017/07/21/rd/server/crossdomain/\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn\n\n",
    "body_html": "<p>GoCN 每日新闻 (2017-08-03)</p>\n\n<ol>\n<li>用不到 10 行代码在浏览器运行 gofmt <a href=\"https://dmitri.shuralyov.com/blog/24\" rel=\"nofollow\" target=\"_blank\">https://dmitri.shuralyov.com/blog/24</a>\n</li>\n<li>Go 开发百万 websocket <a href=\"https://medium.com/@gobwas/million-websockets-and-go-cc58418460bb\" rel=\"nofollow\" target=\"_blank\">https://medium.com/@gobwas/million-websockets-and-go-cc58418460bb</a>\n</li>\n<li>Golang 使用 pprof 和 qcachegrind 进行性能监控 <a href=\"http://www.cnblogs.com/isaiah/p/7271084.html\" rel=\"nofollow\" target=\"_blank\">http://www.cnblogs.com/isaiah/p/7271084.html</a>\n</li>\n<li>C 代码迁移到 Go 的体验 <a href=\"https://blog.kowalczyk.info/article/wN9R/experience-porting-4.5k-loc-of-c-to-go-facebooks-css-flexbox-implementation-yoga.html\" rel=\"nofollow\" target=\"_blank\">https://blog.kowalczyk.info/article/wN9R/experience-porting-4.5k-loc-of-c-to-go-facebooks-css-flexbox-implementation-yoga.html</a>\n</li>\n<li>Nginx 缓存引发的跨域惨案 <a href=\"http://tech.lede.com/2017/07/21/rd/server/crossdomain/\" rel=\"nofollow\" target=\"_blank\">http://tech.lede.com/2017/07/21/rd/server/crossdomain/</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 407,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1005,
    "title": "为什么 channel 对等待 goroutine 的唤醒顺序是随机的？",
    "created_at": "2017-08-03 12:54:50",
    "updated_at": "2017-08-04 09:08:47",
    "replied_at": "2017-08-04 09:08:47",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 631,
    "last_reply_user_login": "Xanthus",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 271,
    "user": "{\"id\": 271, \"name\": \"cholerae\", \"login\": \"cholerae\", \"avatar\": \"https://gocn.vip/system/letter_avatars/c.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "我看 chan.go 源码里明明是维护了一个先入先出队列，为什么实际的行为是随机唤醒的呢？",
    "body_html": "<p>我看 chan.go 源码里明明是维护了一个先入先出队列，为什么实际的行为是随机唤醒的呢？</p>",
    "hits": 488,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1006,
    "title": "关于beego和gin的对比",
    "created_at": "2017-08-03 15:54:30",
    "updated_at": "2021-01-16 18:53:16",
    "replied_at": "2017-08-04 15:18:16",
    "replies_count": 3,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 159,
    "last_reply_user_login": "Xargin",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2421,
    "user": "{\"id\": 2421, \"name\": \"healerkiss\", \"login\": \"healerkiss\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "不是说gin的路由是go framework里面最快的吗，今天测试了一把 发现还是beego快啊\n![](http://upload-images.jianshu.io/upload_images/2432729-51dd218af3f72da5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](http://upload-images.jianshu.io/upload_images/2432729-03419a780b8f28e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n",
    "body_html": "<p>不是说 gin 的路由是 go framework 里面最快的吗，今天测试了一把 发现还是 beego 快啊\n<img src=\"http://upload-images.jianshu.io/upload_images/2432729-51dd218af3f72da5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" title=\"\" alt=\"\">\n<img src=\"http://upload-images.jianshu.io/upload_images/2432729-03419a780b8f28e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" title=\"\" alt=\"\"></p>",
    "hits": 1043,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 1007,
    "title": "golang在windows下执行cmd命令输出中文乱码",
    "created_at": "2017-08-03 17:50:27",
    "updated_at": "2017-08-04 09:32:27",
    "replied_at": "2017-08-04 09:32:27",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 631,
    "last_reply_user_login": "Xanthus",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 329,
    "user": "{\"id\": 329, \"name\": \"flewliu\", \"login\": \"flewliu\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "```go\nfunc (c *MainController) StartDump() {\n\tparams := []string{&quot;-jar&quot;, &quot;test.jar&quot;, &quot;test.hprof&quot;}\n\texecCommand(&quot;java&quot;, params)\n}\n\nfunc execCommand(commandName string, params []string) bool {\n\tcmd := exec.Command(commandName, params...)\n\n\t//显示运行的命令\n\tfmt.Println(cmd.Args)\n\n\tstdout, err := cmd.StdoutPipe()\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn false\n\t}\n\n\tcmd.Start()\n\n\treader := bufio.NewReader(stdout)\n\n\t//实时循环读取输出流中的一行内容\n\tfor {\n\t\tline, err2 := reader.ReadString('\\n')\n\t\tif err2 != nil || io.EOF == err2 {\n\t\t\tbreak\n\t\t}\n\t\tfmt.Println(line)\n\t}\n\n\tcmd.Wait()\n\treturn true\n}\n```\n\n输出内容中文会乱码，有人遇到过吗，在cmd里直接执行命令是正常的，求解决方案",
    "body_html": " <pre class=\"highlight go\"><code><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"o\">*</span><span class=\"n\">MainController</span><span class=\"p\">)</span> <span class=\"n\">StartDump</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">params</span> <span class=\"o\">:=</span> <span class=\"p\">[]</span><span class=\"kt\">string</span><span class=\"p\">{</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"o\">-</span><span class=\"n\">jar</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">jar</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">hprof</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;}</span>\n    <span class=\"n\">execCommand</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">java</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">params</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">execCommand</span><span class=\"p\">(</span><span class=\"n\">commandName</span> <span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"n\">params</span> <span class=\"p\">[]</span><span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"kt\">bool</span> <span class=\"p\">{</span>\n    <span class=\"n\">cmd</span> <span class=\"o\">:=</span> <span class=\"n\">exec</span><span class=\"o\">.</span><span class=\"n\">Command</span><span class=\"p\">(</span><span class=\"n\">commandName</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">...</span><span class=\"p\">)</span>\n\n    <span class=\"c\">//显示运行的命令</span>\n    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">Args</span><span class=\"p\">)</span>\n\n    <span class=\"n\">stdout</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">StdoutPipe</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"no\">false</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">Start</span><span class=\"p\">()</span>\n\n    <span class=\"n\">reader</span> <span class=\"o\">:=</span> <span class=\"n\">bufio</span><span class=\"o\">.</span><span class=\"n\">NewReader</span><span class=\"p\">(</span><span class=\"n\">stdout</span><span class=\"p\">)</span>\n\n    <span class=\"c\">//实时循环读取输出流中的一行内容</span>\n    <span class=\"k\">for</span> <span class=\"p\">{</span>\n        <span class=\"n\">line</span><span class=\"p\">,</span> <span class=\"n\">err2</span> <span class=\"o\">:=</span> <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">ReadString</span><span class=\"p\">(</span><span class=\"sc\">'\\n'</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">err2</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"o\">||</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">EOF</span> <span class=\"o\">==</span> <span class=\"n\">err2</span> <span class=\"p\">{</span>\n            <span class=\"k\">break</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"no\">true</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>输出内容中文会乱码，有人遇到过吗，在 cmd 里直接执行命令是正常的，求解决方案</p>",
    "hits": 928,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1008,
    "title": "golang面向对象分析",
    "created_at": "2017-08-03 18:28:12",
    "updated_at": "2017-08-04 10:21:08",
    "replied_at": "2017-08-04 10:21:08",
    "replies_count": 2,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2031,
    "last_reply_user_login": "jeson",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 887,
    "user": "{\"id\": 887, \"name\": \"haohongfan\", \"login\": \"haohongfan\", \"avatar\": \"https://static.gocn.vip/user/avatar/887/977be8.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "写Go没多久, 花了点时间收集了一些资料, 理解一下Go的面向对象, 稍微写了东西, 大家给指正一下.\nhttp://www.haohongfan.com/index.php/2017/07/24/golang_oop/\n\n欢迎留言~\n",
    "body_html": "<p>写 Go 没多久, 花了点时间收集了一些资料, 理解一下 Go 的面向对象, 稍微写了东西, 大家给指正一下.\n<a href=\"http://www.haohongfan.com/index.php/2017/07/24/golang_oop/\" rel=\"nofollow\" target=\"_blank\">http://www.haohongfan.com/index.php/2017/07/24/golang_oop/</a></p>\n\n<p>欢迎留言~</p>",
    "hits": 380,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1009,
    "title": "GoCN每日新闻(2017-08-04)",
    "created_at": "2017-08-04 10:11:12",
    "updated_at": "2017-08-04 20:43:43",
    "replied_at": "2017-08-04 20:43:43",
    "replies_count": 2,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 769,
    "last_reply_user_login": "lei",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-08-04)\n\n1. 深入理解SQL事务隔离 https://begriffs.com/posts/2017-08-01-practical-guide-sql-isolation.html\n2. 如何向6岁的孩子解释编程？https://dev.to/tkaczanowski/explaining-programming-to-6-years-old-kids\n3. Go程序员的syscalls指南 https://www.youtube.com/watch?v=01w7viEZzXQ&amp;index=20&amp;list=PL2ntRZ1ySWBdD9bru6IR-_WXUgJqvrtx9\n4. Go构建工作池 https://geeks.uniplaces.com/building-a-worker-pool-in-golang-1e6c0fdfd78c\n5. Go高级测试应用 https://www.youtube.com/watch?v=8hQG7QlcLBk&amp;list=PL2ntRZ1ySWBdD9bru6IR-_WXUgJqvrtx9&amp;index=13\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GoCN 每日新闻 (2017-08-04)</p>\n\n<ol>\n<li>深入理解 SQL 事务隔离 <a href=\"https://begriffs.com/posts/2017-08-01-practical-guide-sql-isolation.html\" rel=\"nofollow\" target=\"_blank\">https://begriffs.com/posts/2017-08-01-practical-guide-sql-isolation.html</a>\n</li>\n<li>如何向 6 岁的孩子解释编程？<a href=\"https://dev.to/tkaczanowski/explaining-programming-to-6-years-old-kids\" rel=\"nofollow\" target=\"_blank\">https://dev.to/tkaczanowski/explaining-programming-to-6-years-old-kids</a>\n</li>\n<li>Go 程序员的 syscalls 指南<span class=\"embed-responsive embed-responsive-16by9\"><iframe class=\"embed-responsive-item\" src=\"//www.youtube.com/embed/01w7viEZzXQ\" allowfullscreen=\"\"></iframe></span>\n</li>\n<li>Go 构建工作池 <a href=\"https://geeks.uniplaces.com/building-a-worker-pool-in-golang-1e6c0fdfd78c\" rel=\"nofollow\" target=\"_blank\">https://geeks.uniplaces.com/building-a-worker-pool-in-golang-1e6c0fdfd78c</a>\n</li>\n<li>Go 高级测试应用<span class=\"embed-responsive embed-responsive-16by9\"><iframe class=\"embed-responsive-item\" src=\"//www.youtube.com/embed/8hQG7QlcLBk\" allowfullscreen=\"\"></iframe></span>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 587,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1010,
    "title": "使用gin，gin-contrib/sessions不同request path获取不到session",
    "created_at": "2017-08-04 10:51:36",
    "updated_at": "2017-08-07 15:33:24",
    "replied_at": "2017-08-07 15:33:24",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 292,
    "last_reply_user_login": "adolphlwq",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 292,
    "user": "{\"id\": 292, \"name\": \"AdolphLWQ\", \"login\": \"adolphlwq\", \"avatar\": \"https://static.gocn.vip/user/avatar/292/e947d6.png?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "# gin session problem\n从开发环境中抽出来了sample code，https://github.com/dockerq/gin-session-problem，欢迎下载测试、重现问题。\n\n## 环境\n1. gin版本\n```\n{\n    &quot;checksumSHA1&quot;: &quot;86tapazS8gfJ5JRCxVNTTDkUZwM=&quot;,\n    &quot;path&quot;: &quot;github.com/gin-gonic/gin&quot;,\n    &quot;revision&quot;: &quot;bbd4dfee5056087c640a75c6cc21567f4f47585d&quot;,\n    &quot;revisionTime&quot;: &quot;2017-07-12T07:01:46Z&quot;\n}\n```\n2. golang 1.8.0\n3. gin中设置session代码\n```\n\tr := gin.Default()\n\n    store := sessions.NewCookieStore([]byte(&quot;secret&quot;))\n    store.Options(sessions.Options{\n        MaxAge: int(30 * time.Minute), //30min\n        Path:   &quot;/&quot;,\n    })\n\n    r.Use(sessions.Sessions(&quot;mysession&quot;, store))\n    r.GET(&quot;/pre&quot;, preSession)\n    r.GET(&quot;/do&quot;, DoSomethine)\n    r.Run(&quot;:8081&quot;)\n    fmt.Println(&quot;start api server success.&quot;)\n```\n4. preSession(这个函数目的是向启动的gin.Engine中添加一条session记录)\n```\nfunc preSession(c *gin.Context) {\n\tsession := sessions.Default(c)\n\tsession.Set(&quot;test@mail.com&quot;, &quot;test.access.token&quot;)\n\tsession.Save()\n\tc.JSON(http.StatusOK, nil)\n}\n```\n5. DoSomethine函数接受email参数，读取session中对应email的value\n```\nfunc DoSomethine(c *gin.Context) {\n\tuserEmail := c.Query(&quot;user_email&quot;)\n\tif userEmail == &quot;&quot; {\n\t\tpanic(&quot;can not get user email&quot;)\n\t}\n\tsession := sessions.Default(c)\n\tuserAccessToken := session.Get(userEmail)\n\tfmt.Printf(&quot;[DoSomethine] user access token is %s\\n&quot;, userAccessToken)\n\tc.JSON(http.StatusOK, nil)\n}\n```\n6. 测试方法，先调用getPreSession()设置一条session，然后访问`/do`查看是否拿到session。\n```\nfunc TestSession(t *testing.T) {\n\tStartTestServer(t)\n\tgetPreSession()\n\n\tu := url.Values{}\n\tu.Set(&quot;user_email&quot;, &quot;test@mail.com&quot;)\n\ttestUrl := apiBaseUrl + &quot;/do?&quot; + u.Encode()\n\tfmt.Printf(&quot;test url is %s\\n&quot;, testUrl)\n\n\tresp, err := http.Get(testUrl)\n\tdefer resp.Body.Close()\n\n\tif err != nil {\n\t\tt.Error(err)\n\t}\n\n\tfmt.Println(resp.StatusCode)\n}\n```\n7. 结果，注意**[DoSomethine] user access token is %!s(&lt;nil&gt;)**表明没有拿到session。\n```\n➜  session make test \ngo test --cover -test.v\n=== RUN   TestSession\ncookie of pre session request is [mysession=MTUwMTgxNDYxNnxEdi1CQkFFQ180SUFBUkFCRUFBQU9QLUNBQUVHYzNSeWFXNW5EQThBRFhSbGMzUkFiV0ZwYkM1amIyMEdjM1J5YVc1bkRCTUFFWFJsYzNRdVlXTmpaWE56TG5SdmEyVnV8cc0AwUddF90uWUxOF8BONUo-tFGouRdSOfj62m9U8sE=; Path=/; Expires=Wed, 09 Jan 1771 04:16:32 GMT; Max-Age=1800000000000]\ntest url is http://0.0.0.0:8081/do?user_email=test%40mail.com\n[DoSomethine] user access token is %!s(&lt;nil&gt;)\n[GIN] 2017/08/04 - 10:43:36 | 200 |      99.642µs |       127.0.0.1 |  GET     /do\n200\n--- PASS: TestSession (2.00s)\n        main_test.go:36: waiting 2 second for server startup\nPASS\ncoverage: 48.0% of statements\nok      ginlab/session  2.010s\n```\n\n## 问题\n为什么`/pre`设置session后，请求`/do`却拿不到session？是没session没有配置正确还是其它原因？",
    "body_html": "<h2 id=\"gin session problem\">gin session problem</h2>\n<p>从开发环境中抽出来了 sample code，<a href=\"https://github.com/dockerq/gin-session-problem\" rel=\"nofollow\" target=\"_blank\">https://github.com/dockerq/gin-session-problem</a>，欢迎下载测试、重现问题。</p>\n<h2 id=\"环境\">环境</h2>\n<ol>\n<li>gin 版本\n<code>\n{\n&amp;quot;checksumSHA1&amp;quot;: &amp;quot;86tapazS8gfJ5JRCxVNTTDkUZwM=&amp;quot;,\n&amp;quot;path&amp;quot;: &amp;quot;github.com/gin-gonic/gin&amp;quot;,\n&amp;quot;revision&amp;quot;: &amp;quot;bbd4dfee5056087c640a75c6cc21567f4f47585d&amp;quot;,\n&amp;quot;revisionTime&amp;quot;: &amp;quot;2017-07-12T07:01:46Z&amp;quot;\n}\n</code>\n</li>\n<li>golang 1.8.0</li>\n<li>\n<p>gin 中设置 session 代码</p>\n <pre class=\"highlight plaintext\"><code>r := gin.Default()\n\nstore := sessions.NewCookieStore([]byte(&amp;quot;secret&amp;quot;))\nstore.Options(sessions.Options{\n    MaxAge: int(30 * time.Minute), //30min\n    Path:   &amp;quot;/&amp;quot;,\n})\n\nr.Use(sessions.Sessions(&amp;quot;mysession&amp;quot;, store))\nr.GET(&amp;quot;/pre&amp;quot;, preSession)\nr.GET(&amp;quot;/do&amp;quot;, DoSomethine)\nr.Run(&amp;quot;:8081&amp;quot;)\nfmt.Println(&amp;quot;start api server success.&amp;quot;)\n</code></pre> \n</li>\n<li>\n<p>preSession(这个函数目的是向启动的 gin.Engine 中添加一条 session 记录)</p>\n <pre class=\"highlight plaintext\"><code>func preSession(c *gin.Context) {\nsession := sessions.Default(c)\nsession.Set(&amp;quot;test@mail.com&amp;quot;, &amp;quot;test.access.token&amp;quot;)\nsession.Save()\nc.JSON(http.StatusOK, nil)\n}\n</code></pre> \n</li>\n<li>\n<p>DoSomethine 函数接受 email 参数，读取 session 中对应 email 的 value</p>\n <pre class=\"highlight plaintext\"><code>func DoSomethine(c *gin.Context) {\nuserEmail := c.Query(&amp;quot;user_email&amp;quot;)\nif userEmail == &amp;quot;&amp;quot; {\n    panic(&amp;quot;can not get user email&amp;quot;)\n}\nsession := sessions.Default(c)\nuserAccessToken := session.Get(userEmail)\nfmt.Printf(&amp;quot;[DoSomethine] user access token is %s\\n&amp;quot;, userAccessToken)\nc.JSON(http.StatusOK, nil)\n}\n</code></pre> \n</li>\n<li>\n<p>测试方法，先调用 getPreSession() 设置一条 session，然后访问<code>/do</code>查看是否拿到 session。</p>\n <pre class=\"highlight plaintext\"><code>func TestSession(t *testing.T) {\nStartTestServer(t)\ngetPreSession()\n\nu := url.Values{}\nu.Set(&amp;quot;user_email&amp;quot;, &amp;quot;test@mail.com&amp;quot;)\ntestUrl := apiBaseUrl + &amp;quot;/do?&amp;quot; + u.Encode()\nfmt.Printf(&amp;quot;test url is %s\\n&amp;quot;, testUrl)\n\nresp, err := http.Get(testUrl)\ndefer resp.Body.Close()\n\nif err != nil {\n    t.Error(err)\n}\n\nfmt.Println(resp.StatusCode)\n}\n</code></pre> \n</li>\n<li>\n<p>结果，注意<strong>[DoSomethine] user access token is %! s(&lt;nil&gt;)</strong>表明没有拿到 session。</p>\n <pre class=\"highlight plaintext\"><code>➜  session make test \ngo test --cover -test.v\n=== RUN   TestSession\ncookie of pre session request is [mysession=MTUwMTgxNDYxNnxEdi1CQkFFQ180SUFBUkFCRUFBQU9QLUNBQUVHYzNSeWFXNW5EQThBRFhSbGMzUkFiV0ZwYkM1amIyMEdjM1J5YVc1bkRCTUFFWFJsYzNRdVlXTmpaWE56TG5SdmEyVnV8cc0AwUddF90uWUxOF8BONUo-tFGouRdSOfj62m9U8sE=; Path=/; Expires=Wed, 09 Jan 1771 04:16:32 GMT; Max-Age=1800000000000]\ntest url is http://0.0.0.0:8081/do?user_email=test%40mail.com\n[DoSomethine] user access token is %!s(&amp;lt;nil&amp;gt;)\n[GIN] 2017/08/04 - 10:43:36 | 200 |      99.642µs |       127.0.0.1 |  GET     /do\n200\n--- PASS: TestSession (2.00s)\n    main_test.go:36: waiting 2 second for server startup\nPASS\ncoverage: 48.0% of statements\nok      ginlab/session  2.010s\n</code></pre> \n</li>\n</ol>\n<h2 id=\"问题\">问题</h2>\n<p>为什么<code>/pre</code>设置 session 后，请求<code>/do</code>却拿不到 session？是没 session 没有配置正确还是其它原因？</p>",
    "hits": 901,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1011,
    "title": "警告：一个包含nil指针的接口不是nil接口",
    "created_at": "2017-08-04 11:42:47",
    "updated_at": "2019-08-25 17:12:20",
    "replied_at": "2019-08-25 17:12:20",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 7793,
    "last_reply_user_login": "goalken",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2494,
    "user": "{\"id\": 2494, \"name\": \"boyxiaolong\", \"login\": \"boyxiaolong\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "看 go语言圣经 上举的例子，看得一头雾水",
    "body_html": "<p>看 go 语言圣经 上举的例子，看得一头雾水</p>",
    "hits": 642,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1012,
    "title": "[译]go styleguide",
    "created_at": "2017-08-04 17:39:55",
    "updated_at": "2017-08-04 17:39:55",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 159,
    "user": "{\"id\": 159, \"name\": \"Xargin\", \"login\": \"Xargin\", \"avatar\": \"https://gocn.vip/system/letter_avatars/x.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "上午抽了一点时间翻译了一下前两天谢大推荐的 styleguide\n\nhttps://github.com/cch123/go-styleguide/blob/master/README_zhcn.md\n\n送给不想读英文版的同学\n\n---------------------\n滴滴招聘 golang 工程师，简历请发至 caochunhui@didichuxing.com",
    "body_html": "<p>上午抽了一点时间翻译了一下前两天谢大推荐的 styleguide</p>\n\n<p><a href=\"https://github.com/cch123/go-styleguide/blob/master/README_zhcn.md\" rel=\"nofollow\" target=\"_blank\">https://github.com/cch123/go-styleguide/blob/master/README_zhcn.md</a></p>\n\n<p>送给不想读英文版的同学</p>\n\n<hr>\n\n<p>滴滴招聘 golang 工程师，简历请发至 caochunhui@didichuxing.com</p>",
    "hits": 331,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1013,
    "title": "dep 如何引入私有repository",
    "created_at": "2017-08-04 17:52:32",
    "updated_at": "2018-08-14 10:41:05",
    "replied_at": "2018-08-14 10:41:05",
    "replies_count": 7,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 5650,
    "last_reply_user_login": "zengming00",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1541,
    "user": "{\"id\": 1541, \"name\": \"meilihao\", \"login\": \"meilihao\", \"avatar\": \"https://gocn.vip/system/letter_avatars/m.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "最近看到文章说go1.9开始,官方的dep可以使用了.\n今天试用了一下发现不能导入私有repository(内部项目,package在内网的gitlab上).\n有人知道如何引入吗?\n\n注: 我在issue上仅看到官方还在讨论如何支持私有仓库,没发现如何使用.",
    "body_html": "<p>最近看到文章说 go1.9 开始,官方的 dep 可以使用了.\n今天试用了一下发现不能导入私有 repository(内部项目,package 在内网的 gitlab 上).\n有人知道如何引入吗?</p>\n\n<p>注: 我在 issue 上仅看到官方还在讨论如何支持私有仓库,没发现如何使用.</p>",
    "hits": 522,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1014,
    "title": "求助：关于beego文档获取request body的内容",
    "created_at": "2017-08-04 23:19:48",
    "updated_at": "2021-01-16 19:55:57",
    "replied_at": "2017-08-11 10:48:25",
    "replies_count": 4,
    "node_name": "Beego",
    "node_id": 15,
    "last_reply_user_id": 2251,
    "last_reply_user_login": "llliiinnn",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2492,
    "user": "{\"id\": 2492, \"name\": \"yangshuai1228\", \"login\": \"yangshuai1228\", \"avatar\": \"https://gocn.vip/system/letter_avatars/y.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "在beego文档这一段 \n在 API 的开发中，我们经常会用到 JSON 或 XML 来作为数据交互的格式，如何在 beego 中获取 Request Body 里的 JSON 或 XML 的数据呢？\n\n在配置文件里设置 copyrequestbody = true\n在 Controller 中\nfunc (this *ObjectController) Post() {\n    var ob models.Object\n    json.Unmarshal(this.Ctx.Input.RequestBody, &amp;ob)\n    objectid := models.AddOne(ob)\n    this.Data[&quot;json&quot;] = &quot;{\\&quot;ObjectId\\&quot;:\\&quot;&quot; + objectid + &quot;\\&quot;}&quot;\n    this.ServeJSON()\n}\n初学者 刚好在学习案例中卡在这个问题没法理解 继续学习下去  求帮助 如果实在解释麻烦给下资料也行\n\n谢谢大家\uF64F\uF64F\uF64F\uF64F\uF64F\uF64F拜托了",
    "body_html": "<p>在 beego 文档这一段 \n在 API 的开发中，我们经常会用到 JSON 或 XML 来作为数据交互的格式，如何在 beego 中获取 Request Body 里的 JSON 或 XML 的数据呢？</p>\n\n<p>在配置文件里设置 copyrequestbody = true\n在 Controller 中\nfunc (this *ObjectController) Post() {\n    var ob models.Object\n    json.Unmarshal(this.Ctx.Input.RequestBody, &amp;ob)\n    objectid := models.AddOne(ob)\n    this.Data[\"json\"] = \"{&amp;quot;ObjectId&amp;quot;:&amp;quot;\" + objectid + \"&amp;quot;}\"\n    this.ServeJSON()\n}\n初学者 刚好在学习案例中卡在这个问题没法理解 继续学习下去  求帮助 如果实在解释麻烦给下资料也行</p>\n\n<p>谢谢大家\uF64F\uF64F\uF64F\uF64F\uF64F\uF64F拜托了</p>",
    "hits": 713,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 2,
    "collect_count": 0
  },
  {
    "id": 1015,
    "title": "GoCN每日新闻(2017-08-05)",
    "created_at": "2017-08-05 09:11:09",
    "updated_at": "2017-08-05 09:11:09",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "每日新闻",
    "node_id": 18,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GoCN每日新闻(2017-08-05)\n\n1. 再谈谈获取 goroutine id 的方法 http://colobu.com/2017/08/04/talk-about-getting-goroutine-id-again/\n2. 使用Beego+Swagger构建更好的API服务 http://www.jianshu.com/p/43ddc4509585\n3. Go替换nodejs的库，跑javascript https://github.com/jingweno/godzilla\n4. Go内存布局 https://syslog.ravelin.com/go-and-memory-layout-6ef30c730d51\n5. 关于缓存你需要知道的 http://www.jianshu.com/p/3c111e4719b8\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn\n",
    "body_html": "<p>GoCN 每日新闻 (2017-08-05)</p>\n\n<ol>\n<li>再谈谈获取 goroutine id 的方法 <a href=\"http://colobu.com/2017/08/04/talk-about-getting-goroutine-id-again/\" rel=\"nofollow\" target=\"_blank\">http://colobu.com/2017/08/04/talk-about-getting-goroutine-id-again/</a>\n</li>\n<li>使用 Beego+Swagger 构建更好的 API 服务 <a href=\"http://www.jianshu.com/p/43ddc4509585\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/43ddc4509585</a>\n</li>\n<li>Go 替换 nodejs 的库，跑 javascript <a href=\"https://github.com/jingweno/godzilla\" rel=\"nofollow\" target=\"_blank\">https://github.com/jingweno/godzilla</a>\n</li>\n<li>Go 内存布局 <a href=\"https://syslog.ravelin.com/go-and-memory-layout-6ef30c730d51\" rel=\"nofollow\" target=\"_blank\">https://syslog.ravelin.com/go-and-memory-layout-6ef30c730d51</a>\n</li>\n<li>关于缓存你需要知道的 <a href=\"http://www.jianshu.com/p/3c111e4719b8\" rel=\"nofollow\" target=\"_blank\">http://www.jianshu.com/p/3c111e4719b8</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 411,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1016,
    "title": "GOCN每日新闻(2017-08-06)",
    "created_at": "2017-08-06 10:05:46",
    "updated_at": "2017-08-06 14:49:12",
    "replied_at": "2017-08-06 14:49:12",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 810,
    "last_reply_user_login": "simple",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 1,
    "user": "{\"id\": 1, \"name\": \"astaxie\", \"login\": \"astaxie\", \"avatar\": \"https://static.gocn.vip/user/avatar/1/e775a6.jpeg?x-oss-process=image%2Fresize%2Cw_1920\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GOCN每日新闻(2017-08-06)\n\n1. Javascript程序员转Go指南 https://github.com/pazams/go-for-javascript-developers\n2. Go 命令行初探 https://halfrost.com/go_command/\n3. csrf库详解 https://medium.com/@zarkopafilis/gorilla-csrf-explained-843c9957800d\n4. Go可视化编程库 https://github.com/divan/gotrace\n5. 微服务架构 http://www.cnblogs.com/imyalost/p/6792724.html\n\n编辑：Asta\n订阅新闻：http://tinyletter.com/gocn\n\n\n**特别注意**：下周一开始连续两周出去旅游，每日新闻交由傅小黑同学更新",
    "body_html": "<p>GOCN 每日新闻 (2017-08-06)</p>\n\n<ol>\n<li>Javascript 程序员转 Go 指南 <a href=\"https://github.com/pazams/go-for-javascript-developers\" rel=\"nofollow\" target=\"_blank\">https://github.com/pazams/go-for-javascript-developers</a>\n</li>\n<li>Go 命令行初探 <a href=\"https://halfrost.com/go_command/\" rel=\"nofollow\" target=\"_blank\">https://halfrost.com/go_command/</a>\n</li>\n<li>csrf 库详解 <a href=\"https://medium.com/@zarkopafilis/gorilla-csrf-explained-843c9957800d\" rel=\"nofollow\" target=\"_blank\">https://medium.com/@zarkopafilis/gorilla-csrf-explained-843c9957800d</a>\n</li>\n<li>Go 可视化编程库 <a href=\"https://github.com/divan/gotrace\" rel=\"nofollow\" target=\"_blank\">https://github.com/divan/gotrace</a>\n</li>\n<li>微服务架构 <a href=\"http://www.cnblogs.com/imyalost/p/6792724.html\" rel=\"nofollow\" target=\"_blank\">http://www.cnblogs.com/imyalost/p/6792724.html</a>\n</li>\n</ol>\n\n<p>编辑：Asta\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>\n\n<p><strong>特别注意</strong>：下周一开始连续两周出去旅游，每日新闻交由傅小黑同学更新</p>",
    "hits": 353,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1017,
    "title": "GOCN每日新闻(2017-08-07)",
    "created_at": "2017-08-07 08:29:45",
    "updated_at": "2017-08-07 13:56:08",
    "replied_at": "2017-08-07 13:56:08",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2345,
    "last_reply_user_login": "trainee",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 3,
    "user": "{\"id\": 3, \"name\": \"傅小黑\", \"login\": \"fuxiaohei\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GOCN每日新闻(2017-08-07)\n\n-----\n\n1.杭州 meetup 的slides https://github.com/gopherchina/meetup/tree/master/HangZhou\n\n2.Go 现代 GC https://blog.plan99.net/modern-garbage-collection-911ef4f8bd8e\n\n3.Go 中创建工作线程池 https://geeks.uniplaces.com/building-a-worker-pool-in-golang-1e6c0fdfd78c\n\n4.Go 的依赖注入 https://speakerdeck.com/brownylin/dependency-injection-in-go\n\n5.使用 Go 可视化本地 Git 项目 https://flaviocopes.com/go-git-contributions/\n\n\n-----\n\n编辑：傅小黑\n\n订阅新闻：http://tinyletter.com/gocn\n",
    "body_html": "<p>GOCN 每日新闻 (2017-08-07)</p>\n\n<hr>\n\n<p>1.杭州 meetup 的 slides <a href=\"https://github.com/gopherchina/meetup/tree/master/HangZhou\" rel=\"nofollow\" target=\"_blank\">https://github.com/gopherchina/meetup/tree/master/HangZhou</a></p>\n\n<p>2.Go 现代 GC <a href=\"https://blog.plan99.net/modern-garbage-collection-911ef4f8bd8e\" rel=\"nofollow\" target=\"_blank\">https://blog.plan99.net/modern-garbage-collection-911ef4f8bd8e</a></p>\n\n<p>3.Go 中创建工作线程池 <a href=\"https://geeks.uniplaces.com/building-a-worker-pool-in-golang-1e6c0fdfd78c\" rel=\"nofollow\" target=\"_blank\">https://geeks.uniplaces.com/building-a-worker-pool-in-golang-1e6c0fdfd78c</a></p>\n\n<p>4.Go 的依赖注入 <a href=\"https://speakerdeck.com/brownylin/dependency-injection-in-go\" rel=\"nofollow\" target=\"_blank\">https://speakerdeck.com/brownylin/dependency-injection-in-go</a></p>\n\n<p>5.使用 Go 可视化本地 Git 项目 <a href=\"https://flaviocopes.com/go-git-contributions/\" rel=\"nofollow\" target=\"_blank\">https://flaviocopes.com/go-git-contributions/</a></p>\n\n<hr>\n\n<p>编辑：傅小黑</p>\n\n<p>订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 341,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1018,
    "title": "vscode可以显示当前方法体所在的方法的名字吗？",
    "created_at": "2017-08-07 12:02:16",
    "updated_at": "2017-08-10 16:51:34",
    "replied_at": "2017-08-10 16:51:34",
    "replies_count": 1,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 2534,
    "last_reply_user_login": "f839903061",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2293,
    "user": "{\"id\": 2293, \"name\": \"Hawken\", \"login\": \"Hawken\", \"avatar\": \"https://gocn.vip/system/letter_avatars/h.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "idea是可以显示java代码的方法名的，问一下。不是显示所有的方法列表。",
    "body_html": "<p>idea 是可以显示 java 代码的方法名的，问一下。不是显示所有的方法列表。</p>",
    "hits": 377,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1019,
    "title": "go get github.com/elastic/beats 命令出错，求指点",
    "created_at": "2017-08-07 15:01:51",
    "updated_at": "2017-08-12 09:10:52",
    "replied_at": "2017-08-12 09:10:52",
    "replies_count": 3,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 845,
    "last_reply_user_login": "voidint",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2516,
    "user": "{\"id\": 2516, \"name\": \"KSpeer\", \"login\": \"KSpeer\", \"avatar\": \"https://gocn.vip/system/letter_avatars/k.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "[root@localhost gopath]# go get github.com/elastic/beats\npackage github.com/elastic/beats: no buildable Go source files in /home/cby/gopath/src/github.com/elastic/beats\n请问如何解决？？？\ngcc已安装-v 4.8.5\n# add go path\nexport PATH=$PATH:/usr/local/go/bin/\nexport GOPATH=/home/cby/gopath/\n\n",
    "body_html": "<p>[root@localhost gopath]# go get github.com/elastic/beats\npackage github.com/elastic/beats: no buildable Go source files in /home/cby/gopath/src/github.com/elastic/beats\n请问如何解决？？？\ngcc 已安装-v 4.8.5</p>\n<h2 id=\"add go path\">add go path</h2>\n<p>export PATH=$PATH:/usr/local/go/bin/\nexport GOPATH=/home/cby/gopath/</p>",
    "hits": 498,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1020,
    "title": "GOCN每日新闻(2017-08-08)",
    "created_at": "2017-08-08 08:27:17",
    "updated_at": "2017-08-08 08:27:17",
    "replied_at": "0000-00-00 00:00:00",
    "replies_count": 0,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 0,
    "last_reply_user_login": "",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 3,
    "user": "{\"id\": 3, \"name\": \"傅小黑\", \"login\": \"fuxiaohei\", \"avatar\": \"https://gocn.vip/system/letter_avatars/f.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "GOCN每日新闻(2017-08-08)\n\n------\n\n1.Go 测试进阶  https://about.sourcegraph.com/go/advanced-testing-in-go-mitchell-hashimoto\n\n2.Go 2 应该舍弃 Context  https://faiface.github.io/post/context-should-go-away-go2/\n\n3.Go Channel 源码剖析  http://legendtkl.com/2017/08/06/golang-channel-implement/\n\n4.Go 内存安全 https://cryptolosophy.io/memory-security-go/\n\n5.TiDB RC4 发布  https://pingcap.github.io/blog/2017/08/04/rc4/\n\n6.Go 1.9 RC2 发布 https://golang.org/dl/#go1.9rc2\n\n------\n  \n编辑：傅小黑\n订阅新闻：http://tinyletter.com/gocn",
    "body_html": "<p>GOCN 每日新闻 (2017-08-08)</p>\n\n<hr>\n\n<p>1.Go 测试进阶  <a href=\"https://about.sourcegraph.com/go/advanced-testing-in-go-mitchell-hashimoto\" rel=\"nofollow\" target=\"_blank\">https://about.sourcegraph.com/go/advanced-testing-in-go-mitchell-hashimoto</a></p>\n\n<p>2.Go 2 应该舍弃 Context  <a href=\"https://faiface.github.io/post/context-should-go-away-go2/\" rel=\"nofollow\" target=\"_blank\">https://faiface.github.io/post/context-should-go-away-go2/</a></p>\n\n<p>3.Go Channel 源码剖析  <a href=\"http://legendtkl.com/2017/08/06/golang-channel-implement/\" rel=\"nofollow\" target=\"_blank\">http://legendtkl.com/2017/08/06/golang-channel-implement/</a></p>\n\n<p>4.Go 内存安全 <a href=\"https://cryptolosophy.io/memory-security-go/\" rel=\"nofollow\" target=\"_blank\">https://cryptolosophy.io/memory-security-go/</a></p>\n\n<p>5.TiDB RC4 发布  <a href=\"https://pingcap.github.io/blog/2017/08/04/rc4/\" rel=\"nofollow\" target=\"_blank\">https://pingcap.github.io/blog/2017/08/04/rc4/</a></p>\n\n<p>6.Go 1.9 RC2 发布 <a href=\"https://golang.org/dl/#go1.9rc2\" rel=\"nofollow\" target=\"_blank\">https://golang.org/dl/#go1.9rc2</a></p>\n\n<hr>\n\n<p>编辑：傅小黑\n订阅新闻：<a href=\"http://tinyletter.com/gocn\" rel=\"nofollow\" target=\"_blank\">http://tinyletter.com/gocn</a></p>",
    "hits": 353,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  },
  {
    "id": 1021,
    "title": "关于协程的问题",
    "created_at": "2017-08-08 10:20:56",
    "updated_at": "2017-09-01 09:54:23",
    "replied_at": "2017-09-01 09:54:23",
    "replies_count": 5,
    "node_name": "Go问答",
    "node_id": 1,
    "last_reply_user_id": 1478,
    "last_reply_user_login": "myonlyzzy",
    "grade": "normal",
    "likes_count": 0,
    "suggested_at": "0000-00-00 00:00:00",
    "closed_at": "0000-00-00 00:00:00",
    "deleted": 0,
    "gocn_uid": 2448,
    "user": "{\"id\": 2448, \"name\": \"bingo1103\", \"login\": \"bingo1103\", \"avatar\": \"https://gocn.vip/system/letter_avatars/b.png\", \"abilities\": {\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}}",
    "excellent": 0,
    "body": "不知道为何，第一串代码不加关键字go的时候，函数至少是运行的，打印输出正常，第二串代码想用并发的方式，改成了go func，就感觉函数根本没调用。没有打印输出。\n1：普通\n\n```go\npackage main\n\nimport (\n\t&quot;fmt&quot;\n)\n\nfunc main() {\n\n\tfor i := 10; i &lt; 20; i++ {\n\t\tfunc(i int) {\n\t\t\tfmt.Println(&quot;i:&quot;, i)\n\t\t}(i)\n\t}\n}\n```\n\n\n2：协程\n```\npackage main\n\nimport (\n\t&quot;fmt&quot;\n)\n\nfunc main() {\n\n\tfor i := 10; i &lt; 20; i++ {\n\t\tgo func(i int) {\n\t\t\tfmt.Println(&quot;i:&quot;, i)\n\t\t}(i)\n\t}\n}\n```",
    "body_html": "<p>不知道为何，第一串代码不加关键字 go 的时候，函数至少是运行的，打印输出正常，第二串代码想用并发的方式，改成了 go func，就感觉函数根本没调用。没有打印输出。\n1：普通</p>\n <pre class=\"highlight go\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">10</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"m\">20</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\n        <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"p\">}(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre> \n<p>2：协程</p>\n <pre class=\"highlight mosel\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"n\">import</span> <span class=\"p\">(</span>\n    <span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">fmt</span><span class=\"p\">&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"n\">for</span> <span class=\"n\">i</span> <span class=\"p\">:=</span> <span class=\"m\">10</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span> <span class=\"m\">20</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++</span> <span class=\"p\">{</span>\n        <span class=\"n\">go</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"n\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(&amp;</span><span class=\"n\">quot</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"p\">:&amp;</span><span class=\"n\">quot</span><span class=\"p\">;,</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"p\">}(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre> ",
    "hits": 438,
    "abilities": "{\"ban\": false, \"open\": false, \"close\": false, \"normal\": false, \"update\": false, \"destroy\": false, \"excellent\": false, \"unexcellent\": false}",
    "view_count": 0,
    "collect_count": 0
  }
]