// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gocn/usersrv/user.proto

package usersrv

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 微信登录请求
type LoginWechatRequest struct {
	WxUserCode           string   `protobuf:"bytes,1,opt,name=wxUserCode,proto3" json:"wxUserCode,omitempty"`
	WxUserEncryptedData  string   `protobuf:"bytes,2,opt,name=wxUserEncryptedData,proto3" json:"wxUserEncryptedData,omitempty"`
	WxUserIv             string   `protobuf:"bytes,3,opt,name=wxUserIv,proto3" json:"wxUserIv,omitempty"`
	WxPhoneCode          string   `protobuf:"bytes,4,opt,name=wxPhoneCode,proto3" json:"wxPhoneCode,omitempty"`
	WxPhoneEncryptedData string   `protobuf:"bytes,5,opt,name=wxPhoneEncryptedData,proto3" json:"wxPhoneEncryptedData,omitempty"`
	WxPhoneIv            string   `protobuf:"bytes,6,opt,name=wxPhoneIv,proto3" json:"wxPhoneIv,omitempty"`
	ClientIp             string   `protobuf:"bytes,7,opt,name=clientIp,proto3" json:"clientIp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginWechatRequest) Reset()         { *m = LoginWechatRequest{} }
func (m *LoginWechatRequest) String() string { return proto.CompactTextString(m) }
func (*LoginWechatRequest) ProtoMessage()    {}
func (*LoginWechatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d9f9784ca54089c, []int{0}
}

func (m *LoginWechatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginWechatRequest.Unmarshal(m, b)
}
func (m *LoginWechatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginWechatRequest.Marshal(b, m, deterministic)
}
func (m *LoginWechatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginWechatRequest.Merge(m, src)
}
func (m *LoginWechatRequest) XXX_Size() int {
	return xxx_messageInfo_LoginWechatRequest.Size(m)
}
func (m *LoginWechatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginWechatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginWechatRequest proto.InternalMessageInfo

func (m *LoginWechatRequest) GetWxUserCode() string {
	if m != nil {
		return m.WxUserCode
	}
	return ""
}

func (m *LoginWechatRequest) GetWxUserEncryptedData() string {
	if m != nil {
		return m.WxUserEncryptedData
	}
	return ""
}

func (m *LoginWechatRequest) GetWxUserIv() string {
	if m != nil {
		return m.WxUserIv
	}
	return ""
}

func (m *LoginWechatRequest) GetWxPhoneCode() string {
	if m != nil {
		return m.WxPhoneCode
	}
	return ""
}

func (m *LoginWechatRequest) GetWxPhoneEncryptedData() string {
	if m != nil {
		return m.WxPhoneEncryptedData
	}
	return ""
}

func (m *LoginWechatRequest) GetWxPhoneIv() string {
	if m != nil {
		return m.WxPhoneIv
	}
	return ""
}

func (m *LoginWechatRequest) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

// 微信登录响应
type LoginWechatReply struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nickname             string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Avatar               string   `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Phone                string   `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	ExpiredAt            int64    `protobuf:"varint,6,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginWechatReply) Reset()         { *m = LoginWechatReply{} }
func (m *LoginWechatReply) String() string { return proto.CompactTextString(m) }
func (*LoginWechatReply) ProtoMessage()    {}
func (*LoginWechatReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d9f9784ca54089c, []int{1}
}

func (m *LoginWechatReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginWechatReply.Unmarshal(m, b)
}
func (m *LoginWechatReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginWechatReply.Marshal(b, m, deterministic)
}
func (m *LoginWechatReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginWechatReply.Merge(m, src)
}
func (m *LoginWechatReply) XXX_Size() int {
	return xxx_messageInfo_LoginWechatReply.Size(m)
}
func (m *LoginWechatReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginWechatReply.DiscardUnknown(m)
}

var xxx_messageInfo_LoginWechatReply proto.InternalMessageInfo

func (m *LoginWechatReply) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *LoginWechatReply) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *LoginWechatReply) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *LoginWechatReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginWechatReply) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *LoginWechatReply) GetExpiredAt() int64 {
	if m != nil {
		return m.ExpiredAt
	}
	return 0
}

func init() {
	proto.RegisterType((*LoginWechatRequest)(nil), "com.github.gotomicro.fastgocn.proto.user.LoginWechatRequest")
	proto.RegisterType((*LoginWechatReply)(nil), "com.github.gotomicro.fastgocn.proto.user.LoginWechatReply")
}

func init() { proto.RegisterFile("gocn/usersrv/user.proto", fileDescriptor_7d9f9784ca54089c) }

var fileDescriptor_7d9f9784ca54089c = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x4d, 0x4f, 0xc2, 0x40,
	0x10, 0xb5, 0x14, 0x50, 0x86, 0x0b, 0x19, 0x89, 0x36, 0xc4, 0x18, 0xc2, 0x89, 0x53, 0x35, 0x78,
	0x33, 0x5e, 0xfc, 0x3a, 0x90, 0x78, 0x30, 0x4d, 0x8c, 0x89, 0xb7, 0xa5, 0x1d, 0x4b, 0x03, 0xec,
	0xd6, 0xed, 0xb6, 0xc0, 0x4f, 0xf0, 0xca, 0x4f, 0xf0, 0x97, 0x9a, 0xdd, 0xae, 0x7c, 0x44, 0x0e,
	0xc6, 0x53, 0xfb, 0xde, 0xbc, 0xd9, 0x7d, 0x6f, 0x76, 0xe0, 0x34, 0x16, 0x21, 0xbf, 0xc8, 0x33,
	0x92, 0x99, 0x2c, 0xcc, 0xd7, 0x4f, 0xa5, 0x50, 0x02, 0xfb, 0xa1, 0x98, 0xf9, 0x71, 0xa2, 0xc6,
	0xf9, 0xc8, 0x8f, 0x85, 0x12, 0xb3, 0x24, 0x94, 0xc2, 0x7f, 0x67, 0x99, 0xd2, 0x1d, 0xa5, 0xc8,
	0xd7, 0xfa, 0xde, 0xaa, 0x02, 0xf8, 0x24, 0xe2, 0x84, 0xbf, 0x52, 0x38, 0x66, 0x2a, 0xa0, 0x8f,
	0x9c, 0x32, 0x85, 0xe7, 0x00, 0xf3, 0xc5, 0x4b, 0x46, 0xf2, 0x5e, 0x44, 0xe4, 0x39, 0x5d, 0xa7,
	0xdf, 0x08, 0xb6, 0x18, 0xbc, 0x84, 0xe3, 0x12, 0x3d, 0xf2, 0x50, 0x2e, 0x53, 0x45, 0xd1, 0x03,
	0x53, 0xcc, 0xab, 0x18, 0xe1, 0xbe, 0x12, 0x76, 0xe0, 0xa8, 0xa4, 0x87, 0x85, 0xe7, 0x1a, 0xd9,
	0x1a, 0x63, 0x17, 0x9a, 0xf3, 0xc5, 0xf3, 0x58, 0x70, 0x32, 0xd7, 0x55, 0x4d, 0x79, 0x9b, 0xc2,
	0x01, 0xb4, 0x2d, 0xdc, 0xbd, 0xb0, 0x66, 0xa4, 0x7b, 0x6b, 0x78, 0x06, 0x0d, 0xcb, 0x0f, 0x0b,
	0xaf, 0x6e, 0x84, 0x1b, 0x42, 0xfb, 0x09, 0xa7, 0x09, 0x71, 0x35, 0x4c, 0xbd, 0xc3, 0xd2, 0xcf,
	0x0f, 0xee, 0x7d, 0x39, 0xd0, 0xda, 0x19, 0x4a, 0x3a, 0x5d, 0x62, 0x0b, 0xdc, 0x3c, 0x89, 0xcc,
	0x2c, 0xdc, 0x40, 0xff, 0xea, 0x23, 0x78, 0x12, 0x4e, 0x38, 0x9b, 0x91, 0x4d, 0xbe, 0xc6, 0x78,
	0x02, 0x75, 0x56, 0x30, 0xc5, 0xa4, 0x0d, 0x6b, 0x11, 0xb6, 0xa1, 0xa6, 0xc4, 0x84, 0xb8, 0x0d,
	0x59, 0x02, 0xcd, 0xa6, 0xda, 0x97, 0xcd, 0x53, 0x02, 0x1d, 0x80, 0x16, 0x69, 0x22, 0x29, 0xba,
	0x55, 0x26, 0x80, 0x1b, 0x6c, 0x88, 0xc1, 0xca, 0x81, 0xaa, 0x9e, 0x1f, 0x7e, 0x3a, 0xd0, 0xdc,
	0x72, 0x8b, 0x37, 0xfe, 0x5f, 0x5f, 0xdf, 0xff, 0xfd, 0xf2, 0x9d, 0xeb, 0x7f, 0x76, 0xa7, 0xd3,
	0x65, 0xef, 0xe0, 0x0e, 0xdf, 0x5a, 0x66, 0x27, 0x63, 0x5a, 0xef, 0xe5, 0xa8, 0x6e, 0x5a, 0xae,
	0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0x35, 0x70, 0xb8, 0x19, 0xae, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	LoginWechat(ctx context.Context, in *LoginWechatRequest, opts ...grpc.CallOption) (*LoginWechatReply, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) LoginWechat(ctx context.Context, in *LoginWechatRequest, opts ...grpc.CallOption) (*LoginWechatReply, error) {
	out := new(LoginWechatReply)
	err := c.cc.Invoke(ctx, "/com.github.gotomicro.fastgocn.proto.user.User/LoginWechat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	LoginWechat(context.Context, *LoginWechatRequest) (*LoginWechatReply, error)
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) LoginWechat(ctx context.Context, req *LoginWechatRequest) (*LoginWechatReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginWechat not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_LoginWechat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginWechatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).LoginWechat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.gotomicro.fastgocn.proto.user.User/LoginWechat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).LoginWechat(ctx, req.(*LoginWechatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.github.gotomicro.fastgocn.proto.user.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LoginWechat",
			Handler:    _User_LoginWechat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gocn/usersrv/user.proto",
}
